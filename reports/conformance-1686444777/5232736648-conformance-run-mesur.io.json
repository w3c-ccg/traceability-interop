{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc6d124a-8b1e-4df3-8960-6c53ec7d9c74",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eae96fe0-396d-4273-aebc-b51aa8c1c928",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c09263c6-4a73-439b-b2e2-a0a9e384246c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c31a680d-cf9d-4705-a18a-86368d213fd9"
                }
              }
            ]
          },
          {
            "id": "2590fa34-0f57-45be-ad6e-b79a43df7c8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "549b3058-f604-4d49-a606-cda36663d4cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26123da9-7402-4d39-a45b-54e3ca00bcca"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "04001d5c-20de-4251-9ccb-9147ba1effaa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ba21d2f-9927-4e4b-88a1-88261ca0c0f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "863d5aa5-4b78-43bd-8cb0-70bc8c1ad09d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fcfb223-3bad-4009-b910-3e091ca7e87e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09009e60-f4f8-478a-a710-a81a9ecff335"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c07b9082-c290-4b6c-aeef-c4dd553e2bca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "456a7cf0-e328-4028-86f2-16a19543cb03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e58df788-8fab-434f-a95d-413f7b4f8a90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "923c01f9-47c1-4eb6-8710-4ec497c6de92"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1446432b-575a-4c2f-8f41-357bbc98bf14",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "74d657e4-6ca6-4a63-b480-8ef0ad4f504c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58664e08-815c-4266-a612-d00b0066be70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc38d2a2-793b-484a-aaef-ee6ade0b621a"
            }
          }
        ]
      },
      {
        "id": "b1d59bd1-7635-496d-ab70-66601cb53876",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "289f7203-8b34-46f6-8a5c-ebf7a65c5d67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90ec0ff3-bd24-4418-b3fc-3b6088bfcb67",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43e2be9c-87cb-4b6f-9c92-6b80760a2cff",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1bdfbc-b159-4cd7-b343-a809e5980e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a97a2a-0f10-4b96-8fc9-6732d6c4706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e4fe53-a407-4955-8e6f-985a7c4d5939",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b970d4-3ac9-4451-98f8-5eb8cae0eca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61654bf9-caec-46db-8210-d1aa929b44ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d0ae3-9e27-45d5-bdaa-7dffba9337bf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6127336-244c-4f39-8be1-51b8dca45797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f7fa8b-f169-42e2-aafa-9ec7ffe2e15f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59ef4821-a7f1-4a19-b138-1cde8e8f73c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee244bab-0e32-402d-82ea-821851aa0e96",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175930b3-ceb0-423d-9816-347e7130004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07a83774-d5d7-4537-89b1-5234bfd01fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b9775c-eaca-4082-89d8-6d1f187c8d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d76c14-a924-4360-8859-3dc2a6574d9d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "827faaf5-0583-4d5e-83e0-e70fc90b3d97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5654836-bf8f-4967-935b-e64cc5cd502a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6cdc765-ca95-4d2a-a47e-53ae6937a1d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de79b0f8-9bee-4f5c-ab05-da0f2843e847"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b48de059-fd95-416f-918c-d6d9b27608f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5d793002-493a-4cf9-b283-7d47f5ff4f9a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff52ad24-f02b-4f4e-b81d-3364e8b4cf98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0e78a7d-0949-4791-9510-01faa80094af"
            }
          }
        ]
      },
      {
        "id": "bbd8e2a7-3b0a-4bdf-8d8e-e2b0546dd9a6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7d0e7217-5ed9-490e-ae5a-3609b865afc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae8dea95-93f1-4001-8859-adae5161d54e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d2119bb-11a7-4862-a81f-1adbaac344dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709bba3f-3f7f-4c11-ae37-1b9ad3d62eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdc17c9-db97-4929-9eb3-eaa3e081fd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910dfda2-62dd-4ab2-a7e7-c2ffeb78d230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d878eb95-bd05-41cc-a297-04a4785ff925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee84ab8-138b-4108-b031-54ad642450b7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e492a6c2-f4be-4571-90f8-0c71849eb13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcb0a13-228f-4b81-940f-8668bd410227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53da1bfe-2a16-4e51-bb06-b4db85831309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d3677e5-4210-4f3b-9ba3-92163fbc2a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06592ee7-9ea4-4d8e-8ad9-92a4e4cae13d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077d07f-64f5-44a6-9517-bfd367305b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6a16e2-2fba-4b53-801a-fa934d38cc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddadffc-2b40-49dc-8d77-db3e3381c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93ae9d4-740d-44cb-9314-a8f3a2645e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5987e8c-05e8-4fe9-b865-b1d2a0866bd4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c04d76-da72-459f-bf04-0c6a3e08009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b878323-b5e4-44b8-8e42-44319b4fa97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728c6019-7d23-4bd5-95de-da5614a685c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d606fbec-10e1-4990-a36d-c3180dcdd72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd21bfd7-0a11-46e6-b805-521ef74c8c9e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3180f3-7d04-4eaa-82a1-05125787cb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1d4ec4-d949-4640-875c-3a1a9a577c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559cea67-dc8f-4325-9a4e-7f1138a1784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd5a82f-8869-4802-98ef-870dcef8334c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386e042f-659d-4134-a0df-aff26231e1d4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04112d0-c3ea-45c7-baff-57aecade0e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48596d1-57c4-4e98-8e38-3d1a3f750fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7cec51-2a1d-414b-9656-4bda10dab6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bebbd3ad-74ec-4d45-bd59-af3b5917c078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcfaa6d-5b45-44df-b829-d382657d0e78",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939bbb33-a51b-4a52-9aa6-b88c87a50f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c800104-6db2-4b70-9e90-db11e62c935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6ff5f8-8ff5-4e10-a7ca-ebceb93c0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "353ac543-bd9d-4ceb-b424-7841fe9fce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d54d79-ae5b-44ad-a508-d6ad99e5dbeb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58572ba3-5923-41a8-a73f-f646ff6dd076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3966d39f-d039-4713-85cf-aa8b3e7b3087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bcad0f-44b9-40d1-9882-d355e8a7296a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbc01537-f8e3-4309-bc05-a6caca65e589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5ede5e-c705-491c-97d7-e57ccf30d97b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7f27df-1e85-4afe-9a49-e147898caa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cc773c-6bd5-4d1d-98f3-995f14162bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998398b0-dc3d-4d30-b190-ca1bfcd7b3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3b48d77-ddfe-43ed-baa4-137d1af9eb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155b9b01-f9f6-4960-ad8d-bdef9fd0cf81",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e59c7c5-6901-454a-b933-1de72691b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df24e174-bcbb-4aef-8934-474f5eb6c83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269b8009-42a2-4a1c-a591-2cf5bea47550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05cf89a6-20f5-4654-9d98-8570daa410b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7518200-c312-45b8-9d24-2aa41e642b7f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33e81bf-52d4-49dc-bba2-a9a4e192c6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8c6be2-ef34-41e0-8d79-17a99a5197e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e732c-0220-4603-8060-5b91946a4a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bff394e-9cac-4f0f-9e3a-e74c05a38c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d28aab-4e32-4a04-951f-e2688658d12d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cdee89-2f80-4528-bd4b-8a7765fbcbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fb083f-ea87-47dc-bf6b-e4a8c0e8745c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3db4a1-0b77-42df-9de7-2480a17ae878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47365f7c-2d57-4ce7-9981-cfe785034d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ce37f3-c1ba-48ad-9a76-c9068387406f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc027112-81ea-40a0-a9e8-d0f26d3989d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ebb42e-b373-417f-9724-f871a76a5941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ce83d3-6724-44af-b4ba-140b1198ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8616ac16-7af2-4f98-aec7-bccd53297833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6fd0f7-b2b5-48f3-aeb2-5153c0ea3f93",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e88a38-b0ce-4a1e-a9f8-7be06b9f7d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62215608-74be-4c3d-acfc-96ab8ea73f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff1c28c-1e8a-4406-a04e-1d0f7f102803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a523d2-943f-4db5-9963-548117997dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed5e1e2-aa68-404d-8bee-debfc27c8096",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e56851c-69a7-4cd3-b663-3853c5816e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0319e5cc-1742-461f-aee3-4956b8cf4724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003c8388-7a88-47ce-97fb-72db40fff891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aed8f43-4574-4ff4-b59e-80e4ffe10322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1b1543-9f96-42e2-8b75-5bd0fea60fdb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7141c1a9-748e-41ea-b8ef-7b305a4575f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f03afb3-e0fd-47d5-9eb9-22555bc03da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a03c26-cab7-4991-9dc7-cd06b391defc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f0e23a1-1f1b-4c81-b6a5-ff1abf3a36e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526dfd71-fa1c-4f84-adce-065e9d7e61e4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d93848-1603-4bef-8911-cdf6497cf045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f64683-9692-4e1e-b63a-9850a743b10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a807f6-d264-43d9-b1d7-5cdaa75fc92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d075eb22-f934-44cf-8ef4-e0fdd6eda8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8efc420-2705-4fa8-a706-07d28d102f67",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f051650-4b8e-4136-9fcc-c0f961248d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07ebf41-98f5-48c8-a7e4-320f49496def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a72d2f7-d5d0-4386-bd4f-5a0c058bbafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9391345-e3b7-40db-b348-bb552a1160e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded83e95-ca62-4b4e-bb29-94788ff02171",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b120d78-e756-4aa1-b711-965caee21404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1606da20-b192-43ea-a161-e26c361d5d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0ef153-6cd0-400b-9d0d-b9b3cd5105e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56f3395-410f-4956-8fa2-1c0ea0114efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19003c7e-73a5-4160-8864-06c5ca5b3904",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b4b3f-ab31-4e4b-90a3-6d59820ef854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1888f18e-e95d-45de-822e-45df4ce9d682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad6700b-cf83-4a5e-b573-86c5749312ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9576340-14ff-4360-a05a-1cf02747ba25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e080b4-88a7-4b28-910b-a5de4cd6a361",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f07246-0127-4476-a6d9-d8485264e33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cc9590-ec11-4943-8627-b832759d0859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a88680-64d9-4525-8dfe-bf7a6799570f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a937e1-0904-49a9-8f55-45e8b2064ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd7f28d-d1ad-42b0-9d09-53f739675ffd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37169ac-ec53-4518-a4cb-f26cf54e3762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c647a7b5-f605-4298-9161-b2b8ffe5ac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445f8cd3-a3af-401b-b89c-30ebb7ecb99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edc05999-c9cf-4e8f-9b98-8467101b6959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b6ea55-410e-496c-bfe0-5abce417d3d6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318c8667-0329-4c17-ae57-58b905c583a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafa912c-1bf3-406d-8b4c-f009fc8ab0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e642535c-599b-434f-bd4e-127da798cd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbb78c3-3a65-4fed-97e6-83698b2036a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0158cf-d7fa-4a20-92dd-453f5eab2055",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec720857-4d22-4ce4-ba9f-54f5d01ff850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a791bdfe-2a0c-4b6e-aec7-eb2d896f590b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a4d62b-9508-4257-8a77-73d0c6f457ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0770bf24-a7af-453c-a122-d3360d0d0d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0138448d-e926-48eb-b3a5-57305a785fdd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce647d19-5487-40b9-a7e1-6cba0dc01ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4484f161-5a79-4885-a437-710bb49bb4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee64a6-13d7-4bdc-accf-4afe1e8b2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8233e9-f533-4293-912c-f57773be8a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56794d7-b7d4-4299-ae20-000ddd38cf49",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e950ca1c-b4f6-4274-a3e9-1354251523ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c52d3aa-edd2-4cd4-b7f6-1bf459d20419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92457e1-f5b2-4d60-8af8-9d4193b2f39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdf8e9c-95b0-4cc8-aee1-1bb7046cba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b164e014-6a00-4534-a4bd-4dc0ad21f650",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f00779e-3b5f-488c-b1d1-09dc0688d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b2832b-099b-4157-97e5-a1a9721f9d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418c224a-51fe-486c-ad18-22299f6ac740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfad0cd5-9f0f-4b9b-9c4c-9117d1587ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6595e5e3-e30b-48da-b35a-e0f13944011a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb439870-ba23-478c-96cc-6acbbf4e9ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bae675-e3df-4f63-b01c-f81796821161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ad60cf-3131-4d3b-ae4b-9ac544ff683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d2e187-1ea9-4396-88cd-39fe749a2cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15542f31-e739-4eaf-a1bb-bf6e5ea3aaba",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834f739b-49e6-4da6-9e6c-ad9b2850d013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5090be5-0776-4f7b-be86-fca64e8560f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9416d66-1e80-4c37-9a61-6483e38a1d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44df4504-682b-4cab-8cc1-fcc901f82326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687b5ecb-1bdc-460b-9aac-c056aaa9889b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f2cd9c-a37c-45db-8022-2ff7075e1c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c83b9d-9084-42ee-83d8-b620c4f128ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4723ff0d-f6f8-4a78-ac19-5c83a61da380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbd1b88-e473-4b6d-a8cf-7c372385a6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6a5c8e-5e3c-4300-b883-4acdebc1b0cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65704208-46e0-466b-a6ef-5643a4646cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0710860-6ce9-4b08-baa6-0dfb0c6fa6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ae2d21-070b-427b-ba01-3cdd58063fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c48476c-d786-43d4-a978-83b6b0c0fbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e8ea95-e7fb-4cac-a56c-87ea3cae2322",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2404ea8-61b2-4e82-9930-9088e4662a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc401791-6cc6-4883-8c12-30ea77319a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2883b746-62e4-4acd-ab7c-d1ffe2f3ab35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bc7dcc-1fe5-4453-b3cc-f7c474af8e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9b4ee9-469c-49fe-b34a-59ede8d680ea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0649b685-4496-4ce1-9e56-a214b5a11b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cc82bf-88cc-4fa2-8b6f-0f2a31bb43be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe62cefb-9281-4663-bc11-48c60df5c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb20f6f6-fd87-4def-a2b8-9a988e3588e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc495379-0bea-4256-9d67-d380a0d282fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52fbb70-6009-434c-91cd-70e5bada5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d908214f-2a4f-4a76-941f-18a6083d76f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2cffc8-1a33-4b97-9d2f-c2b7a5e30dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "538f5b64-9c02-4e51-b57a-6f7441832c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe8b836-e343-4bee-8ad2-4434b814dcce",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31ac6ad-9377-4d99-b4b1-c7ef3fea5664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9fa0f4-c683-4962-8e69-e00170684f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff626a2-d7a3-4546-9772-44a4b2084cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c98aa788-1eb0-41d1-9b13-3f7c1c3dac9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf7316a3-bd08-4453-aff5-439b6aac0e6d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0ca1d5-5f26-4100-83c1-2d13f410e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76ab9018-040b-4c5b-b08c-788bd71e1deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6f3129-c542-462f-9516-eb7d0ecaa8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3b3088-fbfb-4317-8c2c-707a21dae83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299fb3fe-b46c-43c6-b71b-4cbf7095aeba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a9623a-ec43-434d-8b36-fd03349cacc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a40e25d-7601-4b53-a5b7-95258dac84b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff68ffc-d2dc-4803-b009-7ccd3cc52b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34c19b9-900b-45dd-82e3-d6c205051abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1a594b-1d53-4738-b84d-d693c774256f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0718870-270c-4d67-bcb8-3b93be401646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501a37b8-c56f-4a05-88bd-51a57dea84cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3230f1d8-f2e9-4f8d-bc68-3316899f8af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0d196f-37a9-4340-adf9-cb257e643684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e2b944-23e9-42b6-878f-d20aa0602ad4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a55b32-9948-4494-b63c-4167d48da097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b88d6bf-a3b4-4ce2-a935-f84ecdcdc372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6b4459-190b-4c0e-b6de-47785a18f011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e1ca21-ec40-4d1f-baa6-fe7012ecc67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b52c9c-8f47-4256-b727-41a8052b4c0d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eb5edc-9d5b-4bce-b47d-2bfe45c47296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3d5a53-7a0f-4449-8190-f1de4ad02971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a70e1b2-b659-4179-8b86-b51012b54947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5980f62-b463-4861-8a84-0be8a031eff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2456da07-4131-49d0-8f39-b766d823a6e1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bab2e3-f279-43e2-9254-c10c25574e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33283b66-1afd-42fa-be6d-af90ddebd9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3854364-65eb-4e28-b57e-119e724ebf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f256f3cf-cf42-44bc-994c-51666318f414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a3e4db-0584-42f3-9e8f-b329fe7f36e5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e916fb-ba10-47c1-a13d-b589464e0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4fb702-a91f-40f5-844c-f725c413ec9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce3062b-207f-49dd-8ca5-42295640e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e99840-2eba-41a1-974e-6c2281a91ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9a352b-bdbc-451f-b42b-3c0a9365623f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedb49f6-4575-4c30-9ffe-c88c749f75c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad846854-4e71-43d3-92e9-27e0f437fea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ce0200-1b76-43ba-b393-b1ebca4145ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a233378-8871-4b5a-aa1a-b2fce1154aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eb59ec-1891-4ce1-8718-41d9ff937198",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2e77d1-31f0-41de-8c69-d2422ac919d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cb6706-e5ee-4033-ba6a-b7030267d181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53bad63-5ea6-436d-87d3-ceb2322c1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a579a1-50a5-4d4b-ae2c-b66a5a82da76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd8522-3dfc-4545-b9ad-b9b4e36a8d28",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f5f99b-6ea9-4b45-b671-9dc0bf705cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d0264c-2ff2-48a0-87f7-98e73b604b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002ad9b5-4c18-4634-a19d-7b4b904c1281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b40e9a-76b0-45a9-aa4a-fc3a34e36def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e589100-3190-4588-908e-f542dabd201a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba6374f-6a83-447d-b225-859c6cdc14f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5c0e28-215b-4623-942d-29f80c2f93bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4047b190-6fd8-43fb-9ca5-be41ddce2a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0889fb61-d696-4fde-90f4-ed9996dbd0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8be309c-bf2e-4a92-95c1-e60858249cdf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9ed92-3114-4c6e-9ba4-50108a82f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ccdfeb-5e6d-4823-a404-0c4ac8518827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4afd732-f01c-462d-b5d9-a2aaee7e41a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "290e2f1e-6a74-4c25-ab62-8e0a482c8a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f1ad71-99b9-48fd-98d4-81b88ef3fdd0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad63944-fe8e-4911-8ea6-e06188a991b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d8d12b-543f-4559-bea3-bedd988acaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8298b5ec-a24c-40eb-95b8-89c0f470f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2525e2d-e899-477c-ba31-23ebea91952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89410b2-6313-4403-adf4-006804eec445",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0912ed22-5ef1-406d-948e-bbd77f673f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ebac06-e85e-47a5-8f32-470c16a81904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0287dd73-01d5-4e54-bc7d-f7c40ce00f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cc9c38-fd4d-405f-9a1f-a23f3d4b1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118cbc35-43fc-42e7-a96c-0330ce708c4b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5728b433-8b5b-4b24-bd92-6b0858e50487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a882ca-eaae-47ad-aad6-8331b34f0ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7518076c-dc62-4ff4-b1f5-8619a18cdf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed07e2e-7c50-4338-98f7-e0142cdc4c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eef1ef-0d54-40b7-a3ea-ae70a723240b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff90df49-1a2d-4c73-9bf1-9ba13378a4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db46ac98-84fd-43cc-a3bc-27d0936e2a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033b862a-dc03-4ea8-b027-1d30cf6f2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34663f29-460c-49da-9cb0-8844d2212be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405bb43b-b19b-48dd-b32d-17879087ccc9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9473af76-c642-4586-8af4-161dc9b3381f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02252bbb-334d-47c1-837a-9681251aaa2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d268e9-8f09-48f9-9fb9-6e83f8271682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9424fb45-6056-4bd7-89fc-286d552d261e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358dfb62-488f-41ec-860a-d0f8b28310d6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0b629a-2e4f-4ae9-b3bb-6419d49c9f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4effd99b-1c04-44f2-b804-61deb2e3071c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf07a8c-a916-4ae6-9a10-291b0a558f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50e9775-da10-4157-aef8-ad6b9c9bd1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4e2de-ff6b-4135-97c8-74803eeead99",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2285f459-f6e9-4412-ab1a-1886d557b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e750216-8837-46a3-ae9a-2155eb383f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdafc331-469e-49a4-8f14-344d354e0a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc8db05-112f-4258-933a-09f662bce76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7247b690-07f5-42ce-abd8-e6439313e31d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551634bb-0bf4-4e50-bfdb-25ac04501f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3965b3-bcbe-4c33-a9c5-9b0259d3d6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c302a3e-8a10-4221-8a35-67010f13120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c3eeca-ae5c-427a-b20a-bb7753d630bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d06044-ea73-4f71-aef1-130c973ceb51",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c9a1f6-ee5e-4ee7-9ccc-e96fc2304092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b2a0ce-2fe2-4442-8f32-6752de284b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d63b4-c9ca-4801-a94c-2a4f684eac90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcb1baf-2aa9-43e0-b992-6ab2d0e460d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed88dd4-1a86-4b05-bba4-de7554be8880",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d278bda7-7f13-41cd-9d21-f2486867df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8a0820-cde7-4711-af0c-26403cb75518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a4c15-0323-4647-9eba-196246368789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f6ae27-e9bd-4e0a-ba1e-5dd0eba4de35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d3e78f-38a3-44dc-966e-dd489cfbd142",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d536f58-75ba-4ad1-bb64-46dbc6a7fb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c64f3a2-511c-4ceb-9983-9dbe18fc50dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6585f40-267f-4703-93fd-5d99439239e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31b5f56-0cf0-404b-b39e-f2a7c292ca5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64c9764-065c-4cb5-afa8-a7505999ec3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f17280f-836f-466a-8880-09c631dc8173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20de678-4037-4bd4-8e53-280134c5d393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c9ea4-e0b7-4909-9fb1-d703c609b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a51be08-abe4-4e9c-abfd-8d16bc3a360e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18741940-5091-4ebf-966a-74a07c876a3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cb9a5f-4c34-4bbc-9a3d-04023281baa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbc21e6-e6f8-4e8d-931f-7f2f8e9d7707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18eb0a-1417-4c9c-8382-130bda485a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f410db68-86e4-4878-bf6a-855bc41fa6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241733c3-c7a1-4639-b44d-6ff7887aa4c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a6cbc-cc8a-4ff8-8c85-1cde5554d9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21613d5e-0d92-458a-b6b8-f684f220254f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46647863-d45b-4acb-af26-d36414f2c2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2f19cc-10b5-42a4-b727-cc5f7818b9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb9e573-9d33-4476-9737-4b62f2afdc63",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d14c635-14cc-463d-bb59-fb306f2a487b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a150ce-b988-4095-9646-55fcdf8fb069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01628b08-6180-4962-adc7-6d7540148be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "51a51fb0-030c-4236-821c-dd0f2c1b2fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01054f1-7a5b-425c-83e0-e0134d930fb2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e78de5-5795-415a-92c2-163045183995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1855cb50-77f1-4617-b11a-cfa0349eeef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa88655-e5f8-49a9-801d-0406e838fea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71c803a-41ff-4c1e-bde7-d3cd6df7371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f3baf1-7464-44e5-a80e-b321665e946e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65041623-64c0-4b7d-8e9b-57085ee04dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91fa0aa-78db-4b34-bc3c-c11b177ba6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e14526-515d-4c18-a4e4-df4faac925a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e36ed877-912e-44f0-b753-bcd7b48a90f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb81ecf3-456e-42b6-b559-bbc132b48981",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ff9945-4cba-4497-b144-d0bdfca1f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ad0309-7f29-46ad-8d46-cc6e11d5e401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eba427-711a-4b57-b9c8-b2e15b78422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9612349-b650-4a27-b3ab-d3388c3a1c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af59d369-1e1f-402d-8470-f9080af86930",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9558a6-f108-4249-a9e6-b305f985ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747ce405-5c29-4d4e-8222-c67c2074458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebd7640-06cd-452d-9e5c-207b27f67e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6b98d3-2e5c-495b-8e9d-57fe754708b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9888f61d-0fe2-4f62-bf83-68a5c10f0ab1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22f535-1672-4344-b1c9-bf1166026990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3e7e34-19b0-4efe-b89c-0301e434dcdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3c60bc-f760-42d9-8cc6-645664e27e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "773981fb-8551-40dc-b925-c45cdd2af6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0028240-a972-4991-9632-1cb0eec08fc2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b904d-0c57-454f-990c-a0f5d6154121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3540bd-3ef6-40bb-844c-bfa593b298de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7251b5a-9d78-4201-af0d-88b795674da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbec55d-8150-4b42-ba72-f0e5b9d5e368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d0033-5859-47a0-8979-717720c24916",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30efd8b2-6fa2-4da5-980e-ba740be36dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743770cd-e078-4c12-a3c8-ce91b56ec311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dd9ebd-3026-45a3-96bc-ee9eab6e2109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb13da0-f3f7-45b5-a780-89c3347ead05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4e2b56-774c-4ec9-99fb-051bd2f6e895",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5ba0c1-f8c3-46a9-ab0d-2bc79aa02f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c707cb-0e3b-40a6-8216-a229fa94d2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f182c8-e6f0-4e0f-b4bf-319fbde791c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb298a1-0e9a-4f6d-bc9f-235d060c0f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99df89a0-233a-4529-8059-999eec132c84",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f513d922-91e1-4494-8693-8ba1adc2bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47a35e9-2931-4e3a-9e2b-d4781be2f33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196ff9a7-3ee8-4f2e-a4e1-228d3bc903f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49d16413-738d-4b66-b171-2303357b86e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c1dcdf-f9e0-44fb-90ee-20e41d807866",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a4e3fa-4bf5-42b7-b816-19c1c028e68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e872554-c9c0-4fa9-baef-37a229e4089c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2713e73a-e7e4-436b-8a8c-4d9c5ae362e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ddd072-584e-4418-810e-fa79a18a78ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a403af4-0669-4e2c-a701-043f0a8a531a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b5d7d5-b6ae-4f58-b6aa-01b65f142341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80be3ab-47cc-49e2-8be2-e25d893b1155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a2776c-9b95-48b5-87b0-b988d7ad97f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "82b21147-e8f6-4a51-8474-d460094c8817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a90f55-bc6f-4796-9365-88e03e087915",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825ef250-c2fe-420b-a8d1-319d58c0bb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64df765b-3ae2-4b8d-b017-8c198a3a7317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc3416-6f4a-4288-a631-e36a995193a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26946a20-3632-427f-b36d-0675d765fefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173e6e66-252a-4665-842d-5341dec94181",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1406f678-e143-4866-b0a0-052c40848f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6d5a33-add3-4e83-ab15-80b6ae046d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa7c6fb-1f3e-4e8e-9de5-29e41c16728f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdac7b01-0b27-41f5-b1f1-3530743929a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c1fc90-c01a-4d9d-afc4-41c2913db786",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcb204b-8358-4050-98bf-da0a3e9c4c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8309728-57be-45eb-838e-52619b037bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0fd339-c107-4161-878a-f9b6e572bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf33604-ce2e-4014-9a0a-dfe7e35943e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aef617-0133-4791-baaf-372664666d3a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70f9876-d623-4c49-9077-4982a155ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c7e43a-3034-42bb-91c1-2a3b29929e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a573e1f-59c7-4db1-920d-887ec4f90aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33d3cb1-6fd0-40f6-9397-a00c3321e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d03ed6-f0bf-4fa4-9c44-b31b27490c55",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fcb55a-d565-435e-b7f1-5cb787334c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387d3032-47a8-43c7-a082-55f8313961f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa94d37c-045b-4070-b172-82b1072c22d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68338d73-3c9d-44ef-9cdc-3a727b4f73e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b5b9bd-5266-4b26-b0cb-667e26db44fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b9dd6-f079-4357-9f51-e388962922e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f86c23-68fe-49f6-b935-19dfeac09618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2051bde-7a63-48f1-adcd-70c594d47759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a42cb0c-573f-4cca-b0f9-03191faba8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11107e4-72f3-4558-bed2-1aba85e3bfcf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5319b4a-e4e7-437c-80d8-dc0e148d3190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05ae4b0-49ee-4e39-9be7-0fa01fde7e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6566e5-3c06-413f-bb27-15bef1f74b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cade236f-d1c2-411e-b156-422009124b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fd28a9-d673-48ff-9e5f-112f889baf2f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a414c937-5209-4704-8f1f-31faf826c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf5f429-987d-4955-8206-a1e03cb6f2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c580d2-1c0e-4631-8660-7389fa253760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab33915-6273-4d70-afab-73fda7f4feb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01732d15-aae9-484e-91be-14098c0b8b53",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2948e-c619-4b4c-a8ac-ef9c539683b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3503f5-b6b7-47e5-a24c-40a40355a843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb9123b-5877-42e5-979b-b81c9c064c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93d05900-00a8-4000-b261-37db99eb358e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1e9abe-fb57-44ce-af80-37e3251428a7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976a0452-dc68-466c-aec2-06458f4dbddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb00fd9b-c1b9-46f0-9933-18a2e96cbe6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53411e6-571b-45db-b650-eb7022860cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52aaac98-9ded-46ad-a287-cc3764945666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2efe873-ef43-448f-bab4-4fa85f0d37bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cfbde0-3bba-48e1-af84-4c78d77cb48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196ce8d3-dfa6-4d1e-ae98-b5b41dc8a338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b181f8a-041d-44b6-a5d7-098c16674033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd41d13-a70d-4efb-9edd-bf73692dd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eb6019-ec37-4b67-b27c-cd7bcc37fb30",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795d3423-f516-4a3c-b280-ea3be63979ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea7b059-0bdf-407c-99bc-5ada6b1c6418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a09f09-14b9-43d4-bb9d-a2de9db5b140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b914a722-c2c5-42a0-a639-48473b6aef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b339cb1-25ca-491d-a254-a5522c220e90",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b7ac31-478f-4b4c-be8d-85cd86fab53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4e5989-ddf4-4946-bd02-c1873d9867eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e20104-e09e-4c38-a11b-bf9371a756bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9589773b-aa67-4770-93df-21bd5656f32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8c79e9-d988-440a-bbda-44fdb749dc0f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2628929-c8ef-4328-af7b-7020fae34dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51c1db1-c010-41bb-b12f-7ece16ac2786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9f7a78-a4ec-41fd-bf7a-d00ea090202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dac5eaf0-2437-4920-846b-f596d266cf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd85926b-d694-4a09-98b0-e548e37257d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e40938-0280-4e25-8e1c-a6f4f0346df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e211aae-f065-4a11-9712-5f52f9e904f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafbfb64-7366-4b92-910a-6306b67b93e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f356c4-c416-4580-bb02-7bfa68520951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28808191-5983-4705-8ec1-7d9eb78c5ac1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6390555-760f-4b5a-b1c8-3b48286cd499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4885cb4f-0f1a-4527-a5db-0549d7eb5414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5123f8a2-fa50-4c84-8952-ccb16f9e3237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e51f3fb-1661-4419-89f6-246b53d2e919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63b78a4-9156-4f0f-9aee-0cefd2e81be5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859d2a8d-9b7b-48ad-9e1d-8fbd3bc1c68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8df766-fae7-48b3-9398-62e384b47cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707198bd-d3c3-4bd5-8612-23c64e2775f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84ea1e75-8962-4810-aa0f-47a43d2f57d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3507e57a-312b-4f22-8f5f-7ecef2f48972",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6f36ee-2451-4d6e-9cc8-c443d9fb9d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd50c438-46d4-4e54-ba14-2af0735d9efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5d5411-cecd-48d3-95f8-462c90792b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a53d4f12-de65-4a3d-a1ab-d7fcb62d9e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba798472-4eeb-4264-a344-d1f0314e79c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1776bb55-a264-4222-be2e-83d2f037f017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9783db7-f2fc-4306-a14d-4c160d8fdc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09476313-0f75-44f6-b0e2-b88d711f8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ab6dc8-070b-4d9f-8944-d005a2964291"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f63c483-d789-4a7f-a132-febc48e4bdab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "451926b1-982f-446e-80bc-378fa840b0e8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fdabfa-fef1-465b-b64a-c69b73fd0bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a87cda2-f366-4f1c-8b0c-5154085606a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444c760d-1058-445a-bc8f-f61f629d9398",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd9b27f-45be-48da-b987-fa3307ffb241"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "280955f9-e2da-42d0-a4aa-28c252a838bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0736c77-2626-4e5b-9ef4-94de841f235b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb26bf12-a119-4df3-b165-49ac53f1865a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07485273-e31d-4e4e-9d99-37f03de18444"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4fd48165-2236-4a6f-bc32-07dae40fc467",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34ac6c08-02db-4966-9bad-8d96309fa0ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a445899-c9f5-4443-b15f-25cbe64e4b83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a8e1a21-66a8-4d2d-8c81-7c8e6c7be5ab"
                }
              }
            ]
          },
          {
            "id": "0062a99e-7685-4515-b030-87cf811254cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2586e5f8-b610-49a9-8b3b-a3db50c8c3ce",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0d83314-2ccc-4cd6-aa1a-01b001306311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97de0cb5-da91-42fa-9f94-d394f4fa70c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e364c34a-3e98-4773-904c-a94a167a8257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68065b14-7fe5-4fcf-9b67-c9b8e3752e59"
                    }
                  }
                ]
              },
              {
                "id": "ef906fc8-9dcb-4293-a02c-f4893482ded8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "623e82e5-188d-4539-833a-1b71f5cfa168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13503c44-0fa8-4c53-be3d-523b6bbecb2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f32ae37-a8d2-4d31-90df-2c6c4371b0f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58e7a123-729a-411d-936e-0b90a9602c91"
                    }
                  }
                ]
              },
              {
                "id": "3845917b-691a-40d7-aecc-b6607e47afb7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19a18dce-5d18-4043-9a58-949efa162d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b02dfd9b-e0f2-4738-8e6b-a444a1e75da4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8024104c-9ded-467f-a2e3-102f306dc614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "75a41378-abc1-4dd0-824f-da30dd482cc8"
                    }
                  }
                ]
              },
              {
                "id": "afe0f864-6129-428f-b39c-6027c824a694",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dff91ab-a5b3-417b-a5a9-69bb74317860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8ffbc0f-e224-4446-ae26-7050764d2af5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f68783-5772-4963-9b9e-b0d86ed1bfda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "870dc2a1-fb7b-4036-ae2f-75ffbec9cd7d"
                    }
                  }
                ]
              },
              {
                "id": "0338b921-3d72-4045-9938-74cdf87d644e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cd53481-8d46-4f7c-b7b2-e878b7664574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27569c56-cc6a-440b-b3f7-2463ae9a7cc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f552157-1dd2-4efa-817e-498859041e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6e6c2d13-658c-41ab-8f0f-9497c9627e25"
                    }
                  }
                ]
              },
              {
                "id": "bb4b49c9-c595-4669-81db-9ae9ab15b2a0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04546fde-6ba0-4719-82d6-cacf2512d81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b7c4f86-6577-4b81-953c-f53bfd8a69b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1e18b07-899f-4989-abbd-3775e7583f91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2520be0d-3c25-4916-ad1f-ed69855d1421"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f15d6ea-1670-46ac-912a-a403c73330f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ceca3d79-1944-4be5-b850-02dbfcb9db5d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fdd65ad6-b715-435f-b2cf-ea75cdb3b443",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02862452-60b1-45a9-ae30-ea48db68e3d9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5b8d5fa-df47-4501-89f2-88f6550f436f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0d3136c9-74e3-46e7-a7b4-a8fab60c4199"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d7c6575-4b4c-483a-92c3-72855a9b1d31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9436910-075e-4033-a89b-7530795cb56f"
            }
          }
        ]
      },
      {
        "id": "c0618a13-a3c3-430d-8179-48c3dd3fa404",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d57fcec0-43cc-42b4-b966-492e7e703804",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8cadd67-110e-42ff-a7d7-b75f1c75b840",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91b27c9a-c046-4dfd-a660-d23240cc1500",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2febcb8-3557-4aad-8e4d-41d990530c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdef6ee-ca71-43b7-8545-f67818517b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8059a1c6-1315-42f2-a5e7-ba18d77894a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9795d57c-2e17-4b6b-a8c5-236a77faff1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe579bda-5451-4448-89cb-aa8a6dbd9358",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4617b36d-d7bc-44df-90ec-b789653ecd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10444f8c-b261-4c15-8685-9bf84069540b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9b6fa0-bbfe-435f-888b-35c2bbf39208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "744a3b1b-0b13-4a1e-b050-1944f3051bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defc2414-bdcf-4f5e-82ba-9d6bc38acdb7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b32bf-0d93-4faf-916b-5abaa1c550c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926fad48-7a29-4598-9c8d-1521b90925cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ab9275-e406-4fbb-b2f0-d2e9d3156579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fcc666-8e08-4920-98cc-3762d6c92a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ff20d-d28b-40ba-903b-5d6e6cd53660",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf319a-4085-4b05-9c4e-77b110c7f9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567662c0-65c1-4b91-9f03-6d446660351c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ba2b47-1979-4912-a95d-14152b4da8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0e59bd-ef3c-4f8c-a6cb-548abcbcc9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8fe3fc-1587-4a18-b323-0031115ee359",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980e9b20-047a-4de8-a4c3-fee46018dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea270830-f51d-412c-9488-d0c160b366f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac04e30-3b00-4f89-b4e1-521bb9319966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6878463b-9e94-4538-a749-4a480a754c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc84fcef-c416-4620-8c31-108544b8b607",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b73abd-c7b4-4b58-92bb-17aead959455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0840d6b1-c939-41f5-8f2e-73442a1fe41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1afea2-a9d9-4cee-8b5c-f385bfa87829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b448690-27dd-4bf5-ac2b-81e7394a157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b18524e-c58e-4b8e-8c06-1cdbbb3a7686",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee73aa2-1193-4c40-ba67-a9d23d43ee72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff20e3e8-d344-4781-81e1-9a9f6da77708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58d39fe-7f62-48f8-bf75-e506278533ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc14ea4c-e768-47f2-a3e8-7d80b622d016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d27f6c1-36b9-41b6-b641-4de88bfb0ed7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7334852b-c107-4cb6-956f-be3b299a3a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49540554-9c92-4f46-a907-7bb4805f290b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d43e38-c9c7-4f2f-a598-e47ab05ddbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dd650e-f75a-49bf-b8f9-9a59b0a1ba89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30609c65-71c1-4140-9ff7-79d718f06d4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749d7fdd-5664-4d8d-8aaf-d9bcf485b56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bbf59e-bf44-4337-a5c6-72f3100f39c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f6e43e-59f1-42b0-a241-0658e8b291d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21afe55e-399f-4c31-8a9e-fbfc188e77d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1519723d-e821-47df-a28c-43c17f9f41d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37733c7-bf8f-447d-b7da-1eb9d9881904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898440c3-fff1-4154-98a2-6e3c74eda44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0505e939-5cb6-4d69-9306-f49fada8b481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfad46d-101e-4577-95e2-6917d27159de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c19cee-6505-4700-80a4-df194ce54f0d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550d9521-6216-4278-a9d9-e770e4d777fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e0ebfa-53b4-47b6-8598-793675e94307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e5b16e-f138-4898-89e0-df0ad9e14b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a73952-4a09-4351-a0f2-dec39b4bffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96432843-cebd-4575-8adc-76878095a2cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1be6251-2d64-441b-a228-971d09c73906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75cfec6-5170-477f-87e4-15af81c291ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7506b633-de12-4c69-b712-3706359df442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1ff129-ec20-49c7-ad1e-03a634edbbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9b4b1d-552e-4135-9e50-38deba145738",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba6c868-6a27-42d1-8d46-8762c7fe91bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff328a9-c5a6-4918-bf72-97dfa64b867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c9ab2e-b739-4c5b-be3f-c5bb8a6f6a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2660d52-69a4-42a1-b88d-4f3306929e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25055105-8259-4cf2-8d32-29b198c739cd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d999d6-ff9a-4c22-8aa8-a6475a543e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732c3139-3806-442c-af41-78f7061e99c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303ffb03-a33e-48b0-ad6f-899bd1f13d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "690b7b05-74d5-45c7-86e6-5179236e46f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc16b277-3d59-4ccd-b445-f39ed7998fb0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a541462-fd77-4833-89e3-27379cf3a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714c8afb-ddb3-41c4-b29b-37fcfec0b2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540bc52f-aa6f-4990-944e-3c7d2a59a3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae57051-8a21-47e5-98e5-b7ce9afc1334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53054e6b-5870-4af0-825f-a13819c2c685",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195ad9ff-3b96-418c-9c0d-8af11ec44d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ab121b-f5ff-49e7-9f80-67622b6895b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c7831-077d-4846-a649-b8f79b982308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb74670-461e-4415-9d84-d1ca28e1bd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8bd2ce-28c0-4933-ad89-c0ae5a6c29fd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df95047b-4859-44f0-a00d-39abd7bf543e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dbbe40-cdf1-4741-8262-dce17a384c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3438ed50-c3b3-4ec7-bf69-6a900cc9971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd1dc82-e21f-411e-97cf-daf8a4f5f737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0690955a-005d-4414-9b54-b0f5c727d7e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c45158d-02e1-485a-8875-fcf1cad62e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6865a2-94fe-488d-90b3-d14c832f6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978bab48-e37a-438e-a64a-d62e4b2e8229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a645bc02-1446-40ab-8ac8-e74a24e89426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71052d1-b838-44dd-8f7d-e726be39035f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c56ac3-0352-4f71-89ff-29db82b77c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556f7216-2687-47c7-957c-40a396d03671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096a3339-a11a-4dec-a512-66e6aedcc768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4a87d2-24a9-454d-8dd2-1e8719888485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2450f5-67e2-4b70-af77-660798211708",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6872ab5-02c2-42a9-963a-16dffc3fe459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a7c9ee-5b40-460c-882a-a9e02885bd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7362b82e-d5fd-4deb-ae78-f0aa12fb5a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65661900-157a-45d2-9663-0438410191f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b28788-559b-4da2-91da-19dbb8976295",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e51c89e-0917-4a21-9adc-0b1a803d98b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc47786-3d3d-41eb-ac2e-945f853d501b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b4607a-0d17-4fea-85d3-efd7e80a4a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5c1932-eff7-482d-9812-8812f9d1d7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8f5297-6fc0-4a89-a8c6-469ee74326d1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be87e9-b0be-461a-af56-0cf7d623a399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aafa39f-87e1-457c-8dcf-f789328a33aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6702ec-7c96-4fb2-b6d4-9b707b44066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cf9524-630b-49f4-859b-f5c7ebd8880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1f58e9-55a3-40f2-949d-430f0c3e2a62",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601cba6a-464d-44ff-a96b-dc1fb1989cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd321a2-ddc9-4b40-a301-075245b79a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41af29b-27f1-49ac-8f6e-02e537516b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcf9e83-b655-4dd7-b653-e4a5b79ddb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5358c4-c707-437c-a504-6e9c6658059b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666403b5-adb6-4571-807d-deb34add2649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912d9fff-3792-41fe-b5c3-32e1621533a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5166c7a4-4d5a-48d6-bc1a-7201ee139ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c6efb5-0f6a-42ba-b077-8e71a9047312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa310a-ae9d-4a56-b912-f4718701c73e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cbd35d-9a18-4e48-83fd-31da9ea340c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de0d9201-210e-4a6e-9202-adb257bc6595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584e9016-e639-4212-bf35-d1e779882a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28ef3bd-847a-4403-a4a2-bd302bcd9e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496c91b-d3fd-4647-8a99-8e099cfc03f6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db58dede-e2cc-4c23-b3af-e09fc1598cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2156b7df-a18a-4d8a-9e88-b25f083ba210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07a70a1-4921-47ad-8565-1e009e637f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75cf66c2-ecef-4d65-92fa-9f10799ff174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5721dfb0-daf4-47fd-8c71-861b4f43cba8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d147858-59c7-46e2-b79d-d8313c0054b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e0710-927a-4cc8-94d2-f95b848c4ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268a3ed1-ed04-4720-8d7b-4e5e9040f935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bb9b5d-c451-4ebc-96c6-115f145751fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adbb7f8-ada4-4385-8de8-9b148cf2d82e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a8fff7-1759-4997-98e5-07553f9fc147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9c9ab-0791-44ab-9ba2-3465df5bfd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82563868-5a4f-425b-b110-dc61b725e8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d80b60-e72a-464b-bae8-906e86221c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18452049-a3ea-42f0-be5b-f09c0ec81267",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0818ae-b110-49c2-a05c-bf7afa6f1c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb58e58-5bf6-4601-b9d7-237e3ad2bd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075b8bbb-4c27-4441-95a7-f3e3ec2f8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ee41cb-256a-4b62-baca-5c67318db915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441569d4-1772-464b-a478-2a5de54f25d9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241468c-02a9-4239-8b72-5c7d537810a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7857e1-3d71-414f-8923-ee539363bb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c0a8f9-7979-4588-a1fd-2e1376453af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e87b9d-3dd9-4e0b-a73b-9e650ceebfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5516eb-6f1b-4ba8-ad55-85785b7b18dc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdeb64b-86a5-429c-ae4a-f2f4e26f1866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63abd723-2949-4813-81fe-133a7f9ca238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c3fe97-cefe-477d-a90e-fd641080fa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f242ddb-41c7-4875-b0f8-ad3337156734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fb3912-9c27-4b8c-80d3-0f1bb338cddb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37461709-e722-4624-b367-2920fb673390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b877fb0a-d128-4fd5-9ad7-2ef77158d0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f483975-118a-49ff-a07e-ae65903bdefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff337576-014b-4bb6-a2e7-3c9d8a6649c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66716f30-36ff-432e-a5b5-7f4a3cb55788",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d33a30d-511d-4610-a29e-ef062436bd06",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b29d5-4f02-4746-a3b4-091366b216dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7cc268-1307-4313-96c0-f57f50a29af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb72ac5-b240-4753-bffd-45bdc7a7a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fe91f7b-b5e3-46ee-8131-1f98f97ef436"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6dca143-9eae-4f9a-a4b8-af786c1fd21a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60fe4b6f-84fd-4cdd-aaec-34176c5d7ade"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4aedd05-5e84-4a32-b6e5-2989e45b9278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac3ba572-18d2-4f2d-9bdb-fe5fea9501a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a18296b3-307c-408c-9ddf-71e2ea318428",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f73e6d73-3c67-490a-abe5-39fde9926080"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcc7e547-f6ab-44bf-b736-e362c9eaa176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "621f4870-deed-4f4e-8af0-097821a63679"
            }
          }
        ]
      },
      {
        "id": "6e0e7b20-94d9-43c1-8d29-7d2074b06db9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d675c262-3c92-4dac-8a21-2470378bed0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12437332-1f10-4472-b1ed-21cdb753e8d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0947953b-c2b1-41ca-9f56-64822ba8b05f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e50523c-4683-435f-8256-8fae5b9f68ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68421a8c-c7fe-42fe-90f5-8713d747a613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f2d58f-c2a4-4680-8ff8-f0606e61d21d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d34828-1494-4257-947b-ec1e9c4a0c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9648eec2-0003-4d07-9b42-4fe06ca537df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e23efe-85b8-4951-953e-c97ee9a746e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7814da08-8c76-4fbf-948f-33444d6afe56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8112fd-3b22-457a-9ef3-f9be3721af77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3d026a-08c8-404c-8782-0e2e8cc7fa43",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c54d43-eb6d-4330-9fa2-cedfc9df5dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fb0770-61aa-47ac-b47e-122319bd5b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3886573-dc27-4197-b338-2c737f005232",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3844a91-20ae-4eeb-8592-0cddebf3c4ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cffd76-1744-40c8-8c20-867f20aac15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60205263-f8c4-4a6a-b843-cb08e1699e67",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcf9093-e3a9-40f9-8937-6d6a6499f3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fc540b-b4f6-4869-a3b5-4641ffa402ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee02f48-8497-4875-89e1-becbb9d62383",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b5ea4a-62d4-4d96-aec5-5971d849bb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88781677-c06a-4927-918d-cf28429cd9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaed9683-4afa-4a09-aed0-ebe3b5af9c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a98ddb-30aa-4992-9320-3569d8912707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f3c903-e8af-4bbb-996a-ef73a834887d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc794df1-772d-4bf1-beeb-1fb636fedef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5763434-ed2c-42a2-9e75-22bce59afae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561e33b-27b4-4a63-9531-ad46492e563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f580da7-c1d1-4b2f-87ac-7005573bcabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f9fd4-7f75-4c20-892e-2ae5a344930b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de566b7-9fca-43ec-aec4-efd74a328996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d313f20-ee0b-4d55-be52-986169772294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116aab64-cfc3-4f13-8550-9b0021ecc9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fa34c7-c687-42f9-a7d6-d881986421db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bf3d4d-4247-4865-94ac-a59ad699dd5a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dba68f-38d3-4cc9-b25c-e4cf594d5595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13358115-29cb-4605-a8d2-53d9816768f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d1e04c-b165-43dc-bd7c-c861ed0cd7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1649012-c69d-49b8-bfa8-b5e51b26c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892c32fc-f268-46e9-848f-661c1e42fd28",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715781b0-266d-4752-9b6e-e194c029c444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1676a199-02fc-47b5-8751-a6a9ec276ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24e1ad-caf5-4ded-b0be-b23a3f00f385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24696b6-3207-4fd6-9cbe-d8a4963ace4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07012546-c2f4-4432-91bb-3dbe53b88d0c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e080f4e1-203a-424d-a4c4-8dfbd54b9b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb619ef-96d4-4f6f-8585-5f4d336ae80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bdd2be-f7bc-429a-a96c-7121b926298b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5512f8ea-9bf8-43df-ac37-1df3ba1ce310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01843510-dec4-4b81-9d6f-1b5eabac4c67",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4779a2f7-608a-49cc-aec9-8f4acea945f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1176b799-9852-4a3e-9e3e-13c46fe7e1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983006d0-a132-4d56-8e6d-87a8b8871b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e28fbe-afbd-4b23-bd71-9270b35d14e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875624af-7eec-4d8b-91e6-153c514f7c3c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14293211-fde3-4df9-b776-c5d2bb430dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9767b09-3289-4450-8b63-5ba72fee622c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83305d83-58bc-4a6f-84dc-48c071bc8e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e11800-fd2e-47a2-8932-5b2d8b28e5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1edb9-526c-404e-8384-d039d6ad3cb4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0d091e-7614-4569-ba79-3c80fb57588d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49738d3d-87d3-4d8e-8c39-168dd8acabd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccf654f-9610-4137-80ce-3410234c78bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c92b02a-c255-4210-80b4-23da31025457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e6c550-e52d-440b-90ba-971eec77643c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ebdd50-683f-4930-b87d-5f4e9fc290e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15bbd3d-c0c3-4a6f-8aac-8e4682aa6cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3329189a-21ae-4a06-9155-aa817ef9d326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3806a15-cee4-44f1-b3bc-8f855f4dd3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724880bf-b815-4ae9-abb4-c553fd6ae27e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb2c431-b183-4f0b-9f28-effe3d52725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e188fa32-262c-42f5-a5f4-8a2c8ae0f7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ac6109-6858-4212-91c5-287b295d0b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ffc77b-3b5e-40c3-8ad6-413478a0975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b33b7-948b-4aaf-b19d-e18af07f8246",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c44a0f-aa78-44dd-acd4-06624fb2bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2537c9-802c-4009-a88f-f9df633d780d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c817f0bb-c9f0-4b80-90e9-aa6dfe91faf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d73785-b6c5-4610-b661-2173f9e8d748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef61c5df-4c9e-46bf-a5e1-17875c775557",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efec691a-3c19-4d9b-b415-7837fe6f1e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e20ebf6-7d3a-485e-b9b7-6f737febfb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c009c7fa-6547-4264-a9a2-6c073d209638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de1d12c-b82d-463e-b5a9-a2811b9cafe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adee9469-e885-43fa-be58-b64ff5d6c480",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d308586-1c77-44e6-99bb-9ae90457716e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17507cce-b82d-4cfa-806d-fb212036f92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ba92a4-a86c-4abb-9340-9c316632a0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1099c755-3d8f-4a44-b1c1-73c62c84dd57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0750e9-7d7c-4c74-b395-b088b2553ed6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652e2b40-07ec-4250-8c86-4adf374902ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825fc583-457a-4463-8b02-8b89714f0882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c1bce5-2a45-4e1b-8222-8a111c5fd83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70f46d4-21ed-4638-a47e-1271828b01eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3359ea8-1cc3-4228-9e25-6cef138a23a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a189cedf-ee16-490d-b878-a675be007acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44650c89-66ff-4be1-a7d7-a04fbd493585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3080c770-c5fe-4fd7-b20d-e5286d677d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298622e4-22e9-4505-8a96-f590b895ba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6553e45d-c358-4cde-b622-5bb0be724a10",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b015b5-c2be-4354-9359-429d5225735d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32a1391-8ccf-4ce7-be47-3a04f8aef216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319c2b25-4452-47a1-a614-b063ea561fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db1e07f7-d5f8-40fe-9095-d5f1cb01457f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf138f6-141d-463e-915a-76d056e811ec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f5680c-0062-4486-bf77-d765fc043326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553f6ed8-492b-4896-9210-506ef23258b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdec1aae-5f44-4682-9f7f-2a2144ca3d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e440de-3803-4003-9db1-16424b34fe91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fc1308-045a-49a1-966b-04a364f6228e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80423c8-5a5e-451f-b016-198e56a17f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8882aba1-fc89-45c4-9ee0-cadc2e5d27a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4bb092-d96b-4b3b-96f1-e9313257cc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a353da8-adf2-402e-9efa-1140039ac15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0658eec-3266-4ff0-a452-3a9a38182937",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f91c82-6288-48e7-9154-ea1aeba1de1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e9823b-a8ec-4bbd-aadd-e4bf59ed0b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b5643c-ecad-45c5-bdc1-fdd67544d6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda6b2b6-7cb6-403a-b41e-6a83d6cc6724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0896f7d-fdfb-426d-8025-67bd48ffc696",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc42e2c-6fbc-499c-8a77-5073c58d1954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1ac447-339b-47da-abbc-a8c46a88b458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4642dcc6-5bce-4d0c-96d8-0ac28a920c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26de260-2413-4d61-b2c6-943d4c582e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fc7de7-46f7-4645-85b4-db4b6e84c3e3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb4f211-0a80-4ead-bfb0-a5ddef885b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae04865-5160-4fc7-bdea-85e305ec9fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5820a01-f6e9-4a95-b2c4-fc80e1770410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bfc2f8-2803-4a6b-9325-c8e86c262649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e420f748-fdca-4b91-ae53-e17f1d0059c7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c926c8c-acd6-4623-a4c4-e5e55444ba01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142f5959-883f-4827-afe2-99e95e417402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a44ce0-f648-45e0-a34f-d6a8ec487751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e500079-abce-40a5-aeda-4025db0a77f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e864fea8-8666-4d97-b193-e80d3be7c498",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da9a550-cdba-48b4-9b7a-76571c79340a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934bc2cd-9fbc-4672-b283-7f9ebdc0a127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4d1b81-7f1b-462d-a2aa-c4873171aa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4d2336-920e-406b-9140-9928b3244d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1581d4e2-3ad4-406c-8376-e2ae1e01fc36",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f9081e-2e41-4e64-b033-450e4c10ff98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23fc5a2-211b-46b3-b041-69902e1045b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033bc47e-1eb9-43de-b117-cbe6ed485cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0804036a-7ec5-4bb1-a4fc-32b2018b1d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9769338-1e3d-4071-b46c-c8bde03531a6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1934c32-2b92-40a2-81e0-dc733544020c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c953255e-1d16-41b7-a8ea-2f18a9a416ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36441d0-5108-4db0-80a5-31c2ec39bbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948b8efc-d104-4e29-8995-bac58a4c6e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3243b6b1-ba94-4946-b424-e02daf1e94e7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3205b18e-08a7-41ee-8619-280aaab624e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40eaedee-9803-49a1-ba60-a707e809e0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1ef568-6ed4-4e90-8e91-3a8881dd0d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e3686b-9426-40b8-9025-76cfc845d7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d85800-414c-4059-8983-319c93bef739",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584bec79-86b6-4be4-b792-503313e19758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6549746d-3c0f-4ff8-b479-b9505672724e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48ba38d-d5e1-43d6-ad9b-cdd718eaf962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093e4e54-5953-43d6-af45-542b934eb04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff3b61c-4a55-4551-b97e-7f7eb1c1398b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb67414-e70a-42d9-a984-99409795d397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39862f9-d141-4436-94ad-3ea077f87b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35226d0-15f8-44cb-86c5-fa36cc0d324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8466b67-4f76-4b59-8901-42c3f17f8236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297e33d4-7dc7-467b-81f0-1aa2f4a7eb8b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c291fe-bfff-48ce-902f-beae7c9ee14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2743295a-4ad4-4031-8572-55c6735cdb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08edb58-c4b5-4387-b64a-4619475708f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490b992f-b010-42dc-b313-8a8b21cf4959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9e1f05-6e47-4b52-a530-b9ed3cd519cb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24572e76-21f0-489b-90e6-86fb7c79c133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf784d7-3c00-4034-a94d-74ca0a26220c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef72a6ce-f801-49e5-8f93-2643a8658308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa53f47a-7caf-4e11-a736-8f5d2b2ab2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6419b61-d77c-41e3-b9ea-e05e5a419c8e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100ea92-f356-453e-b75d-44cb2514d71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd58a1c-28ac-430b-8a7e-75fa4ee2ce90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8526405f-abf5-4500-9996-cdc078306a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27e5b8e-7669-4a24-ac4e-0e5bcc1523a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2da05b-6118-496a-98bf-8f2a6f4e71f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d41e19b-cbe6-45c9-84a3-2b74e951eabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5b4dec-50a5-4242-b82a-f9b845fa6ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e235b6-f4c1-4c7a-a639-2e55b3a74590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3b8288-8499-4a87-a6da-d4730c712379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dcbbcc-f076-4761-a707-a4e1ac492f15",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f09eef0-5580-44dd-b7cf-63817784e86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb265e9f-a827-4159-a55a-a84440734701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf25394-5509-463d-8ed7-7d8607f44b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6d575f-2889-4dba-a3d1-d117427ba187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c084a1-8a3c-4900-89c7-310a0017fee4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad82802b-9d8f-4834-aefc-86d9973657e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd82b301-9953-4f91-abe5-d09ee4a9acc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceca462-e153-4048-b8cf-0849eef672e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4416705a-cad6-4f31-9826-331edf172e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3833fea9-e7f7-49e6-bca4-d7834fae235b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02ac605-63dd-4e35-a2e3-d90bcabb82d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02c2b6f-afc1-4ec9-bba0-ba04f8dc10f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8426b7-7c93-4ed5-a139-ea3cd3528cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b790326-f8e0-4b48-a399-fa432a6bb759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c25b343-c753-490d-a7c2-8aaf4ec1f47d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ae8424-a567-40c9-bc47-9b5aaaa8638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47451905-fe8c-4c03-b55f-6e705f329b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0fd8da-5776-4253-9f5d-fc9fab6cb4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89330cb-3ede-4b38-8e49-b91754ed9122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395c9ef9-2a46-4b72-a12e-8745d853804e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcf2bce-c6e3-400d-96f1-7501af746bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106cde11-484f-4418-89ac-07f832da2555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafdeddc-e533-419c-a59a-bb730e4661f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c914d9-d525-48a5-9763-79ce8884ca89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842c5cca-55f7-4ede-9fae-9a29bcacbf88",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dadd9c0-8c57-472d-8eff-197fb41b52de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c06ca1-0bb3-44c8-8152-5802eec94f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acad56a3-68d0-43b9-b182-f59c0c0ffe36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b97690-dd65-48ac-8a4c-161c69445156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517af2e9-1f0b-43c3-a877-6d0871b3db57",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658fc8b9-ab37-426c-9707-367597e48ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9cd7e1-1987-4d2c-a9b1-b1da9fa2ed88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e55c68-a576-42e5-9a3a-227241fb3f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b928ac-6e38-402e-a446-23c3113a6f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4cfc01-7778-4107-9874-f8628ffff512",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b67cea6-8e48-42a7-ac0f-cac25fc96b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2b7bfa-279a-4038-866a-d536c2051fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cfc050-0fb5-4523-b4b0-4794316ae8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3801b6-925e-42d5-a6f1-61ef98995005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b5687a-6bad-4d73-b6f9-f22061ae86ea",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678dc324-3501-4223-9380-63c522ae95c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673d9ccf-3714-4180-80bb-160bdc031767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d0f0fa-65f3-429c-804b-ff56754400b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d430d0-148e-41c0-b06c-26f014f5b43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c083723d-f704-433c-9400-8210d6c27da2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d53436-14f5-4bcc-94fd-d5304bb62474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eae10c6-10fe-44cd-83b3-cbfe9d900754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6207fc10-391c-40b7-acb1-5e9e7ac30b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e29abd-c3de-4c8f-baec-8f63f7290aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a02623-6783-4844-a21c-67ee4514973b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0ba71-4250-476a-8f00-5b741ed22e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cade342b-e4f0-4b85-ab40-4100334d1172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d368f56-39ae-4831-b4b6-ed8593e910b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced24c6b-8813-4dfa-a587-513ce68564e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fb1f0c-68ca-4dac-b3db-480316115a96",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d4f024-b2d4-4b00-a011-2d7c2f3d68bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2528234-34b1-446e-93bd-d244bb046816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba21f924-0a31-49b1-915c-95c8507fc886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33df333-225b-4c12-909c-296d7b1b6ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e130c-33c6-42e6-94a8-39e2f0a6312f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b0c01d-8f2e-4ab9-92d1-9081c9406c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e26579-91ba-4f5d-ab16-434e7ef88a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678b8b34-316e-48f0-acb4-5488ce399406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efd5261-6974-4d56-937c-0fb98f1b8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d4612-ce6f-43ef-bd45-44f8f09fef30",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bb7441-6945-4e91-ae88-c1b678a2768b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3ce99b-43a3-4d71-8c6c-7668b1f21356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8540f995-7bc5-4777-9338-3547d9347c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f1385-b416-40e0-b3aa-45d800d3f9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4dafa3-a775-4866-b9e4-fe24f959cc4d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b328d8-cbab-4304-850b-6bf00ccb7cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50e269c-c190-454a-80cc-3390e0b7a3f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa826be0-f68c-40d6-b423-4db3f4dc0383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b58058-0a58-4d6d-a8db-4756e0892355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72be16af-ae2d-4c6e-91c4-706849e73d37",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e384cc8e-1de7-4ed7-a8d3-35a6ce9c34e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab64c690-a4fc-4024-b67c-c1a00345fcf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfd45b-ec5c-4f91-967e-f60d3b014656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61de6607-e96d-4dfb-8bd0-a978f3ebda3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42aeea7-5904-4115-89e6-1198925cc8f6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb8cb72-42af-4a6f-a1b8-b2e7d5a2b9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb094252-4df4-4f21-8d0b-03ca3a11ce00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d5613a-2875-47bd-b0d9-48493902fe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8533e17-678b-469b-9f8d-f48cd821885b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eee69c2-8894-4011-968d-ba8a42c68f29",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7272f64a-59dd-4624-b19b-bcee16ebde4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d1e788-084a-4ba3-842b-9356ffd5113d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fadac9c-6d50-4b8b-b794-6f41ab4e2523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349e5e94-bb44-439b-8efe-b6f93b09bdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21277a50-72c7-45d0-99a5-90e49047da31",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e7db9-b42b-4384-a49d-ebde5d57c301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9f9ac9-ff1c-4b13-bff2-d30d679cd734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1fb50b-dccb-40d9-9894-dec3df3e8054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d388e9-5779-4cd9-8b6c-406f1c5ebc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349aa871-c150-41da-96ca-bd70daecec1f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66865422-cb9b-4800-a016-a37a7c73b988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d913f0-d49e-4a7e-a151-5a9d70cbc924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d61c5b-9fd4-4f3d-8e51-32b9d1e78423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0f1899-3e7f-4a2d-bc72-47312e30fe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a3c812-9c01-4104-b7cf-fc2dc6a5d4c4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf5536f-e529-460a-9993-086b0bd506a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27bebae-27b0-4bef-8109-2ff3481a4b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f2f9a0-c95f-40cf-bab3-1327f3581219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e58ed6a-cff4-4e4b-9a95-19688323865a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12236163-b661-40c4-8953-a909b3f12eac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaa36ff-2cb6-48ad-aceb-daa87bda92a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b055b5-b07e-462d-bbf4-b7f8904d7a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccf9038-512a-4415-bfeb-d7cab076a383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7222b98c-e9ee-4349-a4c4-8b0e4675b2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96902216-a9d6-4928-8d39-dd1d7606444e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b758ec9-f202-40a6-9895-6fb7110ba4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee2c6bb-10f6-4a09-a96b-2376e6c5a3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c67cf9-dfb1-4b92-84de-2ce037bf3187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fe0d36-05e8-4ca2-a380-53030bc640dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca2717b-1834-482a-8078-9f4afd8b83a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d512f9b-6175-40d5-bde0-d9d1586b2fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c8c671-b6f3-411b-91cd-3622d528c625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d48fcf-5600-40d5-9ba0-5f14871df835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b8a7d5-a302-49b6-b615-4db76c4d2e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc6a8c2-f04d-480b-ae35-7186f823fd5f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c491c1a-bb33-42e9-a9d1-e89fc52adeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5258d971-6623-454a-a10d-9aa406f757fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c5420f-3faf-4e61-8475-76b3f28f788b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfbed4c-c247-41a3-881b-69d8cf65e34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fbe6e1-30ad-4925-b513-a0ff22dc09fc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4000c165-1a06-40fd-bfcf-7e13931f03a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e752644c-09fc-4c21-9012-4ec0b7ce2050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12b183d-cf6f-4ad7-8eb7-5fe861b5ac4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf2426f-cde0-4114-af6f-5032120d712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224d4c57-8292-4885-9d12-5067e724bc92",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd503471-967d-4904-873f-caa609f4799a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5da858-be23-4c45-9df7-e15dcf753b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabc1d10-3c93-4b0c-a60c-a29ddc0fed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21213f0f-84c3-4ff7-bb57-3f2a08d1464b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973fcff1-5105-4975-b759-3c08b0709309",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdf5ef1-5a91-4761-8588-74c593662fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236f1c19-1c79-4d36-8975-ffa81d038bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e99ee72-11bf-488c-8695-98a930f6a548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e884de4c-6d02-4cda-840d-c800c3aeb702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ed3fb5-73dc-453e-88ec-0965d62ce00b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e714852-9b45-48f0-b796-bf9c41a60255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7ee993-7052-438b-84d3-3d5351088fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36086d44-9bc1-4aae-9c69-f0bb1de1199b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc1a81d-3287-4003-a561-61060cec2212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10841e56-a32b-48c1-9edf-b324b1fae3d2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e82d6a-9d5a-4bed-9e25-3fbdfa1fe8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4bfbf25-c6df-4ba4-982d-75782a39e12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a334c11-503d-4410-b9f1-8848eddafe67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac682598-3fbf-475f-bf96-3f07f2f8a325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d244d80-443a-41cc-a83c-66ac04c51865",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60b97a6-ed04-489f-a21a-85d958a43d08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "011ce9f4-7458-4b9e-892a-6486dd322410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76a9e38-b356-4ed2-b712-eba1523ac3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61f77bb-5368-47e7-8882-ff71a9308a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a410c5b-08ba-4568-a1a5-f95b22676a70",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed88a57-7ef2-477c-8e29-2b70415d9d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951e7c8f-0e8b-4b9b-a4a8-c2321cd163d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b9a310-ff55-4b53-bdb9-309f28ec54c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddca40d-2898-47bd-a061-e893c19da0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438357f0-6980-4bcf-b0a2-1813d06226a9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f08ab2-55fa-4db7-b63d-178bd4e84519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e72a09a-9830-4936-b512-2c09d8d0bb4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1483a-7d9e-4f4c-b07e-c650f7722022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3d2d11-ca63-4c40-9832-6ee62d9202f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d3de7-19c6-48fe-a1dd-3f9467a5f3e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ae3419-d6e6-4fc5-b9b6-2643a4973e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a7accf-8f84-439c-8552-c12c17602e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79effe08-9593-4e6b-8b0d-ffb7b24c1dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0343f6a4-493f-4d85-bbc5-1ea5e318d5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf002ed0-680a-4db1-9d3c-f08412b94467",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6939c1cd-233e-4a3e-83f6-2c14813dfa1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30270671-7a3b-4a51-9bfb-71893a586250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998bbbe1-10bb-4b8e-af77-f10115267475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758ff205-a3ae-4e39-ba16-da2ce4d82235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9924235-da7e-4a95-828e-809f9a782f8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda63b8a-7332-455f-9e40-d670586ae66d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00713453-13a3-456e-a227-40fab759836e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d29d78-2ae6-4a3e-8e84-751d9faa4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a18d50-6edb-43b6-bab6-bd87113dd1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589a6a7b-83a1-47a6-ab0d-bd33323869d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f25014-37d9-4f1e-a339-78d7c0a0dd42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3f20a4-1edc-4974-a833-061ddcad6edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ac5c9c-18ef-40e8-b51f-158e12e83549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ff44d3-ce6b-4971-8c7c-20e17a22cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d959e1-73d3-4593-9b34-09c6e9c673dc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fe7ef6-6dc8-4ef7-945e-d63a37664706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3510777-6087-479f-9e9c-781e496d917c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d2c02b-262a-478d-a288-aa9587c7f2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80998ba9-4965-4c96-af59-ca018e92fd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f571bd3-433a-4678-800b-7d83811a60fc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8dd924-4ed7-4a55-905c-47abbec98aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c52a7d-1e71-4fc4-b327-910e0677bab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c8842d-d056-4f8a-8f3d-5a46ee166df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b97716-08a6-4b22-bb46-99db363a34b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ded0ce6-03ee-41dc-9d31-b2f7f58662f9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c23b039-ec09-4336-bb57-bc4075c4a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5b0b73-c4a0-43ce-ad43-a8e47efd7fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104265fb-5929-42fc-8a32-c2ac0370bbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9b5081-3d77-4f8c-ad43-b5159636641f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc55a1b1-3c87-4433-a5e7-0f3f994e9b68",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47195198-3e67-4f13-97e3-c9b592896ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec0e4e9-1a87-47f9-a252-cbf26ecc45c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf46db4-9d97-4908-9472-fb1278bca8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8381b770-3f5d-4a9a-82d7-1a0dabc73385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e01fb2e-347b-4a00-bec0-7d751eadc9da",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e73342e-fb1f-4bbb-bcfc-e680f33c5cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6455f168-d41e-4969-ab17-170ad39e6d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a615329-bd99-40d3-b76b-2fad6d7472ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df252e18-0da6-442f-bcc6-37a6d7fc475c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0929f2-7af8-4462-9e6e-6f97eb5b85bc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfb0ce9-b68e-4335-af0c-1e5a75746ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da304875-5063-441b-b0f2-a33eac153d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446da575-249c-4f44-9750-6506099ceebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cbe597-bc6f-4b07-a3ed-7b0a3e580d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7753c778-5b09-443e-9df3-822f21ddd417",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c4a01a-0e3d-4c97-8deb-65aa8d3efbfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab21412-95b0-41f9-9abd-4fe8d93ff734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e0edc9-ac41-41de-a9d4-5376eac3ae58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f539635-466b-4d9c-9dba-2620b14d890c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e0415-2074-4943-8df7-3d00fddd0ee0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d17a1ee-8d90-4e9c-8720-7ff91a94466e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0105883d-c279-4e09-8a92-5e208dc7e7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aabc4ec-7072-4a02-9587-22f0fcc57fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9e440d-3f61-4e05-bbe2-8325a6fff0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced73523-df93-4a56-b592-9f30406629c5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb0f0f8-5eee-4751-ae78-a2ab726e1308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5a2ca0-1ef8-485b-9f69-343c895876b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96c6e4e-fae5-4c8a-8201-a84067240f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b922a261-190d-409d-9cb2-94d55c351d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8cb365-40ca-4649-b2f1-15cb14215949",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c803428e-d634-4f70-8a0c-07e77d4552f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d2bbdf-2b53-4dbc-a911-c5a2bc135a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051c0ee-1b58-456b-9eba-4189a3fa5b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5f259d-96bb-430f-8a83-12332f548281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3490a4d2-9741-4fc3-9bd8-39f35e7b7c40",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf3ce15-4814-4952-ac22-f11967bfff36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09c82070-1174-481b-aa29-67ce80194139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098a2e55-18ab-49f8-9aa9-63b964b6bf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73536df5-d205-4fb6-a24b-f1c6abe34da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358bf611-d967-4242-acd7-41a3d1fc70de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e194d2-8fc9-4db4-a9a1-0f0c6947843d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ca536a-6d3c-4175-9baf-4b3c87b8be71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f91727e-7af4-4aad-867d-352e32a6eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f437d61f-7883-402a-9b73-49b2165c7ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2106b4-00ae-4053-91b4-25284a4ef301",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6a681a-3b6f-4866-87e2-2b610a12ac1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af99786-275d-46f5-ade2-ed28833156f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0924db-ca81-412c-81d1-c11e1e4ffb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a348157-74af-4797-a2b4-166321a54224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc59dc7d-2dd6-43f7-bef7-c617b793ac4e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70297be9-4e9c-4fb2-a0e0-9f129cac4e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e97fabb7-cf6f-4c95-8ac4-7101e8270f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5081dcb-dd88-46c1-b88c-398313bfa69e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682502a9-c54f-4798-89c5-75dbdf9c1dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e54cedf-ff7c-498e-a867-fcf2c79106e3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9d743-762c-43c6-93a2-e4a26f88d15b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b83dd7-7447-4fb5-93df-ee82ed82ea0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c1a123-5229-4e00-8c89-879ae04712a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d61609-81ab-4cfc-a63d-a934cde8388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed77a84-593d-40dc-9f9b-d8e842dcd87d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac62ef4-9b7c-4a36-8dc2-f580a09caab2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81c239d-136b-4a79-89a4-015c9814c5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8385d0-2974-47b7-bb93-1515d230a491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f18f330-8ff7-4373-aff0-61b68d001eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3edbc27-e7fd-4616-ada6-fda23cf7a07f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403161da-354f-416c-8de9-d0ab8acbb6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6902f740-d779-4032-a8c0-17296ae06195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22047fd8-6356-4e33-ac90-a3e6abd45eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d779190f-b1fb-4808-bba3-c10724cf8698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363894b3-edbd-47e3-b515-24ce47b3eea5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e2f524-18f8-44a2-876f-a27097200f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8802dcb-8abf-4d93-a7ac-c8fab980ffae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3991c9-0a1e-44d0-bcf9-ee4845be87bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a40a4c9-cbbc-41c6-88d8-a72323e93ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545fe310-bf75-4ce1-9a28-ee25f8432b70",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9865ca-900d-4f63-ab7d-30b1331bdd91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac192e4-1aaa-4d99-964c-473050cc9f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3999e11f-f867-490a-9457-eb6975d336f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40d10a3-90ef-4fb0-817b-e252b83c987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12eb5cf-d3eb-4243-a3d2-7ceaf6b8c514",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731ee17d-bbaa-42e1-8023-aba3b71a1a3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887b08e5-f009-4cf9-a5a7-760cbcbe151d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d97c0d-38ee-4e3d-933d-07a736a35902",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c9e988-c211-4775-87b7-546875ec540d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fecbef-099a-4773-8d8d-0da77e1f3264",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71768038-5f2a-492c-8a73-ab4d6c15344f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9b1d65-2f42-4c4e-9f45-a8b0b1d734a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51c84f4-72a5-4c5d-b005-1a2c5e565b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d338748-ec58-45d3-869c-164e98d830c3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cabaed7-e3bd-4ddb-be83-0f0cd38a7bb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc99241c-67ee-4f12-bbb8-7f13b507ce35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb23c62-fe36-447e-a9f0-ddbe0fed0612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "148dcec2-5011-462b-92e3-90a4a7460441"
                    }
                  }
                ]
              },
              {
                "id": "e6cdb432-3dcf-4f6b-8c71-ad8f7871d10f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e20c95b-e566-4ef5-9386-8284e09de1f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339a71ab-be5d-4a4a-81a2-e6c369c5772f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f984c1e9-7279-4c08-b313-c6b1e5db0b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1d1a87-910f-423e-897f-698e344286de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31d25ef1-56ea-45d3-82dc-5b163559d914"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f98f16c9-0dff-429b-ade0-447e6a4ebc51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5edff6a1-f07a-4350-a32f-e64d168cd2f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34ac51f8-f9ec-475e-aa42-a67959b8cacb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbde60c1-a126-49a3-97df-71d80e973baf"
                    }
                  }
                ]
              },
              {
                "id": "419a7905-d16e-44e9-874a-93ff6fe39008",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2b7e0624-93ea-4c6e-b174-1505d4396a77",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d0bf06-f575-46cd-a6f7-d1a9e29705f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "08d36a63-319e-4595-b13d-6c16e6e49fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7826b53-3ad6-4b02-96a0-031b306aed19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def404ae-eb8a-42b8-8203-dff0fd3677aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f36a1326-d83d-4214-a5fd-82d11a2ce655",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f0240c4-56ef-44d2-969c-4f23f4b3a9be",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14754b3a-6f89-475b-aeb9-8aad05ea37be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "200c3774-865b-4b4a-9074-bea3fcc4e35f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37f88c56-58a7-478b-acc8-6bfa1bb18add",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8a58e6-69c6-40bc-8f42-58e39312128b"
                    }
                  }
                ]
              },
              {
                "id": "5e71e13f-ac6b-42cd-9aba-b31a77c06aa8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebde603c-0fbf-4f0f-8d6f-950455816eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "658270f6-1a00-450a-a0e7-3e68c4c240b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a23efaf-a8a8-4337-b2d2-c8f77b79e991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7346746-3c35-4f2d-b665-10da8c913fa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57c7922f-28ea-46f2-bf69-bacf41151612",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c4343b0f-be6d-4851-8391-efa337b08012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12317bc7-aac6-4077-ad2a-4e9b1cdde5ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a4dc861-ae4a-47cf-bcf4-5bfbe9f7c783"
            }
          }
        ]
      },
      {
        "id": "a7eedc4a-6142-4971-8241-4753a6557806",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "201bc294-ee39-4018-b1a7-2ddd68ee6471",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4779bc69-1b68-4fbf-9d4b-6ae1e140de86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a8dd984-096c-4933-a5b7-ff3ec041200f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9e64d-94b9-4782-8a26-bd1fab4073d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7ac14b4-46a0-4be0-a3fc-e4ec5e0015ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b6dbba-a8bd-4f82-9816-f7c8eeeb82fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "625eedec-800c-4938-ad82-45bff6937a20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfc84417-e5de-40a0-83b4-fa746739af29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50c63264-5a0a-4c16-b447-e7b968d6c26f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4064c360-be1b-4871-b0b4-11bb4a3e8855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "727615aa-adff-4697-a33f-61c167391560"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74e60fb1-95f6-4ecc-9a56-d684ec7c0168",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2a0f0ffa-ffad-4d41-827b-7e766c29da81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4d38532-c7b0-412f-908d-577ba9f19095",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2591436a-079c-4201-87c6-7ccdf6512311"
            }
          }
        ]
      },
      {
        "id": "fbcd043b-040b-4ad1-b850-f385729891c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d248a757-726d-4337-9725-b02ac7fe7aee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f57414-bce7-4d9a-b3aa-b70201e14d1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36e66764-04fa-4f2a-9958-e14b2759e46a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c796956-7cb7-4131-9f88-61699dd7be50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "209463c7-3ac1-4b0c-af18-8bcd27cde1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eadd05-b9e5-44cf-a682-0b88f321e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f02015c-fdc2-4a9f-a7ac-b3cefe46d5c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d677d415-4c71-452b-82bd-0ea7e7d36c63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b89e3059-2385-41d2-8657-beaac630c928"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45c27e8d-b6ac-46ea-b738-51c2ab235ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d7c8532-9d87-4b68-bf61-28903b78e902"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "644fc29c-a0d4-4cfd-84a6-2802e12ffff1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee4a6c7c-d07e-48bf-bd26-2370c3e3ef73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e27b884-a73e-42b2-b2e4-0adf2af15f4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4f3108c-1276-4469-8d9f-4ea072897c81"
            }
          }
        ]
      },
      {
        "id": "95f86d99-5747-494a-9d71-ae61eec457f7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6b0c905e-e78e-44b7-a502-ff3988e4dacf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89ea641f-345d-4db4-906c-a933c79b2c9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0f3092f-e211-40ad-a1c3-2bc32bdfce28",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c60eed-86a7-4488-834e-59f7c5ab9631",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e5b0ab-c839-46ae-918d-cf1044df9259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5310f2e0-9ae4-491f-91c2-8a327bd87382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a63ec7c9-84e8-426f-8a64-453ce3a14408"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1309c80-f980-496b-ad32-62037b42c8d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22c3ef9b-4b07-438b-83eb-9c4c7074daf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ccd1d06-bd2b-4169-9d8f-b86faadf674f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8be9fd5-1572-4519-8820-6e4dd642b546"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e91df2a-c7c3-4b44-bea6-71d3597746ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61208979-e630-4445-81cb-2990e09fa9dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9596defe-a375-4b51-8f9d-680627c087d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e59b3062-b7d7-4451-af05-3cc600826083"
            }
          }
        ]
      },
      {
        "id": "bc7907ba-3d85-482c-bd2a-d578f291f189",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccaf668f-b8af-4812-9c80-5d6c562d4486",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83d5c907-279d-4d94-bc9a-0712040a3cec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f418edf6-5d38-4725-aed0-cd2c5e8150cf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec6a8b91-d9be-4898-bdc2-bec9fe35cd94",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e5cc979-4f22-456c-9d5d-a3d2b97fac6b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.96747967479675,
      "responseMin": 7,
      "responseMax": 314,
      "responseSd": 24.35273810062339,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686444408046,
      "completed": 1686444438123
    },
    "executions": [
      {
        "id": "eae96fe0-396d-4273-aebc-b51aa8c1c928",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2381a57b-2418-4f52-976d-30bcad3e2ce7",
          "httpRequestId": "b4e81651-0803-46d4-b72f-feba1266b362"
        },
        "item": {
          "id": "eae96fe0-396d-4273-aebc-b51aa8c1c928",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0945dd8e-2e51-487e-b96e-5e81e660506d",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "2590fa34-0f57-45be-ad6e-b79a43df7c8e",
        "cursor": {
          "ref": "57f86f78-ba2c-4294-893f-fa9dab7ed567",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4e2047fb-55a8-4e20-a158-3714eadcea9f"
        },
        "item": {
          "id": "2590fa34-0f57-45be-ad6e-b79a43df7c8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "646e0d51-3851-47ee-ae3e-4cce01c775d6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "863d5aa5-4b78-43bd-8cb0-70bc8c1ad09d",
        "cursor": {
          "ref": "3d7151eb-9132-4500-b52a-e0cc449729f4",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f4ab5f4d-c82f-40c3-8748-fda79bbdd23d"
        },
        "item": {
          "id": "863d5aa5-4b78-43bd-8cb0-70bc8c1ad09d",
          "name": "did_json"
        },
        "response": {
          "id": "a1642234-fa73-4679-9291-8881e0860e99",
          "status": "OK",
          "code": 200,
          "responseTime": 314,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2be9c-87cb-4b6f-9c92-6b80760a2cff",
        "cursor": {
          "ref": "7cb6e8f7-cdf9-45d5-983c-31f4337b5ce3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e7a6c0f-3765-4477-9a61-4ef369da3314"
        },
        "item": {
          "id": "43e2be9c-87cb-4b6f-9c92-6b80760a2cff",
          "name": "did:invalid"
        },
        "response": {
          "id": "37fcdc87-0503-42a0-a3ef-ae172faa6244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2be9c-87cb-4b6f-9c92-6b80760a2cff",
        "cursor": {
          "ref": "7cb6e8f7-cdf9-45d5-983c-31f4337b5ce3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5e7a6c0f-3765-4477-9a61-4ef369da3314"
        },
        "item": {
          "id": "43e2be9c-87cb-4b6f-9c92-6b80760a2cff",
          "name": "did:invalid"
        },
        "response": {
          "id": "37fcdc87-0503-42a0-a3ef-ae172faa6244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e4fe53-a407-4955-8e6f-985a7c4d5939",
        "cursor": {
          "ref": "173bd5c3-80b0-46df-bab1-1e943a275b95",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f074b00-4b92-4881-ba24-07fe5f4da324"
        },
        "item": {
          "id": "57e4fe53-a407-4955-8e6f-985a7c4d5939",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "61474ac0-407f-48c8-b9df-629eb5a62d61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 154,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d0ae3-9e27-45d5-bdaa-7dffba9337bf",
        "cursor": {
          "ref": "d1203ab3-6ae0-4ead-a490-5b0e78f84769",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "314be46a-a0ee-4042-ab18-a4297bb6ca3f"
        },
        "item": {
          "id": "142d0ae3-9e27-45d5-bdaa-7dffba9337bf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "28ab3f19-93ca-4ef5-8fbf-dbdece765e55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee244bab-0e32-402d-82ea-821851aa0e96",
        "cursor": {
          "ref": "4c8138f3-73ef-447f-b158-b61485a25096",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "09ec4f52-429d-4b1e-9c2e-a1561808bef8"
        },
        "item": {
          "id": "ee244bab-0e32-402d-82ea-821851aa0e96",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8155ef5b-da6e-4394-9381-966b63331f15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5654836-bf8f-4967-935b-e64cc5cd502a",
        "cursor": {
          "ref": "510dc0de-48a8-42da-bcdf-19778e8a5db9",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dc0fac5a-b568-48bd-879e-47d56ef5a967"
        },
        "item": {
          "id": "a5654836-bf8f-4967-935b-e64cc5cd502a",
          "name": "identifiers"
        },
        "response": {
          "id": "394d6984-4e68-4dab-aeb6-8be4fff3c1e0",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2119bb-11a7-4862-a81f-1adbaac344dd",
        "cursor": {
          "ref": "2b34521d-95e9-43ea-a023-2ffef4282e1d",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3f92f04f-df83-4e04-8ec4-01f0fce8e6ab"
        },
        "item": {
          "id": "0d2119bb-11a7-4862-a81f-1adbaac344dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c699ce8c-a1c8-4fc0-83a5-a483956ccf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee84ab8-138b-4108-b031-54ad642450b7",
        "cursor": {
          "ref": "efa6a6b4-1921-41c0-a11a-118dba397b52",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "46907679-d419-4906-9b5b-7320d50d07f7"
        },
        "item": {
          "id": "5ee84ab8-138b-4108-b031-54ad642450b7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c6d8a8b3-2eb6-4cbd-ab26-bb34a8b8b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06592ee7-9ea4-4d8e-8ad9-92a4e4cae13d",
        "cursor": {
          "ref": "559b3a49-92d1-472c-957f-82b66370cb1d",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4e0a75ac-2cbd-4b1e-8972-76210abb9895"
        },
        "item": {
          "id": "06592ee7-9ea4-4d8e-8ad9-92a4e4cae13d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "535596fa-ca5a-4658-9ebe-ee78eaec6ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5987e8c-05e8-4fe9-b865-b1d2a0866bd4",
        "cursor": {
          "ref": "a3803bb3-4b49-406d-ac7b-1bd80f2e2e16",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9fd5bcb4-d710-47d9-b63c-f41a6b84cdb4"
        },
        "item": {
          "id": "b5987e8c-05e8-4fe9-b865-b1d2a0866bd4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "53013513-232b-490d-aecf-68eebac21939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd21bfd7-0a11-46e6-b805-521ef74c8c9e",
        "cursor": {
          "ref": "19fca849-5e87-457b-bd5a-047e5ad3b75d",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3649d226-a438-49a6-aad3-a98bbca0c580"
        },
        "item": {
          "id": "fd21bfd7-0a11-46e6-b805-521ef74c8c9e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "12e9a77a-4cdf-4d70-9458-fc1269909b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386e042f-659d-4134-a0df-aff26231e1d4",
        "cursor": {
          "ref": "7afa9aa7-0ddf-49c5-8256-dbf082d47447",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a89527d2-dbe4-4731-be4f-3eaf668e0f62"
        },
        "item": {
          "id": "386e042f-659d-4134-a0df-aff26231e1d4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "08335203-6578-47f1-9d78-48f1510d81ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcfaa6d-5b45-44df-b829-d382657d0e78",
        "cursor": {
          "ref": "ccbb600e-7d76-4382-b6b9-430371cbe9f7",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e01ac538-ecf4-4e4d-9045-5709d184b8ae"
        },
        "item": {
          "id": "6bcfaa6d-5b45-44df-b829-d382657d0e78",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "00f55c8e-7563-4ad8-94d3-7ae420ab3510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d54d79-ae5b-44ad-a508-d6ad99e5dbeb",
        "cursor": {
          "ref": "5f9f231c-346c-4c91-9dae-1580ba41aeb9",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fe234d24-8f81-47e0-bf4b-3d85be4ba508"
        },
        "item": {
          "id": "e5d54d79-ae5b-44ad-a508-d6ad99e5dbeb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "824d4af8-e72d-45a7-9786-5ec106a70db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5ede5e-c705-491c-97d7-e57ccf30d97b",
        "cursor": {
          "ref": "6b6ce0f1-8385-4fcd-bae3-b78ff1b43cb7",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "df47dc00-7e8d-4d83-8358-bb7276616c16"
        },
        "item": {
          "id": "3c5ede5e-c705-491c-97d7-e57ccf30d97b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9fb99057-8d2a-4414-a6d9-84738ee35955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155b9b01-f9f6-4960-ad8d-bdef9fd0cf81",
        "cursor": {
          "ref": "a283fb5e-a989-4578-b59b-fdf1223b35ae",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f9c28629-32fe-45ab-845d-458d42543088"
        },
        "item": {
          "id": "155b9b01-f9f6-4960-ad8d-bdef9fd0cf81",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20fb6b44-0134-4532-a5bb-2b5c94c4d030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7518200-c312-45b8-9d24-2aa41e642b7f",
        "cursor": {
          "ref": "b0a719d8-d02e-4c0c-bde9-24ffed65b7f8",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c213cffb-7332-4476-855e-040c1edd7e44"
        },
        "item": {
          "id": "a7518200-c312-45b8-9d24-2aa41e642b7f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "633cb074-a744-4381-9832-1a94a10ed7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d28aab-4e32-4a04-951f-e2688658d12d",
        "cursor": {
          "ref": "0bc4012b-0e65-49ff-8276-12732c8597db",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f3d4447a-1902-49d5-84df-4e7345a0411f"
        },
        "item": {
          "id": "95d28aab-4e32-4a04-951f-e2688658d12d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6e575f1a-bfc8-47ce-b02d-35f16576ae6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ce37f3-c1ba-48ad-9a76-c9068387406f",
        "cursor": {
          "ref": "c951766f-71c1-4cbb-be10-1c894d5fbee3",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "343e779e-5f4a-4c98-ab6f-4cd3a576df5e"
        },
        "item": {
          "id": "d2ce37f3-c1ba-48ad-9a76-c9068387406f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b459be74-ed5d-4de1-b04a-af0225c34dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6fd0f7-b2b5-48f3-aeb2-5153c0ea3f93",
        "cursor": {
          "ref": "c439fe29-2809-4e95-818f-89c5f61709ae",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e398beab-2cb6-49be-b350-535e69644838"
        },
        "item": {
          "id": "9c6fd0f7-b2b5-48f3-aeb2-5153c0ea3f93",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "24c152d5-bc34-4316-8532-0dda47080eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed5e1e2-aa68-404d-8bee-debfc27c8096",
        "cursor": {
          "ref": "d10de4be-a500-4802-af3e-949ba5bf563b",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b1d11330-438a-450e-ab0a-0737d50de0a0"
        },
        "item": {
          "id": "0ed5e1e2-aa68-404d-8bee-debfc27c8096",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "32cf5d7f-017b-4268-a6f5-f91576756311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1b1543-9f96-42e2-8b75-5bd0fea60fdb",
        "cursor": {
          "ref": "0a810642-0c1f-4d8f-a3ea-96123d8f4517",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35a0133f-dcfa-4aa9-af05-7a98a2106304"
        },
        "item": {
          "id": "1d1b1543-9f96-42e2-8b75-5bd0fea60fdb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ff5e6907-ef27-4873-9865-713abdaac2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526dfd71-fa1c-4f84-adce-065e9d7e61e4",
        "cursor": {
          "ref": "49b6b8b0-eb88-4546-9a09-06ee0c270e62",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9227829f-de29-4bc5-a07c-41c06b5f7612"
        },
        "item": {
          "id": "526dfd71-fa1c-4f84-adce-065e9d7e61e4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ce1cbde2-0f84-46ca-9ff6-b8707bff472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8efc420-2705-4fa8-a706-07d28d102f67",
        "cursor": {
          "ref": "afd9bd2d-d424-4e70-90c8-112ce8af99ed",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fc354d30-e59b-44c8-9af1-e15bbec51bba"
        },
        "item": {
          "id": "b8efc420-2705-4fa8-a706-07d28d102f67",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2b6ab4e6-5459-4d32-a9df-079793b7af72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded83e95-ca62-4b4e-bb29-94788ff02171",
        "cursor": {
          "ref": "645e9599-5885-4e1d-aced-122bdc470128",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0ce5fe85-dd14-403e-a605-9f74ba2b18f8"
        },
        "item": {
          "id": "ded83e95-ca62-4b4e-bb29-94788ff02171",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e3197e3-733e-4938-b230-3ab66a9d61ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19003c7e-73a5-4160-8864-06c5ca5b3904",
        "cursor": {
          "ref": "ac9b088a-91ad-41e8-b1e8-8d27359e7b12",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "be633b7a-a593-4dca-bb38-dfcc51496f28"
        },
        "item": {
          "id": "19003c7e-73a5-4160-8864-06c5ca5b3904",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "17490506-fcf0-4513-9b6a-8810f3c73724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e080b4-88a7-4b28-910b-a5de4cd6a361",
        "cursor": {
          "ref": "75ee00bc-362f-47aa-825b-2178a0b24dc2",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "24f4f39b-656f-4d22-a1f0-5376b9f113f7"
        },
        "item": {
          "id": "89e080b4-88a7-4b28-910b-a5de4cd6a361",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe17eea3-d5e6-4983-996f-2caa8a42e41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd7f28d-d1ad-42b0-9d09-53f739675ffd",
        "cursor": {
          "ref": "f68ab3a1-7532-48a5-b890-1f8f11a7fe3b",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "44ed2207-d5dc-4015-9412-b31fd7ed05ab"
        },
        "item": {
          "id": "8dd7f28d-d1ad-42b0-9d09-53f739675ffd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "79521c66-9670-46af-b6a1-61264c2d9fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6ea55-410e-496c-bfe0-5abce417d3d6",
        "cursor": {
          "ref": "5f051561-1c9b-448a-95cf-6d6b6ee0d929",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b600131d-017c-408e-91f7-2555a28994a5"
        },
        "item": {
          "id": "a1b6ea55-410e-496c-bfe0-5abce417d3d6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1930070f-c3cb-45fa-b736-782a4c1a9cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0158cf-d7fa-4a20-92dd-453f5eab2055",
        "cursor": {
          "ref": "682d7685-b12f-4329-b399-ddb28d6efb45",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8c1b02dc-ef57-4eaf-84f8-b92dc1e95d74"
        },
        "item": {
          "id": "ba0158cf-d7fa-4a20-92dd-453f5eab2055",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0f499291-9901-4e5b-80b5-754a4cb4a199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0138448d-e926-48eb-b3a5-57305a785fdd",
        "cursor": {
          "ref": "de136872-9e3a-421b-9ca3-5ae976ec88c1",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c6b1defe-7ddf-474e-bf4e-bf054c54d44d"
        },
        "item": {
          "id": "0138448d-e926-48eb-b3a5-57305a785fdd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4c55be4a-de80-484e-a0c8-764a839f0692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56794d7-b7d4-4299-ae20-000ddd38cf49",
        "cursor": {
          "ref": "1d9038bb-4b3b-4cb5-9906-e5b0bc865bbb",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "083a6da9-73af-47ee-babe-01414a11dc86"
        },
        "item": {
          "id": "f56794d7-b7d4-4299-ae20-000ddd38cf49",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "267cba9d-d855-41dc-8a85-7760b9949c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b164e014-6a00-4534-a4bd-4dc0ad21f650",
        "cursor": {
          "ref": "32869166-4fe5-4fb5-bc87-6df0484b2316",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f1b6f812-3c38-43bc-bc68-558398fce42c"
        },
        "item": {
          "id": "b164e014-6a00-4534-a4bd-4dc0ad21f650",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f601e45e-30a6-40f9-bc9b-11ab0b10e6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6595e5e3-e30b-48da-b35a-e0f13944011a",
        "cursor": {
          "ref": "6adec955-efaa-46e6-8b11-7dee4623f84f",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6161fd67-db85-4bcd-be94-31e494ea93a9"
        },
        "item": {
          "id": "6595e5e3-e30b-48da-b35a-e0f13944011a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d5d5c088-dadc-431c-b3cd-6772a685e65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15542f31-e739-4eaf-a1bb-bf6e5ea3aaba",
        "cursor": {
          "ref": "c2c378fc-b481-4b01-9fe4-63005cbd61fd",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4d14f6b0-0d36-4859-a21f-c764ec0e5418"
        },
        "item": {
          "id": "15542f31-e739-4eaf-a1bb-bf6e5ea3aaba",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d9fb210b-d28f-4590-a1d4-25a933024855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b5ecb-1bdc-460b-9aac-c056aaa9889b",
        "cursor": {
          "ref": "2be6f7fe-0d6d-4a75-9af4-b30899f6da25",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "01a1132e-d21d-4aff-973f-0800b3501e72"
        },
        "item": {
          "id": "687b5ecb-1bdc-460b-9aac-c056aaa9889b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e18d6d0a-faad-4a2d-9fdc-127b6534a74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6a5c8e-5e3c-4300-b883-4acdebc1b0cb",
        "cursor": {
          "ref": "a17d5fb5-d41a-41e0-acc1-1eed6ea2ea26",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "98031d6b-9a05-42e1-8af0-0ca77cda121b"
        },
        "item": {
          "id": "7d6a5c8e-5e3c-4300-b883-4acdebc1b0cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4fcc2e5c-5952-4bc3-9d40-1101e6fdb931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e8ea95-e7fb-4cac-a56c-87ea3cae2322",
        "cursor": {
          "ref": "903c0586-3a3d-44da-a6df-d5de6995c632",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e060519a-9f9d-4d9f-8f94-d3c0bdcf0c01"
        },
        "item": {
          "id": "a7e8ea95-e7fb-4cac-a56c-87ea3cae2322",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "157fbf4e-804d-4e90-9043-8c8e91e582a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9b4ee9-469c-49fe-b34a-59ede8d680ea",
        "cursor": {
          "ref": "25246a39-18af-4ed7-80a2-a0b84ef8255e",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a059d252-e3cf-47b7-9ff6-a382fe732f14"
        },
        "item": {
          "id": "cb9b4ee9-469c-49fe-b34a-59ede8d680ea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f9347ae-4a06-4dec-9ee4-984abdac95e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc495379-0bea-4256-9d67-d380a0d282fc",
        "cursor": {
          "ref": "eac2e96b-9363-407f-b440-81860ab8ac27",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3cc49eae-2170-4238-8998-847f92d6541d"
        },
        "item": {
          "id": "bc495379-0bea-4256-9d67-d380a0d282fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "26b16968-b686-446c-b0da-29380d93f63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe8b836-e343-4bee-8ad2-4434b814dcce",
        "cursor": {
          "ref": "c8baacda-47c7-4110-b462-dea64a807a33",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "292937d5-f0c6-435b-98e7-5668c564a5f2"
        },
        "item": {
          "id": "1fe8b836-e343-4bee-8ad2-4434b814dcce",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "44e9637c-8634-4e55-a09f-3b7d382d7e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf7316a3-bd08-4453-aff5-439b6aac0e6d",
        "cursor": {
          "ref": "66e8618f-5517-4134-8fab-f83ac8f01762",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a098aab2-cfa5-44ad-85f5-43ebbf05fe2c"
        },
        "item": {
          "id": "bf7316a3-bd08-4453-aff5-439b6aac0e6d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "635b755d-661b-4746-bcdc-318649b6a223",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299fb3fe-b46c-43c6-b71b-4cbf7095aeba",
        "cursor": {
          "ref": "9b98d334-198f-437f-b321-f4d4660ca3fd",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c9362bc-3634-432c-87ec-415416f32799"
        },
        "item": {
          "id": "299fb3fe-b46c-43c6-b71b-4cbf7095aeba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fe922497-1a18-46f9-a0d0-fb7596bc9c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a594b-1d53-4738-b84d-d693c774256f",
        "cursor": {
          "ref": "e22a69d9-63be-41d7-a655-0c61d2a52259",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "863c206c-8f00-49db-a357-1fa37f8e412d"
        },
        "item": {
          "id": "8e1a594b-1d53-4738-b84d-d693c774256f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e70f7470-9eb2-46a8-a61b-9a5dc23bb12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e2b944-23e9-42b6-878f-d20aa0602ad4",
        "cursor": {
          "ref": "f0247bf2-a7aa-4c25-b83b-176bf5cb58e3",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "62928ca1-06fa-45d2-abdc-771d7389b593"
        },
        "item": {
          "id": "c3e2b944-23e9-42b6-878f-d20aa0602ad4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cb1d1897-4752-4983-aaaf-fed1d183095d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b52c9c-8f47-4256-b727-41a8052b4c0d",
        "cursor": {
          "ref": "8390b184-7e9a-4d1e-9e2c-c6e46715c4fe",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3668858e-767b-4630-a3c7-e9cdf45576e2"
        },
        "item": {
          "id": "88b52c9c-8f47-4256-b727-41a8052b4c0d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0c9e9907-829c-4d05-bba5-588a494c33d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2456da07-4131-49d0-8f39-b766d823a6e1",
        "cursor": {
          "ref": "412d2e29-40c2-4772-ab52-6584748be227",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dd55c910-9873-4405-9384-512198c88de9"
        },
        "item": {
          "id": "2456da07-4131-49d0-8f39-b766d823a6e1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "70d98205-590a-4cae-aab6-d8c25ffdf8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a3e4db-0584-42f3-9e8f-b329fe7f36e5",
        "cursor": {
          "ref": "c30de7f8-6cb1-4551-ba74-843685b716d8",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5c699411-6422-4f43-9e72-1ce47a49fff0"
        },
        "item": {
          "id": "43a3e4db-0584-42f3-9e8f-b329fe7f36e5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0386ab5d-872e-4d8c-a09c-0a878fef8edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9a352b-bdbc-451f-b42b-3c0a9365623f",
        "cursor": {
          "ref": "cc6e61bb-894e-42c3-b38d-80d21b5f24cf",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "32d431be-2819-41ac-8171-98a079051b4f"
        },
        "item": {
          "id": "df9a352b-bdbc-451f-b42b-3c0a9365623f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "96437ec6-90c9-49fc-9f42-519f50a7afbc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eb59ec-1891-4ce1-8718-41d9ff937198",
        "cursor": {
          "ref": "a1c7566c-a2bf-4318-ab80-1413e7948450",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "db5dc13b-9411-4013-9661-e1059c649bec"
        },
        "item": {
          "id": "77eb59ec-1891-4ce1-8718-41d9ff937198",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9a90d085-c1ac-451f-a4a2-01886dd4fa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfd8522-3dfc-4545-b9ad-b9b4e36a8d28",
        "cursor": {
          "ref": "ca9e4830-9756-4078-91cc-6d0a827a9cf3",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2a943416-9db8-4d6b-8574-1526f453b3f3"
        },
        "item": {
          "id": "acfd8522-3dfc-4545-b9ad-b9b4e36a8d28",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5c06788f-b40e-45cd-9795-9822b6901377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e589100-3190-4588-908e-f542dabd201a",
        "cursor": {
          "ref": "a9273822-c592-40ba-b7cd-f4fe00ab470b",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "939a9d3c-7581-4dd1-a6fe-118c539ee3f5"
        },
        "item": {
          "id": "4e589100-3190-4588-908e-f542dabd201a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b26a77ee-4332-48bb-91a6-c416cabcf660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8be309c-bf2e-4a92-95c1-e60858249cdf",
        "cursor": {
          "ref": "5ffdb5df-53a9-4894-9e3c-a7b90472cfac",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9f7d5f44-9874-4a35-bb56-4362b04d3c6c"
        },
        "item": {
          "id": "b8be309c-bf2e-4a92-95c1-e60858249cdf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b349ab16-e0ea-4f22-8a4e-27da5f439a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f1ad71-99b9-48fd-98d4-81b88ef3fdd0",
        "cursor": {
          "ref": "cc88415b-357b-4af4-9cf1-d41db1c63a2b",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a5d75ce-2e94-4bba-8588-9dc8f42868be"
        },
        "item": {
          "id": "a1f1ad71-99b9-48fd-98d4-81b88ef3fdd0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "30f07aff-8e5a-4925-9367-e04165de943c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89410b2-6313-4403-adf4-006804eec445",
        "cursor": {
          "ref": "f4e6e157-445c-4627-b61d-8276f6d4c8a9",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4a4591a3-25b2-45c1-9b73-c7eb88df73eb"
        },
        "item": {
          "id": "c89410b2-6313-4403-adf4-006804eec445",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7e05871b-9cfb-479c-a63b-cd38c03820a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118cbc35-43fc-42e7-a96c-0330ce708c4b",
        "cursor": {
          "ref": "4966815c-3b76-4919-9afc-4fa17fc0067d",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc3e3b1d-ca50-4d63-9a40-95e38b8225e4"
        },
        "item": {
          "id": "118cbc35-43fc-42e7-a96c-0330ce708c4b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aff27870-15de-4de3-a2db-6268f18584f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eef1ef-0d54-40b7-a3ea-ae70a723240b",
        "cursor": {
          "ref": "b4c76091-a370-4a58-8691-61daf8138ba7",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2f5772dc-b2cc-4965-8a27-8b6e50cca612"
        },
        "item": {
          "id": "71eef1ef-0d54-40b7-a3ea-ae70a723240b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f7e3fa98-3f73-4e33-806b-f6c7b53acef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405bb43b-b19b-48dd-b32d-17879087ccc9",
        "cursor": {
          "ref": "87a88a36-a0df-422c-a374-1aa2ef608ee7",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91da4043-1d71-4aab-9ebe-8bf673da29ad"
        },
        "item": {
          "id": "405bb43b-b19b-48dd-b32d-17879087ccc9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5cd75b27-f52e-4c0b-ad44-2ac6ae38f26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358dfb62-488f-41ec-860a-d0f8b28310d6",
        "cursor": {
          "ref": "1fb52559-508f-41a9-8a4d-3aa67c3a6179",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "11a2a94f-335b-4c60-8f1e-265fa24d1fdc"
        },
        "item": {
          "id": "358dfb62-488f-41ec-860a-d0f8b28310d6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a468cd03-acfa-41c8-8569-46a46b185dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4e2de-ff6b-4135-97c8-74803eeead99",
        "cursor": {
          "ref": "6c51659e-cf44-4418-b2c7-834b61d37f6f",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fd30db51-8161-48d5-842a-08ab0f74b661"
        },
        "item": {
          "id": "11c4e2de-ff6b-4135-97c8-74803eeead99",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "438a930a-b6f3-49ce-8f9c-b4cd19605267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7247b690-07f5-42ce-abd8-e6439313e31d",
        "cursor": {
          "ref": "4d27f596-6dd4-42b2-b900-e9def8b1126f",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "917e2c3c-330d-4d0f-95b5-bb729501a808"
        },
        "item": {
          "id": "7247b690-07f5-42ce-abd8-e6439313e31d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eac53730-dc99-4263-9deb-870bbce4e588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d06044-ea73-4f71-aef1-130c973ceb51",
        "cursor": {
          "ref": "a2f2ff2a-d66d-4bcd-bd14-b2759a4b8fb6",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "12706c64-e586-491b-bcc6-46f0d222767e"
        },
        "item": {
          "id": "00d06044-ea73-4f71-aef1-130c973ceb51",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fcb445f6-6340-4581-a15a-4f9b0821a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed88dd4-1a86-4b05-bba4-de7554be8880",
        "cursor": {
          "ref": "774bea9a-26e7-4449-a6b3-73752ee63b09",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "26ab1529-0a1e-425a-aa2f-e4b45f99eb98"
        },
        "item": {
          "id": "8ed88dd4-1a86-4b05-bba4-de7554be8880",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "390d645b-c460-4ed2-b1d0-3c03978f4119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d3e78f-38a3-44dc-966e-dd489cfbd142",
        "cursor": {
          "ref": "7d708dab-d242-44ca-b68c-7bb4d0ce774f",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5d9811bf-ff4d-4f71-b194-2697d0786b18"
        },
        "item": {
          "id": "b6d3e78f-38a3-44dc-966e-dd489cfbd142",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0007f337-edb9-4a40-8703-b52257b2e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64c9764-065c-4cb5-afa8-a7505999ec3d",
        "cursor": {
          "ref": "fae478b2-50a0-44fc-8a28-cd51a2abee20",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "daae3bfd-9e32-4c8b-a95a-040e3547be80"
        },
        "item": {
          "id": "f64c9764-065c-4cb5-afa8-a7505999ec3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3305b3fe-6718-4d8a-90ad-44f283b8e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18741940-5091-4ebf-966a-74a07c876a3c",
        "cursor": {
          "ref": "aa7c2269-61c4-4ec1-81ec-a15b98317a5e",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16ab29d7-ee91-4f8a-9e8c-9d9749bd23c5"
        },
        "item": {
          "id": "18741940-5091-4ebf-966a-74a07c876a3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "55ceafa9-9ea0-4903-a6f5-fb8743e29267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241733c3-c7a1-4639-b44d-6ff7887aa4c3",
        "cursor": {
          "ref": "9ed24da4-a6c1-49d2-a779-5176f142b6ff",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f4826f2-0bf6-419a-9499-bbb9dd5ce6fe"
        },
        "item": {
          "id": "241733c3-c7a1-4639-b44d-6ff7887aa4c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "392f3f8c-1548-458c-8794-3b145f67637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb9e573-9d33-4476-9737-4b62f2afdc63",
        "cursor": {
          "ref": "9a747c45-e7b8-411b-9a60-c0f690bda989",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dd4720d9-f70f-4c1a-af96-3cf31dc67904"
        },
        "item": {
          "id": "4bb9e573-9d33-4476-9737-4b62f2afdc63",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46b00f35-bd60-4dd4-b9f1-8f469a3dbef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01054f1-7a5b-425c-83e0-e0134d930fb2",
        "cursor": {
          "ref": "3b57c795-85b8-442a-b80b-86a78d542895",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1c2ca78f-8775-40af-ace8-75356011c8d1"
        },
        "item": {
          "id": "a01054f1-7a5b-425c-83e0-e0134d930fb2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3213169c-2592-47af-9285-e5105437365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f3baf1-7464-44e5-a80e-b321665e946e",
        "cursor": {
          "ref": "18dae867-9a3a-49aa-b884-611164be0247",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2c82e5e2-8857-4add-b2a7-9d5474668cc9"
        },
        "item": {
          "id": "92f3baf1-7464-44e5-a80e-b321665e946e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1cd5838-c74d-4ebb-a07a-c6e8e5fe6900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb81ecf3-456e-42b6-b559-bbc132b48981",
        "cursor": {
          "ref": "e1b6fca2-ad52-4ce8-9f14-29977c8c5c80",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2aa789b1-a4ae-439c-a15f-835214dd1b89"
        },
        "item": {
          "id": "bb81ecf3-456e-42b6-b559-bbc132b48981",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d16e21f-d32e-4dbf-8399-02dabcf60bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af59d369-1e1f-402d-8470-f9080af86930",
        "cursor": {
          "ref": "1a748713-b02d-4f02-817c-cb0133ae1dcd",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "48068e95-bcdc-498e-a03b-66fe9004247a"
        },
        "item": {
          "id": "af59d369-1e1f-402d-8470-f9080af86930",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "58371761-907d-41bf-8fe5-a2268771627f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9888f61d-0fe2-4f62-bf83-68a5c10f0ab1",
        "cursor": {
          "ref": "a8f9c072-97e0-4837-a8c8-a8fa67c22de7",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "59e1758c-83ee-49d5-8e46-717dd5ad46a2"
        },
        "item": {
          "id": "9888f61d-0fe2-4f62-bf83-68a5c10f0ab1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2d96ed24-cdaa-4bb5-8ef2-cd2bdd7d10c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0028240-a972-4991-9632-1cb0eec08fc2",
        "cursor": {
          "ref": "6d874282-b675-4d35-bd27-64678f8639f3",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae142fc3-7b41-4ceb-b138-387fa49515de"
        },
        "item": {
          "id": "e0028240-a972-4991-9632-1cb0eec08fc2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c94cd126-4d24-4b18-8d60-d866a537e0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d0033-5859-47a0-8979-717720c24916",
        "cursor": {
          "ref": "abdc5cea-8807-4303-a14d-a87f78555f18",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "08a780d3-b487-468d-9573-6037eebb447b"
        },
        "item": {
          "id": "611d0033-5859-47a0-8979-717720c24916",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "790313b8-f4ec-4ef9-9d9c-8ef3dc26df4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4e2b56-774c-4ec9-99fb-051bd2f6e895",
        "cursor": {
          "ref": "cf6035fa-c53f-417f-8091-06d746c641ea",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5563f8f4-1a8e-4440-947b-7b7eb3926210"
        },
        "item": {
          "id": "5c4e2b56-774c-4ec9-99fb-051bd2f6e895",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "120bc219-51c8-4523-8e85-9609ed3449ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99df89a0-233a-4529-8059-999eec132c84",
        "cursor": {
          "ref": "521dada7-43a4-4a96-a66d-33d54d46c30b",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "366b24bb-b8a4-401b-988d-84c5c3312972"
        },
        "item": {
          "id": "99df89a0-233a-4529-8059-999eec132c84",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb6ce88b-09f8-4720-a7f7-f44fa16adb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c1dcdf-f9e0-44fb-90ee-20e41d807866",
        "cursor": {
          "ref": "18ba1acf-05a9-42a5-aa3a-60106d08ce05",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b1585625-5b54-4e4e-8563-9e5ae8534569"
        },
        "item": {
          "id": "a5c1dcdf-f9e0-44fb-90ee-20e41d807866",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ef16bb2f-148f-4e46-8418-b2d97622671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a403af4-0669-4e2c-a701-043f0a8a531a",
        "cursor": {
          "ref": "ccca6e2b-4595-4e48-a143-88d29be0a4e4",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9e4cb875-6bad-4b74-84fa-cae6414e0305"
        },
        "item": {
          "id": "0a403af4-0669-4e2c-a701-043f0a8a531a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "20e526eb-c4db-4752-a874-5b104a088629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a90f55-bc6f-4796-9365-88e03e087915",
        "cursor": {
          "ref": "ec0a6ee2-d3e1-491d-8d38-329407952681",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "22f85c9b-c83d-465f-b473-fd1ec4c6617e"
        },
        "item": {
          "id": "a6a90f55-bc6f-4796-9365-88e03e087915",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "badcadc8-9fb9-4485-ae80-965cfdef307a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173e6e66-252a-4665-842d-5341dec94181",
        "cursor": {
          "ref": "97fc348a-5ff6-4300-81fd-1de5091e3d5a",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b2f83cef-b194-4c0e-ad54-f579f1aba3a0"
        },
        "item": {
          "id": "173e6e66-252a-4665-842d-5341dec94181",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd216fc5-dd16-4840-b046-8efbea3d5fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c1fc90-c01a-4d9d-afc4-41c2913db786",
        "cursor": {
          "ref": "e3c778d2-5e08-4107-b95a-afb3bd709013",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1b4bb553-7839-472d-8434-d5e185a1eb08"
        },
        "item": {
          "id": "f7c1fc90-c01a-4d9d-afc4-41c2913db786",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7699f513-ce3b-47d6-a7ad-c9d227ecfbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aef617-0133-4791-baaf-372664666d3a",
        "cursor": {
          "ref": "7d879bf0-1092-47e6-ab0e-479a2c92629a",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9fe7d958-0ea0-417b-835e-c83e87888781"
        },
        "item": {
          "id": "84aef617-0133-4791-baaf-372664666d3a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "86058b8a-d5ae-454b-bb99-f28f9bb9538f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d03ed6-f0bf-4fa4-9c44-b31b27490c55",
        "cursor": {
          "ref": "4d473156-d1e6-4742-9eff-2899c8d0bd50",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "95f6b19e-f91e-4855-bbb7-093ca15a6bac"
        },
        "item": {
          "id": "d2d03ed6-f0bf-4fa4-9c44-b31b27490c55",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b9b91594-5188-4757-934f-f240683df70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b5b9bd-5266-4b26-b0cb-667e26db44fb",
        "cursor": {
          "ref": "e87ede19-bda3-477f-a12d-7e754dc97254",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7204003d-d23c-412a-bb01-dd0160cd49cc"
        },
        "item": {
          "id": "30b5b9bd-5266-4b26-b0cb-667e26db44fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "abf1b758-e92f-4a18-9d77-d75fa165331b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11107e4-72f3-4558-bed2-1aba85e3bfcf",
        "cursor": {
          "ref": "6ec254f1-6963-44f7-b356-2b1b3f135a5f",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a25ac1c9-abd3-4c24-a3aa-b8ba418ecd4a"
        },
        "item": {
          "id": "d11107e4-72f3-4558-bed2-1aba85e3bfcf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "84a4862b-3054-43d1-b68e-951b1eb1eb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fd28a9-d673-48ff-9e5f-112f889baf2f",
        "cursor": {
          "ref": "eadc6e5f-9385-4786-99ba-ba21963b33ef",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "36feddb6-f9c3-4de1-8ef3-4a1594a7180d"
        },
        "item": {
          "id": "39fd28a9-d673-48ff-9e5f-112f889baf2f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3cd2540-8587-4624-a1e9-ec9c961d8642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01732d15-aae9-484e-91be-14098c0b8b53",
        "cursor": {
          "ref": "dd24b74a-1b5a-4523-8166-061f4b1adc46",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3ba5abe1-cabb-4638-94cc-138655f71eb3"
        },
        "item": {
          "id": "01732d15-aae9-484e-91be-14098c0b8b53",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f7d29c87-c856-4ea0-a9d2-3e82befa04c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1e9abe-fb57-44ce-af80-37e3251428a7",
        "cursor": {
          "ref": "7a4ce760-7736-465b-a48a-ddad75eda8f7",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5874e8da-768a-4ecd-9af4-1de7b80400b2"
        },
        "item": {
          "id": "1b1e9abe-fb57-44ce-af80-37e3251428a7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f80556a7-076a-4dac-9e50-228786d82a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2efe873-ef43-448f-bab4-4fa85f0d37bc",
        "cursor": {
          "ref": "171374a7-13e7-4815-b2ae-7a51e9962a32",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21e1f246-4fdd-422b-a72c-c0747870851b"
        },
        "item": {
          "id": "a2efe873-ef43-448f-bab4-4fa85f0d37bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8cc8a886-e0ae-4aae-97e2-f7b13741a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eb6019-ec37-4b67-b27c-cd7bcc37fb30",
        "cursor": {
          "ref": "a7035d1b-df93-487b-aa55-e6fce754ef85",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe2c0a43-f835-47eb-8ab0-02779ed9ff72"
        },
        "item": {
          "id": "29eb6019-ec37-4b67-b27c-cd7bcc37fb30",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35c349eb-210b-40dc-90af-e10f197dc2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b339cb1-25ca-491d-a254-a5522c220e90",
        "cursor": {
          "ref": "05de1194-9509-4369-a568-35c320ec2b75",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dfdc003b-7ed8-4b2a-95d5-2397780942cd"
        },
        "item": {
          "id": "7b339cb1-25ca-491d-a254-a5522c220e90",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3af2b093-d50a-4308-8b86-57cc0bb90523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8c79e9-d988-440a-bbda-44fdb749dc0f",
        "cursor": {
          "ref": "a1dae029-c819-4334-a669-c0655d1e1030",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "62c7a1ac-914a-4ebe-863a-70b88ea25aa8"
        },
        "item": {
          "id": "4a8c79e9-d988-440a-bbda-44fdb749dc0f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "83ee6359-853d-414c-a0fe-648645b1d906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd85926b-d694-4a09-98b0-e548e37257d6",
        "cursor": {
          "ref": "013ec1de-ea56-4ed0-a550-2b54450744e5",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "231d7e3a-81bc-4cf3-b09e-ab259e1ae62d"
        },
        "item": {
          "id": "cd85926b-d694-4a09-98b0-e548e37257d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a1568f3d-8a5b-4e0a-ae56-1fb0b3cfa3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28808191-5983-4705-8ec1-7d9eb78c5ac1",
        "cursor": {
          "ref": "027eeb75-c59a-4489-91f7-f95347b4a56f",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8977a98b-2c8c-4e5b-99af-83834a5fb1ea"
        },
        "item": {
          "id": "28808191-5983-4705-8ec1-7d9eb78c5ac1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b95e24b9-cebf-44a6-9975-afd55f7d5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63b78a4-9156-4f0f-9aee-0cefd2e81be5",
        "cursor": {
          "ref": "990ed19c-45ca-430f-a33e-6b59078d1910",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5e146ef1-74e8-4a7a-8e58-440c70c1884b"
        },
        "item": {
          "id": "e63b78a4-9156-4f0f-9aee-0cefd2e81be5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "653b8015-701b-4838-ac65-7dded03b3fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3507e57a-312b-4f22-8f5f-7ecef2f48972",
        "cursor": {
          "ref": "c15e03a2-2c30-4487-8118-48ca9c081075",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b3e4e199-f79d-4283-86f9-0e074dff2f1e"
        },
        "item": {
          "id": "3507e57a-312b-4f22-8f5f-7ecef2f48972",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c2429a46-a923-480c-9b26-5ca146b00dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba798472-4eeb-4264-a344-d1f0314e79c6",
        "cursor": {
          "ref": "9a54b992-00a4-40e7-83c0-4559b319fc4e",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2be839b7-eb14-402d-8443-d9cd8337676c"
        },
        "item": {
          "id": "ba798472-4eeb-4264-a344-d1f0314e79c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6fd9e351-e94d-4263-8a99-ce0767f8569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451926b1-982f-446e-80bc-378fa840b0e8",
        "cursor": {
          "ref": "3373300f-2395-49fc-9142-ceda875874da",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4bfc96ff-0ced-4741-8a1f-6bb03ba2154d"
        },
        "item": {
          "id": "451926b1-982f-446e-80bc-378fa840b0e8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "121703d3-b8a6-420b-999f-fe88e8041bce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2586e5f8-b610-49a9-8b3b-a3db50c8c3ce",
        "cursor": {
          "ref": "6d603ba4-16e2-4e05-937c-ea9101aa49d6",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6a032d8b-905b-4503-bd7c-5724885d2182"
        },
        "item": {
          "id": "2586e5f8-b610-49a9-8b3b-a3db50c8c3ce",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f237d86b-1508-4d7b-914b-2f868de290d0",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef906fc8-9dcb-4293-a02c-f4893482ded8",
        "cursor": {
          "ref": "9c646533-9f76-45b0-8756-b27c17ebd9cb",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bd801d4d-7404-463a-8637-16f748be135e"
        },
        "item": {
          "id": "ef906fc8-9dcb-4293-a02c-f4893482ded8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eb08342b-8e21-4daf-a671-bb6bc7ff5450",
          "status": "Created",
          "code": 201,
          "responseTime": 230,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3845917b-691a-40d7-aecc-b6607e47afb7",
        "cursor": {
          "ref": "2286d8d8-6eb3-4883-9793-5052c5cd39ef",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "25cef81c-ad19-4837-822b-9c037afb6376"
        },
        "item": {
          "id": "3845917b-691a-40d7-aecc-b6607e47afb7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f66e2c5-30df-4667-9bf3-886a6ac24e94",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0f864-6129-428f-b39c-6027c824a694",
        "cursor": {
          "ref": "883b24e1-5384-4025-9a2f-09540b634dc1",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "aac6d47c-e5b4-43dc-9023-46e940299d8c"
        },
        "item": {
          "id": "afe0f864-6129-428f-b39c-6027c824a694",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "46165b4a-0fb5-445c-b8c5-49eab91d1d3d",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 925
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0338b921-3d72-4045-9938-74cdf87d644e",
        "cursor": {
          "ref": "125998d2-8eb5-4a06-a1c4-acf0df112ed2",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8be8cfda-f34d-4932-8b0f-e2685175e936"
        },
        "item": {
          "id": "0338b921-3d72-4045-9938-74cdf87d644e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "01aee5dd-2228-4b2c-8cc0-e782e5ccd307",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4b49c9-c595-4669-81db-9ae9ab15b2a0",
        "cursor": {
          "ref": "d51ce648-414c-40b1-8b74-ca9d592039a8",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "454f6876-1e80-40eb-8aa3-2f88ef958007"
        },
        "item": {
          "id": "bb4b49c9-c595-4669-81db-9ae9ab15b2a0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ab4dff1e-92c8-4c49-9649-15305adfb073",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b27c9a-c046-4dfd-a660-d23240cc1500",
        "cursor": {
          "ref": "eb27fdff-14ef-4910-8bd1-691e29dd5910",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e358476-7bda-4657-8958-69573e60d164"
        },
        "item": {
          "id": "91b27c9a-c046-4dfd-a660-d23240cc1500",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "34a5a913-6f81-42c5-a026-03a57f52a606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe579bda-5451-4448-89cb-aa8a6dbd9358",
        "cursor": {
          "ref": "5bf941d0-c1cd-482b-837b-57f75c171cc2",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "01875ea7-20c6-4b08-8f04-b2291cea6a2b"
        },
        "item": {
          "id": "fe579bda-5451-4448-89cb-aa8a6dbd9358",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7265e56-ca54-4b21-9160-fefc1c83f3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defc2414-bdcf-4f5e-82ba-9d6bc38acdb7",
        "cursor": {
          "ref": "48944ba4-e731-466e-940a-a0688870dde0",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8e6af0c5-de59-41c5-b196-de8a6b583c12"
        },
        "item": {
          "id": "defc2414-bdcf-4f5e-82ba-9d6bc38acdb7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "326c2093-d5bc-4b03-938d-2889c67b6f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ff20d-d28b-40ba-903b-5d6e6cd53660",
        "cursor": {
          "ref": "1c72f95a-8ef1-47f1-a929-c5afaa7bd3e3",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dce1dcd5-07b8-4a64-a25e-3c0def7d2d2c"
        },
        "item": {
          "id": "3d5ff20d-d28b-40ba-903b-5d6e6cd53660",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2561a26e-acab-498e-a3f4-9dc9a00c2e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8fe3fc-1587-4a18-b323-0031115ee359",
        "cursor": {
          "ref": "2a04ead0-9c20-4827-aa20-0fe5af2bd7c0",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8b56fc3f-6f1a-4b62-acfa-56e0197bd440"
        },
        "item": {
          "id": "ce8fe3fc-1587-4a18-b323-0031115ee359",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56f9063e-5f1a-49e8-a035-ab61519aca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc84fcef-c416-4620-8c31-108544b8b607",
        "cursor": {
          "ref": "07b088d6-bfd8-4db4-85b8-5adc2a6c34c7",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6986acba-54b1-4681-b920-7f2a1641419d"
        },
        "item": {
          "id": "dc84fcef-c416-4620-8c31-108544b8b607",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c246b27f-7073-4f67-8767-8bd1b3615c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b18524e-c58e-4b8e-8c06-1cdbbb3a7686",
        "cursor": {
          "ref": "4f11acb5-144f-4f89-b90f-89f37f9c3b98",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1cde1bdb-a4b9-4aa7-a641-211683b05097"
        },
        "item": {
          "id": "8b18524e-c58e-4b8e-8c06-1cdbbb3a7686",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0bfc4739-3a78-4343-9059-4143518a1a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d27f6c1-36b9-41b6-b641-4de88bfb0ed7",
        "cursor": {
          "ref": "71343a68-6bfd-45ea-be3a-5094bf472afa",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6309184b-a901-47e7-9a0c-5e64bb99eee5"
        },
        "item": {
          "id": "1d27f6c1-36b9-41b6-b641-4de88bfb0ed7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0ee6d27d-5ee0-4f74-aea5-031e660100ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30609c65-71c1-4140-9ff7-79d718f06d4c",
        "cursor": {
          "ref": "95fec4f3-dc47-4ce8-99b9-4e78432884f1",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "52f3aac3-99d2-4a7f-a2a2-990846f1b054"
        },
        "item": {
          "id": "30609c65-71c1-4140-9ff7-79d718f06d4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "540046ba-55c8-4d4b-a477-4a05cc10c27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1519723d-e821-47df-a28c-43c17f9f41d4",
        "cursor": {
          "ref": "dac8728a-b8f1-4235-bbbe-83380b014353",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8f52090f-4c07-4e1b-978d-ee0b240577e5"
        },
        "item": {
          "id": "1519723d-e821-47df-a28c-43c17f9f41d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5856cbdb-1ad4-4588-bfa7-e499737049d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c19cee-6505-4700-80a4-df194ce54f0d",
        "cursor": {
          "ref": "ab370a3e-36db-4ed3-95f4-2aee2e43aff3",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8350486c-c1f8-43ff-ab73-ef29df2237fd"
        },
        "item": {
          "id": "f7c19cee-6505-4700-80a4-df194ce54f0d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ff41c04-0932-4895-a9b5-0581c2affb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96432843-cebd-4575-8adc-76878095a2cc",
        "cursor": {
          "ref": "24de8299-487b-448a-9e55-6d761fb7ade1",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f1d3bf08-5587-46ac-aa60-b062fb94887d"
        },
        "item": {
          "id": "96432843-cebd-4575-8adc-76878095a2cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3f048fc-ab98-4aba-b015-905c9206814d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9b4b1d-552e-4135-9e50-38deba145738",
        "cursor": {
          "ref": "aa29ae39-145d-451d-849e-49c9512bac97",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e61b18d1-649a-41b2-8814-bae9a61fa602"
        },
        "item": {
          "id": "1f9b4b1d-552e-4135-9e50-38deba145738",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a02fddd9-a94b-4e63-a3cc-798056172278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25055105-8259-4cf2-8d32-29b198c739cd",
        "cursor": {
          "ref": "4ce73c18-bcb7-4cb8-b9cd-06433ccdffdf",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "63271d7b-c57b-43c6-ab26-071c1541f316"
        },
        "item": {
          "id": "25055105-8259-4cf2-8d32-29b198c739cd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "eb4cff4e-57cf-4e7a-8171-12c822d9db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc16b277-3d59-4ccd-b445-f39ed7998fb0",
        "cursor": {
          "ref": "184970a9-608e-4ad4-81f6-1fe80f8114fb",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f433aeb-7875-40f0-b34b-4e86fdc0d8e1"
        },
        "item": {
          "id": "bc16b277-3d59-4ccd-b445-f39ed7998fb0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e85c87b-bd36-422b-ada5-a6884080d87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53054e6b-5870-4af0-825f-a13819c2c685",
        "cursor": {
          "ref": "8dde987c-aca0-4bed-8606-54ab5afa0c7c",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0d190a53-1b1e-4b57-aa6a-32625d7d5136"
        },
        "item": {
          "id": "53054e6b-5870-4af0-825f-a13819c2c685",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5163508-6d1b-43d8-81d5-abf930de8e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8bd2ce-28c0-4933-ad89-c0ae5a6c29fd",
        "cursor": {
          "ref": "47381023-6036-4666-8e1a-b75d0045fb06",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6ae5f84b-94b8-429c-a0b2-84d614e14b48"
        },
        "item": {
          "id": "9f8bd2ce-28c0-4933-ad89-c0ae5a6c29fd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "12873be9-9b27-436a-a9a2-b15e1241c7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0690955a-005d-4414-9b54-b0f5c727d7e4",
        "cursor": {
          "ref": "3952c475-45a4-41b0-b363-9671b6aecc05",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "97de6cf8-3c62-4e46-84e8-13c9a1e02f05"
        },
        "item": {
          "id": "0690955a-005d-4414-9b54-b0f5c727d7e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1f0176aa-d124-416a-8979-1f2b32d941bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71052d1-b838-44dd-8f7d-e726be39035f",
        "cursor": {
          "ref": "4c29f16d-b0bb-4003-82ae-24ec091bced2",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cae55fad-7c02-4718-9961-6896cc0a77aa"
        },
        "item": {
          "id": "f71052d1-b838-44dd-8f7d-e726be39035f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dd1c5e4b-4ed6-4882-be5d-cc6d00710d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2450f5-67e2-4b70-af77-660798211708",
        "cursor": {
          "ref": "4b26b737-8154-4ffd-8f2d-bed362d28fef",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bee450fa-d06b-4ac5-abe7-b7f0408aaf4d"
        },
        "item": {
          "id": "2e2450f5-67e2-4b70-af77-660798211708",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "647c445e-ede6-4427-9854-b4284b1919cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b28788-559b-4da2-91da-19dbb8976295",
        "cursor": {
          "ref": "116b244b-0383-4eb1-a8f1-c40f4057dc3b",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c9c374fb-31af-4df4-b70e-7716a45636ce"
        },
        "item": {
          "id": "88b28788-559b-4da2-91da-19dbb8976295",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "874ec7de-7477-4390-ae35-b86d835a7980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8f5297-6fc0-4a89-a8c6-469ee74326d1",
        "cursor": {
          "ref": "a3a061fe-324f-48d9-83cd-e6532cf32234",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "56dad216-6a72-4092-bc66-3b690aa0a3c8"
        },
        "item": {
          "id": "6b8f5297-6fc0-4a89-a8c6-469ee74326d1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63d163b2-4b1b-40fa-b63c-7c33d0aebb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1f58e9-55a3-40f2-949d-430f0c3e2a62",
        "cursor": {
          "ref": "20e50b5d-386c-4bb7-b75c-9019b0c9298f",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7a97ffb0-748c-4c11-a52c-1a41d2d099b8"
        },
        "item": {
          "id": "0c1f58e9-55a3-40f2-949d-430f0c3e2a62",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7094e697-231e-41d5-b62b-34d9bbd5c3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5358c4-c707-437c-a504-6e9c6658059b",
        "cursor": {
          "ref": "d6379705-ec6e-4a3a-bf6f-f35ac3e78a3d",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0277666b-eaab-4919-967b-96d702d2fd96"
        },
        "item": {
          "id": "3f5358c4-c707-437c-a504-6e9c6658059b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0c4c2e11-deed-475a-89d5-b818d30cd68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa310a-ae9d-4a56-b912-f4718701c73e",
        "cursor": {
          "ref": "5008cf9d-7620-421e-830a-e1a6dc14ea9a",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7431f9db-d49a-4839-9c76-aab7b3e006d5"
        },
        "item": {
          "id": "82fa310a-ae9d-4a56-b912-f4718701c73e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e97bf912-35a7-4c4c-8ebf-93dda4178d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496c91b-d3fd-4647-8a99-8e099cfc03f6",
        "cursor": {
          "ref": "42c7be8a-effd-42ed-96ca-b030f0a14626",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c2c463e9-db20-4322-a2f1-f6cbb4af35b1"
        },
        "item": {
          "id": "6496c91b-d3fd-4647-8a99-8e099cfc03f6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c4844da-baea-4bf3-a42c-a627c36b711d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5721dfb0-daf4-47fd-8c71-861b4f43cba8",
        "cursor": {
          "ref": "82d99855-ebe0-40a1-9aae-0f0515109866",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5acab970-4ddb-4caf-b365-8354ea9ff5c8"
        },
        "item": {
          "id": "5721dfb0-daf4-47fd-8c71-861b4f43cba8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "942b31ec-38a3-495e-bae4-7c17bc5eaefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adbb7f8-ada4-4385-8de8-9b148cf2d82e",
        "cursor": {
          "ref": "a4654f10-b950-47eb-a454-1747a65ce063",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b2d28ae6-73b0-44c3-a9c8-92be6d5516c8"
        },
        "item": {
          "id": "8adbb7f8-ada4-4385-8de8-9b148cf2d82e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bff2517d-6ec5-4488-8a53-dab407820662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18452049-a3ea-42f0-be5b-f09c0ec81267",
        "cursor": {
          "ref": "1dc5fd53-1208-4900-b2e3-e584f7cefe15",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c00ae1c0-19a3-4a78-a146-6f14f27747b3"
        },
        "item": {
          "id": "18452049-a3ea-42f0-be5b-f09c0ec81267",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1e6f8fcc-c0a1-41c3-b197-d2b2814065bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441569d4-1772-464b-a478-2a5de54f25d9",
        "cursor": {
          "ref": "01eb84fe-c5a3-462d-b822-7f241bcbfe7f",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fce074de-f6ea-4d7a-9240-2786efc86562"
        },
        "item": {
          "id": "441569d4-1772-464b-a478-2a5de54f25d9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82ad7a0c-7d7c-490f-b023-ba49d4a7cc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5516eb-6f1b-4ba8-ad55-85785b7b18dc",
        "cursor": {
          "ref": "16b3c61b-259a-4d91-8ad9-e8e5cac3d4fe",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "67069947-69ec-4b2d-a29b-b9c62bc212f4"
        },
        "item": {
          "id": "1e5516eb-6f1b-4ba8-ad55-85785b7b18dc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7d55fdd6-8a7b-4525-80aa-ef456ec5c224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fb3912-9c27-4b8c-80d3-0f1bb338cddb",
        "cursor": {
          "ref": "bd9cf438-ee17-4ca2-a16c-e659d06b7caf",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fd550b0a-985e-4bbe-96bf-c63442ad54b2"
        },
        "item": {
          "id": "62fb3912-9c27-4b8c-80d3-0f1bb338cddb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bcac7f10-30f4-43cd-8412-f1f0f4555e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d33a30d-511d-4610-a29e-ef062436bd06",
        "cursor": {
          "ref": "1a246bec-d107-4d9e-953d-cc0f0ad1715a",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1a11d7e-ead2-427d-8c3e-e3524a72a3c3"
        },
        "item": {
          "id": "3d33a30d-511d-4610-a29e-ef062436bd06",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91fa39b0-37e1-4692-a984-8c5c42d9df7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0947953b-c2b1-41ca-9f56-64822ba8b05f",
        "cursor": {
          "ref": "452dec04-1c07-4fd9-a2e4-8622d49f82ca",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "85843cf3-a4de-49b5-8c7d-402403cc311b"
        },
        "item": {
          "id": "0947953b-c2b1-41ca-9f56-64822ba8b05f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9fe9913e-296c-4aad-b56f-a84f63a47444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f2d58f-c2a4-4680-8ff8-f0606e61d21d",
        "cursor": {
          "ref": "bfda2a68-7e24-4897-88c0-0b3e494b6965",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bb2d6e13-af57-4f6a-ae2c-9195f4490d89"
        },
        "item": {
          "id": "64f2d58f-c2a4-4680-8ff8-f0606e61d21d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "41a6819a-be2e-42e1-b994-efd8b525c2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e23efe-85b8-4951-953e-c97ee9a746e8",
        "cursor": {
          "ref": "e01e7aaf-e1d5-4b72-9148-91c2afde6d79",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fe175ba9-ce0d-4d26-8ba9-f4f58a83011c"
        },
        "item": {
          "id": "a5e23efe-85b8-4951-953e-c97ee9a746e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc9a481b-b075-4d9a-aac8-9af4319ee91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3d026a-08c8-404c-8782-0e2e8cc7fa43",
        "cursor": {
          "ref": "fee168c6-cd3a-4cb1-b9fb-2f3b0a8ec48d",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7cbfd5d-2f19-401b-a488-3d2e342bf5a4"
        },
        "item": {
          "id": "0c3d026a-08c8-404c-8782-0e2e8cc7fa43",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "02e9cb2b-8b27-42d6-9ee7-2e967fab44cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3886573-dc27-4197-b338-2c737f005232",
        "cursor": {
          "ref": "47a1f4ff-d223-47af-bc93-035683c878ac",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "214510d5-0ef1-49f0-89e7-b124610d4745"
        },
        "item": {
          "id": "f3886573-dc27-4197-b338-2c737f005232",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "60087ba4-8015-4d79-a2d1-f75ebb2d265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60205263-f8c4-4a6a-b843-cb08e1699e67",
        "cursor": {
          "ref": "057c3d7c-7684-4d41-b7d3-fe5202278e52",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "00626884-9f57-4dd7-abe2-0dfeabe0a772"
        },
        "item": {
          "id": "60205263-f8c4-4a6a-b843-cb08e1699e67",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4041c94d-132f-4d30-a547-26ff5582c803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee02f48-8497-4875-89e1-becbb9d62383",
        "cursor": {
          "ref": "affb45fc-e4f5-453d-b676-7ecd230a42c2",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90e3e5c9-7f5c-4687-92f8-507aa320390f"
        },
        "item": {
          "id": "6ee02f48-8497-4875-89e1-becbb9d62383",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e6a780f3-42d8-41d4-aca2-bb8ad5d770e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f3c903-e8af-4bbb-996a-ef73a834887d",
        "cursor": {
          "ref": "251c8072-beb6-492d-b796-9fc7fa0f92d6",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "beaa52f2-3ed7-421a-aac6-fb52dd811ffc"
        },
        "item": {
          "id": "f8f3c903-e8af-4bbb-996a-ef73a834887d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "673844d3-a994-4ff8-aa01-809abb2eaa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f9fd4-7f75-4c20-892e-2ae5a344930b",
        "cursor": {
          "ref": "a7e77e86-874d-49c6-89ce-99e0b24e1e15",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "235b18c7-dcc7-4ac9-9b55-f5c8dde86224"
        },
        "item": {
          "id": "562f9fd4-7f75-4c20-892e-2ae5a344930b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3c43facf-b850-43d4-b881-a81dfe45e455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bf3d4d-4247-4865-94ac-a59ad699dd5a",
        "cursor": {
          "ref": "5f176f35-9c82-41de-ac21-25f3444630ff",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0d0fdd9e-9596-4103-a61d-0dd8cd29b7a4"
        },
        "item": {
          "id": "97bf3d4d-4247-4865-94ac-a59ad699dd5a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3588e801-c581-4dee-9a7d-485d98f7477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892c32fc-f268-46e9-848f-661c1e42fd28",
        "cursor": {
          "ref": "73bab4d0-7c9e-4086-85fa-1d778fb86f2e",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "770c638e-c610-4d90-b977-1ed5e2df66a7"
        },
        "item": {
          "id": "892c32fc-f268-46e9-848f-661c1e42fd28",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "06c45fc9-4fa9-40b2-827c-c22ad1bf5ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07012546-c2f4-4432-91bb-3dbe53b88d0c",
        "cursor": {
          "ref": "847a1374-0c3d-4e7c-ac3a-53b0538fbe86",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0fc0cc86-59c2-4738-8d46-8ea5563ae9f0"
        },
        "item": {
          "id": "07012546-c2f4-4432-91bb-3dbe53b88d0c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ae504f66-9881-4fb7-b4a6-1ae43cc1a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01843510-dec4-4b81-9d6f-1b5eabac4c67",
        "cursor": {
          "ref": "2d517a52-374a-4ca0-92c3-62c463878981",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "57ac943c-4e71-4fc6-8716-ea0fbf6ebfd1"
        },
        "item": {
          "id": "01843510-dec4-4b81-9d6f-1b5eabac4c67",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "33f12ed0-7b0f-4168-9c39-5db1d55de802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875624af-7eec-4d8b-91e6-153c514f7c3c",
        "cursor": {
          "ref": "b289ec0f-229f-49cd-b49a-977be6fc459d",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ba804f38-16b5-455a-a226-94b266c8d573"
        },
        "item": {
          "id": "875624af-7eec-4d8b-91e6-153c514f7c3c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9ee22539-6542-45ed-9045-e48071c7e6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1edb9-526c-404e-8384-d039d6ad3cb4",
        "cursor": {
          "ref": "503ff152-5974-415c-b971-2e0573f59fba",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9b460e9e-309a-4ef0-83c8-34d027349618"
        },
        "item": {
          "id": "e8c1edb9-526c-404e-8384-d039d6ad3cb4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3e7887c5-50df-4838-936e-f5e6434a8372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e6c550-e52d-440b-90ba-971eec77643c",
        "cursor": {
          "ref": "138b0b54-ff17-430e-b92f-c2e3d4e8b6ac",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b791a4c9-debe-4458-b37e-1e5d03dc0b4b"
        },
        "item": {
          "id": "74e6c550-e52d-440b-90ba-971eec77643c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7e0bb5ea-69b5-42a0-a474-6fbe3056853d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724880bf-b815-4ae9-abb4-c553fd6ae27e",
        "cursor": {
          "ref": "19f4cf49-0e85-4f76-b2fe-7c65650cdd6d",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "61ce5887-f0fe-4fce-afac-60f996d1ae2c"
        },
        "item": {
          "id": "724880bf-b815-4ae9-abb4-c553fd6ae27e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cccb6783-1cc9-458e-af19-7afc07c126b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7b33b7-948b-4aaf-b19d-e18af07f8246",
        "cursor": {
          "ref": "cf62c0b7-df53-42bc-8354-33ad687d0eb4",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "64440a98-5976-47cd-a29a-229b038a99f5"
        },
        "item": {
          "id": "8d7b33b7-948b-4aaf-b19d-e18af07f8246",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "416170c2-6cec-48aa-96a4-64f08f21f2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef61c5df-4c9e-46bf-a5e1-17875c775557",
        "cursor": {
          "ref": "06e63b83-1435-4cca-9729-40798f448c8c",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "434f7ddf-30ce-4c99-bc09-5fe56c43289f"
        },
        "item": {
          "id": "ef61c5df-4c9e-46bf-a5e1-17875c775557",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d7c82a2a-040a-4ba8-b785-721dc0eefc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adee9469-e885-43fa-be58-b64ff5d6c480",
        "cursor": {
          "ref": "0a5f324d-056e-4f8c-ae4d-53b816e1949f",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0617a1cd-ea28-40e3-b234-7081d33411d2"
        },
        "item": {
          "id": "adee9469-e885-43fa-be58-b64ff5d6c480",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1c5cee7a-dc60-4d2c-a290-65d4250f8b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0750e9-7d7c-4c74-b395-b088b2553ed6",
        "cursor": {
          "ref": "8387d706-4fbd-4a26-b269-0df004718653",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "898bf1d5-bb63-4743-acc0-b4cb4bd1db72"
        },
        "item": {
          "id": "7b0750e9-7d7c-4c74-b395-b088b2553ed6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aaf9ff45-d1d9-41ac-9050-8ccdb9838402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3359ea8-1cc3-4228-9e25-6cef138a23a0",
        "cursor": {
          "ref": "717b605f-1a33-4c81-aee8-3151b6880b01",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8940f8c0-f2e7-4501-b03f-841c6bff46d3"
        },
        "item": {
          "id": "a3359ea8-1cc3-4228-9e25-6cef138a23a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3366af09-3f93-483b-b35f-cbdfba4f76c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553e45d-c358-4cde-b622-5bb0be724a10",
        "cursor": {
          "ref": "81d9a37a-b9e4-4f7a-97ff-fb30adecc199",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9af0f4dc-877c-48d2-85df-2ee413afedab"
        },
        "item": {
          "id": "6553e45d-c358-4cde-b622-5bb0be724a10",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b5928f88-e5f3-40cb-b9ef-ce876979ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf138f6-141d-463e-915a-76d056e811ec",
        "cursor": {
          "ref": "2162bd70-1f0b-42d1-a34b-ee53aea449d1",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2c825449-7a9b-4864-b3db-3a2911af026f"
        },
        "item": {
          "id": "3bf138f6-141d-463e-915a-76d056e811ec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f911333d-e70d-48dc-8110-c8f8cde6224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fc1308-045a-49a1-966b-04a364f6228e",
        "cursor": {
          "ref": "8832f897-b13e-4a33-9c30-41f1c1d4e255",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fa0ad989-7fd8-4c1a-ad20-c58f639c0140"
        },
        "item": {
          "id": "64fc1308-045a-49a1-966b-04a364f6228e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "064641b1-d186-4710-bedc-93a6ae2eb090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0658eec-3266-4ff0-a452-3a9a38182937",
        "cursor": {
          "ref": "a4218752-a76d-4ded-a77e-835ff58364aa",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d9a00ee-5c6c-4294-a44b-e5e46e8a4f27"
        },
        "item": {
          "id": "a0658eec-3266-4ff0-a452-3a9a38182937",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5219b04f-9ad8-4733-9f0e-83688a243da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0896f7d-fdfb-426d-8025-67bd48ffc696",
        "cursor": {
          "ref": "a797b6fe-84e2-49bc-8c80-5cfd07dc8f09",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7e66d8bd-780c-4b39-9bf2-9ce0c2d2dcfa"
        },
        "item": {
          "id": "e0896f7d-fdfb-426d-8025-67bd48ffc696",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fe158174-7893-456f-99f4-7936b38e8c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fc7de7-46f7-4645-85b4-db4b6e84c3e3",
        "cursor": {
          "ref": "21f2e529-5b40-403b-ae93-1b06979fc08e",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af27612c-1b00-44ab-ae6d-f67a2528529f"
        },
        "item": {
          "id": "c5fc7de7-46f7-4645-85b4-db4b6e84c3e3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e92970b-d6e2-4182-bae0-5dc6fd477a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e420f748-fdca-4b91-ae53-e17f1d0059c7",
        "cursor": {
          "ref": "61cb2a3d-247c-4c64-8848-6be2ebf5c411",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2ca3dda4-33f1-470d-a11e-2ad19a3e97f3"
        },
        "item": {
          "id": "e420f748-fdca-4b91-ae53-e17f1d0059c7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4462e9ab-2878-48de-87ed-da04977ab25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e864fea8-8666-4d97-b193-e80d3be7c498",
        "cursor": {
          "ref": "171089cf-d94f-4cab-830d-7b7c2f80eefc",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bfd4ffdf-1d50-43ee-b02a-08720eaeeadf"
        },
        "item": {
          "id": "e864fea8-8666-4d97-b193-e80d3be7c498",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fa62f707-7623-4954-a189-6737cdbeec3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1581d4e2-3ad4-406c-8376-e2ae1e01fc36",
        "cursor": {
          "ref": "f9cebb44-b2a8-430d-bec7-2b3a68d6cd67",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "654a60e7-5d33-4486-a654-8dc46bf33d08"
        },
        "item": {
          "id": "1581d4e2-3ad4-406c-8376-e2ae1e01fc36",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7b0e7c1a-8020-4d8f-876c-57bf3ab14f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9769338-1e3d-4071-b46c-c8bde03531a6",
        "cursor": {
          "ref": "da0f4176-0742-4d0d-9816-fee9ac09e2fa",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5e33a8f-276d-4708-b331-92c6084533c4"
        },
        "item": {
          "id": "d9769338-1e3d-4071-b46c-c8bde03531a6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "52806750-e866-46b1-afd0-a7431ae783b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243b6b1-ba94-4946-b424-e02daf1e94e7",
        "cursor": {
          "ref": "f69f1695-170a-4929-8db4-7b5e9c750e43",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b01de67-f49e-4d2e-b87d-f25fe6b44460"
        },
        "item": {
          "id": "3243b6b1-ba94-4946-b424-e02daf1e94e7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3853ca59-86e7-4719-a858-4d69bcdbd6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d85800-414c-4059-8983-319c93bef739",
        "cursor": {
          "ref": "3a0fd0e0-4676-41dd-96c0-a46820e1858d",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "64a6de22-4740-4797-ad62-8b0508756e2a"
        },
        "item": {
          "id": "46d85800-414c-4059-8983-319c93bef739",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "315f6bde-3ecf-4e8a-a27b-1a47141fc73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff3b61c-4a55-4551-b97e-7f7eb1c1398b",
        "cursor": {
          "ref": "ac613fbf-fab4-4739-ba26-c7db8d1aa9bb",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2f54e248-6479-4c32-86a2-cc3010aede0c"
        },
        "item": {
          "id": "3ff3b61c-4a55-4551-b97e-7f7eb1c1398b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8f95b75e-7b48-451a-95ef-23cabd435855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297e33d4-7dc7-467b-81f0-1aa2f4a7eb8b",
        "cursor": {
          "ref": "6f31794d-1102-4d90-b619-9dfb823c8a52",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "966890c9-f060-4c7e-a503-e1908107b588"
        },
        "item": {
          "id": "297e33d4-7dc7-467b-81f0-1aa2f4a7eb8b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5dc432df-f695-41c0-a5f9-5e8bc77b582b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9e1f05-6e47-4b52-a530-b9ed3cd519cb",
        "cursor": {
          "ref": "237ee92b-96b7-463a-911c-e37c9a9afcde",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "43f776d1-a9fb-4c11-a66b-9e824d8f3705"
        },
        "item": {
          "id": "0e9e1f05-6e47-4b52-a530-b9ed3cd519cb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "35cc26b4-7a12-45c5-8825-aa0a004abb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6419b61-d77c-41e3-b9ea-e05e5a419c8e",
        "cursor": {
          "ref": "4c522947-4e43-4a16-9e33-6e5a4f87a29f",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2a38ce76-c3f2-45eb-b0ad-c8e56e8cce86"
        },
        "item": {
          "id": "a6419b61-d77c-41e3-b9ea-e05e5a419c8e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cd674312-61d2-40db-9249-fed2b109bb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2da05b-6118-496a-98bf-8f2a6f4e71f7",
        "cursor": {
          "ref": "8b2fba69-9d2b-4e5b-951b-636f664a4613",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "232b4bfe-da63-4feb-a37d-a0c667ece0cb"
        },
        "item": {
          "id": "5a2da05b-6118-496a-98bf-8f2a6f4e71f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "092e60d2-75cc-4663-8e5f-f8b88f91a382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dcbbcc-f076-4761-a707-a4e1ac492f15",
        "cursor": {
          "ref": "ad0bca43-ea39-4379-9847-e8eab3485520",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43c74fda-4dde-4126-9552-61c84043c067"
        },
        "item": {
          "id": "22dcbbcc-f076-4761-a707-a4e1ac492f15",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8b8da20c-d0ae-4c7f-9a12-fc910dd57cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c084a1-8a3c-4900-89c7-310a0017fee4",
        "cursor": {
          "ref": "17f91e83-7a6e-4c79-bc9f-1672bcc293f4",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8e90fa86-f18b-4b0d-814c-c4ec6eae95cd"
        },
        "item": {
          "id": "00c084a1-8a3c-4900-89c7-310a0017fee4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65d5639d-c971-4a8b-99c8-bd100dc91b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833fea9-e7f7-49e6-bca4-d7834fae235b",
        "cursor": {
          "ref": "71d7b4e1-23e4-4cba-b556-c7fd3d9645c0",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "dd65d71e-28e3-43c1-acd8-3afdcd04bd78"
        },
        "item": {
          "id": "3833fea9-e7f7-49e6-bca4-d7834fae235b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "37d7b016-fb20-47b5-ae74-aa5531c561be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c25b343-c753-490d-a7c2-8aaf4ec1f47d",
        "cursor": {
          "ref": "42721a96-3551-40f8-a3aa-f4040a692772",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "104833bc-0af2-4969-8153-198a72374901"
        },
        "item": {
          "id": "2c25b343-c753-490d-a7c2-8aaf4ec1f47d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "65dd8f68-fb8f-49fa-8843-fea5b2bc995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395c9ef9-2a46-4b72-a12e-8745d853804e",
        "cursor": {
          "ref": "1707ba7d-6a90-4ac4-99d3-7e8713484490",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7385af0b-d75e-4c0a-bb38-dc6f12ea70e6"
        },
        "item": {
          "id": "395c9ef9-2a46-4b72-a12e-8745d853804e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9c67045f-f66c-4e1e-aca0-f1c30d398d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842c5cca-55f7-4ede-9fae-9a29bcacbf88",
        "cursor": {
          "ref": "d3381223-123a-4799-896b-7a2e86afe555",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9496d13c-ace9-40bf-a564-090f580d0d48"
        },
        "item": {
          "id": "842c5cca-55f7-4ede-9fae-9a29bcacbf88",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cebd397f-adc7-4c61-9993-6db46234e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517af2e9-1f0b-43c3-a877-6d0871b3db57",
        "cursor": {
          "ref": "8c1c299f-9dcc-4a9e-b1c2-ff4de69a00a4",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e69bf59c-e47e-48be-a293-1e1984279364"
        },
        "item": {
          "id": "517af2e9-1f0b-43c3-a877-6d0871b3db57",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e904448d-1edb-4f11-848e-d9ec80bcd25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4cfc01-7778-4107-9874-f8628ffff512",
        "cursor": {
          "ref": "fb30686c-9f8e-4aa1-9e41-204f62c94199",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5f22e869-d932-4081-b61d-141f23da9491"
        },
        "item": {
          "id": "0e4cfc01-7778-4107-9874-f8628ffff512",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f590d8cf-fcd8-4def-add9-62dbd12be976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b5687a-6bad-4d73-b6f9-f22061ae86ea",
        "cursor": {
          "ref": "429bdd83-0d69-4d8a-9cdd-598e832b9e6e",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "10c1469c-4bf9-473f-a070-3262716bdaad"
        },
        "item": {
          "id": "52b5687a-6bad-4d73-b6f9-f22061ae86ea",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "068511bd-a4df-4b6f-8376-52ef7f0c12be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c083723d-f704-433c-9400-8210d6c27da2",
        "cursor": {
          "ref": "913e0393-52f0-43ef-bf31-6dff1b787f74",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a38760cc-4d78-4550-81b8-97d14053f329"
        },
        "item": {
          "id": "c083723d-f704-433c-9400-8210d6c27da2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c7de6d19-ed52-4a72-ad95-4a571e31485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a02623-6783-4844-a21c-67ee4514973b",
        "cursor": {
          "ref": "9bd431a3-f276-4a8a-8ea7-bb5680853e79",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "092d9484-2774-483e-be98-0e6f632285f8"
        },
        "item": {
          "id": "63a02623-6783-4844-a21c-67ee4514973b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "024a2a82-925e-435d-bb47-28e67be4fa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fb1f0c-68ca-4dac-b3db-480316115a96",
        "cursor": {
          "ref": "79539943-982d-4d54-aedb-bd760faa5578",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6e49d3b-4f27-4394-9d3f-7d1a226fcaad"
        },
        "item": {
          "id": "f6fb1f0c-68ca-4dac-b3db-480316115a96",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54e3c3a8-6544-4070-b08d-1e27a97e289b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e130c-33c6-42e6-94a8-39e2f0a6312f",
        "cursor": {
          "ref": "90f4d92c-6bf2-45c2-89eb-e52a7b8a5cb3",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b05f25f2-781d-44fe-8e1a-2f4dee2be102"
        },
        "item": {
          "id": "cd5e130c-33c6-42e6-94a8-39e2f0a6312f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "11f3f011-1d2a-407a-9ba5-3ec310263e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d4612-ce6f-43ef-bd45-44f8f09fef30",
        "cursor": {
          "ref": "3bfda666-109b-4cb4-8344-bf372a2311bf",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "87231830-27bd-4ef5-90d4-99bfae6d34e9"
        },
        "item": {
          "id": "e39d4612-ce6f-43ef-bd45-44f8f09fef30",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "316db052-f5b1-4ac8-af89-a255ee02b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4dafa3-a775-4866-b9e4-fe24f959cc4d",
        "cursor": {
          "ref": "e86c0a60-a5b0-40c6-b071-ac62e2cfeddc",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "369722a2-7370-45f4-a1dd-e62d712cad2b"
        },
        "item": {
          "id": "cb4dafa3-a775-4866-b9e4-fe24f959cc4d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b21f944f-a418-4a4b-840c-cdee742a44ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72be16af-ae2d-4c6e-91c4-706849e73d37",
        "cursor": {
          "ref": "dfceaf0d-790b-4339-8782-7542b92b98f4",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9640ca0e-5571-4109-a2c6-083fa7dbf257"
        },
        "item": {
          "id": "72be16af-ae2d-4c6e-91c4-706849e73d37",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "47e7b487-3964-4a30-bad9-9579360b10f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42aeea7-5904-4115-89e6-1198925cc8f6",
        "cursor": {
          "ref": "cc7fa980-420a-4622-9043-bbc860feacba",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9d56adc3-a9fd-4308-ba12-8211b5c0d0ce"
        },
        "item": {
          "id": "d42aeea7-5904-4115-89e6-1198925cc8f6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "65989c4e-405d-4289-8822-fb6ac817ca5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eee69c2-8894-4011-968d-ba8a42c68f29",
        "cursor": {
          "ref": "f2acc261-c4fc-4ec8-a566-2d8721a6249f",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a08fc855-2b92-4d2d-884b-d4dbd6f4445d"
        },
        "item": {
          "id": "4eee69c2-8894-4011-968d-ba8a42c68f29",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "16227870-1975-455c-be82-a95a5b3095c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21277a50-72c7-45d0-99a5-90e49047da31",
        "cursor": {
          "ref": "d9506153-b42f-4d71-becc-491c6d3d525a",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c273e067-2252-40ed-b7f9-08ba6e34a85a"
        },
        "item": {
          "id": "21277a50-72c7-45d0-99a5-90e49047da31",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d22ff568-0326-4fac-a655-958231134fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349aa871-c150-41da-96ca-bd70daecec1f",
        "cursor": {
          "ref": "62a52a6b-398a-4b93-8e4b-25df8653b4bf",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd7e8f6d-4e7b-418c-bf30-25c70905d97e"
        },
        "item": {
          "id": "349aa871-c150-41da-96ca-bd70daecec1f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "95f5512e-818a-4aa5-97b0-dc1ac27e9d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a3c812-9c01-4104-b7cf-fc2dc6a5d4c4",
        "cursor": {
          "ref": "3483af8e-47ea-479b-9296-c7905e51a333",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c159a313-4bc5-4e84-a19d-d5f3a2436cb7"
        },
        "item": {
          "id": "51a3c812-9c01-4104-b7cf-fc2dc6a5d4c4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99742d6f-20a6-42b3-b12c-e7d92a229653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12236163-b661-40c4-8953-a909b3f12eac",
        "cursor": {
          "ref": "cd1ee830-3839-47b6-9ba0-f7bface60071",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4cf63636-779b-4730-b83a-7446e28ed047"
        },
        "item": {
          "id": "12236163-b661-40c4-8953-a909b3f12eac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b025abf9-61fa-4eea-abe3-a85951a9b9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96902216-a9d6-4928-8d39-dd1d7606444e",
        "cursor": {
          "ref": "cc6bb888-0170-4a78-848f-15ad6fb29e1b",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "876e8942-60c1-4135-9891-58adac1ba1e1"
        },
        "item": {
          "id": "96902216-a9d6-4928-8d39-dd1d7606444e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ec1a994-18d3-4f61-ace5-30101623ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca2717b-1834-482a-8078-9f4afd8b83a2",
        "cursor": {
          "ref": "299d5e16-22ed-4336-aa75-c05052936a91",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5b5e585a-8068-4635-9c14-565ccfc206c5"
        },
        "item": {
          "id": "3ca2717b-1834-482a-8078-9f4afd8b83a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "768be9c8-44d7-4cf9-9a87-d79657e8706a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc6a8c2-f04d-480b-ae35-7186f823fd5f",
        "cursor": {
          "ref": "70fe55f0-0534-4298-a77a-5b743bbddfe6",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0187a308-50e9-4f51-89ef-e6ae81a21b61"
        },
        "item": {
          "id": "ddc6a8c2-f04d-480b-ae35-7186f823fd5f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "86cc5c52-2020-42e6-9c43-41760e39b030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbe6e1-30ad-4925-b513-a0ff22dc09fc",
        "cursor": {
          "ref": "ab58fab1-08f3-4c0d-b589-20f41c8f5eb5",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "38ba44f6-42e8-4a08-9367-d494199b9f5b"
        },
        "item": {
          "id": "10fbe6e1-30ad-4925-b513-a0ff22dc09fc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b374ccb0-a727-4010-adb8-441a72acc16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224d4c57-8292-4885-9d12-5067e724bc92",
        "cursor": {
          "ref": "6415d54a-d47b-4b18-a816-11ee84ef4dba",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "192fc43c-b5c8-4cb9-a23c-02360a45cb76"
        },
        "item": {
          "id": "224d4c57-8292-4885-9d12-5067e724bc92",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "064ef43a-ad9c-412e-8a57-26220e35bde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973fcff1-5105-4975-b759-3c08b0709309",
        "cursor": {
          "ref": "7e3c6654-1299-4641-8fca-e2056e342b34",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5f3f9ec8-50a9-4db1-9c49-849dcc75d5fc"
        },
        "item": {
          "id": "973fcff1-5105-4975-b759-3c08b0709309",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b0ad33c0-2cfb-47eb-9b34-e44f58fdc34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ed3fb5-73dc-453e-88ec-0965d62ce00b",
        "cursor": {
          "ref": "2fd62a70-2bd4-4606-b478-fa6f4cd927ef",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "74c64e71-1413-473b-b5ce-4b762f39b00c"
        },
        "item": {
          "id": "c1ed3fb5-73dc-453e-88ec-0965d62ce00b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6bdf81c7-f788-40e4-a2c3-aff6faa669fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10841e56-a32b-48c1-9edf-b324b1fae3d2",
        "cursor": {
          "ref": "f58ab598-7ddf-4842-9776-b3cbf203bc99",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "281dae19-8b51-4c11-9bad-30482ba53deb"
        },
        "item": {
          "id": "10841e56-a32b-48c1-9edf-b324b1fae3d2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7fe1af4-e4ad-42fa-98f3-4f693c7e649e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d244d80-443a-41cc-a83c-66ac04c51865",
        "cursor": {
          "ref": "7a412097-f061-451b-87f8-9d3fab82aa27",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "30ddfa48-dd45-4d40-a081-d1373a6ba02f"
        },
        "item": {
          "id": "9d244d80-443a-41cc-a83c-66ac04c51865",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bca4e09a-37a4-4550-b7cd-8a6f8d2465bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a410c5b-08ba-4568-a1a5-f95b22676a70",
        "cursor": {
          "ref": "042c61ab-dc9d-403c-8bae-3a6217523812",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f185b3d9-88ec-4524-8a65-cc3f368c3b9e"
        },
        "item": {
          "id": "3a410c5b-08ba-4568-a1a5-f95b22676a70",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5cc30c6a-50ac-4fa8-adc6-efa5918e9b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438357f0-6980-4bcf-b0a2-1813d06226a9",
        "cursor": {
          "ref": "b07bb33d-4465-4366-82a5-82ca4c9e9950",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0b18b089-4395-41fb-a327-4add5c3c2cd7"
        },
        "item": {
          "id": "438357f0-6980-4bcf-b0a2-1813d06226a9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e4d19dfa-b255-4fa7-abad-8407f48e9f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d3de7-19c6-48fe-a1dd-3f9467a5f3e9",
        "cursor": {
          "ref": "2803e779-0e8a-4d91-a15f-0646a961ecb8",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "01af887d-5786-4562-a67e-fef67843edfa"
        },
        "item": {
          "id": "ba4d3de7-19c6-48fe-a1dd-3f9467a5f3e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ee0ff564-d504-4fd1-ba33-299f309efa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf002ed0-680a-4db1-9d3c-f08412b94467",
        "cursor": {
          "ref": "43f731d4-df34-4e2c-8f9f-46f81d63dbac",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "db837d09-6435-4e57-98c1-0be3edb2aa28"
        },
        "item": {
          "id": "bf002ed0-680a-4db1-9d3c-f08412b94467",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9e3c2234-5ebb-4ba1-92e9-1e3673841b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9924235-da7e-4a95-828e-809f9a782f8b",
        "cursor": {
          "ref": "22c2f479-beae-47e7-a6cb-337f6a5d2b3a",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "330f0ad5-65f5-4605-9332-64ae690c9543"
        },
        "item": {
          "id": "e9924235-da7e-4a95-828e-809f9a782f8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "64da5ec5-22cc-4fd8-8410-03d081d8e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589a6a7b-83a1-47a6-ab0d-bd33323869d1",
        "cursor": {
          "ref": "a462c25d-201b-4e84-8d15-83f81babd205",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9ce3cf79-64ce-43b0-80d8-638dd34af6f6"
        },
        "item": {
          "id": "589a6a7b-83a1-47a6-ab0d-bd33323869d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b77d281e-db47-466d-99cd-2c7c77ddfd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d959e1-73d3-4593-9b34-09c6e9c673dc",
        "cursor": {
          "ref": "99114962-7f90-441d-b0b0-d955f1a0e33d",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d23cd396-e748-4ef6-90f3-f4b0012a35c1"
        },
        "item": {
          "id": "d2d959e1-73d3-4593-9b34-09c6e9c673dc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eda9e3c6-f5a2-4ae1-8052-07114e0efdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f571bd3-433a-4678-800b-7d83811a60fc",
        "cursor": {
          "ref": "1ead2840-cc8b-4f59-8649-e2c537932ebf",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "508dc4e0-82e4-4b36-bf4d-411f6ba024ac"
        },
        "item": {
          "id": "5f571bd3-433a-4678-800b-7d83811a60fc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "619b2349-54cb-432f-9192-9d88934e9fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ded0ce6-03ee-41dc-9d31-b2f7f58662f9",
        "cursor": {
          "ref": "cd5d7926-db61-466f-a93f-8bb474d087ab",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "44464e14-2388-4c5c-a6ca-2396e42aa570"
        },
        "item": {
          "id": "8ded0ce6-03ee-41dc-9d31-b2f7f58662f9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "89efd461-a800-487b-89c6-83f8b4c4a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc55a1b1-3c87-4433-a5e7-0f3f994e9b68",
        "cursor": {
          "ref": "235a05a3-78ca-46dc-909d-c023b834d9a7",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "214b9647-2f62-4710-a82a-26b11473ebb6"
        },
        "item": {
          "id": "fc55a1b1-3c87-4433-a5e7-0f3f994e9b68",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b432f606-f83c-4377-8b98-0a8e96ec96c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e01fb2e-347b-4a00-bec0-7d751eadc9da",
        "cursor": {
          "ref": "d58f6bf5-41c6-4e8f-a94e-8364149a7549",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "73c35dd1-3ae1-42ef-9a7e-d1b3c593cd5d"
        },
        "item": {
          "id": "1e01fb2e-347b-4a00-bec0-7d751eadc9da",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "dfa1c7dd-565a-4f01-b47b-740489f23c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0929f2-7af8-4462-9e6e-6f97eb5b85bc",
        "cursor": {
          "ref": "1b77e551-3364-4898-a379-610e7558e039",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0a441005-acb0-4339-8f09-2584367ab3d3"
        },
        "item": {
          "id": "7f0929f2-7af8-4462-9e6e-6f97eb5b85bc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "22ed7602-43da-4789-bf54-4752a027c08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7753c778-5b09-443e-9df3-822f21ddd417",
        "cursor": {
          "ref": "1dd38642-c164-4aa6-bbd8-011c563c97ca",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37e67046-5d65-49d3-8627-1ada75e985d9"
        },
        "item": {
          "id": "7753c778-5b09-443e-9df3-822f21ddd417",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "756f328c-8cad-4b1e-96fc-3d7b7bd936fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e0415-2074-4943-8df7-3d00fddd0ee0",
        "cursor": {
          "ref": "afb43f65-ad23-4fe3-a8ee-d1a82fd36638",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3202c64a-776d-4307-8d77-16d7c5572da2"
        },
        "item": {
          "id": "2d3e0415-2074-4943-8df7-3d00fddd0ee0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f3dba2e-c397-4da0-bac0-af70286f0256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced73523-df93-4a56-b592-9f30406629c5",
        "cursor": {
          "ref": "770dc5bf-c9ae-44f3-bd28-69a29584d655",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ed3572e7-4197-471a-81b9-dd9bdb1715e5"
        },
        "item": {
          "id": "ced73523-df93-4a56-b592-9f30406629c5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "77d19c67-050c-40e1-aa91-4009779679da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8cb365-40ca-4649-b2f1-15cb14215949",
        "cursor": {
          "ref": "fb590ab2-7cd1-4573-a128-646c1a69d33e",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "065dd541-ea3c-4c6f-916c-8c9ada2b03f5"
        },
        "item": {
          "id": "5b8cb365-40ca-4649-b2f1-15cb14215949",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4f95df7-945f-4091-931f-d45784d64321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3490a4d2-9741-4fc3-9bd8-39f35e7b7c40",
        "cursor": {
          "ref": "1f514a5a-c4bc-4a3c-8b03-21c4508416c7",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e790082-6d7d-4c39-82be-65e27a463efd"
        },
        "item": {
          "id": "3490a4d2-9741-4fc3-9bd8-39f35e7b7c40",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d11b980c-d760-4b15-a93c-eb7befe58de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358bf611-d967-4242-acd7-41a3d1fc70de",
        "cursor": {
          "ref": "2b12e275-fd38-422c-b734-b9de96f1902f",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "552f4f9b-a79a-434f-afae-8b5a4badc73d"
        },
        "item": {
          "id": "358bf611-d967-4242-acd7-41a3d1fc70de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cbd93e85-513c-4810-816f-1d4ed7241127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2106b4-00ae-4053-91b4-25284a4ef301",
        "cursor": {
          "ref": "f84e258b-fd66-4224-a0c6-88dca9a2ba90",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b5ce2707-27ef-4940-b227-d4111de2aff9"
        },
        "item": {
          "id": "df2106b4-00ae-4053-91b4-25284a4ef301",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f7f0516-4312-44a6-aead-c1507a809805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc59dc7d-2dd6-43f7-bef7-c617b793ac4e",
        "cursor": {
          "ref": "bd938da9-a5eb-40d6-8e37-13c0f9acdc49",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eae1d040-97b3-4484-9c57-d310eb50ee5a"
        },
        "item": {
          "id": "dc59dc7d-2dd6-43f7-bef7-c617b793ac4e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e8fcbdb0-0a1c-450b-af09-bc2c7c050e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e54cedf-ff7c-498e-a867-fcf2c79106e3",
        "cursor": {
          "ref": "ee25c4d4-03b0-4e5a-b010-59070a90122e",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e87779e1-643b-492f-b9b5-de668c340ab6"
        },
        "item": {
          "id": "2e54cedf-ff7c-498e-a867-fcf2c79106e3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "14ef2ce7-db8b-45dd-b759-e658547116f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed77a84-593d-40dc-9f9b-d8e842dcd87d",
        "cursor": {
          "ref": "8dfa18c2-3a7b-4751-b9d9-04d05c35e6e4",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ba92aae6-f42d-4c66-b015-d7a93f2b1422"
        },
        "item": {
          "id": "8ed77a84-593d-40dc-9f9b-d8e842dcd87d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "942b8ac0-76f8-4423-8f44-8012559cf487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3edbc27-e7fd-4616-ada6-fda23cf7a07f",
        "cursor": {
          "ref": "19ac5c5f-d3e6-4998-8aa2-3400edff0d67",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bd2a324f-e94d-4d1b-8706-f0fb62ca19c0"
        },
        "item": {
          "id": "c3edbc27-e7fd-4616-ada6-fda23cf7a07f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "76fa1717-560b-4754-82eb-696882bc9ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363894b3-edbd-47e3-b515-24ce47b3eea5",
        "cursor": {
          "ref": "34dbfedb-3258-4501-b8e0-3bb856570c25",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "683a9b24-d5f8-4ea3-9e19-8a4deee2d7ae"
        },
        "item": {
          "id": "363894b3-edbd-47e3-b515-24ce47b3eea5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "87cc50a4-c0e2-4fa9-9618-8bd35db7c731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545fe310-bf75-4ce1-9a28-ee25f8432b70",
        "cursor": {
          "ref": "ee80df6c-67c6-4046-a623-be3b08a606e1",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2d62a6a2-01e1-4898-aebc-c0b57439fa24"
        },
        "item": {
          "id": "545fe310-bf75-4ce1-9a28-ee25f8432b70",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "273523ef-c35c-4a14-8d5b-017692be8cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12eb5cf-d3eb-4243-a3d2-7ceaf6b8c514",
        "cursor": {
          "ref": "820fe4c7-9aef-4630-a071-3fe618948c26",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d0383d99-70e6-4e37-9d12-419a0edb26c0"
        },
        "item": {
          "id": "c12eb5cf-d3eb-4243-a3d2-7ceaf6b8c514",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5b4baccf-c8d9-4ef1-9f63-131180f383df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fecbef-099a-4773-8d8d-0da77e1f3264",
        "cursor": {
          "ref": "7e9d300e-3617-4c82-a8e7-949b500fefcf",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e886c41f-c589-4c15-b7a5-d6fbfe3b3114"
        },
        "item": {
          "id": "76fecbef-099a-4773-8d8d-0da77e1f3264",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26617539-b769-45ed-8794-2e08372e25c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e20c95b-e566-4ef5-9386-8284e09de1f8",
        "cursor": {
          "ref": "ceef7f63-a08a-49c3-b982-e9391f9d6559",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73d97945-be18-4933-b57a-556aa666424d"
        },
        "item": {
          "id": "1e20c95b-e566-4ef5-9386-8284e09de1f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "028ffca1-d537-4ca3-92a2-1241d3832a8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e0624-93ea-4c6e-b174-1505d4396a77",
        "cursor": {
          "ref": "032342e3-6f97-45d2-bb18-d74a8be88aab",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1bc0eeed-2b43-425e-92ea-d1b0ca3fe9ad"
        },
        "item": {
          "id": "2b7e0624-93ea-4c6e-b174-1505d4396a77",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "82f8bcf7-9da3-47db-9290-61bcc148f0a9",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0240c4-56ef-44d2-969c-4f23f4b3a9be",
        "cursor": {
          "ref": "e9880a48-72cd-496d-9ceb-84f1bccb3555",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7582c5dd-8edf-4387-ab8f-2412830462a1"
        },
        "item": {
          "id": "7f0240c4-56ef-44d2-969c-4f23f4b3a9be",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9a17bcbb-b0ca-4a64-b60f-99b933e49105",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e71e13f-ac6b-42cd-9aba-b31a77c06aa8",
        "cursor": {
          "ref": "96fed0a4-39c7-44d5-92cd-ff78142d38dc",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1409e804-30f7-4b0c-a6c2-a5e391783395"
        },
        "item": {
          "id": "5e71e13f-ac6b-42cd-9aba-b31a77c06aa8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "11e19ee5-6e8e-40b9-a0ba-1b1f1ba6848f",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8dd984-096c-4933-a5b7-ff3ec041200f",
        "cursor": {
          "ref": "85a3a10c-d4d6-4d7d-a541-d3c32197057d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "58fbe894-04b8-4444-af50-29cd118c0fb1"
        },
        "item": {
          "id": "8a8dd984-096c-4933-a5b7-ff3ec041200f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34ed1a3c-35e8-4a84-8c88-5041a54fbd27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8dd984-096c-4933-a5b7-ff3ec041200f",
        "cursor": {
          "ref": "85a3a10c-d4d6-4d7d-a541-d3c32197057d",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "58fbe894-04b8-4444-af50-29cd118c0fb1"
        },
        "item": {
          "id": "8a8dd984-096c-4933-a5b7-ff3ec041200f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "34ed1a3c-35e8-4a84-8c88-5041a54fbd27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e66764-04fa-4f2a-9958-e14b2759e46a",
        "cursor": {
          "ref": "bc6581cd-a4e3-4ca4-892d-7b6115b37a75",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9786f861-41df-4c4b-bd61-f80bd8a7a62b"
        },
        "item": {
          "id": "36e66764-04fa-4f2a-9958-e14b2759e46a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "940ff6c1-93a7-4e5f-a99a-6fe41a6d5522",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f3092f-e211-40ad-a1c3-2bc32bdfce28",
        "cursor": {
          "ref": "e7457db7-ae1f-4d98-91b8-848aa58adc79",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4031e06c-1750-4462-8e52-cac1abefa78c"
        },
        "item": {
          "id": "b0f3092f-e211-40ad-a1c3-2bc32bdfce28",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "61db10b1-d331-4149-8741-4b2aa137108b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}