{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8d9d0c24-d2e8-42c9-b1ba-1928721520e8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4cc90e9e-41bd-4752-b7e2-44dd6f649326",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bea2a13-f2ad-4505-bc42-97e4852bd492",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f354efaa-2a88-4d7b-81d3-7053858c2d05"
                }
              }
            ]
          },
          {
            "id": "b578b6d9-a8f1-4e4d-ba59-12d0444ef216",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "704ca077-2632-41fe-b9eb-5309c909bd88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf24bf5c-7535-4635-a3f5-5c552e0a4ff0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e68c09aa-143c-475d-891d-b636cfe9ef34",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1fe2e300-7bda-457c-93aa-7caf37012b1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a5bd551b-13f9-4121-9cd7-e86c189ce6e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41fd38f-f152-47d0-a7a0-fa50bcce3553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf356211-794d-454d-889e-7235caba8905"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73aa8c38-00fc-4aac-bc4d-2b99303f1cad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "814fbd07-6e36-42d9-a5b9-d3cae73679eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "154320b2-10b7-451e-84e4-27594f512a26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2b82dcc-c02d-4999-a64f-e7509e4cbba1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcf3c603-a885-4011-83bd-ef406a8a75ee",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "77648716-44fa-4e58-b04d-d213de7a1662"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d011a2d8-0ada-4f08-a45d-8e45bdaa1ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b28de0dc-3f19-469b-9f0f-4a1b34fc3156"
            }
          }
        ]
      },
      {
        "id": "1673c429-db6a-4973-8a8f-6dc57c385ce9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7d3de315-45c9-4426-a204-bfe5541db7cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a365653-bc7b-44c1-a42b-f0d216960c08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55e7dd0f-9784-43ff-9279-5914796b65b0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f954acb5-0cc8-48a2-8ac2-02dd29e76b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efc561a-d6b8-4a8a-a7d3-e54b756f5d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a979d7-38a7-4082-9d82-6780c3aef273",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97aba6b-8564-4f21-8d34-c68eec9c59e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34ce50e7-c751-4a2e-9167-7e1c2cd7d60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c436c60d-fc0d-4c6c-a337-b5e13e57d968",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186534bc-0108-43b5-987c-db580632a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1031e22a-4c66-46ff-9f75-d95f56cdb5cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "297230cf-8ddf-4e35-afab-fc56078cfc38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d799423d-0fd6-4730-b873-4dad4f16a816",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3526e3-3b59-46e4-ac90-3b5a6655d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "051880fa-7489-47e3-9617-a3a5ab08282f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce4b534-fa43-4bbf-a892-dcd13fdc6d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1c2463-0e45-4865-a380-39684e3c1bc9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17ff1918-8c24-44c2-b546-c03244a113a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "568e71f7-c8a5-4459-8ace-9b69333514e5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf10202a-d496-43c4-961d-f0500a716495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "290d4d21-687c-482b-854e-1fcee2d71058"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9582a641-ff24-4201-8b08-3834065ed2f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fba85ebb-6fd1-493c-9ea8-44fcc8c94197"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19b01f89-3c83-4b68-bfb0-392deae59785",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88705853-0f79-4a94-b7b4-6d34cbf3d4c1"
            }
          }
        ]
      },
      {
        "id": "72475391-0063-423c-ae67-e98dde2e254c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2193e243-d653-4d62-9069-a7a57436b675",
            "name": "Negative Testing",
            "item": [
              {
                "id": "146deb4c-0121-49e5-9cfb-6fa7f9883f0a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b327536-4d44-4578-b0f7-3ed0db15e1bb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da61b279-05b8-4048-81e8-7e166b9e289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4334d3f6-573c-42d1-bb59-51f616d53b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c94c815-8404-4353-bd51-51acc7afa427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3c7552b-2471-4574-8ea5-34d04d7bf026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5289135-237a-4ea3-aeb3-8c8f67868320",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c3d7b-f04f-4947-b44c-f5abfaf624a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37d29e4-29e5-4a42-bd81-9987052f6365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64318e38-bb8b-4088-b98a-8f3f1cc280d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6da3747f-e34e-43b6-9df1-7a2e06cc0933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5d05c3-8f48-4415-a9f6-a2ecc03a474f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c20259b-a7cf-4cfd-8d3f-0e0a090a1bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f069e7e-d55d-4655-8ad6-aa5ced7bf11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c69f2e3-d7d5-4e72-a125-103f278ad3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e961d6d-b8d1-4249-bcc1-4943d882a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8517cad2-90ca-408a-bbcd-e7e7a047bfb5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95bb415-a84a-4858-af35-7c8215a78bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762ac1a9-ac55-4218-a77b-83554c0547eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d41ff4-a74e-47d6-95c6-9d27cd9245d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76676a30-8077-4b80-83e5-84fda3e381a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b07cda-2a27-4c1d-b624-f93233e6261a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61bf0d5-a24a-4e9a-87a9-aaca7de0b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4158fb44-12e6-4ddc-bfc3-4e2f04a3df9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a8bee2-1143-4ea9-88da-095a6c59fb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b98dddf-ff9a-48c2-be9a-98b3cbfb2127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73093713-398e-4351-95d8-d69c0376748e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b1506f-8ae8-4fd0-acb6-f5b7997620aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4647b10-404d-45b6-b5b4-82abdebabadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e7d58-a5db-4085-ae96-21f8a7dba3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cadf5e14-94e7-4490-bdb7-449bfea84ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f811c05f-e401-4536-8769-868b0e0134ad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852e5432-f2a2-4cef-af2f-ae935add1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17e8d0e-c090-41c5-9d9c-d7752e429480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cde796b-519f-4388-83f6-9336d113aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0db4146e-a33c-499a-9b5e-bda5cf8411c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc07524b-6eb2-4977-8193-404e89f07878",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd29b14a-45c5-4850-a78b-879f5e81757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78619e9f-c826-42aa-8e70-fff5d37ee335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c26a060-a525-408f-9a79-72895e51837f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fc0ca86-f7c4-4729-a7c6-3cb8e1a61c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7c0e98-28cb-4c13-9535-e44b95330693",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcf9fd1-eded-40c7-9cda-ae4dfcdc0ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c780946e-c459-4dd2-b6ee-587c0debbb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac8728d-3f60-4c26-98af-7dc14f1fc67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39fda1ee-02f5-4fbb-b13c-c66cc342e7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df262f38-c3d2-490e-8feb-8388d90fe5ff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea5a24-112f-4983-a75a-82db2d29eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27656208-fa90-408f-96dc-2807bcea41f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d6dfc3-a21c-4c8c-9e7a-864e282d76bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a0ffa8-19e6-4f76-91a1-a73d4145bfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036fe9a-a7ee-4a33-aea7-3bce4ff2a43a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d3dbe7-e8a9-43d1-a416-7d9525510cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b82c77-b504-4851-9f11-dcfdd48abddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d49d5b-b27c-4323-8439-67c75e307c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "618b0d6a-1fa1-4e4a-a0de-4944951e4140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a101fc-b590-46a0-a8ea-e31d0f87d4bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ca4d1a-1b74-497f-99d6-00c3e22f96ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2691087f-6d7e-493a-b38b-84066ea61ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56bbe82-a576-4619-a0b2-2792d2568d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f616b16e-4123-49ca-aa86-f5c83c9e78ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55283f26-5011-484f-b1fe-75c1348e0175",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd97876a-1089-45a9-92bf-256ace08ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86a11d9-e3e7-4f55-8585-64441d1c88b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738aa49-e5a8-41ae-bd29-86f5a179fab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93d9dd92-0448-4fba-bcfb-2d92ea878a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18823f7c-770e-434a-88d0-7072c379113f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b92ef6f-e624-4d1e-ac91-1a9bfb252535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4d5785-3f1a-4738-ae01-600748a9c5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ef8de7-55bf-4d2a-bf08-455cd20375e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f8cb3a7-7ee0-460d-b9c2-fcfd765efe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c871b372-e082-4023-8fb0-c90b5a51ba16",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b41b2-fe9c-4c21-b3c3-2dda5571c48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae778685-89da-4a41-9ed0-bba85c682dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b788632-51bf-4b4c-a2e4-9cba2ce84da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be123164-4baa-44f1-ad52-1a77ae4bb2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87e154d-8a13-428d-952d-a584a9713b83",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d40d7c-e043-4ee4-b06e-017fa69e00e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9043ba7a-be78-478a-8843-033d3f9da76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ee77e4-da38-4096-9d8b-b059efeb06ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "313bdfc6-5b34-4252-af91-645b2f0ba4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cf412a-559d-4af2-95cd-5c5be4b0c9e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6af3926-5b5c-4e57-afc2-663e23e5a9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42eb94bf-ecf7-47ff-8faf-47b825a36d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c9b885-53c7-4ad7-af81-6542d05d3473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59166f4f-3b6a-4377-8e4a-811375939d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a7eea4-52f1-4177-8fa2-b1dd1a99d183",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9043033-3001-48b8-81ee-c8f5e78f71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c6b129-083c-410b-92c8-37950f36be99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5eb4d2-d13b-4e09-a814-77f59a7950bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "962824b5-fa4f-4271-adbc-a22b05abe110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d012dbc6-670e-402d-8c6e-3b74fc866a89",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc76564b-6c76-4fc4-ae9a-eacb02cc42be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcbcf2d-fd40-424f-9907-e2836ac3c5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316954f2-581b-4a59-abe8-3ae7ae5c6b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "429d0460-7a68-4ad2-91f2-07631bffe91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90031c7-b945-4d0a-b419-f63f838ae869",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240da8da-a84b-4e4b-8c0f-457eaafbe514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fbbf99-0e67-475e-a7fb-e5f23f137b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6deab7c-12db-4874-bf39-00e5e3ba1d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4774cd70-ebda-41b2-9c61-e04f95a51dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb14b33-25f4-4f3a-8d9a-2648b52b3ef1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b90246-a234-4044-9549-548527085ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c332b3-1d22-4bc3-97a7-2d5535806013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b64bfc6-4211-4b91-80ef-05dcce30c278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "872caef4-4c3d-4433-ad47-0ed38f2316b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7470bf43-cf83-4687-82e9-64311825156d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f670d437-a0bb-4161-8a1b-2338ca1e2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3eab5e-593b-4bce-af98-b240d381c9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8629fb2-1a66-481d-9c4c-db14129162ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9beb68-8e64-4fe3-9adf-80f19341fd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428ab9c6-bfb1-4d45-8984-b71fcac732e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07eec958-060e-4e80-b700-6c1b2a006b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f3e3c8-1084-44f9-9619-598f694f78ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8203b2d-d144-403e-bcc5-515de8efea5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c404fc5c-4726-4112-af10-d2388236b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028b4884-6ec6-474c-970b-e84ac2de572b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0a96d3-61a5-4b80-8b4e-43f24c982abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3a1c7f-0f3c-4ca7-ad3a-eadd9a6e5431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2645f95e-31aa-4e1a-b1fd-4f2af8756656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e22462-d018-407f-abe6-345e18e28bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3075f980-e872-43ec-b460-5d02a314d150",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ddafb-a251-40be-9fc4-f3bba613cc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017c131e-aec0-4782-9970-e9a08ff475b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0053552e-6883-4a73-b97e-65bc1ff4a70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d170addf-905c-4a16-b3b1-1df7f4645a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f0a48a-1773-47d2-a423-236138b7eb7e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a24c5b-f59f-4c54-a39a-811e54d337b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bbbb4f-3f55-48b7-add8-dd93a40a3aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f82805-542f-40c6-8307-569226b71e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "272808c3-950d-4d29-9ba0-25b4c1a99fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0b565b-371f-4a82-847f-e5d685fd46d6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a8ddd4-ab3c-424a-ae46-72022e7384a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07cc89e4-3eb1-4a47-9d22-40ea14714902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8affb6e-48a5-4a0d-9117-db04d1255583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd71229b-20d0-49ed-99a0-a39357406368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ba7fe0-5d91-41de-a4e9-83ea268419bf",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecc8bf3-b898-4890-91fa-ef5abc9ea193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dda37de-c938-4924-96df-16d2b9860c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c25d011-2f3c-49c4-9fb2-f8f6ef633075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f1e7a1-aaee-4ad9-91e0-d3ff96b08fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92161f96-736f-45e2-ad05-babddfaa3b54",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c100e36-04ec-4200-910b-985d745aba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1455009a-9ced-4351-8b83-fa1f7dda57ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da84e1-e984-4e93-877d-fc0f41330a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e83c8b-a015-43d9-ba87-60d6f5a0c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eda1ae-d4b3-4ad1-84c9-b78ff6bb4102",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e40835f-2a6a-44d4-a931-7774a2b44d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16240cb3-06ad-4d67-876e-41c38d31bbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cbf91e-e8f9-45a3-89bc-4f3f78ec7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa5cc2c-62fa-43ca-b47a-ab19305564fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be246d-db28-45d6-a90e-313604624b7d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c56fc55-4362-40f1-bd26-4df1933f94e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2188ef-b65c-4ae4-a813-12aa7a209e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612590e4-aa07-4c00-9c71-77adfb7cdc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bdf142-0e7f-454c-94a8-136579ef7044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2dc2e5-00bd-45ea-abf6-fd1dc635b951",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78be47c4-e083-4e7c-8c60-b76d2a8f721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e1038d-128e-44e2-9161-9db4aaf366c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5be3b04-3134-489e-9ba1-28ec25104208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf341dd-2da7-44b4-a028-9aa37e1e9cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c2b0a0-c6d5-418c-ba2f-4ba1002fc637",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ccd0db-9d95-41bb-9370-c47b50f5b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041b44bb-1cfd-4647-82fc-b80e872c3cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59bed9-417b-4d6d-b401-823f39c32c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba17ab49-8634-49af-a3a1-728256cf9128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a58360-3646-4fb9-aef0-5bb140903f14",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5491da-1d9d-4182-a218-fdfcc7b16558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50abbbc-d65e-4da0-b336-8e551d6e7e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66590a59-44aa-4bdd-81b5-3666ad4c4040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e917f4-49c8-43cd-a1b9-4835e7aecf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef74ac6-b723-4f5d-92ec-9675a521e3d8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136a610c-4fa9-41f6-9c3c-b76dbdd746da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3767a16d-eadd-4d41-ac0a-0d977ea0cd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cbc7e0-224e-4fbb-afb5-e722d06a07ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "538fe528-1d4e-4bae-8b61-e65daabd9c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b684c02-f1e9-42ea-8a13-73974e76ed18",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947717ed-32fc-4cfe-b0cd-22bd3a02d186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "199b37b6-0d49-4cf4-aa8d-c312c9e86371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b793961d-7767-471a-b386-ff0507fe1096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e523c10-200c-4e60-aa96-1bda29597887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd25e6f2-d4f7-4121-b852-db91e293336d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61e927a-d783-499d-8cbb-75a131070dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405d101e-eb0e-4656-a36c-0c8271ec29f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21ee44e-5b66-459a-a09d-b37da1a08ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbab372-3aa2-4549-b27b-d4c2a47d8141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649720af-5c93-4267-8cb3-02ed565ab0e4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc3777-cc65-4589-a4df-6cd9f74d27cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd637fec-2dad-418a-a34e-f92f9f3b9eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9cf277-976b-4505-8471-e06f41e339c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd99af1c-ed54-466b-b93f-bc9dfd69dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2d9fd-eed1-407b-b73f-7097a818d5f8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc807b4-e29f-4d02-9453-1ca7cc981387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cbbcb1-aea1-41b2-bd25-dee84ec4d2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43416384-aeee-412d-a0c8-a7e4d55bbc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18284b5e-48ee-4e0c-a67d-3f6e6467f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be65a7d-12cd-4616-a9cb-115103ba2313",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bfdd6e-3e50-4562-9d70-ec644c52fa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60ae3e5-4fe2-4124-ac80-d6500161c07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3c939e-d627-4f83-b695-64a5cd5aa3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "152d9154-ba23-478a-a01f-779c1e1b77d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf228f-cbe3-45bd-8c81-6cae71d864dd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd47a03-c32e-41ab-941f-8c0706ce53ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb58e97-9626-490c-8f57-07d0b7425a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c799f67f-f739-4105-a38b-c05416ac2dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb41884-60cf-434b-a2be-5f175e6b1b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be76b4a5-421e-4869-a6a5-c3b8963dde5c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d2f20b-b1da-479b-95dc-6815c7fcd1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b0001-3db0-47c1-af8a-d616709adea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1ac825-0302-41c3-8204-3a661f8c6ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c7739db8-e50c-431c-9561-e258933cf656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04635d-ad49-40b1-88c8-3d099ea58b3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1260094c-9751-4b25-93fc-2a3ab1252da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cd47af-50d4-4ddb-993e-cb5bbafb5e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9cb4ca-7d49-41f5-8988-13a1eceb8004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9b05e5-71c6-4489-ac7a-8176b25d24ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb40f86-27e4-4808-b76d-a7ed93e9fa01",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4adaa07-51f4-4a3c-a8fb-e7c1699bb715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e0f974-36fb-400b-8b0c-b455c2de88db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a6a304-d1e6-4e95-9c5a-7cb8f0c6b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c416846a-6d46-4e54-a206-83ec15bad6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e0e4af-27d8-463e-8f31-aebe20a30c3c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd5ce96-7bf2-493e-a82b-cf0e6e3d3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd76b363-15d2-4546-9e00-ab5af04e3d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a396933-30f8-46ba-b1b8-116fcb03af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43b6e45-cc9f-46e7-a6b1-7657f03eb9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d6e94b-e130-4519-9eaa-1931ae1b971d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3447cd-549e-4e3a-9148-126eaa31fd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5916b91b-c25f-4ac4-8240-45c631e9907b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869f4f86-a318-4717-9d1c-4c9ace3f11dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad70875-afbb-43cd-8105-f493549cf93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6d962a-e630-4041-ab7e-86339abd203e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5740fcb7-6e4b-44ed-91fb-b9444ba93c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99fb95f-daca-413f-9fa3-fc7a127ccf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03775fe3-3b1e-4071-a56e-1a93b2fe5122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fb1722-4681-45ea-8a72-6e98440ceedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934ceb3e-8797-43a8-8d52-a2536aba5683",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3a3a0a-f966-4d61-9baa-20dc4b5b7d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3f0198-1691-4677-bd0e-3c01e9755412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9931a5b2-cff4-48d9-bf62-19c0b3156eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "757c3959-f5b8-4681-a353-1ac7a9f1ecf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9149c0fe-7bba-4293-92f8-ce1874a4bed5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d5058-2906-4acc-a46d-f0ca93658513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d778ba0-cd89-4b0f-aa14-e287bd9a2f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edfecb8-599e-418b-a69e-3641ad65d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "920fad8f-3513-49b7-92df-6fbf65d72235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3fd109-dbb2-4aab-999e-178d0a233408",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfa24e8-b9cf-4690-8064-649a5c5fce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747835af-c8af-4905-ab75-3db7a05ba7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8acd1e6-bb45-44f1-b67f-e3a4bdb01d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52787de6-38e7-470f-ae00-172d7477b636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206023ca-8607-4274-81c0-fc641414309b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe2e2ea-0503-44ae-a927-b2140fc148eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b585308-d509-4395-b389-869fac76512e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21734de5-2d21-4c62-9e2c-b199667db473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e25facc-2d90-4e82-bdc3-d23f5d158616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e981e-8466-48da-ba05-95b0f2360bef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72131be-48a1-48bc-962a-c49ea217c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0039ddf-3785-4657-a18a-d7f37ed12223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd032ba-7f38-49d3-83bd-216a2ca48397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23deb27-ade3-4855-aa1e-be8dafb35346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1201a61-0049-41c7-a3ee-5f8b2b69c0f8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003675b6-1bd4-4945-a1a2-7212a667eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ce874-2138-440b-9c3f-e8c6810665b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713bb0b9-ef56-4fcf-90d7-7c9b9ff568c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22000fb-b7a7-4155-bcab-7edbd71bb814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d413b7b-6eb6-4e93-9d23-fb0897e5f37e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197aaa34-a035-47c1-8f26-c8dc15a7f775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fd838f-6eae-46f4-b732-30b3ec4f0e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe457283-2782-4c58-a4d0-ecdd874512c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5a5c8a-3354-4923-92b4-425b558e2058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27d81a8-fe05-4391-a1e7-26356cf090ab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97bc6a-ea27-431c-b161-30938596922e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62d95ff-ecbf-45e1-b06a-1673a93546c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628bbfdc-6f2b-4648-a003-2b2a0cfcc1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d304a9f6-adc4-494f-9454-6013ce97738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4341150-2c49-4af7-900a-67886c9a4d9a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9795e5d-9d91-4de9-b4b6-471297bc71dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6344e6a0-8e0d-45b2-b5c3-300976e45659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e01928-29ae-458e-9dbf-a4427c0ddf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "875752c2-b76f-47a7-89e5-8d8e956b150e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df81b2e-c132-4f29-8300-09e9b8066a3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061f12b0-1d21-4742-a054-1648b61f91f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c561cada-a380-4228-aa37-ffb206b170b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ad3fe6-196a-4f4d-b2eb-f1d3061e1bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "945226d4-e877-4096-b5dc-77a964b3c516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56003f3a-8716-4410-b275-bc0108cad50e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a0d811-f2b6-44d9-b334-fd6e0162296b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cb1bda-59af-444d-bd75-b10464ec98a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3752b53-b361-4125-b7aa-fd5c84231afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52dce46c-569e-46c1-81ab-5a738811c6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c8d389-bc38-4d83-b0f3-e03a9cc14be8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8069ad91-7f90-46ec-a288-19960a51f09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3267021-fcac-4075-8bcf-046bda67a238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483ee5d9-5c2e-4d74-ad05-018222cccd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "347769a3-853c-4cf1-beb0-be6d98c5a4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195265ee-a3c5-4098-84b4-b832e508a81a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11986c5-02b0-461c-a491-219899626603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ac0a46-a75f-4e51-9344-6e3e7f9880cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a09995d-7a5f-4c61-a41e-4478de17772a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd25c2be-6397-4b75-8d91-801f9718b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc84551-f616-451b-a590-d3de945365c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02df060-2ec9-405f-9757-2d8b2a339aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc87a19-052f-4b17-9fc1-75299a7d74f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b682a226-99af-4039-98cb-a8220203a143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "080e2f7c-baa3-44b5-b09c-255b9fb4a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e5ce81-24e2-4564-8e1f-c72b7a70d2fb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3092b85-ea3b-49d8-94f3-11b85f0807b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78c351b-5e59-4a0f-a87f-21363f34711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5062de92-5981-4d97-b659-4c926795cbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "773fde58-6598-415d-b656-7676832738a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e8db42-8a2a-475c-90ce-6cbe3f3a4c23",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3043455-e34c-42f5-9d70-56cf1c2f8461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dca4f25-1c70-4efc-878e-76781c138116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a412f6d8-91e9-467e-95e0-5e10570df416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b20b7239-881e-4e20-af16-23f5388893a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9165da5-820e-4c81-bd2d-f9a228f046e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca20661e-4bee-4ce7-9877-8c788ea53178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a27ae6a-6e6e-4048-acd0-e76c52f150bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0b137b-be0d-4aaa-bd12-86f0058453ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e296cefb-b147-4346-8b60-b3bc3a831d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92d477b-15a3-4980-a18f-1e212afcfb70",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d5ee52-6907-40b5-8a35-edda50cddf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705e54dd-696a-4c04-96c2-8ae9fa574488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab249a6d-90a8-4a09-b525-05000d83a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed200b6-9a2e-44fa-b0a7-2d87017f7408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddd9a0b-4c2f-44d9-ba9f-473b8c5d7017",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78a93c4-e873-4cb8-8417-88cc10423d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287ac9f6-4b09-4d8e-81f4-df4997eb836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209a861f-600b-4ac0-8999-d31f5e9d4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3129fd-a916-41f1-b21a-40ade8c988fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81b1d4b-a1b7-429a-b12b-50e530ca85fe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d88faf-7842-4ea6-bc88-2505377f76b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbdfc10-335c-45b4-9c29-6c246142aaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a77bf22-3561-479a-9abc-63ce563531fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f27a3a9-5759-48a2-a8f3-10cb603e5ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a789ac24-e21b-4197-9acb-e4110af21375",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759c71d4-a13b-4d4c-b5e5-12ef77dbe37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5408d131-858d-40fc-af87-80749816d7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a485362e-1180-4cd2-9019-46077635e165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b304ec4b-4600-43fa-969d-5a1dfe85db85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2b568a-3fc8-4ced-a7e7-9eee751bd05f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f1e368-50a5-4249-814f-78172c3f4da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89f728b-5e65-4dd6-bd48-f5147b76d9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c6eb7-eba2-4513-b46f-a9a37e1d212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "735af1b2-9c86-4128-bb82-3c9f7bee758a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5309b-5da4-41aa-a305-ae033607ddfa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70665ce5-1c27-499c-85b4-d890c5a458e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4015a844-da02-4fb8-827e-36bfe1d8b2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba32d9-d83b-402e-9760-2139b82603f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43542682-acef-482a-87f7-9e42e4d8adb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51547e35-314e-4719-98bf-5f8645a72661",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70387c36-a2e3-41de-8d34-d8802a57f863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6fdb1b-63e0-4e0a-ad8a-ac482a2d6a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c12bb0e-7dd4-4b51-9b4b-97a743f6c155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e09b1a67-083f-429e-91c9-89722d000ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776186ca-4615-43d8-85ad-fdce77c9d811",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedecda5-2dcc-4971-8f4f-0ec74d3ababa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f1b586-fe7a-44dd-bcf2-bc92239a63d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead67b22-7e6d-41a3-a930-e4489557c25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80177d5a-53ca-4938-9493-5910e78f4402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd5110c-9ca3-4618-9fc9-93c0aaa3bfa9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa5d922-45ef-4320-9ee7-aa7187434d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7843b40-a237-4a91-833d-cc66e400e2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4a037a-e077-4b5c-8c5a-d747cf9adab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "062292b7-aaf4-486d-b648-2f87de7c3606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814c13ee-04c6-45db-8adb-0fd857961c95",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ab0160-e7e0-439d-acf6-2f7265f5b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28012da-481c-46d5-bddd-2b5582bcc692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05655684-9fd3-4816-972e-1157d4292e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec1049b-b92f-40ae-a55c-c80a3c85bab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90dd5df-86b3-45c5-94d1-6d4e6a5f255f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e98159e-a8bb-4268-9718-b46c24ee8dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9262b2-c938-4143-aa79-bddc0b60cd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986cadc4-10d0-440a-a6f7-806771c5f728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccc08ae-5c74-48f7-be12-39a6b0670bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d03f87-aa07-4270-9c29-b17ab3d17cab",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324457d5-c9e6-4a64-a7b6-dc72d2e66b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da06bce5-5edf-4a4e-bd75-f6a82615a2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf421991-f0b0-4ca8-8a82-b964cff3410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4afa8a13-99e7-4c16-b451-1d94c4b2da18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1753b68c-60c3-45ff-be98-43ffaea670c1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf08a2e-ece5-472f-b5d2-eaa33b26bdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5575df8f-67e1-4320-8957-8389415e8860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d6903d-5720-4f8d-93e6-834a1f565275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fdacf39-9cea-49cf-bff2-024397229fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d873227c-c8ee-446e-8dc3-1f3b04af2a47",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abcc7f4-38f4-4da4-9d1e-3639764bb509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12356a97-91ac-4f8b-beaa-58a19a770fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ac781-3cf2-4562-b5d6-cc053f5637c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01370a00-aaa7-483a-abbf-8b0d44cd1d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affc792-8c7a-4cf7-8cb5-af63db46ab59",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983e0794-2e0b-4617-bb30-7ca5cc499418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3459179-ddf1-491c-8f11-71e34676527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8858b0dd-9ed6-42ff-ab3a-e2c688cece6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e6d09-486c-436b-9476-1fb2773956d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e43cf2-5889-42bb-ad41-ef9433de9b15",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d275ebc-dc49-4a87-b9b6-bda8d11e646a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472aa360-0616-402e-b91d-3a8a2bfde80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965dfa04-a6f2-47b2-a198-a65d84795519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "594fb997-a5da-4da6-b3c2-cc314b1dfc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5a26e6-644d-4fde-90d0-fedbc266a0c3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc44658f-09d5-44a0-9849-7dca70fbaa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afdf56e-ba65-4f84-808e-64c5d0b0df2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adac141e-c24f-469d-90bb-9e5fe18a7290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a47e0e-150d-486d-9083-4e107dc41b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae394a-4b74-4962-8376-f2110bff3fde",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb5cc8-a324-4880-8809-974ecf6f14b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4d7167-7821-4ebf-858c-b6354cc19bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f778ea9f-3a6c-4d60-ac12-46173ce0e5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2d5b7b-89b3-48a4-a75c-d334bff49d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ca24e8-86f3-416b-8cac-23d3dffe0621",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b51290-e189-4a7f-abd9-0dafd892a84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe78fc45-a851-467b-9ff8-c50cd23666cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214fb2ae-aeb2-4d4b-af45-f6f439cdacf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c6c7d9-dcee-4e0d-8e9f-f56e1dc06d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bea72c1-f1c7-42c5-bb38-df089bd105d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bdce06-8d3a-48a9-8c80-34d129fee6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266cc253-a38a-4ae3-b1bc-6f6fef956593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa4a00-e0df-418d-a258-72b6ea73650c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9f5814-398e-4a76-94fd-d0012895ae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c7c6f9-cf99-4df4-952a-5840fdd966c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfae4a2-f115-4e3a-b691-e137cac4fdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea48540-9418-4e0a-b3d1-4e73e385553e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1044cf3-b7b3-4e1a-ab1c-12606be69f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9af8e5c5-a2fd-44c5-8118-56468332df33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447885c-bda4-43b1-a29e-7e739ba40045",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca7808-7b1b-43c0-922c-d5baf95fae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5d2882-bdea-4f12-b148-3d7dca888112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8e692-6d77-4a45-80c6-e65da5d13f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8735f3ab-9196-4b08-86fc-14c3e57cd550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b9ae09-ece2-4fec-8516-5c83dcc72df2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce4dd53-b14c-431c-ba32-6c0b0b5ccf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dc2c74-f479-42da-abcd-adac57e9db90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b9598c-c6e8-49a5-ab7b-c160246bd16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0d1597-a555-4b23-a79d-fdbb41ea7b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4500a5-eac3-4b68-a52d-b66e59a120c5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805a6209-a545-47d3-9fdb-de078973c228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a0d5b7-8cab-4f5f-9faf-555a8b431b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f401b09-2930-4c9f-b333-e39cd8d66883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26a3f40f-a2a5-422d-a29f-91e548583869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6358b13-860d-444d-a362-f6a87992fd22",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d741aed1-2904-4e89-b0ab-a6c8521e1d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bcb84e-8663-486a-b3b2-a7f51e43262b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fcee1a-fd32-4e64-9059-bef4331fee1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12f90829-b833-426e-a501-353d4ebe2b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10896801-2532-4e6e-a1f0-3bfdd09d9de2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f772bb-140f-4222-b41a-72eb2440c386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3622fb-3721-47ee-91da-a8c85f1067fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6807b18a-cfad-42bb-b3e0-8fb110dbd99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bb0cf4-44f8-47cd-9917-a224b27012de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce9448f-e729-4a50-a827-1795eda36add",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2a297-60a1-4ee1-8534-1681699fec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09a5e5b-8f8e-4597-9bd2-e305ee67fa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd549a-0cf3-4d84-b3b5-7b408b5addc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d524456d-ba4f-4f7f-836a-71393bfc78b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ab980b-7a05-4dbd-8420-f116daf161ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70b6dd9-7f2a-417e-894e-95c807abc636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2639eefc-46aa-4576-ac7c-164399e5be7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b872845-719d-4f00-9338-7f56cebede19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5cd656-ee40-490e-b703-f1f9dfc93b8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af66a2ad-9287-43f2-b7de-49baf2b7ca31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0e30db6-680a-438d-ab3a-199c2f0eee13",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f11498f-0063-4638-b66e-f9c7a6aa7803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c13c4bf5-c7e3-493d-a3ce-a8c67c881711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddde07d-567f-47da-abde-99180cb18c81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6596e6f6-5e79-4d73-911c-b9dd181934cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c43c96a-e776-4ef4-93da-fcedff2fa8bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b04b351-6036-432c-b1a0-6c2d94bc235a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d77d393-88f2-40e1-8e7b-5b4562581475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "014a52ad-5bef-4565-b59a-87c6d81fc7a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee18ef82-9e59-4a10-bc8c-24de0c6588d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2332ff0-cfc6-4bb9-bcb1-c4f25a94367c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "245f74fb-ee03-4d33-862b-8216334addcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7121e5a-d538-4d05-a075-fd37271765da"
                }
              }
            ]
          },
          {
            "id": "8496197d-6dac-43ae-99ef-08c3428060da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f880990-f4a0-45a0-8da5-afb4b749a468",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "377951db-61ce-48f4-8a92-bcb63ceed01a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "854d946f-2dde-42f9-9cc0-5e1f8bcd72c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e9461f-467d-4d70-902c-5a758b84b2ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2fb394c-8fcb-4426-b32f-8920d77f527d"
                    }
                  }
                ]
              },
              {
                "id": "0609c301-264e-4b85-a8bf-262ad996d76a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d203a35-f4bc-4ede-b28b-aee1e4039edb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd9c62c1-dc72-4211-a59e-ffea56a500b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a621542e-e7da-4fc2-bf2c-44082402ed91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84e81053-02c1-48bb-9bae-016e5c512084"
                    }
                  }
                ]
              },
              {
                "id": "4c81cf9d-ba76-45ac-aaa9-15223b4f9414",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc544a31-8c73-4892-b814-55544c98437a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09853cbf-fd0b-48b9-93e6-a0eee03711b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f77f14c-0918-495e-b727-efbf62fb617c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "62b9df66-cba8-4917-828e-b4b832cba24a"
                    }
                  }
                ]
              },
              {
                "id": "3f6caa65-e62d-4e06-8e2f-7382e7f85cbe",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ce474a-0a8a-413c-8a60-96bbe7a41ed3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f328d44-9a4b-4318-99cc-5cfdf94ef667"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a826aba9-dd06-473c-8387-f474ea0aaa2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d3cb5559-d807-418b-8613-8a4da1ecdef5"
                    }
                  }
                ]
              },
              {
                "id": "8a101b6d-3101-4906-8980-b4254e8f1460",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a014ac53-31d0-4431-8b17-3dfdb9cb5123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd2c071b-22c9-4129-a0e2-db5fd0c9fabc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2264312b-026f-4919-a555-d556a6652378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c4d3990b-5172-4b25-be3f-807d50f34910"
                    }
                  }
                ]
              },
              {
                "id": "dc6bf440-7d61-4a1e-8f69-1e896658c341",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea3131a9-6c57-4d5d-a7d2-e94b05d1072f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7daf0de3-f4a7-4c0d-ab80-4cc44fb0d84c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00159872-58b4-466a-80fa-1e18d71ebe68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa728aae-20c0-4023-88f7-cced44405907"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dab4eb82-e5d9-4042-aef1-7e088c21263e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d4884e2-af64-426b-8c8e-329dd09608dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "60b70056-2c7a-4c84-926f-fed2e8d6f19b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92853837-de2a-4540-b3dd-9a0c71808fdf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b4c4d6a-5d5b-4eaa-be71-321c317f9a60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "edfcd119-5223-471f-8d30-6696bb34d220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daf8d076-474d-44fc-8342-01b4b50d5d3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e3e481d-9ddc-4499-ae7e-f96c44619c6e"
            }
          }
        ]
      },
      {
        "id": "bf10b2d8-02d8-4505-917f-cd8837a2a972",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "85e8c491-5325-49be-a770-aa994fa1e0ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8eaf53d9-1ece-404b-b094-2eae2ebddc31",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff236dc8-0e5d-4517-8fb9-9915106543bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef1f25b-c7ad-4068-a65d-977444d4c707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e30e5be-aafe-42b8-9ff8-505710b94cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15129e43-718f-4085-a52e-a42a4a5bf7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9178d2cc-1536-4728-8a3b-7c2c1704ea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df0f22c-52b2-445d-a0fc-8bd6ce28a5d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be9a61b-10fe-4385-8bd1-6760f37f1562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d33911e-28da-4acd-928b-3009ca5c3a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fd65a7-2c43-43b1-9bdc-0ab4db1420c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16cb075b-083c-46eb-bccb-e607e1b27527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1406bdca-462d-4a2c-91e8-e7625344f73d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25da02df-777b-424c-a1b4-a813dd1064d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edf0023-8a8e-4368-8195-6787959dd80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a98e9cf-03cf-4c39-95c6-29e672d48fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dcc521-87be-46a5-b078-2ecb64cfa51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4d2ca4-67b3-4a5c-8a1c-72e28c7a36c6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c30789-2a73-47fb-95ea-e1f6f18c4ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825016dd-acf7-4fc1-b56b-5ae2fd5512fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfc0545-d47c-45c0-90fe-61092b335049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9622e083-876a-4274-8fdd-d2274856ed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2213fa-9234-4b9b-8005-495a332e4769",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43acbc88-80ad-434d-bfd7-033537ceb66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3813d7f2-b66a-4535-a68b-59b75f7a4737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15155105-6716-4a75-813c-39e3abb775c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4cb7f9-2089-42d2-a2ce-f88c70da2331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c399190-93cc-46e7-b56a-46f7797a72e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816f5555-03f1-4784-8f08-1b7bd04ecf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeed420a-9785-4aba-9f97-5b7377f19c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b9309b-356f-4d6a-98aa-ad41feced7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3427c79c-0cae-467b-a186-89d05bc5c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562e1b39-7158-43ea-af91-8722c325fe90",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b900bf-743d-485f-ada6-c89756dc684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51271b8-60a2-4119-95a9-97ab94fed0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6ec78-5819-4032-8160-9e504861690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "349a24da-2ab8-452a-a1d5-4d323e412846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee09489-3f31-4940-a3b7-7d201d372eed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af48d0ce-4bcb-47d7-9ad2-84fb81b58a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae01679-b013-4923-8e23-e27d2a62da52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a314fba-cd98-45d1-8bf5-9deb73dcbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e471db6b-b53e-45e8-92dc-ad13be156940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf330dc-3d60-45fc-8370-a9698a693bca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd4a449-1fec-45cf-b9b7-a0c0f5ffe3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d510fe14-b94a-405d-aae8-a9717f4284bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ff31f0-1d1a-4540-b8e5-6d9a3673dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d37586-aa3d-4a84-aec5-be6110906fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d7ea2-915d-42b0-9402-cd58a2303823",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb347f8-0ee3-4673-ab61-6b7866b72e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0936909b-265a-4f2c-8101-516556092f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db36355-f694-4587-984b-5a1671b85d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8787b9-6281-4b7c-99c9-a5cc209aa670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e75fdb-ae1a-4677-8db8-17ebfadeaa8e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce250d-270b-48c9-bd5e-205ea028c3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7098ad6d-b39f-4afd-9ec9-851db56d2821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d99c6d-3356-435e-9c18-52b86595e51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a91b6377-258c-4cae-8b0c-255f4fbf2334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ee09f2-e724-4d81-9265-b90049ca1259",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f292154-3b0e-4696-ad3c-a4c620b847ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ab5bf8-0c70-4db2-97d9-ad4d5949a98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30394730-3449-46fe-a19d-cb6576a9c465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1946ad0-128c-4bfc-98ab-e0f4bd30c9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c749c12-b675-4774-a96c-61f3cda26df8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c418c5da-e414-4b17-b872-2e48f1995751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f58e9d-c7f7-4f9f-b8a3-78c9c15348dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47a0cbb-2658-4e68-b217-99e866f12c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ba3a26-8ed5-46f1-8867-56b94d355502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6e9d01-e4e8-48a4-8768-a77076ec14fc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a4fb59-e35c-43c7-86d8-86dce5e5cfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228a4712-da3f-45f7-9f1c-21cbe5ff1bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe49db90-bedc-42cb-887f-63a139780732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "54dc3d4e-bde5-4e3b-9b5e-bf580f7e0d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16846bb-3770-404b-8cfb-3026df2a1fd0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b41816-c978-4001-bfc6-b0e0dfc6abbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8804188-7126-43a9-a535-3b7f68efe92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8c0d07-1118-421d-b958-d33659f82447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "745aa441-6b78-45a2-999a-6e5d4435fad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ff2a80-0b9d-46eb-8005-f7f952d3d704",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cfedc1-f030-40ef-8990-c0f8f382932e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51215fd-ef8f-4649-99bc-6f18e0e8b3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093accea-3e41-488b-956a-a70d548d074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2f73f3-d17d-4c39-8302-48e1da3b6f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0735df71-10af-45d9-beff-b54d0ce938d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0a00c5-69b5-4709-a9c7-4707f0a6e67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0040156b-8691-4fe6-9002-6ab5f6f67e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25783a6-6583-4cd9-8b56-6ef05c0758cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d83e1c-e368-4b45-8ee4-03c9a9993c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b563d7b6-7e1a-469c-96b7-095f6ae5cf07",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ffa1ba-1e7e-405e-aa18-ca1a348d7780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21bc5c9-e362-410d-a06b-619a8138f9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23213af-c049-49cb-a15c-48ffd60aa957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d5e919-c1b7-4d0a-af5f-c6ddcbdfca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1ffd99-8f89-4af7-a74a-20f336dd1d6a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829df11-ffb6-4a00-818d-0bf3f361efc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0019e9a-3eed-4600-8794-a06c2b4c3b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057e37db-e686-4685-9be7-7ffd4efd30f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a20c36-97bc-47c4-8563-e310d9d56f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87943b07-536b-4a4d-80fe-c42e47d1ad89",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2b93b-19a3-4db7-9031-6b3fc04c1f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4900ab13-84fe-4df4-9925-496edf5be24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957785a8-6bfa-4b0b-b81e-0c5197fef91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f967f081-723a-4117-97f3-8a5d64db4a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecbf583-ba48-496a-8170-dfa0d2ff42ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2f2b6e-9d4c-4566-b4de-22eeca759270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ffc71c-f020-4de8-b7b3-256012e1cea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c5519-4057-4ce0-8a59-adae4f4fc1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7477c429-11c0-4ac5-b7e5-d0b26f188a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85512bed-9259-450e-850f-258e352dea5c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a20c52-bf07-421c-943f-2df16bc2ef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9daa1a-aebb-4207-85ac-d1395cb14409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ac4f13-106e-4b6f-b201-ee9b5874ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e501a06a-58a9-4352-9e9c-3c0c35487b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d34ec8-00b2-4d77-ba4a-cee68db70ebf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc26b1e-889b-41c3-9e60-6efaa68557f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b45e32-8bf7-425c-bf2e-faa12daf5ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b355911d-24ae-45b2-9500-963b82980855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d17945-cfa0-434e-9915-897cea035654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a64a611-d7bb-461b-a59e-d61101b2fac4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d42798-4319-4c68-ad2b-161bf04d05d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fe21c2-6468-4bc3-80f2-c221cdf71c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf98da00-1df4-4c90-a04e-e5edb30e0b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df85e229-993e-4003-a662-c85f00e0ef2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef105011-6dd6-44bf-a71b-6316390db427",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9985de-17d5-42f3-95aa-a435a80fd00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249db388-5062-4c1d-8683-248c3c498ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb23fbe-bcbf-47b7-bf4e-1405e747fca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4570306c-a628-4a2a-836b-37f12cd21f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14339683-258a-4bcb-8d86-fc3516817f9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c90f52e-9873-4012-b39f-d0040f503fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0474cda4-9eb7-4c87-b208-72559a93e3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12df1690-5c69-49ec-a009-082b91b51c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94217b1f-dfd8-4b0b-b8bb-568c49c30da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a2ca93-2670-4151-a768-9010ecea9634",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a838281c-b4e1-440b-a840-f6ea83f16d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1278d5d9-cdd3-43ef-83ab-48b7e0e99415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa616a8d-d68a-4a17-915d-a8e7fc242f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7efa4be1-c1e3-48b4-989c-7f6c5b913c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3304cf-a56c-4508-b500-0f16b4cfdfe3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c9ffd-94b3-4ac2-a246-05bd43b6e67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8625f446-0913-4c7e-81db-3e942fd13172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6296f2c-062c-4a3f-9c8d-e77ec54addf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17259a02-e430-4eaa-85f1-ed5e9ebfa422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbd8ce9-58db-4767-baa2-2e4b7a3c906a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f3162e-0874-4cbd-aa22-f0dac18632f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b2fefa-7202-4c10-be16-9c549ae00577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a952e180-837b-4a34-b07c-651929e178b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d969ba04-adab-46fc-93fa-e9220d43c8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66a1fe-fb62-4560-bcce-53d9f3625e83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536c2045-1192-4c73-be83-31a36152aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58281faa-711a-4367-b9aa-67405abb07d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53d4898-eb93-433f-81f0-5ab8f0f0422c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a6a482c-586e-4970-b0aa-c7aae599e712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ee28d5-9f28-43df-bc22-56330b2c5c65",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e80a8a-432a-4e60-aeaa-7c9dfca0c28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecbfbbc-4878-4148-9f68-d19188bbb3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767bf93-4985-4c6c-abd5-8eb3c344de2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701c813f-f9d5-453e-90da-896ff0b795ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053869b6-5b24-47f7-9828-990f3778d646",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52b42a2-279d-4f6e-a2a6-a1ea7691e5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dbb01c-ad66-4dea-9afb-ea79a61b21ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8977ba16-83ac-4059-a495-25a9245ee6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffe34ef-602a-4c9c-b1a5-9628e3f41380"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a4186b4-aa51-4838-abe3-5f87f2e8f72b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86f934e0-8217-4390-ab73-640f95ad9a84",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457dcc09-c40f-4372-9318-ed5f735e5d05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "95d0c216-6370-44e7-91b9-db6648121a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3cb381-7d27-4bb1-9e1f-bbfef162a2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebe6c260-0134-44cb-9c62-89a981330a7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13a0af61-0d46-408c-8f38-27f75f05ab27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56b087b0-ceef-440f-b909-b4280bfb8be3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a80500f1-cbef-472f-a9e6-34b211a90ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "339c4a8b-e1e6-437c-a54a-ed23b229e497"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4f4711c-e14f-40aa-bccb-1006544ba41b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a2fb62e6-f9b3-4e9a-8989-d12aedffb1d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a002ce42-7dff-4ee7-8428-617cf0b12c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02578cb9-0aae-45d0-8c7b-d7a7925bb6c5"
            }
          }
        ]
      },
      {
        "id": "162f8189-1990-4a2e-8255-0cb949f525a0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6360026f-6f82-4820-9810-358f240f1410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f92b1c7-52fe-4ef4-8c68-2cf7f79d0990",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d142705d-f897-44ea-976a-d343effcca20",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edb6791-38d1-46c4-823a-556a4f6bdc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde1b24f-55a8-4cf1-bef2-8534a1e0420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa1202-f16b-4dff-a9f4-c43056d960cf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82271ead-98e4-4116-9434-b151921e4229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33037d15-cf1a-4ab9-b113-66fc3fa6f6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130d9ee5-9000-4c84-b543-aa01a954586c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be28ca-16e9-4ea0-9528-9dda0f3dac77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd78f75-ae93-4f05-923d-1f69ebf37a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7298241-560e-42fd-8c3c-76d745a2818f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0205d84f-a18e-4b17-bf42-fcf410fe6baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0a6658-e82f-4d4d-877d-1256c0bed0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b91dcde-8ec4-438a-8e4e-4144cd62a8eb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73674b9-dc82-46ff-a127-83036ff64948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda7d3b9-2707-40f4-8c32-1abec8b90921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69b86c9-53e7-46d0-9acf-6b539fbc8cec",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56d408d-907a-429d-9dc4-1edb473c7acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c7b398-f4ad-46fa-9f3e-71f2bf3e8691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2419b18-8346-4142-8dd4-e1616118c1ad",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f557674-f6ae-4456-8118-10dcc5d388de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868001e0-24f5-4710-8e89-a59073fe8da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc47f3b-84ec-455c-ac5a-d7f1e6a87fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45476ed5-e40a-45de-a3bd-d496823d6d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c86f6d-a9ad-4408-af2b-c49b8a3933d4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8412b32-ab15-4a30-8f8b-602bfd077597",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2857d09d-9843-4876-b93d-ae211300547c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c892c4-d1d1-4fc2-aa50-990910cda929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da99fe4-11fa-4961-8cb6-d48926d4c4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764a3824-cbe6-4e48-83e4-2ec73add7b15",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ea3cb2-744d-4ece-90c6-e77ca189df0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd1f3e3-d22b-4be5-8490-14a955c1b6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891bac8f-c528-40da-962b-3c9bbfa6ece0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3c4d55-25d9-45fa-b9d4-eb0fb87eb06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c789f6fd-d509-4e3a-92a0-a08645088c65",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55aab7e8-68cf-4995-80e6-56765240065a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67aff6f0-70f8-40c9-a231-394e337eee37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c84172-a524-431d-9de4-eeb8637dab0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4cc896-ec2c-42a1-b014-f54e7c10aa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b55b1b-f7c3-46ed-bbbc-972b8d26abbc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31488e42-d725-43e3-8098-26edb732a926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd45c9e-e030-478b-b443-69fd946b0432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349a7220-887d-480b-8cde-4bc45d75145d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea13a9b-bf6a-4e42-a6dd-04372a0c07b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1672f1f9-0738-4383-9565-403fd9fc3a9b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e3fa55-3110-4c88-94c3-e3ceafc17faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c40450-4bbb-4c53-9344-641d506b2832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f06ae3-1cbd-412f-aaa9-4bf8d23ad6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035481ca-3d94-49d2-a687-2331efe63115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff247e33-ab66-4e12-ae70-0e632902763e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dce5862-01fa-41d6-aec3-9df2029e49c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35184f5f-e24b-4116-8dee-2c208e593e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa882cc-6e3c-4def-ba5c-2663cb39cf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7425fa-b962-4603-88fb-aba5b635c3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140d126d-037c-4f30-a507-6a5f8e5ccee8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae064783-b235-49fd-9df7-cc7ffc54e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b4821f-11dd-4aa5-a269-02df1ebffd56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a09459f-6a0e-4e7c-8beb-57d4713f0422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41160751-2949-4f91-96d9-27d3010dd63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49c1557-19eb-4f4b-b6b5-c7a417aa1f99",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc336ed-fe8d-4c4b-8d57-d58bff3c42b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9342db26-871a-4c60-a597-d1468c2fe20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2503730e-9de4-4277-9cc2-ae6b67ff89ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443517b2-f270-4065-b5cf-6b8dcb9abfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d74ab25-e741-441c-b651-9889610d6317",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aae5c4-e862-45fb-8afd-1fcaea82560b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adce9bce-e00d-4416-9639-a4e12e555ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926ee07f-8e0d-4d5d-894b-89bb5f13eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bab105-398d-4679-a3ff-3bfba953d783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dddf01c-c6b4-4c9e-942c-21fc89e81b57",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aefbc7-d8ae-4c70-8476-c1d8fc77e33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43273982-5592-4dd7-b107-dd114dad304c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8547214d-fbdf-46d4-8d0d-1b38f9609fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664eed1d-2416-46e0-aa7a-614bb08bd44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c654ea-464c-4414-9bce-fb520bc8fd70",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0ab518-187d-4170-a012-7d85b16425f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd67d3b4-2fee-4281-8c25-c89ebc6b0612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4d613f-1f19-49f7-bdcd-183a0d453326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e8d52d-5b04-4332-9572-09d4a87effc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8e58da-b99c-4ee8-ba61-3d1f12c8753e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0317aa-07aa-4d5c-b9dd-ece2b00ee719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581bcbce-08f4-41ad-8fbe-ad4063d7347d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6d7486-c1b0-47be-a0fd-d5bc4963f292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b3306f-5f5e-4a51-ba7e-f3c1e1427102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083d1ace-f0b1-4c12-987b-48fa8ab30306",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95237c4-3e49-4317-b419-2536fa4e3c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e295a814-314f-4cea-892f-ef4a4fcc0946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc058d9-7b48-4d96-a3e7-4ab3b033d400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab26b6e-33e1-4b4a-8295-da95427d828a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e864e126-97b6-4aaa-ab82-de09ff466ec1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac31e951-baa3-40cd-84df-7a226d147cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc0a7cb-59c8-4f4b-9359-515a88b2089b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced9f268-b9fd-4008-bb12-d49256699469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbde31d-fbf7-4622-9f94-0ed6910521bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545cf0df-42fc-447d-a09f-8ea6cc2a20ca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876d02a5-3a6e-44ce-807a-135e9497f4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12430c78-b5ec-47cc-aa5b-279eb2389b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c2f4b0-3519-4520-90f8-cecfb17492e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2e5d61-6a45-4e4b-8102-d41a14165353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c22aa9f-96a4-4777-98af-8e1eae743675",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c2efb9-d5d6-4629-8700-f1950f3e9e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbd3015-402f-440d-9026-8aaf1c4f7a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0dd4c5-d75d-4d7f-a938-a3a3fea8ac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a14bf5-76cf-401c-9cda-414239732855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97b8a8a-64f7-48a7-91f7-b18197565e1c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4a42ff-e7c5-44e9-aba2-385a3959152d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9b7345-31f7-4cfb-8a49-8836b0b90e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143f002e-05f9-48f2-bdca-115607e0d118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f709b1-f99f-4d64-91a9-2b6ef48ff708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ee1041-1ee8-4b47-b742-6a760bb22fe2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbc3a47-b327-4bec-91da-6e2a30460efe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d96dade-980f-4fd9-88af-e0d943bc9983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4012655d-4c67-4deb-87b9-0b9f00cd7584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62648f00-fd8c-4b64-9f7b-a52389899b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca21ef7-f853-4fd7-9b8d-5d12ad3fbaa0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388ba4ae-b56b-4d7f-a197-fcb63742a2d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c9e903-3e84-450a-a000-7b448adf9ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f03901-9861-431a-b030-bc13d026427d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92687ac-579c-4218-ab1e-ac7506be1ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc82114a-e80a-4257-a672-aedcdd8f5f10",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb1f09c-ce14-44b7-aa24-21181b7d84d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10af9e35-f646-4b63-be89-debe38ec9f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955fa42-730a-447d-9201-67699487f67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a1adb5-531d-41a0-b792-288509bf3236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04ceb62-a6d7-4409-a22c-bf582df785b1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac377f2-84d5-4a6c-a1ba-d43703063c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f4111b-9c11-4f72-80a7-4ea6ca94059f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601675ac-631d-48ed-b636-94aa6445923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a06580-9d6d-4263-820e-07299d76c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f1348-d472-460a-94a2-249dc1f0ce9a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f48985-6ad5-4dbf-8206-07b0db8c1ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481ec7d5-3ab8-438b-ae1f-b82f58d430d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f678e5-0158-4b21-973a-04cd0158e273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95bda64-a9cd-4395-9020-3a00a9154c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd3058-94cc-4e46-850b-f69bb907ee0b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f4c2b0-96fe-424a-9458-964952aa3839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f1ba300-e55b-44ce-8419-bf418f791f49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cea7bed-b7ba-4081-aad3-3d505fcf10c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0402998-303d-4317-b4dd-4e21d7fcf71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515122fe-11d6-47cd-a5c9-ec7f867756da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6325d414-fb34-4bbc-a51f-9934bd643e7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60566ca7-7b07-459a-8eb2-f2556bb53735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363abe10-478a-4439-acc0-f9a769981376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0193a5c5-19ca-4154-877c-b7c7da9e86be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc38cc83-63a5-49d3-9a8e-70abb4b7572f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c330ba21-c59d-4c47-9b73-282d73ede08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ba9a13-095f-4adf-a35d-2a1d9f0c4e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed47e6d-241f-4477-b06b-767401b1342d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23424aa2-1a0e-4391-8b49-142b886f3964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e422c-a59e-4358-b2c0-e8f852fab050",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fffc69-b8da-43b2-a785-7cf8078de483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f86b171b-b3e8-4549-8cc5-23e1871a9fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0770b6d-a9f6-4ca1-89c7-f22a2ea34d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d20e516-ad7c-4ad6-a365-9192eb2903c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f4486d-1509-4d57-80ec-43a5edd662d8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cb1988-da7e-44d1-be58-671642f8ed7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50aca73-303f-44b2-8cfe-496dada5cd7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85855b5c-eaab-4f5e-864d-caf038ae35fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a15420-d120-4d36-a39a-c88dc4a85408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7377781-9026-4f60-8d2f-2f11ba6f5a2f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f93049-0c4a-4f61-8997-05729c8d54c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589985e6-0ab8-43e8-8c69-3cf70483453c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e96a0f-58e1-44d7-9f11-27b30748b4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca553a06-032e-4b7e-a5f3-45f0311d8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353c514d-51c1-417e-98d9-f14e8fb7d96a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a7e993-2a2c-4b5f-b82f-6bb88cce091d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31293102-bd44-4c43-b89e-35ae95b711e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b7fcdf-8bf6-4f0e-bd3e-76e4bd118626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46295329-e0cd-4247-80c0-34ff536502cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cb1f54-0d77-41b7-b1ff-e63d105239d1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200249d2-d74a-456d-8165-ca02d89bc5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c92660d-d66f-4e60-9ab5-7a5483b59eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb2820-478d-4b40-a53f-8cae1fe554b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bc237b-5c3b-4c59-8b6f-8954b2b76bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db07154-27d4-48f8-ac8d-f7f0597ba045",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009fbb8f-3469-4555-b4bd-967b5bd96472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e55c48-4bbb-4b37-a26a-860e22ca8a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c83960-fb85-4a35-981f-a78ab3862357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acfb976-6863-42eb-bf70-1dd9c2bae530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f311f54-70c1-4ae2-b92d-4bfced25f002",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15621a5-76de-4f91-bb4d-cd0583e8e017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f68c5a-5842-4884-b191-5ddb851cc012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa2cba1-e4eb-4f5c-8a81-259b295eb75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec076d61-c158-488b-8ced-404ccd3e3ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261c167e-5105-4b23-a05d-2e196d7a6fb9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839dd5c6-71d7-4936-8b46-8c5e748b2c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ab27f5-8b9c-4b50-b770-67bc2e09b1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ee8c4-d322-48e5-950a-de2c61047c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc9f79b-1aba-481d-9ace-fc0da92002fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554fa7b0-07c6-494f-968a-4d77ac894eff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f01242c-234a-4d8b-8102-6bd847afa11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ced734-4d1a-4703-b73e-08b57fd5549b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835ccb38-e852-4f65-acfd-061a39f8f1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb90b53-3335-475b-91e0-6168a083b628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d604a4-12a6-450b-a7a9-46708a49f811",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cc3465-119b-48d9-9586-25fdb5b50057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4820dd94-4aee-4bcf-ab98-b0d08c013f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f266fa9a-8f6a-4977-907d-094d6920e751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edc31b4-dedd-4bef-bbdc-1d0209b506e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0501aa-df01-4412-abae-749419b470f0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f620480-1d87-4358-aebd-45a6d2a87729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e0a355-b27d-47a5-a01d-765763200fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c645e0-8283-443c-bbc1-2a211e0844e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eee09a-65e4-412b-8a3a-9696ca717ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6157d98a-7684-4900-b3fc-868622abad48",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243802a8-a29c-4758-8572-48f239bc241d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e991f6c5-8e26-4f7e-8ebc-9e3893c46222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e59893-dde1-426b-aea9-d93936b794b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc9ff66-bcee-47a3-8ab1-60df6a99a571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6716792f-7995-4eb3-83c0-9d101ffa04dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3945e32-e29e-4e63-8ebd-6502f5767868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a47aa4-660e-479c-a155-df8b8bba9b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50ee888-1425-49e9-a3c3-72c62bca6b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d1a8d4-0baf-4e94-bdc9-5c8cdcf605c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6ca579-5b6e-46b9-9bca-c5fc03c38b74",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b667e28-9a04-4e1c-b7c1-4f3255171c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c14fa09-8aa8-489d-a131-4cf8ffe96b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d453744-f6fd-466c-a121-44d3e37de2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7337fbe-a97c-4df2-8255-d86d79c92f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e84dd8c-7ff0-4ee2-b5b1-24459f2a7886",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8fa78-6959-4d7d-a272-082d3b5ae2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5505d1-af0f-4ec8-b248-3c331b2bd882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e7ec3f-f8ba-416d-87d0-41bc06914c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81d9743-62b6-443d-9fc2-8d66364f0ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e84a09c-adcb-4d2f-8974-bac5d340de9a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62731a9-b275-4e5e-b484-c92a40382db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12953fa8-7d35-4c34-b718-ef9038a6b442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6a9493-0616-417a-ae03-dc008020c32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2682425-4e81-49f5-90af-113668010ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a166e6aa-89f2-41da-96e0-ea625862cc2c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77142567-674c-45e4-80d2-c0d1ae48b579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7501915-bba3-41df-8d1a-6410b9aa4f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7baa3d0-16d1-41a4-82a9-399ecb4a9057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224cfdaf-3508-4710-a4d9-62667ecd918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50ff34a-3cc2-4571-ad5b-2410878809e5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c76fb63-05a4-461a-8905-410cd78f742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6942c69-87b0-4e73-ace6-323bdd72cadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b9aebc-a2cf-41ce-b99b-d18353e8aebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fd97f2-fb09-474b-8c43-f8746b2d109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d875569b-027e-4422-ac8d-8854088fc306",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20623be3-8c45-4c8e-9beb-0e3c394fb3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c33c44-4821-44dd-80e9-3fcdf25d17d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29ce80e-98a8-4d3b-9c32-c419a112ad44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d271205a-fcc8-480f-b8e0-c6654847b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7129a56c-7917-4927-9243-53e87732b2ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8053d7-570f-45f6-b2aa-6fd71cc34603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e70be0-7837-4a70-bacc-54a95f0d4827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605e6db8-a9f6-4468-997e-12ebe0923abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9e83d4-bd40-441c-a86c-548160025a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc3182d-6991-49d9-b830-a2ea8b9dcdd5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac002cd1-19aa-4b72-850e-2e2b51f39af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db94ad9-8c61-44b9-9f6d-1a40d7e10526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83839056-d93a-4dee-a8fc-263cc71b460d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b7298e-d6c9-43b9-b14b-d625b6b6d218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00430e8d-6bc6-46ef-aea3-f508a8ef02e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220b5700-e5d1-4130-880d-9306c016d391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c587ad-1e51-42a6-b024-e5fccbd25d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7789cffd-fd5f-4b70-b91f-8b956747fee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e5c860-8225-4f9f-8cb8-024645cf10e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d577b0-89f4-4bb1-9ef0-1530e5f8be83",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ebd5f5-19f2-4eae-b525-d234ae124e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e473b1-aa15-41b5-9c15-4a031b503f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a4c1ad-4b5b-4652-8621-a01b67a1cd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c29da0-e21a-4443-af3a-d006cd7fa74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3e98dc-a9ec-4625-9d66-28e72a11364d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c68093-14ac-41a8-b997-5f5183ab9d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40705bf0-c340-4677-9199-869dc21b8628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21626e92-acc0-474c-9a4d-e78eb2d46ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a697a1-cc69-4aac-b81e-182d67f43f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d07f1-0f50-4507-81bd-4b5d4a3bd0ef",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59f6da-ff3e-4eaa-9533-e539bed2d2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e79d81-f30e-4ac3-8ce6-a8e9159f245d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae351fd-1bf1-45f1-b863-a6036695dd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c7e398-7a77-4cca-a9c8-6f85640d6bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdfaaca-5dea-4e03-849e-e946039295f2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40490b76-b52e-4372-82b3-f990d39d50ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c44cfb-0919-4538-8529-f043873526a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aba22c2-189c-42f6-9319-0a7beb427558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581a93c5-4d26-4ee4-a25e-d591a33d00d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9568ed-b738-4040-b4d2-216eca1ec497",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa5415-9d4b-472e-a00a-229d789749b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fe90e3-a154-4c53-99a0-0bcc4d0992f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83c982e-cf87-41a7-971b-e521e41e4f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3182f6e4-48db-438f-af23-a357496c6cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f0ae90-5487-4a04-9f26-a7a12742fc3e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8327e541-7750-47f8-afa2-f54311622039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5532b2d3-6786-429a-b9f3-a6ef21c1add2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005522fe-b35c-41ef-a3db-62e3dda7645c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b019ae-206e-46c1-8ad9-f9d0df6b38ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39898fd6-1dd8-41b3-b698-154d888feca6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8889159a-28a3-4894-be39-ded97c0c453a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9860c20-801a-41e3-833f-3fc219b5afcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddea475f-d47c-4c17-b458-8ba02d55ded8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cae6c2-c73c-4de5-83d3-778c5b781f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d4d2f6-62a7-4a3a-9550-60598ce399b4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc2a6b9-f40b-487b-acb8-e4db621664a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbf87ed-934f-4678-81f5-a82c61a7797d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7aa2e5-6ada-42c5-8019-8d491ee32776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcf0d15-129c-4adb-8df6-3ed006949268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b5dea9-3094-42ec-a68b-6ffabc525009",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5fda0-769b-45d9-96da-43492e41c7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29191e0-1887-4e7f-8c04-662e0ba2eb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a8770f-2a56-49fb-afff-e988922a5684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832c93ff-a914-4491-9afd-46d014c87be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b37c83-a987-4dae-b023-6f42cbee00e5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48114848-d325-4fef-93a0-ecb83cf1b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab95a54e-7d6a-4caa-9885-6bbe9ebcc94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f0b264-e68e-4d96-a851-4a6f005f3358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7910dbc6-2863-4978-aee5-7ab1c4eaf46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf6f42-6d5d-438e-881f-bc968d772250",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c22d48-d2a3-40c2-9ffe-9159ffb62c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8213b3-4bf6-4ed8-b43a-38253e17c23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f4ad8e-1ad9-4f3f-912e-1a136a020b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cabc87a-9bb0-4292-b489-831067cc704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70bbd1-4cc4-495b-8989-6c4bb236d557",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b41398-ce2e-4693-8cd0-873f559e9966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4506b9de-8b60-48a2-99df-ae069172d1d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa25347-0fd3-448e-8928-4bb58400301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be73444a-1cb6-4a7c-ae9c-ba18528ee9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2065f0-412f-4932-891c-372da3a58aa5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d72730a-7897-4166-ab82-580a026c9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b708d1f2-d894-4422-bc23-b63eff32eec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebae8e0e-ee8f-4823-a23b-a5152b76dafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f066679-bada-4d08-9639-3bbd3eaeb14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ae785e-f721-4c1b-ab8b-28f8de8a754b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b850e73-779c-4a2a-a445-a17d302bdcbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019204b6-cd4a-4aff-aec6-bb62975aeba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cde9a7c-7df9-4ddd-919a-7735c3878586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc0d361-5417-464f-98a1-95ae4ad23f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e3cefd-6096-45f7-9db6-66e319e3a53b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f3bda9-f67b-41a7-b40c-b74759eed7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387c3629-1dfe-4557-9be4-d2de0ba143ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0397c0c5-ebd7-4294-9fbd-39a630363551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d84c61-cf2d-4f44-a014-bfe2a76eefb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d2dc61-e9c6-428a-9e72-2e760173cf96",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80264f4b-8021-4bf5-a7ba-70df9ed9bf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86874e1d-9914-45fd-afe2-1fea4c288918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be963e03-5c5c-4299-8f12-2d3df96d0c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f744b2-e4ea-435c-b1ed-12691b971d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ff184c-4eed-43e6-a450-1546016541b5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad84311-05f8-404c-b61e-8f00606e02d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a30b01-6f54-49ef-b5cb-168e3849fbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480d8fe2-b1df-428b-94cf-9d2a37834ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7889bcee-7a45-4ab4-aed4-bcafc9fe047f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2417a261-29d4-48df-ba2b-16fbfe6d100c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7233360-929f-4516-8c1e-b8c8196e788d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf7fe8a-fd2d-4b64-ad25-3f55e72dc352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e32304-6656-40fa-b595-895b46590211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6901d42-ea4d-4cf9-ad5d-e7fb03f56c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7c0b84-22dd-46e9-ba81-757986315bc4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0d6f4-8a79-492d-b0c6-7a1456829a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d2d42e-4ee6-4a13-9131-d14670b62ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0a4b9b-30ae-4b8f-948e-3fd409bef012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b632728-08d4-424c-a6f5-ef2409a41fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db25fac9-7503-4866-a429-ee0796921570",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125d104-acb0-4a44-985c-00ea865d4352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501be90f-6f22-412f-9bc9-49a054b429bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9016e44-adb2-4b33-a52c-d01665cee850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf2c2e6-aa0a-4c29-9e11-82daa432cf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7e29d4-504a-4a20-8b11-11854f35be40",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6116b03a-e42e-4733-8530-c5f1a87f4ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1ed524-3e81-4ab1-910b-d9a75265d03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bac765-fbd2-4e11-8dea-995c1b8eb876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ae0db2-7922-4141-b73a-2ff3e6f3bef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d94c15-29f0-4cfa-b28c-c5377b7c78fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07649bc2-0835-4ccd-b302-45761c739d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0805fd5a-790c-4546-8bc4-d99e98e21739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020b83a3-189c-4d2a-ab95-94cc73e134e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5bb945-8e36-4cac-86f5-c6a8eb58fd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581945e-75d1-4986-b9d0-621008789e90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd16e49b-f737-4068-80fd-2b0d1ef57601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8d112f-88a3-49cf-b23f-bd864a3be2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ec4b16-2686-4fb3-bdea-0e8d3b4bfdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4bccec-c161-4a65-9d3c-936e87c86197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbc2156-595a-4e16-8ca9-308383e5ca43",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f41c88-2e23-410d-b46e-97ce61f4822a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2946093d-57cf-486a-ae0d-c14ff52d1b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47c2942-a470-49c0-9c43-5e339d47bca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ddebdc-c859-48eb-b1d8-bb245d60d9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafdece4-a09e-4719-b479-215cf97a5ef6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e605aa59-2dc5-45bd-8fa0-271086bd8b67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b74175-5634-445e-9ecf-cb31decb887d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cf8ec6-5147-4e68-9db9-7a4fc56d79c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8147b5f-423e-4695-8688-08a8a11b8df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fdc7bd-9f25-445b-9108-420a9e336f63",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d375e0f5-e226-43fb-aca2-3167bd428d07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d89262-2b29-4362-acb6-11c9c16cb83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71705071-d739-4a13-8253-7b80082343ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34378f2e-a7f3-4e67-9c5c-61fbb4482533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ea1be5-84ef-4fe4-9bdf-643abe1b4f52",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e064f750-2248-4f36-8472-9e3f269cda0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351e4510-2f5b-4e33-9465-b8e51d1acbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d002e30-8bb1-48a5-907c-ebd4c14f091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfad18b2-8058-48b4-83ba-2f490bca1caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e2dc4c-7c0b-4424-8772-efc143c879df",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe40808-a26e-4726-8b51-845e74e102ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147e5a48-942b-4c58-84a6-59391e0c934f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16caf24b-089d-433d-8315-441fc817c5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c18e2bc-e5a4-457b-b6c6-240779f7afa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b375d1ec-0804-4fa2-b916-00373e589344",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d33213c-aefb-42a1-9f6d-760a814be974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73b8845-0163-4904-8ddb-b730c42acbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fdbe3b-8d0a-4a72-8a36-fef50375512c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9317176f-3c13-4895-b7b4-6d84f9e0e9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d3e1dd-f0cf-46a4-b174-ab8b5217f6f9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f854cac-e234-4178-861f-3f0372c3692f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82d4d34-39a1-4fdb-8091-711c4a5fe0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68675b6-2a1f-4341-9b55-02567578f78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3c9552-596a-449c-b766-a2bca47b0184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f866eb0-17a7-4ed5-917d-dc2a2cba3a69",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362c9d5c-cae7-4535-871c-231892df310e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b527a0-83d8-45dc-aab0-a94d20da1cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2742005d-7120-46cc-aea6-b9b388e7c3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97aaed7-8a44-4bcc-be6e-de2b94c17059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74426f4e-3d02-4c00-a9d8-4209c2f47b14",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4fd98e-18e2-4a40-a2ac-d28eb06488e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7744bc-2b67-46c4-988f-4ff39b742d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0d7b51-be5d-4c7e-8e17-3cccfc767a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5370c098-a319-4614-889e-900499def187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4416fd3-1e3c-4d8e-8ea3-569d6ae4a71a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced57cf1-6981-42b1-8ad6-ce7a80bd5912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7339988b-d3ae-40ae-81d0-68af6ddb773a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab127f20-e3d1-4e9d-9ff5-0a9a4e964b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1fcda4-fa08-45f0-b654-656bc9645d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497df7ad-5a25-4aef-9e29-0a4afe12b893",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b21d98-0ff1-42bc-b97d-e2592e39acdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a869318e-93ce-4d40-ab43-f0ba2ee5fbe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f95b0-a3c9-4cc2-94e7-8def5697cdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06fa0cd-620f-4577-884c-d1409ee574af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243f05ef-5719-4f9b-9f52-eea52f2e0e4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b2ddde-7b1c-48e4-9935-bef1c95ea17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cfaa32b-30b3-4fdc-a31b-efba232ab9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53be812b-8119-471d-ab03-b6789f820410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f9b192-91a3-40ba-82eb-866aea862ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d31e2c-60da-462a-9b2e-bd97186312bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cea1e9e-249d-416e-91cc-1ede36cd0ca4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4591338a-de24-4aa9-914b-5d337b04fb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ec017f-96a5-48b1-8e68-6915170dcf69",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebade4f-91c0-4551-9bdb-f7f4e0e221a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474406d0-4458-43dc-a6ab-c14b570b6cae",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125b8b93-79d0-4613-af7c-0f5b9f79af7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc32c23-7f44-4e8e-b83d-4bf04beb8da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c082a8-1b20-46dc-894a-731568ac046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9349ef46-e27a-42ed-9f93-fad39de41a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a0656-1158-47f4-bb9b-1269636e4a45",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2c8d78-1bce-4108-b6bc-08288b06ad38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2562defe-21a3-437a-b9cb-7ab4336b1c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee55d6d-b77d-4dbe-8d40-868b178cba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23668b7d-f960-4ea5-bfc3-0692eb12322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5af61e2-9191-486e-b68f-d4e78c65f157",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b917ce-2267-4a92-bc1f-01212e5c5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d227b18b-63cc-4097-a1e3-d9e1d8d81b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2304418c-c64c-4620-b078-7271f4087b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c33be7-22aa-4617-8235-8e5d2998838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22181c-03e7-47a3-9ba9-f965b12d0a15",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb963b72-eaf0-4324-9f15-fd8d176ebaa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2077de00-e9b7-4243-b469-2698ba916304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7754abc-3a3e-4a28-bca2-bf208458d270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6714ae-7ef4-4a41-9de6-47d8be85487d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa302bfa-60ba-4a8f-a7e8-ec24b0ba2013",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174cb278-bdac-45f1-86b7-0702b51f5625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "829b2965-a894-4239-a80e-c0d2a4f283a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03363a8-fb8d-4f32-9eaf-8b9b45702ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1920a4e1-cdaf-48c2-82d0-65f14cbba6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a971e1-dccf-4d80-9d0b-bb455562d69a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a8e49b-584c-49cb-b5a4-5c53f8a1dc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652827b9-bc6f-459d-b296-142d9e0939ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35432c03-5496-43b4-8473-7a931dc01e32",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30565abe-4475-46a5-95b9-aad0f66a3be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae286f27-7b9f-4ac8-8155-ad9229d5ff85",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf854f9-b526-409a-a12c-ed869a41a8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f575dd29-c86c-4c07-870e-31e859f19e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40740887-94bc-498c-874c-1556122b830e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa02080-ce69-4563-866a-a70b7cfb7a4d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d88caca-9b13-45af-9a7e-df0d27145b3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3849e228-a67b-483e-aa64-ccf0a426ef9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "933f4ced-bd96-4983-bd4c-791f4968b9ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc899603-52ac-424e-9722-d134365fee2b"
                    }
                  }
                ]
              },
              {
                "id": "4cc68062-e112-40f6-ac7c-6b4b41dce3d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4660371-862f-430c-936b-56f6ff10ddcb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5a1191-6025-4764-882c-323b84495611",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b38095db-e581-4f96-9cd3-c5658f8d4b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d1b43b-3f79-4773-83a9-8924a6d0497f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "530c68af-adf8-4bcb-80c9-6e9b725b03c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8209dcd-8fe6-404c-8843-2cc8b78c2bf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26c1c55c-579a-4c2f-9886-d5e943232e6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e2958eb-8bf7-4641-a226-074fcc2c8544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a3eae36-cc90-4071-9c4d-eb56df5c11bf"
                    }
                  }
                ]
              },
              {
                "id": "42f07588-6fb9-4518-a327-8b4b1ab25c90",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3d3039ba-009e-48c4-91e0-d4c8fa155cfe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc30fe78-68d7-4985-a8c9-6b5febe1385f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "60b5cf28-599d-47a8-806f-66e7d5ce17fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e402d6f-d4db-4861-9ac1-7b1ab4a76965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce52b722-d645-4bdc-b1e2-ece84cfa97cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "61f8e45f-0ddc-4ea7-ab7e-5bd0cfab5d27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3db42801-e90d-4e59-b1c5-a6108395c2a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cf73fae-3b40-42f7-bfae-d49b997ab936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9cabef3f-4aed-4cdc-b796-2028f730b02c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "205237c9-0b5e-4081-b823-e31e9bc75f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ac8eb96-b657-48b6-97ad-24160ba81160"
                    }
                  }
                ]
              },
              {
                "id": "5c7eaffc-9d22-4c2a-805e-1e78d1b10d32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a6bd6d0-5acd-4ae1-9323-bd061e752e7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3f120148-7947-4be3-88fb-91113a725318"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f22fa2c-71ed-47a7-aa19-3dd9002acc03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "891026a5-96c9-41f0-a6b4-2d3cd44f6bf6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9dffe7b-67c9-4423-b7f6-8f728fd75c58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b4d1998d-3a2d-4090-93b6-140265d840ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4a177a-22fb-4efb-9064-0a5550fff08b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68a748fa-c26e-4f15-b563-7ba50191065a"
            }
          }
        ]
      },
      {
        "id": "0eda0432-89ba-4ef2-8283-d9a9f725eadd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "854fe545-b293-4547-8be9-a81fdda13977",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29899aad-0f19-4193-9aba-14bee9e05ae4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f744d720-383e-41bb-9706-f0ba88a92aee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f637ee-dab6-4946-b308-026e54599f04",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f3a0bce-1775-4364-acce-7a39a6999592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e0dc6b-b984-4ced-b28e-309eef1c03dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c196efde-a894-4465-b97e-32285c22796c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1135883-1dde-474b-a2cf-4243f1c86b67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4d175b1-a278-487b-a6f9-39332eb0fb81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4b11b43-3033-4f17-8b70-91e1f86fd8a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b849d1d-8563-40d2-b6e3-36d160ad6443"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cad6b3f-b802-41f1-b1b6-126973b3ad8c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2123c72e-3b6d-4868-992d-3e21169f86e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5af84e98-37fa-4426-b547-ccb1c69eb6d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5858f1d-98e2-41fa-88d7-93a3fe507a11"
            }
          }
        ]
      },
      {
        "id": "e9147448-58a7-42d2-8ed0-b00e9660c7d2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "23e357a7-1dbd-4c8a-b4b8-bf676fee67bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abc62b3f-665e-4e56-9d00-4af980e093c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70174caf-5e29-46e8-8907-fc05b9da8a3d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77d7fa4-bdc5-4100-9913-761f05e55ce9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcaac599-111a-43d6-889e-b2c624493976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52e3ffd-5a08-4351-a188-ee489c9f94c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a88577d2-b013-41c6-b31e-0a9fbee98959"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dd3aa3e-edef-4e05-b34c-b84841d84120",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a4cfb47-fd5c-4eb8-90a2-03f3a6b59dd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33030819-5099-4fed-9ca9-b295ceb6f5dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24c61899-de25-4812-8392-2d1be3f7f586"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50292ddd-96d4-4604-b805-f2fbf7d63a2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78fe64bb-1da1-4cf5-9a1a-43432e84408a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b406cbf-4647-400d-a73c-bc0e36a653d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7d8b3fe-d4a4-4285-ac34-6ffad7431490"
            }
          }
        ]
      },
      {
        "id": "698c306b-3dad-4eeb-a0a3-46c5e52c2ef8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "95a269c3-9119-4743-a7f7-445ed4e09fae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68a90709-0998-4b9d-8fdb-4f9e108490a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d9c4870-d751-4098-84ab-ec0e776006cf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a84efc-d55c-4e7a-95f1-bc2900c7fac5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abb30b33-0840-40c4-b1dc-bfa6d4d8193f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffec80a6-a6cc-4ab4-a7da-034526f65901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1f86c14-d952-4929-bebf-9acfc1c9da13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f21d7192-232e-40de-adb2-885a34d73b62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32a3c4a5-d56a-484b-804c-0a2c216f40cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8e4525-aa8b-40d9-8fa9-27ec16335afb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37f9c9db-e6c8-46d0-8e89-7d29078e6a78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64cc89b0-c3bf-4312-8ed3-615cfcdd5284",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8a8ea45e-f873-40e1-9318-857ce8fcbe00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d1c2ad1-9033-4f95-a6d2-44ce78535815",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d6f6e66-185a-45e4-b756-2f37abc715d8"
            }
          }
        ]
      },
      {
        "id": "e57e14c2-fc99-45e0-96b5-d6c3942a533c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d464aa5-6b7b-41c7-8389-7a40830e7500",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9126c077-a57f-4e01-bd6d-9238da787725",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "61a38fe6-e9a9-436f-a833-d36129369c9c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3619f132-e060-49ae-a634-34f8cdd63bff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca05e0d6-e93c-4128-901d-777948033cef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 824.7926829268292,
      "responseMin": 7,
      "responseMax": 7165,
      "responseSd": 934.9599322461954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686444409499,
      "completed": 1686444626474
    },
    "executions": [
      {
        "id": "4cc90e9e-41bd-4752-b7e2-44dd6f649326",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e62fef21-9999-4a82-bdda-f61052a5ce71",
          "httpRequestId": "e439f038-1784-42d3-9d2d-ce05a632a8d2"
        },
        "item": {
          "id": "4cc90e9e-41bd-4752-b7e2-44dd6f649326",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8e29d2d9-30e7-4353-8c72-b759153a4f2c",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "b578b6d9-a8f1-4e4d-ba59-12d0444ef216",
        "cursor": {
          "ref": "8d6032ab-a4e1-4a58-a136-4a91a74b1a56",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7419bb40-69d3-40ee-9118-354c4737f867"
        },
        "item": {
          "id": "b578b6d9-a8f1-4e4d-ba59-12d0444ef216",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "83b80b2d-7c9c-44f3-8dd3-8b6d8c4f1f03",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a5bd551b-13f9-4121-9cd7-e86c189ce6e2",
        "cursor": {
          "ref": "740a85b4-5c0e-459c-bb7e-aab2647b3a15",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ea90d884-e7ba-4416-b414-a853bf0340ba"
        },
        "item": {
          "id": "a5bd551b-13f9-4121-9cd7-e86c189ce6e2",
          "name": "did_json"
        },
        "response": {
          "id": "9c087645-b603-4d15-8cd8-b443e5d2901c",
          "status": "OK",
          "code": 200,
          "responseTime": 1271,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e7dd0f-9784-43ff-9279-5914796b65b0",
        "cursor": {
          "ref": "0f1cb06f-c872-4df2-8da5-4338a14613dc",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f22b9063-ff86-40a3-bb5a-bd36600664df"
        },
        "item": {
          "id": "55e7dd0f-9784-43ff-9279-5914796b65b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "e6972574-19c6-4008-99d6-b28e9c99d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e7dd0f-9784-43ff-9279-5914796b65b0",
        "cursor": {
          "ref": "0f1cb06f-c872-4df2-8da5-4338a14613dc",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f22b9063-ff86-40a3-bb5a-bd36600664df"
        },
        "item": {
          "id": "55e7dd0f-9784-43ff-9279-5914796b65b0",
          "name": "did:invalid"
        },
        "response": {
          "id": "e6972574-19c6-4008-99d6-b28e9c99d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a979d7-38a7-4082-9d82-6780c3aef273",
        "cursor": {
          "ref": "6e282284-2b3b-422e-9f43-63a7935f808f",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cab404bb-31a9-48b4-a6d7-23d25992b035"
        },
        "item": {
          "id": "d3a979d7-38a7-4082-9d82-6780c3aef273",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9082e3e2-a472-47e6-8333-fd4b8dfade55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 956,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c436c60d-fc0d-4c6c-a337-b5e13e57d968",
        "cursor": {
          "ref": "273e2b2c-18eb-44b0-a79e-d4b56d232528",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "259a335e-9fa4-4d65-9c47-4cc4ede5d7f1"
        },
        "item": {
          "id": "c436c60d-fc0d-4c6c-a337-b5e13e57d968",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e713f837-df77-4048-a628-3c647cbfa82a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 728,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d799423d-0fd6-4730-b873-4dad4f16a816",
        "cursor": {
          "ref": "a8b53889-fe2f-44a2-ad88-488bc6883ca3",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "37925743-a95b-4a10-8b86-8b73369aaf33"
        },
        "item": {
          "id": "d799423d-0fd6-4730-b873-4dad4f16a816",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2d37380c-e7a0-44a9-ac50-9a28f7cc696d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e71f7-c8a5-4459-8ace-9b69333514e5",
        "cursor": {
          "ref": "9af32740-30b5-4a9b-97bf-52bb863c36e6",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "82bbb78f-394b-4f69-900b-1abe05c9522d"
        },
        "item": {
          "id": "568e71f7-c8a5-4459-8ace-9b69333514e5",
          "name": "identifiers"
        },
        "response": {
          "id": "b43b261b-cd72-4e8e-9d4e-11488fc69da8",
          "status": "OK",
          "code": 200,
          "responseTime": 1556,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b327536-4d44-4578-b0f7-3ed0db15e1bb",
        "cursor": {
          "ref": "2ead5020-1c14-4383-a38b-40e1e236e93a",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cf7bff76-4ecd-4986-8916-dd40db727cf8"
        },
        "item": {
          "id": "5b327536-4d44-4578-b0f7-3ed0db15e1bb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0685bf8d-7c31-426e-bc39-918b8c6b8b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5289135-237a-4ea3-aeb3-8c8f67868320",
        "cursor": {
          "ref": "a249a3eb-17ee-4677-b175-ba39d697cb32",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "71a35184-b8f1-4483-8943-60f25082e2c0"
        },
        "item": {
          "id": "d5289135-237a-4ea3-aeb3-8c8f67868320",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ff10bbec-a309-4fb6-bc1c-03454a4da691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5d05c3-8f48-4415-a9f6-a2ecc03a474f",
        "cursor": {
          "ref": "1602603a-039a-4ff6-b61c-81dda1503119",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "de1096e2-358b-47cb-817b-9317578e656b"
        },
        "item": {
          "id": "4b5d05c3-8f48-4415-a9f6-a2ecc03a474f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0cd9988d-6f87-4447-8242-57930b54db7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8517cad2-90ca-408a-bbcd-e7e7a047bfb5",
        "cursor": {
          "ref": "1d2a16cc-ae60-43b2-bc8b-95094d16e9ce",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d804da49-cb71-4620-ad57-53ab60ccda7c"
        },
        "item": {
          "id": "8517cad2-90ca-408a-bbcd-e7e7a047bfb5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "132909d6-6b8d-412c-90a0-43b7f19bbc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b07cda-2a27-4c1d-b624-f93233e6261a",
        "cursor": {
          "ref": "70a60867-d38c-4a3b-a2d7-d9c7aea7a350",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e06380ca-a46e-4137-8277-0edd415285d8"
        },
        "item": {
          "id": "41b07cda-2a27-4c1d-b624-f93233e6261a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b6f027a7-3714-439e-8d81-f99810e616a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73093713-398e-4351-95d8-d69c0376748e",
        "cursor": {
          "ref": "d6fd6671-a470-4321-8a9f-b465bf15aced",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d5dfd9a5-67d5-444e-9842-bf07a70c2ace"
        },
        "item": {
          "id": "73093713-398e-4351-95d8-d69c0376748e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7d0a7f17-bc7c-469f-b056-02f267b41f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f811c05f-e401-4536-8769-868b0e0134ad",
        "cursor": {
          "ref": "3738fde4-9689-44c0-b705-3b707d3af01f",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3eafb072-0f4c-4784-9a61-a2d9bf3e1eaa"
        },
        "item": {
          "id": "f811c05f-e401-4536-8769-868b0e0134ad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "45d9cc6c-ae49-40ce-b6c8-ae3bf111ad30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07524b-6eb2-4977-8193-404e89f07878",
        "cursor": {
          "ref": "77f8c4ef-c8fb-4f92-aef9-f1e47f41cd55",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a0ead9a0-2186-41a3-8db0-3bccddd0965d"
        },
        "item": {
          "id": "cc07524b-6eb2-4977-8193-404e89f07878",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d9c56ea9-b6c2-4795-b474-5fa9cb26441a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c0e98-28cb-4c13-9535-e44b95330693",
        "cursor": {
          "ref": "3931c078-5287-4d30-87ff-a5d469b65674",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "53fd0a95-60f7-4bd7-97d6-099aa3b912fe"
        },
        "item": {
          "id": "aa7c0e98-28cb-4c13-9535-e44b95330693",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ffd55f5b-473e-4c73-8466-ca03576d638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df262f38-c3d2-490e-8feb-8388d90fe5ff",
        "cursor": {
          "ref": "d0e025b9-fecc-4019-95ad-e5f9ead50456",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19139b3c-7a45-422e-be96-8245a9eb3446"
        },
        "item": {
          "id": "df262f38-c3d2-490e-8feb-8388d90fe5ff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ecd5263e-74a0-46ed-bb60-7d4eea3c9555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036fe9a-a7ee-4a33-aea7-3bce4ff2a43a",
        "cursor": {
          "ref": "9e1cd543-be5b-42c7-8ebf-86542903f1e7",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a4172235-6e34-45fe-abf3-48a0993f5cfd"
        },
        "item": {
          "id": "b036fe9a-a7ee-4a33-aea7-3bce4ff2a43a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "da56b5a4-f7d3-4de8-a228-115a4d0e5e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a101fc-b590-46a0-a8ea-e31d0f87d4bc",
        "cursor": {
          "ref": "6be7c843-1848-4303-8318-12a5cd0d638f",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e600d0f6-dc6c-4d63-b5fd-d0b2713db950"
        },
        "item": {
          "id": "b5a101fc-b590-46a0-a8ea-e31d0f87d4bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "652f1fe4-2456-4e30-b908-39817fce6a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55283f26-5011-484f-b1fe-75c1348e0175",
        "cursor": {
          "ref": "01d8ae1c-e2c6-47c3-b637-0df33b79b7f0",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e45be1a1-cfcf-477e-be81-e75c1388b8a0"
        },
        "item": {
          "id": "55283f26-5011-484f-b1fe-75c1348e0175",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a91af69f-7310-4274-a352-ca62997c7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18823f7c-770e-434a-88d0-7072c379113f",
        "cursor": {
          "ref": "7a54f879-b962-4ff0-a52b-04c3b3a88d99",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f8d11665-cf53-456d-9ea9-afa8391ef7ee"
        },
        "item": {
          "id": "18823f7c-770e-434a-88d0-7072c379113f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0acefca6-ff91-4354-b2e2-ab576ea48df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c871b372-e082-4023-8fb0-c90b5a51ba16",
        "cursor": {
          "ref": "f15f22d8-abf0-4bf6-aeae-57d64ab492e7",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7980ac69-0b66-4a45-bdad-2e863aa02ed8"
        },
        "item": {
          "id": "c871b372-e082-4023-8fb0-c90b5a51ba16",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d0e63bdd-f1b1-4d48-8878-8da4fac1715f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87e154d-8a13-428d-952d-a584a9713b83",
        "cursor": {
          "ref": "b513d962-cf8d-4982-854b-cead2d52ab77",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8399de73-3f75-4be7-a07c-fb46d5dfc7ca"
        },
        "item": {
          "id": "d87e154d-8a13-428d-952d-a584a9713b83",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3ca83d56-3940-4298-afac-2d6a55476800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cf412a-559d-4af2-95cd-5c5be4b0c9e8",
        "cursor": {
          "ref": "922a7303-7b6e-4ceb-be1e-3b4320322277",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f3ee305d-34b2-409c-8a54-77d2672e9eaa"
        },
        "item": {
          "id": "c2cf412a-559d-4af2-95cd-5c5be4b0c9e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "03ece9b9-8415-4833-8b55-d813f04943c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a7eea4-52f1-4177-8fa2-b1dd1a99d183",
        "cursor": {
          "ref": "ac4415d4-388a-487e-b798-5a5434aed4c1",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "108bcec0-5716-4f00-b8cd-bf4968d9a806"
        },
        "item": {
          "id": "c7a7eea4-52f1-4177-8fa2-b1dd1a99d183",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2fd0ea42-5653-4cd2-a710-f92b9e55a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d012dbc6-670e-402d-8c6e-3b74fc866a89",
        "cursor": {
          "ref": "e9b2fe94-1f97-4f2c-a144-813d790ee276",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8d471413-23fb-4629-af3f-4dccba2cd2f6"
        },
        "item": {
          "id": "d012dbc6-670e-402d-8c6e-3b74fc866a89",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bebeffc5-bded-40ca-925f-4032c4686577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90031c7-b945-4d0a-b419-f63f838ae869",
        "cursor": {
          "ref": "ec054e11-0b7a-4602-a60a-312d6199af35",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "63686686-af03-4646-9aa3-71b89897d60d"
        },
        "item": {
          "id": "f90031c7-b945-4d0a-b419-f63f838ae869",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c4735ca-1c63-4c54-a1df-5c2cae42b6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb14b33-25f4-4f3a-8d9a-2648b52b3ef1",
        "cursor": {
          "ref": "b1d490a2-24d3-42d0-bb6d-7d040f8f39a6",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f3e3329d-4526-4bc1-be2f-24726f05191a"
        },
        "item": {
          "id": "aeb14b33-25f4-4f3a-8d9a-2648b52b3ef1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10078c69-c342-4477-a9ed-71ccbceebd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7470bf43-cf83-4687-82e9-64311825156d",
        "cursor": {
          "ref": "43c342b8-e3bc-42a1-8f1e-8de16bb65b46",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8b094fe1-786d-402f-8a60-72ad6c843663"
        },
        "item": {
          "id": "7470bf43-cf83-4687-82e9-64311825156d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dc92be7b-af1d-4970-b299-a7a05ebea0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428ab9c6-bfb1-4d45-8984-b71fcac732e7",
        "cursor": {
          "ref": "3233896c-116c-49c1-8cd4-ec4fe7ebf77e",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e45b82ab-b580-4267-b998-d9131aefafe3"
        },
        "item": {
          "id": "428ab9c6-bfb1-4d45-8984-b71fcac732e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b85ddaf-5b83-44b5-bb33-4bde03c280d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028b4884-6ec6-474c-970b-e84ac2de572b",
        "cursor": {
          "ref": "26e2b889-a064-47a6-bba0-5e22defb320a",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7df1f309-e86d-4baf-a2dc-dc09c1d99d88"
        },
        "item": {
          "id": "028b4884-6ec6-474c-970b-e84ac2de572b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2614b3d6-56a2-4d0e-872e-3774fb7d382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3075f980-e872-43ec-b460-5d02a314d150",
        "cursor": {
          "ref": "14a8696f-f107-44a7-acec-b9ece34e129e",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "35ba8272-0198-4058-82ad-2689de0982bc"
        },
        "item": {
          "id": "3075f980-e872-43ec-b460-5d02a314d150",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "997cc11e-9d1a-4adf-acf9-687c7d34efa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f0a48a-1773-47d2-a423-236138b7eb7e",
        "cursor": {
          "ref": "802c85de-0872-486b-b1a9-7335b8164b71",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "11c2a593-a88f-45e8-95ea-585a9a70685a"
        },
        "item": {
          "id": "f1f0a48a-1773-47d2-a423-236138b7eb7e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "947e74d7-3d14-416e-8bcb-df60bb64e66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0b565b-371f-4a82-847f-e5d685fd46d6",
        "cursor": {
          "ref": "8001ea16-d5ce-4811-979b-a55de20259d2",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "34caa47d-872f-4f87-8bb4-79aed9002527"
        },
        "item": {
          "id": "1c0b565b-371f-4a82-847f-e5d685fd46d6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "136b4659-04be-46da-a04f-be0b9735ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ba7fe0-5d91-41de-a4e9-83ea268419bf",
        "cursor": {
          "ref": "4a82b3a9-5510-4a4d-a576-430c82243af3",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2416259f-8ab6-46b7-bd6e-883fc2603641"
        },
        "item": {
          "id": "e6ba7fe0-5d91-41de-a4e9-83ea268419bf",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a90dc55a-937c-4d60-9ff1-cd2bdd0f9963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92161f96-736f-45e2-ad05-babddfaa3b54",
        "cursor": {
          "ref": "c08b522f-f66b-4392-8b5e-792dd131134a",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86da1d25-d69d-4041-bc2e-e8defc503e34"
        },
        "item": {
          "id": "92161f96-736f-45e2-ad05-babddfaa3b54",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "edf0a41d-f593-4545-a3a9-108bdf4c69b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eda1ae-d4b3-4ad1-84c9-b78ff6bb4102",
        "cursor": {
          "ref": "c1c13408-3691-407d-9d5f-3653f25b160d",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "58d6eb07-f753-4b12-abeb-f59e83272201"
        },
        "item": {
          "id": "15eda1ae-d4b3-4ad1-84c9-b78ff6bb4102",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f9898c41-6633-4961-a85e-6c087ba6b793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be246d-db28-45d6-a90e-313604624b7d",
        "cursor": {
          "ref": "4b69952c-ab30-4014-9777-0f3f83fe46a2",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ba4b092d-def6-49bd-bbc7-5b4db6ed19b6"
        },
        "item": {
          "id": "f8be246d-db28-45d6-a90e-313604624b7d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dbeacea4-8569-4b48-b41e-124d98516462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2dc2e5-00bd-45ea-abf6-fd1dc635b951",
        "cursor": {
          "ref": "f7bb4f1f-a3ab-4968-a7af-3094a4142bcd",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3a88a071-df5f-42ac-90c2-799c69b99977"
        },
        "item": {
          "id": "0b2dc2e5-00bd-45ea-abf6-fd1dc635b951",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3822a275-c470-4984-9095-466aae98ad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c2b0a0-c6d5-418c-ba2f-4ba1002fc637",
        "cursor": {
          "ref": "2bb0ea06-6aef-48e2-9411-d8c06f1c3a7c",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0d2220b-7cd2-4b2e-81e3-0440211533f4"
        },
        "item": {
          "id": "b3c2b0a0-c6d5-418c-ba2f-4ba1002fc637",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8b086dfa-cba4-4096-a72d-b9e6e3fa408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a58360-3646-4fb9-aef0-5bb140903f14",
        "cursor": {
          "ref": "a4d4984a-1d30-438e-b443-832f30fe6126",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dca2f5d8-8128-4da5-af85-d0a7dcd26de4"
        },
        "item": {
          "id": "84a58360-3646-4fb9-aef0-5bb140903f14",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e494d04-750b-40c6-b3fd-837aeb9432e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef74ac6-b723-4f5d-92ec-9675a521e3d8",
        "cursor": {
          "ref": "cbed5b74-85b1-4195-9889-6062cb50e739",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "abc10e0e-812b-4069-b60d-2fe9c127f998"
        },
        "item": {
          "id": "0ef74ac6-b723-4f5d-92ec-9675a521e3d8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6383b823-ab30-499f-90be-9f74e31907a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b684c02-f1e9-42ea-8a13-73974e76ed18",
        "cursor": {
          "ref": "ed94e546-3a51-46ef-9f04-1531ce0fc557",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4c69a532-a913-4d31-a66b-b00dd0fd0e82"
        },
        "item": {
          "id": "4b684c02-f1e9-42ea-8a13-73974e76ed18",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "191f0a3d-6c19-4c81-88db-442802838d5f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 958,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd25e6f2-d4f7-4121-b852-db91e293336d",
        "cursor": {
          "ref": "9cc42f99-0fa9-4061-9df1-f1c83569000e",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "702ebb05-2cec-4d09-9e6a-777b0f5429d4"
        },
        "item": {
          "id": "cd25e6f2-d4f7-4121-b852-db91e293336d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c5133a11-c901-49ac-b20a-3212bb861927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649720af-5c93-4267-8cb3-02ed565ab0e4",
        "cursor": {
          "ref": "ec776077-84bc-4c93-952e-5bc9bfb2bac3",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "522de2cb-474c-4a96-bae7-435cbcbb30ee"
        },
        "item": {
          "id": "649720af-5c93-4267-8cb3-02ed565ab0e4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "08245113-62d6-46ae-a0b8-2353fa1f653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2d9fd-eed1-407b-b73f-7097a818d5f8",
        "cursor": {
          "ref": "f6ed9939-028c-47e7-957d-03c7acc56bda",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c2dace86-c0a2-4e08-9f52-e0a944c4a708"
        },
        "item": {
          "id": "b1d2d9fd-eed1-407b-b73f-7097a818d5f8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "be1fbe06-5de5-4796-8793-693dd3502bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1293,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be65a7d-12cd-4616-a9cb-115103ba2313",
        "cursor": {
          "ref": "1f34decc-65ab-4ebd-9baf-16f573ecac90",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d75f19d-8449-461b-b194-caefc79aaf06"
        },
        "item": {
          "id": "9be65a7d-12cd-4616-a9cb-115103ba2313",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0802c955-943b-4e49-bad3-4a7c0fe25574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf228f-cbe3-45bd-8c81-6cae71d864dd",
        "cursor": {
          "ref": "c60b4d8a-c1ef-4986-97b0-c9a99d8cfbb5",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "80568ab4-4b7a-4f8f-960c-27b0d2ee6ff5"
        },
        "item": {
          "id": "6ebf228f-cbe3-45bd-8c81-6cae71d864dd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "da368236-e286-460e-b929-b13f2f72cb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be76b4a5-421e-4869-a6a5-c3b8963dde5c",
        "cursor": {
          "ref": "0619b05b-b9e8-47af-a930-37b507257a67",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b6f966f7-8c8e-4304-bf0f-a88040c6a6bb"
        },
        "item": {
          "id": "be76b4a5-421e-4869-a6a5-c3b8963dde5c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0c391077-a640-4482-a7f7-598f85551933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04635d-ad49-40b1-88c8-3d099ea58b3b",
        "cursor": {
          "ref": "7c8a113b-12f9-4ee1-b2d9-785b839a9093",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5e04f9bb-fb79-49bc-ad22-0bdc0024cdb3"
        },
        "item": {
          "id": "8c04635d-ad49-40b1-88c8-3d099ea58b3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "621cc325-6a42-4b7e-9e77-609f7d5ed2fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 921,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb40f86-27e4-4808-b76d-a7ed93e9fa01",
        "cursor": {
          "ref": "9be5858d-bab9-46ca-8fae-26518f715eeb",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cec57590-3fdd-4a31-b94b-e05beee78da7"
        },
        "item": {
          "id": "8bb40f86-27e4-4808-b76d-a7ed93e9fa01",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4a58b026-5e4c-4f20-a1eb-443c020b0bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e0e4af-27d8-463e-8f31-aebe20a30c3c",
        "cursor": {
          "ref": "771895e6-b323-44e2-9f29-61b14e6b0d16",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "44c12b2e-545d-4151-a88b-83495fe0711b"
        },
        "item": {
          "id": "39e0e4af-27d8-463e-8f31-aebe20a30c3c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "dd9cdd79-3582-4758-90da-e018647a4533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d6e94b-e130-4519-9eaa-1931ae1b971d",
        "cursor": {
          "ref": "3bca68a1-f3e2-4aa4-a6bb-0fc339185c5a",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "926e6076-1876-46ae-a948-6c2f64513cce"
        },
        "item": {
          "id": "c8d6e94b-e130-4519-9eaa-1931ae1b971d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c2b8279-9a22-4e3f-a3da-22f2a1cf5aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6d962a-e630-4041-ab7e-86339abd203e",
        "cursor": {
          "ref": "d57bf38f-99f1-40f3-bc44-e874ca2e4a23",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "99e9609d-3bca-4b23-9241-42fbc939d234"
        },
        "item": {
          "id": "6e6d962a-e630-4041-ab7e-86339abd203e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b9474ad3-f1ba-4e60-b2c6-b5657179792d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934ceb3e-8797-43a8-8d52-a2536aba5683",
        "cursor": {
          "ref": "48668291-d434-4bcc-9801-1b91defa9c6b",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2a69b331-523e-4019-969d-5fd54147898a"
        },
        "item": {
          "id": "934ceb3e-8797-43a8-8d52-a2536aba5683",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d0a18fcb-c661-4742-828b-c46d32d710d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9149c0fe-7bba-4293-92f8-ce1874a4bed5",
        "cursor": {
          "ref": "df345298-125a-4c53-895b-8c6be23505db",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ff856853-9678-454c-8df0-11fc33b85733"
        },
        "item": {
          "id": "9149c0fe-7bba-4293-92f8-ce1874a4bed5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b2c51d74-ba7f-4cc6-8dc8-f6b000a8d5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3fd109-dbb2-4aab-999e-178d0a233408",
        "cursor": {
          "ref": "96d0e6cf-a960-47c7-95a0-3f8216a61d32",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4caf8cfb-9236-4e96-b25a-5c4c1eb59f87"
        },
        "item": {
          "id": "aa3fd109-dbb2-4aab-999e-178d0a233408",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "459637f9-75e7-486a-92b9-089e7eba7ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206023ca-8607-4274-81c0-fc641414309b",
        "cursor": {
          "ref": "4c98417a-d9ba-4717-a7bd-a6f73c8d61b7",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2e632fa2-6d1f-4e13-ae4f-967ea80acbc6"
        },
        "item": {
          "id": "206023ca-8607-4274-81c0-fc641414309b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "38e0757a-1cfd-420d-823f-109bf7f9820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e981e-8466-48da-ba05-95b0f2360bef",
        "cursor": {
          "ref": "f7062a7c-cafa-442d-a006-4e743a4c155c",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "065eba86-f6f8-4698-b1b8-4ea33908464a"
        },
        "item": {
          "id": "7f5e981e-8466-48da-ba05-95b0f2360bef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7deecc48-0335-402c-ab72-d6c69bdb5c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1201a61-0049-41c7-a3ee-5f8b2b69c0f8",
        "cursor": {
          "ref": "fd836521-0df5-4651-99ea-faf8b5ee31af",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c8ac404e-9cef-476d-a4b4-5ac6e820d56b"
        },
        "item": {
          "id": "b1201a61-0049-41c7-a3ee-5f8b2b69c0f8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "072f8ca9-8aaa-41b5-ae30-defb440ff883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d413b7b-6eb6-4e93-9d23-fb0897e5f37e",
        "cursor": {
          "ref": "3711db7e-651c-411d-8e46-debba211aa4a",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "43ca6902-4ab4-4f35-a043-225d4b91fbaf"
        },
        "item": {
          "id": "3d413b7b-6eb6-4e93-9d23-fb0897e5f37e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "809a671e-b3c8-4ec4-a00c-448dea91f9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d81a8-fe05-4391-a1e7-26356cf090ab",
        "cursor": {
          "ref": "b2803a2f-470c-495f-a513-28913ff0a1fc",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9247d49e-33d0-4c53-9b4d-2bb15e686454"
        },
        "item": {
          "id": "e27d81a8-fe05-4391-a1e7-26356cf090ab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "38751873-90aa-429f-9799-d13444e3ab00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4341150-2c49-4af7-900a-67886c9a4d9a",
        "cursor": {
          "ref": "9c6a4260-d83f-40da-84ee-25a6e87317ff",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "107f1110-89e9-4caf-addb-ce3e7eeee153"
        },
        "item": {
          "id": "d4341150-2c49-4af7-900a-67886c9a4d9a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3852758f-a6bf-4a85-b221-4e0c4b0c4264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df81b2e-c132-4f29-8300-09e9b8066a3d",
        "cursor": {
          "ref": "53891117-eebb-45d7-9010-6c34e0e1e622",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "852431f5-511e-4333-abea-5ab293132acf"
        },
        "item": {
          "id": "0df81b2e-c132-4f29-8300-09e9b8066a3d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f7ad1752-310c-439a-ae44-797b1c9b0670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56003f3a-8716-4410-b275-bc0108cad50e",
        "cursor": {
          "ref": "88e2c0a9-9b0c-4aa4-93f5-689b863fba06",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8050b77d-54ec-4dce-a08a-716627e4efbc"
        },
        "item": {
          "id": "56003f3a-8716-4410-b275-bc0108cad50e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7e72fb55-985a-4e81-b6c3-2e3cca18f15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c8d389-bc38-4d83-b0f3-e03a9cc14be8",
        "cursor": {
          "ref": "7aa73c34-6ca4-4b4d-ac2f-5cb590ae4106",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c31746bf-f266-4694-a1fe-63d919eed0d7"
        },
        "item": {
          "id": "39c8d389-bc38-4d83-b0f3-e03a9cc14be8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "916b8494-7625-4a55-895b-69f9e01d4afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195265ee-a3c5-4098-84b4-b832e508a81a",
        "cursor": {
          "ref": "3d6add96-06be-4b37-98cd-cfa816713ab9",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "54aa824d-09ab-4230-859a-04db058a41ec"
        },
        "item": {
          "id": "195265ee-a3c5-4098-84b4-b832e508a81a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2c92041d-ac54-472a-9dbc-1656debf60f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc84551-f616-451b-a590-d3de945365c3",
        "cursor": {
          "ref": "71112173-2c9e-4572-b114-ea535f2387bd",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cb2af13c-5694-4eb2-baa9-72e746d498b8"
        },
        "item": {
          "id": "3bc84551-f616-451b-a590-d3de945365c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "70574bd0-3078-4ca6-a384-18d2f4d8a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e5ce81-24e2-4564-8e1f-c72b7a70d2fb",
        "cursor": {
          "ref": "cb439b05-7498-4e26-ae9f-106544ea4fec",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6e6089bd-658d-408c-977d-0a82f434947a"
        },
        "item": {
          "id": "e3e5ce81-24e2-4564-8e1f-c72b7a70d2fb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ba031927-322c-4171-b327-f8bbc1b6b774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e8db42-8a2a-475c-90ce-6cbe3f3a4c23",
        "cursor": {
          "ref": "057f121b-1bc0-4a61-a784-7b939bf9498f",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "689911ab-b78a-4508-898b-e280c549427a"
        },
        "item": {
          "id": "a9e8db42-8a2a-475c-90ce-6cbe3f3a4c23",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e61a1c0e-e939-405c-8ba0-c3f78208003c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9165da5-820e-4c81-bd2d-f9a228f046e1",
        "cursor": {
          "ref": "c07604b4-a990-478a-870a-7fcd2e823b0b",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b6a9f83-2cef-4b59-b427-20c012292ffe"
        },
        "item": {
          "id": "e9165da5-820e-4c81-bd2d-f9a228f046e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "03eb1fe3-a3d6-4315-be3f-1d8c070852b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92d477b-15a3-4980-a18f-1e212afcfb70",
        "cursor": {
          "ref": "e3efc78b-cade-45c5-ac18-6a941998c1d6",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ae730176-94e0-48b2-9c56-24eea26840a3"
        },
        "item": {
          "id": "e92d477b-15a3-4980-a18f-1e212afcfb70",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f7607c7c-8567-4ac9-9192-7e5a6bda186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddd9a0b-4c2f-44d9-ba9f-473b8c5d7017",
        "cursor": {
          "ref": "e9e9f86e-04f4-45a6-a67b-31fa26f893a8",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "56e2eea9-bd26-415f-8c39-92955dec5a75"
        },
        "item": {
          "id": "7ddd9a0b-4c2f-44d9-ba9f-473b8c5d7017",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cf7e180a-c685-46f4-b474-f88f543eb392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81b1d4b-a1b7-429a-b12b-50e530ca85fe",
        "cursor": {
          "ref": "4ca40dc1-797f-4406-b1a3-44337c08c0d8",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "141febfa-0b8a-448c-bed4-8c6f83370085"
        },
        "item": {
          "id": "a81b1d4b-a1b7-429a-b12b-50e530ca85fe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5ddd294c-bdd2-4988-8a04-1067ce8f7555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a789ac24-e21b-4197-9acb-e4110af21375",
        "cursor": {
          "ref": "2c206835-5ddc-4184-976b-789307e9dfb4",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f5f1df3-45d0-453c-b47b-9b0ab887e087"
        },
        "item": {
          "id": "a789ac24-e21b-4197-9acb-e4110af21375",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "08273045-dc88-4afc-9dbb-4ff0e9fd60b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2b568a-3fc8-4ced-a7e7-9eee751bd05f",
        "cursor": {
          "ref": "9fc6f150-ef47-4166-88ee-e7c781b614d3",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "37bbb7d6-7788-4f52-aece-0d4344d14847"
        },
        "item": {
          "id": "8e2b568a-3fc8-4ced-a7e7-9eee751bd05f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d9de5856-6859-404a-a3d8-9aaacfb79889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5309b-5da4-41aa-a305-ae033607ddfa",
        "cursor": {
          "ref": "76a99a6a-a6db-4b9f-a7ab-0d9cf29b95a3",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1ff6c110-940c-4473-a944-d7e811a7bdf5"
        },
        "item": {
          "id": "b2b5309b-5da4-41aa-a305-ae033607ddfa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e2052c27-bf8f-4867-bc12-6bcaab048397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51547e35-314e-4719-98bf-5f8645a72661",
        "cursor": {
          "ref": "e9d428b2-3e6e-48e9-80e2-2de5ad3fa273",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83dbbc7f-2af7-44e2-ad82-42218dda22fb"
        },
        "item": {
          "id": "51547e35-314e-4719-98bf-5f8645a72661",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cbd10108-cb81-4e87-8cf3-5228b7b1dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776186ca-4615-43d8-85ad-fdce77c9d811",
        "cursor": {
          "ref": "84738cd5-f273-4b75-b308-c06182d53f89",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5f55cae-5017-4732-b008-ace11b2ba029"
        },
        "item": {
          "id": "776186ca-4615-43d8-85ad-fdce77c9d811",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "44c6dcb2-edac-433d-8e81-94ed4c8f95a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd5110c-9ca3-4618-9fc9-93c0aaa3bfa9",
        "cursor": {
          "ref": "dad6eb74-0139-4654-95d3-121781f59c26",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3bd064b2-8804-46a4-907a-f945ac8c146b"
        },
        "item": {
          "id": "bfd5110c-9ca3-4618-9fc9-93c0aaa3bfa9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5244f03b-87cd-4ffe-b2fb-79bb4cf1031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814c13ee-04c6-45db-8adb-0fd857961c95",
        "cursor": {
          "ref": "5fab780c-7b2d-45f5-8237-440ef7a4a98e",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "594a4d7e-6447-4176-9f84-88a6191be5d5"
        },
        "item": {
          "id": "814c13ee-04c6-45db-8adb-0fd857961c95",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dfd850d9-1c89-4090-a1d3-3872ed7f837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90dd5df-86b3-45c5-94d1-6d4e6a5f255f",
        "cursor": {
          "ref": "3adf13a6-f0ca-45cb-91e6-13237b491d23",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9766b461-45f3-4d26-a16e-cef18d39542e"
        },
        "item": {
          "id": "c90dd5df-86b3-45c5-94d1-6d4e6a5f255f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "426fb1a1-21d9-4a2c-a0fa-4ba19574d904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d03f87-aa07-4270-9c29-b17ab3d17cab",
        "cursor": {
          "ref": "aea5196d-7fce-41e2-b6ad-70f670c1bc66",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6acf6ee7-ff7a-48a5-8651-b8cf2dc2a6d2"
        },
        "item": {
          "id": "05d03f87-aa07-4270-9c29-b17ab3d17cab",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "88003e19-aa20-413b-aef5-bb09be973265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1753b68c-60c3-45ff-be98-43ffaea670c1",
        "cursor": {
          "ref": "6c15c346-1fb0-4e0d-bdcd-cd04144ec406",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7000f246-0d1f-462f-ad31-34d79e55e2c0"
        },
        "item": {
          "id": "1753b68c-60c3-45ff-be98-43ffaea670c1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06fefde9-0b1f-4aec-9c92-c17167bcaa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d873227c-c8ee-446e-8dc3-1f3b04af2a47",
        "cursor": {
          "ref": "aaad31e9-82d9-43ed-93e4-3673f6587b98",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8a04d6ad-01a3-4d20-9d36-546eccc125f6"
        },
        "item": {
          "id": "d873227c-c8ee-446e-8dc3-1f3b04af2a47",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "953927e2-7bc8-4a42-b3b9-646a9f65ab64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affc792-8c7a-4cf7-8cb5-af63db46ab59",
        "cursor": {
          "ref": "4d24ae1d-904d-43a3-a8af-2f57145a30d3",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "113ffaf9-6d77-4d42-b499-65242a760bda"
        },
        "item": {
          "id": "8affc792-8c7a-4cf7-8cb5-af63db46ab59",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ce38fed5-d607-4448-97d5-dbc7a0723701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e43cf2-5889-42bb-ad41-ef9433de9b15",
        "cursor": {
          "ref": "4fa0bad0-ac98-433d-86ac-ce5fe530d042",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f21bfccf-41af-46b0-971e-ad478d546e78"
        },
        "item": {
          "id": "b2e43cf2-5889-42bb-ad41-ef9433de9b15",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2c7822e1-2547-45de-b8e2-1483f8b8c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5a26e6-644d-4fde-90d0-fedbc266a0c3",
        "cursor": {
          "ref": "57e3c803-57a5-4ea2-b694-19d3df3c0823",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3416009-91a0-4915-bbd6-564e882f7166"
        },
        "item": {
          "id": "fc5a26e6-644d-4fde-90d0-fedbc266a0c3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e08a0c83-a02a-4b78-a88b-be9af4b849c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae394a-4b74-4962-8376-f2110bff3fde",
        "cursor": {
          "ref": "45d557cd-32bb-4236-995b-1287a50c6833",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "62fecbd3-9334-43d6-bef3-4291d474c44f"
        },
        "item": {
          "id": "6eae394a-4b74-4962-8376-f2110bff3fde",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6440c2da-c654-4e2c-9687-f075360ad46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ca24e8-86f3-416b-8cac-23d3dffe0621",
        "cursor": {
          "ref": "d89bfb19-5348-45c5-873d-1851172159f4",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5c9155a5-7177-42df-a8db-95c8ab055596"
        },
        "item": {
          "id": "c8ca24e8-86f3-416b-8cac-23d3dffe0621",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "44158f2c-f2ca-456a-9fcd-c2ff6b38a198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bea72c1-f1c7-42c5-bb38-df089bd105d7",
        "cursor": {
          "ref": "14fa7e25-2ca8-4508-a094-ba1e3b22062e",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ab8a1e6b-cdc9-472a-8de7-c2cb3c8de666"
        },
        "item": {
          "id": "9bea72c1-f1c7-42c5-bb38-df089bd105d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a77dd590-baed-490a-8714-fc3aadabe92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c7c6f9-cf99-4df4-952a-5840fdd966c2",
        "cursor": {
          "ref": "c07381e4-795a-4c6c-ac22-f90e276eee51",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9cb0bc88-38e7-43be-a555-b8b7cfdad802"
        },
        "item": {
          "id": "93c7c6f9-cf99-4df4-952a-5840fdd966c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "34f44265-f9f2-45fe-82e7-4cdb7cbd7a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447885c-bda4-43b1-a29e-7e739ba40045",
        "cursor": {
          "ref": "7a400738-731b-4c37-823d-67ec786b67ce",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "62284020-fb7d-4539-9bfe-9cc247b92483"
        },
        "item": {
          "id": "2447885c-bda4-43b1-a29e-7e739ba40045",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c2ab72b8-bad2-49dd-9c34-60613b455339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b9ae09-ece2-4fec-8516-5c83dcc72df2",
        "cursor": {
          "ref": "765eccdc-3160-46cf-a6c3-78d45e334107",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "74f8021e-dac7-4b89-ab3c-f0fb3fbe6349"
        },
        "item": {
          "id": "82b9ae09-ece2-4fec-8516-5c83dcc72df2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8cbc71c4-36e4-4ba9-abc8-9690e8f70f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4500a5-eac3-4b68-a52d-b66e59a120c5",
        "cursor": {
          "ref": "f447df06-289b-4e53-8437-535935e1ccf9",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8e45e785-8ae5-48e9-bb5c-bef0c03437b1"
        },
        "item": {
          "id": "8f4500a5-eac3-4b68-a52d-b66e59a120c5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fd81c3e8-3c24-4342-9a84-df937433ee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6358b13-860d-444d-a362-f6a87992fd22",
        "cursor": {
          "ref": "965f5bcb-d19d-4cda-8bcc-5483beac4399",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4380fbbc-ec49-4eb3-8738-fc3f6b3d4eac"
        },
        "item": {
          "id": "d6358b13-860d-444d-a362-f6a87992fd22",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "822b6c77-8f43-473d-88d7-9eed08fb0a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10896801-2532-4e6e-a1f0-3bfdd09d9de2",
        "cursor": {
          "ref": "f9e36ff7-a7e9-41ed-9fdc-316c6c4891ea",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5915ec60-514e-4da8-823e-c026283516f2"
        },
        "item": {
          "id": "10896801-2532-4e6e-a1f0-3bfdd09d9de2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fd850d50-eceb-4870-9036-4289bd952e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce9448f-e729-4a50-a827-1795eda36add",
        "cursor": {
          "ref": "77816d16-6823-4e3e-80d2-086c4f09c699",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0193653c-1d75-4936-83b1-d850cb8e1753"
        },
        "item": {
          "id": "9ce9448f-e729-4a50-a827-1795eda36add",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "df716df4-272d-469b-956f-9ba8957b15e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ab980b-7a05-4dbd-8420-f116daf161ab",
        "cursor": {
          "ref": "8ce400a9-d171-4501-932d-0d8b418c6e8a",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "982e1ea2-3b06-42d2-a19a-6cda2f9d3b00"
        },
        "item": {
          "id": "e9ab980b-7a05-4dbd-8420-f116daf161ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1d1a3a66-0bba-4458-8853-4465a559fa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e30db6-680a-438d-ab3a-199c2f0eee13",
        "cursor": {
          "ref": "8f5521a1-c71c-421f-9f5f-6ff1bfdcb592",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9cae7b96-dbeb-4a94-8d1c-84b2435c4596"
        },
        "item": {
          "id": "f0e30db6-680a-438d-ab3a-199c2f0eee13",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c2e25f10-e52a-462b-8dc4-b033d5891c83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f880990-f4a0-45a0-8da5-afb4b749a468",
        "cursor": {
          "ref": "909e720d-eb32-4320-b3ac-261b92ed7026",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "834580b4-99e0-4491-81c7-eafbf8141868"
        },
        "item": {
          "id": "3f880990-f4a0-45a0-8da5-afb4b749a468",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e25a9def-f85e-48e7-9020-589e1ad24a26",
          "status": "Created",
          "code": 201,
          "responseTime": 7063,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0609c301-264e-4b85-a8bf-262ad996d76a",
        "cursor": {
          "ref": "0ef6d30e-db56-4ffc-be3a-df9c8c67de99",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7d3ffb7-f058-419c-b860-571a207c2e73"
        },
        "item": {
          "id": "0609c301-264e-4b85-a8bf-262ad996d76a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "09874332-d02f-4e27-ac86-635af176909d",
          "status": "Created",
          "code": 201,
          "responseTime": 6333,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c81cf9d-ba76-45ac-aaa9-15223b4f9414",
        "cursor": {
          "ref": "53fa0617-bb13-4326-b672-cf198fdec8e6",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "674d86a4-43b8-4c77-8ce6-a666589d08dd"
        },
        "item": {
          "id": "4c81cf9d-ba76-45ac-aaa9-15223b4f9414",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6e7b5204-88d3-47bb-92c7-9f51c3272ebc",
          "status": "Created",
          "code": 201,
          "responseTime": 6847,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6caa65-e62d-4e06-8e2f-7382e7f85cbe",
        "cursor": {
          "ref": "c489adb7-0e46-4fff-ab4b-90880a03360f",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ef5a358b-3ba8-48b8-9c83-92b929013ade"
        },
        "item": {
          "id": "3f6caa65-e62d-4e06-8e2f-7382e7f85cbe",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8a75523d-1885-446e-b12b-86b7f2433bbd",
          "status": "Created",
          "code": 201,
          "responseTime": 6127,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a101b6d-3101-4906-8980-b4254e8f1460",
        "cursor": {
          "ref": "3108608e-46d6-4e1a-b219-0686ef745483",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b832ad1-1594-4013-a34e-5adff77e8b1a"
        },
        "item": {
          "id": "8a101b6d-3101-4906-8980-b4254e8f1460",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d79a6ff4-2ef2-42e5-81ac-29816bab3f1b",
          "status": "Created",
          "code": 201,
          "responseTime": 5934,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6bf440-7d61-4a1e-8f69-1e896658c341",
        "cursor": {
          "ref": "b7331ab1-e188-4952-b0d2-8c2c52c636be",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c2c52479-8600-4bf4-9518-e17963d2b8ef"
        },
        "item": {
          "id": "dc6bf440-7d61-4a1e-8f69-1e896658c341",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1f92b38d-c1f1-4bb5-888a-94aa39fb2812",
          "status": "Created",
          "code": 201,
          "responseTime": 7165,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff236dc8-0e5d-4517-8fb9-9915106543bf",
        "cursor": {
          "ref": "7fc9eb19-1b26-4567-bc61-808c0e6a8cfd",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a599b97c-f3cd-4f20-8536-593673f9666d"
        },
        "item": {
          "id": "ff236dc8-0e5d-4517-8fb9-9915106543bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9557fd4a-10d1-4619-9038-1fdd1419413d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df0f22c-52b2-445d-a0fc-8bd6ce28a5d1",
        "cursor": {
          "ref": "2ad64e98-b613-4708-84fa-c95bcd96e9ca",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7b713c1f-1b86-4f50-af67-ed4861e4e0f4"
        },
        "item": {
          "id": "4df0f22c-52b2-445d-a0fc-8bd6ce28a5d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4dbed039-d192-42b7-bd3c-9119a9603066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1406bdca-462d-4a2c-91e8-e7625344f73d",
        "cursor": {
          "ref": "0bda2e39-5490-4da7-8c45-aa086cad7f30",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3f42b135-38eb-48db-9b1a-bf4216d84348"
        },
        "item": {
          "id": "1406bdca-462d-4a2c-91e8-e7625344f73d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87deb7ba-0ddc-4eef-80cc-619991209f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4d2ca4-67b3-4a5c-8a1c-72e28c7a36c6",
        "cursor": {
          "ref": "ef7ddcaf-7558-4382-b6ca-29bf6c18f3e4",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c0fc596c-c3fa-444d-b5ab-06f0bc0c8882"
        },
        "item": {
          "id": "0b4d2ca4-67b3-4a5c-8a1c-72e28c7a36c6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5867174e-97e0-4958-92d1-2a7c3353bfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2213fa-9234-4b9b-8005-495a332e4769",
        "cursor": {
          "ref": "12ae602d-8078-4242-a6f1-1a56215c496e",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0b7ab91b-c47b-457f-89b9-6ef1ac3166a6"
        },
        "item": {
          "id": "9c2213fa-9234-4b9b-8005-495a332e4769",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f221433c-fbc2-4147-8d1d-e8e90f892b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c399190-93cc-46e7-b56a-46f7797a72e4",
        "cursor": {
          "ref": "1cc97f08-8ea9-4dfd-a256-aead7855c509",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "50c0c93d-26e4-4b4a-b76b-556db8958b2e"
        },
        "item": {
          "id": "4c399190-93cc-46e7-b56a-46f7797a72e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fa00ee7-47bc-4036-812e-36e985708cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562e1b39-7158-43ea-af91-8722c325fe90",
        "cursor": {
          "ref": "a841ee20-bd3f-4d2f-94d2-ebb8e5fb582c",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b367174b-5197-495f-9df2-c2d06ae8431e"
        },
        "item": {
          "id": "562e1b39-7158-43ea-af91-8722c325fe90",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7ee1b7cd-20f2-45da-9852-21c584ae97c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee09489-3f31-4940-a3b7-7d201d372eed",
        "cursor": {
          "ref": "626858fc-ef2e-4756-b575-664520bbc63c",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b0dc306b-cc4f-4756-a470-5198c31e27bd"
        },
        "item": {
          "id": "bee09489-3f31-4940-a3b7-7d201d372eed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "193d717d-3f46-4eb7-b208-8501f1aadc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf330dc-3d60-45fc-8370-a9698a693bca",
        "cursor": {
          "ref": "70911753-ac52-4853-8d83-2a79526ebf36",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5378a532-5359-429d-bf47-63d1acd15345"
        },
        "item": {
          "id": "2bf330dc-3d60-45fc-8370-a9698a693bca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c90d444-1ab2-4d0b-982f-547a2dae6fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d7ea2-915d-42b0-9402-cd58a2303823",
        "cursor": {
          "ref": "7e9bb923-7489-43f7-a1d9-739bace7f612",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6ff4faee-97a4-4bc3-abdc-5fd2ec16db0f"
        },
        "item": {
          "id": "4b9d7ea2-915d-42b0-9402-cd58a2303823",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0dcb340-6d86-4d87-977b-60b1347bb208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e75fdb-ae1a-4677-8db8-17ebfadeaa8e",
        "cursor": {
          "ref": "6c0a86f9-7095-46df-9402-f7dd0bb0dca0",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cbe68bfa-867e-425d-9898-c524e2ff095b"
        },
        "item": {
          "id": "a7e75fdb-ae1a-4677-8db8-17ebfadeaa8e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b715ca39-8078-466a-9b3c-22c558ad7d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ee09f2-e724-4d81-9265-b90049ca1259",
        "cursor": {
          "ref": "cb2d8d8e-9d85-488d-ac17-a980abafac7c",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1fa5bc35-ec2a-4781-84d7-50e535944c8d"
        },
        "item": {
          "id": "78ee09f2-e724-4d81-9265-b90049ca1259",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "05a94c48-6a10-49a0-8fd0-062f34a37fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c749c12-b675-4774-a96c-61f3cda26df8",
        "cursor": {
          "ref": "e2d4d28b-a35e-4317-b2f5-57c11891e185",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ab3893a2-e73d-488b-a2de-6edcbc09b69d"
        },
        "item": {
          "id": "4c749c12-b675-4774-a96c-61f3cda26df8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "662023fc-1245-48f1-bb9e-5b4879e6fecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6e9d01-e4e8-48a4-8768-a77076ec14fc",
        "cursor": {
          "ref": "2a77f8a3-765a-4866-ab7d-47bbba2bd72d",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f3a0b105-f74b-4684-8c6b-80ae310561f2"
        },
        "item": {
          "id": "5c6e9d01-e4e8-48a4-8768-a77076ec14fc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8d73ae4a-25f5-41c4-b275-e5cc9442b780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16846bb-3770-404b-8cfb-3026df2a1fd0",
        "cursor": {
          "ref": "b53a6ce1-3fe6-462c-8696-61ea1ac89cec",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9ce509d6-a635-447d-8505-2fe6b573b99e"
        },
        "item": {
          "id": "f16846bb-3770-404b-8cfb-3026df2a1fd0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "af66c223-0ed0-49c2-b530-896bf9c0d748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff2a80-0b9d-46eb-8005-f7f952d3d704",
        "cursor": {
          "ref": "1540169d-d8e5-48c9-9967-faec1f797933",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "018166b6-3551-4a65-a092-cf20307f03fd"
        },
        "item": {
          "id": "c6ff2a80-0b9d-46eb-8005-f7f952d3d704",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "54b48fbb-3aa1-4bdf-a464-50f3093b4a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0735df71-10af-45d9-beff-b54d0ce938d7",
        "cursor": {
          "ref": "97ea2b00-3c01-4387-ab6d-e8ed3c4b37ec",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d64f8cf6-f82c-4859-906c-31e5f7f21a10"
        },
        "item": {
          "id": "0735df71-10af-45d9-beff-b54d0ce938d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8896a1d7-d469-4a6f-be4e-f89daf0bf7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b563d7b6-7e1a-469c-96b7-095f6ae5cf07",
        "cursor": {
          "ref": "57b31a53-716f-47bf-a2e6-6d79640ef947",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a1203499-4959-4eca-bc35-2960aa526c97"
        },
        "item": {
          "id": "b563d7b6-7e1a-469c-96b7-095f6ae5cf07",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8de172c7-5571-422d-975b-d8db0e51cc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1ffd99-8f89-4af7-a74a-20f336dd1d6a",
        "cursor": {
          "ref": "a1ceabff-4ebf-4c83-89b0-4be75f0dedf9",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dbb1d600-44c9-4c4c-bff0-ae2ca04aba07"
        },
        "item": {
          "id": "8b1ffd99-8f89-4af7-a74a-20f336dd1d6a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b526ad92-4245-4da8-9279-b81d7acfe409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87943b07-536b-4a4d-80fe-c42e47d1ad89",
        "cursor": {
          "ref": "538cc428-460a-4352-8323-42e073a9f328",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e0311385-afe0-4edd-9e82-155e7f0a0392"
        },
        "item": {
          "id": "87943b07-536b-4a4d-80fe-c42e47d1ad89",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b4e6f1c-89c9-454e-9d65-d383ba51dab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecbf583-ba48-496a-8170-dfa0d2ff42ec",
        "cursor": {
          "ref": "c7cce653-f70d-403a-8e55-e6c21d559063",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "391e165b-b3e3-462d-a387-9a62d37aeb2e"
        },
        "item": {
          "id": "cecbf583-ba48-496a-8170-dfa0d2ff42ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b3c0be17-30e8-44a3-a48d-9a3b29c1bd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85512bed-9259-450e-850f-258e352dea5c",
        "cursor": {
          "ref": "9e46f901-854b-4805-a3c5-fc73a07c2b15",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "58ab077d-40f2-4edb-890b-fa0d1fca5cb0"
        },
        "item": {
          "id": "85512bed-9259-450e-850f-258e352dea5c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bcf6398c-902a-4e16-b8d9-414d5acccf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d34ec8-00b2-4d77-ba4a-cee68db70ebf",
        "cursor": {
          "ref": "13bd0b8a-5cf8-4c81-bd3d-c7979a373d1d",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "56e83241-8b5f-4553-a608-fe790cce0415"
        },
        "item": {
          "id": "e6d34ec8-00b2-4d77-ba4a-cee68db70ebf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fea80946-0063-44d0-91a7-18e34b0f97f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a64a611-d7bb-461b-a59e-d61101b2fac4",
        "cursor": {
          "ref": "770de686-18f9-4dda-9fc0-15852ec83999",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a8869e0c-1f3f-4960-bc52-71244479cc24"
        },
        "item": {
          "id": "4a64a611-d7bb-461b-a59e-d61101b2fac4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d19e58b-ef93-45a5-ad3b-68bffb80e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef105011-6dd6-44bf-a71b-6316390db427",
        "cursor": {
          "ref": "d24ba36c-d7b6-43a6-84d9-8a113128450e",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "717c80a8-c0ae-4572-9617-0fc8c6583dad"
        },
        "item": {
          "id": "ef105011-6dd6-44bf-a71b-6316390db427",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9cc41ae0-79ac-4748-9ffd-8aa376cd0b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14339683-258a-4bcb-8d86-fc3516817f9d",
        "cursor": {
          "ref": "cc954e9e-7384-4488-bf44-46c99f709b32",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ffa5fa24-f162-46d0-913c-0daf5329bc05"
        },
        "item": {
          "id": "14339683-258a-4bcb-8d86-fc3516817f9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc516756-6837-427d-a8ae-8588aee5e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a2ca93-2670-4151-a768-9010ecea9634",
        "cursor": {
          "ref": "e1f133e0-4b85-4369-a126-adb1d1edce56",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3386e847-6be8-4568-9716-07ec06731e52"
        },
        "item": {
          "id": "07a2ca93-2670-4151-a768-9010ecea9634",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb7377b8-9bfe-4437-bf21-61794af10e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3304cf-a56c-4508-b500-0f16b4cfdfe3",
        "cursor": {
          "ref": "81aecf5a-e1f7-4df6-9858-4e871320579f",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1885ec50-725e-4422-a15a-a106748b9631"
        },
        "item": {
          "id": "4d3304cf-a56c-4508-b500-0f16b4cfdfe3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25fb1b3d-8b52-4523-a018-36a52f28fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbd8ce9-58db-4767-baa2-2e4b7a3c906a",
        "cursor": {
          "ref": "78fa6967-1334-4344-a2cd-a01fe62c6d7f",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a01d1b14-bc72-4e49-9aa2-8cef71445651"
        },
        "item": {
          "id": "7bbd8ce9-58db-4767-baa2-2e4b7a3c906a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a1171ca9-118e-4f25-9e3a-f23c134da829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66a1fe-fb62-4560-bcce-53d9f3625e83",
        "cursor": {
          "ref": "dba1b8c9-5e2d-496f-8a37-8d0d849c60c5",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ac15b337-31f3-49ed-a752-9b23209cd0ce"
        },
        "item": {
          "id": "4a66a1fe-fb62-4560-bcce-53d9f3625e83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6c2b790-c27d-447d-a374-79fd0c1329a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ee28d5-9f28-43df-bc22-56330b2c5c65",
        "cursor": {
          "ref": "6c3aa1ff-3ee0-4442-8792-2551e6766485",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "af7100d5-5383-4de7-aaa1-a26cd98b7937"
        },
        "item": {
          "id": "85ee28d5-9f28-43df-bc22-56330b2c5c65",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "346131fd-633c-4fac-89a0-a04bbf2f1fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053869b6-5b24-47f7-9828-990f3778d646",
        "cursor": {
          "ref": "d99ce2d9-3ce8-4f02-887f-7a0349a2b5fd",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b23eface-8517-41cd-b225-d09158d60ea8"
        },
        "item": {
          "id": "053869b6-5b24-47f7-9828-990f3778d646",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "246b437d-7e90-41e2-b2f8-605d4b01a054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f934e0-8217-4390-ab73-640f95ad9a84",
        "cursor": {
          "ref": "21a83348-0684-4993-9233-28299ed62b4e",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af4ec15b-5261-4057-8025-144427df688a"
        },
        "item": {
          "id": "86f934e0-8217-4390-ab73-640f95ad9a84",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "81001fa0-c825-4410-b36f-aa2fc70a85b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d142705d-f897-44ea-976a-d343effcca20",
        "cursor": {
          "ref": "843b8fbf-6383-4df3-8f40-54606b0d305d",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "67481829-b974-443f-946b-68c41f889425"
        },
        "item": {
          "id": "d142705d-f897-44ea-976a-d343effcca20",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "05ac3ca6-ba1c-4686-bd14-dbd0b769fc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa1202-f16b-4dff-a9f4-c43056d960cf",
        "cursor": {
          "ref": "153ab276-86f8-4799-af3e-c9e7ebd121d5",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3677fe5a-5df7-47d0-8dad-d5085a8634de"
        },
        "item": {
          "id": "88aa1202-f16b-4dff-a9f4-c43056d960cf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "406c24b9-255d-404a-9bfb-4b991e504a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130d9ee5-9000-4c84-b543-aa01a954586c",
        "cursor": {
          "ref": "b50d26c4-c42a-4b90-a04d-9eba207d25ff",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a66473e7-2bce-4183-8a88-b90394f298a5"
        },
        "item": {
          "id": "130d9ee5-9000-4c84-b543-aa01a954586c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "43fd6602-5623-4b21-ad22-bc889d23a0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7298241-560e-42fd-8c3c-76d745a2818f",
        "cursor": {
          "ref": "6427a9f5-45bc-4b34-b991-cd5faf530274",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f31422a7-99c3-4668-bcf7-0e78d5380ded"
        },
        "item": {
          "id": "d7298241-560e-42fd-8c3c-76d745a2818f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2e7d0ad0-537a-4138-a865-a2c2b5e8bcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b91dcde-8ec4-438a-8e4e-4144cd62a8eb",
        "cursor": {
          "ref": "7786e59f-ed73-4e5d-8d4d-b52b3f5f4f5c",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e84283cf-6f1b-4245-a01a-7c6a1b4925a3"
        },
        "item": {
          "id": "1b91dcde-8ec4-438a-8e4e-4144cd62a8eb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65158049-273a-4e97-92c4-a0bab022baa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69b86c9-53e7-46d0-9acf-6b539fbc8cec",
        "cursor": {
          "ref": "e98ad663-c1a5-4128-8110-8761f75cb4ea",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2607b5ee-d5cc-46da-a046-d821ba67e51d"
        },
        "item": {
          "id": "a69b86c9-53e7-46d0-9acf-6b539fbc8cec",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3e261331-7aa8-4de4-a186-e6d486c0f7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2419b18-8346-4142-8dd4-e1616118c1ad",
        "cursor": {
          "ref": "24999583-6197-4890-b33f-24c6a41ee0fd",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d164d70c-7ddd-43b4-9d8f-a6c72d78c068"
        },
        "item": {
          "id": "f2419b18-8346-4142-8dd4-e1616118c1ad",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "be32833c-5211-4c6b-a73d-e08da8f937fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c86f6d-a9ad-4408-af2b-c49b8a3933d4",
        "cursor": {
          "ref": "5bc50ef6-6bc6-42ed-83ef-09162bdc285a",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "caa893c7-822a-404a-9fc0-0d5052dcb899"
        },
        "item": {
          "id": "93c86f6d-a9ad-4408-af2b-c49b8a3933d4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "eccd8bc7-c28f-4e09-b645-cda996a137bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764a3824-cbe6-4e48-83e4-2ec73add7b15",
        "cursor": {
          "ref": "76eec16a-5cef-496c-af6c-551475aebc0b",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0bcfd620-4f0a-4c03-afae-b7a2bcb7af44"
        },
        "item": {
          "id": "764a3824-cbe6-4e48-83e4-2ec73add7b15",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0461d719-277c-456a-a184-647a09f1c57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c789f6fd-d509-4e3a-92a0-a08645088c65",
        "cursor": {
          "ref": "5df87d64-e944-4c3c-a7b1-f8c52b9f9665",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b31ba77d-9e74-445e-8d17-97662151a845"
        },
        "item": {
          "id": "c789f6fd-d509-4e3a-92a0-a08645088c65",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3c11e9f1-57c6-47f4-bfd9-6c4603a8a2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b55b1b-f7c3-46ed-bbbc-972b8d26abbc",
        "cursor": {
          "ref": "85f1ff84-bc0e-47f4-b9bd-4b56b55fe54b",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bee5954e-8a8e-4a9b-aefe-44201826b314"
        },
        "item": {
          "id": "46b55b1b-f7c3-46ed-bbbc-972b8d26abbc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9ce0c66d-284f-43c7-8334-7cbef2a184eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1672f1f9-0738-4383-9565-403fd9fc3a9b",
        "cursor": {
          "ref": "d8e54b25-56b4-4299-830d-6453faaa42b1",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da964de2-e6eb-43ad-8681-431c9c9d44fa"
        },
        "item": {
          "id": "1672f1f9-0738-4383-9565-403fd9fc3a9b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3b9deeac-8745-4462-a349-7d4ce244e01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff247e33-ab66-4e12-ae70-0e632902763e",
        "cursor": {
          "ref": "3b4031a9-3b24-41a4-88b1-ee7a05bd3df4",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "75d30b65-1e98-4992-87d7-a4efe8d3fe53"
        },
        "item": {
          "id": "ff247e33-ab66-4e12-ae70-0e632902763e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5beadaff-144d-4296-84b0-c71028f8ec24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140d126d-037c-4f30-a507-6a5f8e5ccee8",
        "cursor": {
          "ref": "bff38ca4-48b9-401f-9b25-3c0cf658c429",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4eb157be-e128-4696-9053-47f092bcb95f"
        },
        "item": {
          "id": "140d126d-037c-4f30-a507-6a5f8e5ccee8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f55dc020-10a0-4903-9abc-bf7894966edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49c1557-19eb-4f4b-b6b5-c7a417aa1f99",
        "cursor": {
          "ref": "8476cb4f-1f65-4441-90a4-18db7da4d891",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bedfa034-acf8-4dba-a109-c99c745f4a47"
        },
        "item": {
          "id": "f49c1557-19eb-4f4b-b6b5-c7a417aa1f99",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "57d26bd6-a310-4467-99a0-035f37b50530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d74ab25-e741-441c-b651-9889610d6317",
        "cursor": {
          "ref": "b126d3e3-194e-4bd7-b948-17a02362fda4",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c21e8c0-f145-46b0-a16b-9b9992506693"
        },
        "item": {
          "id": "1d74ab25-e741-441c-b651-9889610d6317",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "915b4498-b570-4e75-a564-94d84eaba65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dddf01c-c6b4-4c9e-942c-21fc89e81b57",
        "cursor": {
          "ref": "5824e7f1-5375-422d-ae66-ffbdb0b47f2f",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c1620dbd-4e69-4c1d-8861-71a07976a2d0"
        },
        "item": {
          "id": "2dddf01c-c6b4-4c9e-942c-21fc89e81b57",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3557ef10-8a32-479a-a8df-b15108652abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c654ea-464c-4414-9bce-fb520bc8fd70",
        "cursor": {
          "ref": "98376514-02af-47c2-82f8-0bafc44b1c51",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f42b042b-59e0-4dc0-ae7c-4c06f2e2c63a"
        },
        "item": {
          "id": "d9c654ea-464c-4414-9bce-fb520bc8fd70",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e930fe95-c335-4367-a810-cd42e65f8732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8e58da-b99c-4ee8-ba61-3d1f12c8753e",
        "cursor": {
          "ref": "ee688638-3758-451c-9ab3-d678cd13f050",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1fac5a5d-f2d9-45d7-bfec-5ad3b07aea86"
        },
        "item": {
          "id": "4e8e58da-b99c-4ee8-ba61-3d1f12c8753e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a25dc63-342f-4dfd-9594-eb190ee14855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083d1ace-f0b1-4c12-987b-48fa8ab30306",
        "cursor": {
          "ref": "d60778e2-3338-455f-aa64-332d5ceaf52d",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "36aee552-59e7-4a3f-af4b-e91415f9af2a"
        },
        "item": {
          "id": "083d1ace-f0b1-4c12-987b-48fa8ab30306",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4d08618e-1d8f-48d8-af51-ab56c91b7403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e864e126-97b6-4aaa-ab82-de09ff466ec1",
        "cursor": {
          "ref": "0437981b-b207-4c8a-9467-8c56ca9c8f12",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0e996234-7e33-4e23-bd19-98ea5bb3165e"
        },
        "item": {
          "id": "e864e126-97b6-4aaa-ab82-de09ff466ec1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8c099fc6-9e78-4609-8acc-fb6ea1f0be78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545cf0df-42fc-447d-a09f-8ea6cc2a20ca",
        "cursor": {
          "ref": "74e1329e-8a5f-4f59-b3dc-1da057bccd68",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5de6a50d-749d-483a-ac82-ed22b5c734c6"
        },
        "item": {
          "id": "545cf0df-42fc-447d-a09f-8ea6cc2a20ca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d03f4b3b-a49d-445f-8974-e6e9bfc6f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c22aa9f-96a4-4777-98af-8e1eae743675",
        "cursor": {
          "ref": "262e4665-5dcf-4c3a-b122-c0a413d023c1",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f79bf447-6c42-430a-84b9-6939a8951e6a"
        },
        "item": {
          "id": "0c22aa9f-96a4-4777-98af-8e1eae743675",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d8274298-88f3-444f-91c4-2a56d74b4df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97b8a8a-64f7-48a7-91f7-b18197565e1c",
        "cursor": {
          "ref": "d4e440a7-2799-46d5-a8ee-964bf19e7c86",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dd18ad0d-ed46-4373-b314-e1ff922e8db5"
        },
        "item": {
          "id": "a97b8a8a-64f7-48a7-91f7-b18197565e1c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6f2be08e-c07b-493d-ac52-8a269718236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ee1041-1ee8-4b47-b742-6a760bb22fe2",
        "cursor": {
          "ref": "23e6e7da-ba89-4673-8780-85c838ea13c3",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1a4d686c-1789-4289-8988-f84107b4696f"
        },
        "item": {
          "id": "a7ee1041-1ee8-4b47-b742-6a760bb22fe2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d96d566e-3b60-489d-90da-3297b716a769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca21ef7-f853-4fd7-9b8d-5d12ad3fbaa0",
        "cursor": {
          "ref": "9326ef58-960c-4028-9e02-7326469e7393",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bee8654b-6329-4cf4-bb2d-12d66e03f575"
        },
        "item": {
          "id": "8ca21ef7-f853-4fd7-9b8d-5d12ad3fbaa0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b1457ea8-7ce1-4ef6-9e81-4438766835b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc82114a-e80a-4257-a672-aedcdd8f5f10",
        "cursor": {
          "ref": "361b976f-e917-4119-8a78-faad0fbace05",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2fae5601-db4a-4076-ac0c-586810de1d75"
        },
        "item": {
          "id": "cc82114a-e80a-4257-a672-aedcdd8f5f10",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9a2f5528-ffe3-4b25-a929-065e1e5c5486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04ceb62-a6d7-4409-a22c-bf582df785b1",
        "cursor": {
          "ref": "3eeee388-4e9f-4a6b-994c-9ec45251ef90",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6fd06a5f-aa08-490a-a680-a6efed5c35f3"
        },
        "item": {
          "id": "c04ceb62-a6d7-4409-a22c-bf582df785b1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "109e96eb-ed74-4a1d-8b91-9a5dfb89c8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f1348-d472-460a-94a2-249dc1f0ce9a",
        "cursor": {
          "ref": "a0fc864f-66b7-47b1-899e-eec384054397",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d6d13a87-360d-42df-8535-add289513376"
        },
        "item": {
          "id": "747f1348-d472-460a-94a2-249dc1f0ce9a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d07513c8-ce0d-4991-9f1a-303b608bc6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd3058-94cc-4e46-850b-f69bb907ee0b",
        "cursor": {
          "ref": "4c4854a9-8bc0-4f4c-b818-4083d6feeca5",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "62466ebf-b1a1-4e6d-bd49-00dbfe00156e"
        },
        "item": {
          "id": "eacd3058-94cc-4e46-850b-f69bb907ee0b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "84ed6218-7549-425c-a324-fe8e0099b0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515122fe-11d6-47cd-a5c9-ec7f867756da",
        "cursor": {
          "ref": "3cac9dce-6534-43ec-b4c4-34ef3c7872c2",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "51defaba-1ca3-4eff-bc1b-57bebc41bb86"
        },
        "item": {
          "id": "515122fe-11d6-47cd-a5c9-ec7f867756da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b8343434-06e4-41bf-8bb4-ed542e3df23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38cc83-63a5-49d3-9a8e-70abb4b7572f",
        "cursor": {
          "ref": "cd450b34-3040-4404-921f-e430a7c4cba2",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "40f3f92d-eb76-4ef8-b4a0-c52545233b51"
        },
        "item": {
          "id": "fc38cc83-63a5-49d3-9a8e-70abb4b7572f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b5a0c319-f189-4239-9f0d-6c0783e716cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e422c-a59e-4358-b2c0-e8f852fab050",
        "cursor": {
          "ref": "2e87ff4f-296b-43ed-b1a8-b4aea6c32fc9",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "892bff9b-5847-4fd4-a75b-9b6bc522077d"
        },
        "item": {
          "id": "125e422c-a59e-4358-b2c0-e8f852fab050",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46db5064-1d9f-4c17-9ec3-d7cb459c82bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f4486d-1509-4d57-80ec-43a5edd662d8",
        "cursor": {
          "ref": "a686d00b-5009-404d-a24f-fd078060db66",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ceb0eb29-35ab-4bf9-8a2e-ecdb73acb44e"
        },
        "item": {
          "id": "10f4486d-1509-4d57-80ec-43a5edd662d8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6edcce24-aa08-46ce-ba6d-6e21b4e8b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7377781-9026-4f60-8d2f-2f11ba6f5a2f",
        "cursor": {
          "ref": "f596ef67-5dec-4541-a9e2-781d6ec0a68e",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9ee45ef2-5cea-4121-8084-7b74129365ab"
        },
        "item": {
          "id": "a7377781-9026-4f60-8d2f-2f11ba6f5a2f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c11c1103-c161-4330-bcc0-50901ae501d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c514d-51c1-417e-98d9-f14e8fb7d96a",
        "cursor": {
          "ref": "cd76231f-198f-4bec-bea8-202fa88980b0",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "304929df-ca51-4d81-967d-906db447f61b"
        },
        "item": {
          "id": "353c514d-51c1-417e-98d9-f14e8fb7d96a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f31f970b-3e18-443b-926a-f59759aa069c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cb1f54-0d77-41b7-b1ff-e63d105239d1",
        "cursor": {
          "ref": "c6f0d469-64cd-46d8-a906-91a2dc1f88ae",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "531c730c-863a-4f38-98d5-933921799ff5"
        },
        "item": {
          "id": "80cb1f54-0d77-41b7-b1ff-e63d105239d1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cbed7be0-d7cb-4990-86fd-1fcfb2338a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db07154-27d4-48f8-ac8d-f7f0597ba045",
        "cursor": {
          "ref": "97a2ed12-5013-437c-8c26-714810f3e12c",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e55f98b6-5b52-453b-b788-a2417853ddbb"
        },
        "item": {
          "id": "8db07154-27d4-48f8-ac8d-f7f0597ba045",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "811adbd7-851b-456a-baa1-5749b60a2ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f311f54-70c1-4ae2-b92d-4bfced25f002",
        "cursor": {
          "ref": "079767c3-f8cf-48fd-a41e-4e3c7299c6c8",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d056bf5f-5b25-4c6a-9302-e3b57c39bb0e"
        },
        "item": {
          "id": "3f311f54-70c1-4ae2-b92d-4bfced25f002",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7baf1508-0c43-48ef-a839-7f86e01d6fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261c167e-5105-4b23-a05d-2e196d7a6fb9",
        "cursor": {
          "ref": "c9ddf5af-ddc7-44d1-bbf8-ad623a145ac6",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7fd3b85a-7b13-4d7c-823c-43597089744e"
        },
        "item": {
          "id": "261c167e-5105-4b23-a05d-2e196d7a6fb9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "87990221-7c72-4bd0-afea-9b13b23cce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554fa7b0-07c6-494f-968a-4d77ac894eff",
        "cursor": {
          "ref": "52fffc66-e759-4ca0-bcc4-12f601db1a32",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7d001208-c905-4f89-a10a-1e4437476db4"
        },
        "item": {
          "id": "554fa7b0-07c6-494f-968a-4d77ac894eff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f8fae238-f28d-476f-962c-6876435b179c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d604a4-12a6-450b-a7a9-46708a49f811",
        "cursor": {
          "ref": "d840ad10-04e8-4a9a-81b5-fcca55911447",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ec9b9b62-0355-477f-92cf-376ca9438b26"
        },
        "item": {
          "id": "17d604a4-12a6-450b-a7a9-46708a49f811",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7b09c1e-569f-43b3-8028-46a537dbc66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0501aa-df01-4412-abae-749419b470f0",
        "cursor": {
          "ref": "93b09e0f-8eb8-4633-9395-8a00e1a44622",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e09beadf-1303-46da-88cc-e518572fac9c"
        },
        "item": {
          "id": "0a0501aa-df01-4412-abae-749419b470f0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8f21fcb-0b7a-4d7e-a540-05d691faadc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6157d98a-7684-4900-b3fc-868622abad48",
        "cursor": {
          "ref": "43657228-97c8-4fd7-9c82-8e76f496f659",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "68ae9a15-497a-40cd-88d5-2a5de86e5546"
        },
        "item": {
          "id": "6157d98a-7684-4900-b3fc-868622abad48",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "740e59be-ba0d-4cc7-82d2-d8f8d756ffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6716792f-7995-4eb3-83c0-9d101ffa04dc",
        "cursor": {
          "ref": "919387d7-f313-4aa3-adb8-4b8c8899775f",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ea304fe0-8947-4135-8aa9-32a0365ba1a3"
        },
        "item": {
          "id": "6716792f-7995-4eb3-83c0-9d101ffa04dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0f687b8f-f6b2-4598-b205-271aacfb1a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6ca579-5b6e-46b9-9bca-c5fc03c38b74",
        "cursor": {
          "ref": "76f738f5-9203-4466-a366-e278eaa4f022",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c25cd9b7-1207-44fa-a101-a59823fe3715"
        },
        "item": {
          "id": "7a6ca579-5b6e-46b9-9bca-c5fc03c38b74",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8815adfe-cd36-47b3-b720-a9de52efb1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e84dd8c-7ff0-4ee2-b5b1-24459f2a7886",
        "cursor": {
          "ref": "5226840d-0de1-49a0-b11d-7074d5801935",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a4f117b-612f-4536-8df1-0b53f5e161c6"
        },
        "item": {
          "id": "7e84dd8c-7ff0-4ee2-b5b1-24459f2a7886",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0a3ef156-eb7e-4541-97a7-5589eab86d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e84a09c-adcb-4d2f-8974-bac5d340de9a",
        "cursor": {
          "ref": "23d88182-f5fc-40bd-b86c-5a3f8eaca3a0",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d58c17b1-580b-48d2-a5f6-227258d74e4a"
        },
        "item": {
          "id": "0e84a09c-adcb-4d2f-8974-bac5d340de9a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "75f68c97-94d9-4356-a898-35ea7921707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a166e6aa-89f2-41da-96e0-ea625862cc2c",
        "cursor": {
          "ref": "7d059f5f-ea98-4aea-9e1a-6de6365e2a00",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "aa986ae9-7cb9-4b4b-a7e5-b028ec12a9fa"
        },
        "item": {
          "id": "a166e6aa-89f2-41da-96e0-ea625862cc2c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bab6c062-8ff6-47ff-86b0-72acb0ab4b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ff34a-3cc2-4571-ad5b-2410878809e5",
        "cursor": {
          "ref": "f5e69d59-1f71-4c04-9ae5-635fd8ed53d3",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6688e24a-1274-45d3-8b4a-042356d3538b"
        },
        "item": {
          "id": "f50ff34a-3cc2-4571-ad5b-2410878809e5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8c1b5b9-0401-4bf3-b220-a9e373bf31f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d875569b-027e-4422-ac8d-8854088fc306",
        "cursor": {
          "ref": "ca18b5ee-3828-4329-b738-1eeded9579e7",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7544a6b7-7b63-402b-9fda-666b5335ef50"
        },
        "item": {
          "id": "d875569b-027e-4422-ac8d-8854088fc306",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "282558e3-be2f-488a-b887-52abd18325b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7129a56c-7917-4927-9243-53e87732b2ca",
        "cursor": {
          "ref": "65e41be2-f28f-428b-8cfb-872e7bcb1e44",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e84cc0d5-dcc7-4460-8295-05da1190ba51"
        },
        "item": {
          "id": "7129a56c-7917-4927-9243-53e87732b2ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b20446a1-10b0-4755-9450-ee691c1599eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc3182d-6991-49d9-b830-a2ea8b9dcdd5",
        "cursor": {
          "ref": "bc2c09e9-e32a-47b3-b10d-eae7abcaf6d7",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "59e3204f-352c-4a5d-a6b7-c189a4cc7a13"
        },
        "item": {
          "id": "5dc3182d-6991-49d9-b830-a2ea8b9dcdd5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4fb1cc13-93bf-4976-9550-2690c50e3816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00430e8d-6bc6-46ef-aea3-f508a8ef02e7",
        "cursor": {
          "ref": "0afb1e32-77f0-4d02-8fbe-47972d80e1c3",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f465f787-8181-4435-8035-a16c913a4406"
        },
        "item": {
          "id": "00430e8d-6bc6-46ef-aea3-f508a8ef02e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9f4e479f-99f9-49df-ac91-75a9c65f0be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d577b0-89f4-4bb1-9ef0-1530e5f8be83",
        "cursor": {
          "ref": "86b01466-acd5-4fac-a421-c923063a3f11",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ed18a31-fa74-4c7a-a1d8-911c15389937"
        },
        "item": {
          "id": "49d577b0-89f4-4bb1-9ef0-1530e5f8be83",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fe6f1af9-48be-4928-8619-d9d4aebe735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3e98dc-a9ec-4625-9d66-28e72a11364d",
        "cursor": {
          "ref": "792ddfba-b342-4e4f-94c3-e61e3fab24b5",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0cbe0fc9-68c8-4bea-9bb8-c57ecff080a6"
        },
        "item": {
          "id": "fb3e98dc-a9ec-4625-9d66-28e72a11364d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8dd31102-f47a-440f-b463-9dfeb0101d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d07f1-0f50-4507-81bd-4b5d4a3bd0ef",
        "cursor": {
          "ref": "e98fed4a-c4cc-4c27-976b-89ec96a431fc",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8856bfcc-7575-4fba-b45c-effe24ea44ef"
        },
        "item": {
          "id": "559d07f1-0f50-4507-81bd-4b5d4a3bd0ef",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3a0e3a6-8bf0-483e-b12a-f35b2a476c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdfaaca-5dea-4e03-849e-e946039295f2",
        "cursor": {
          "ref": "7b8f5983-6a81-41af-8e19-9fa8e78d119e",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ea10c96a-eac3-4524-8db5-372fc84a1eb9"
        },
        "item": {
          "id": "7fdfaaca-5dea-4e03-849e-e946039295f2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9ae79376-1982-4a43-ba4e-a6f112a045c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9568ed-b738-4040-b4d2-216eca1ec497",
        "cursor": {
          "ref": "8051fd98-8ea7-4e72-80f2-8fb355072d01",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "659fb604-0037-479d-ba13-a9f9a30f2ba5"
        },
        "item": {
          "id": "5e9568ed-b738-4040-b4d2-216eca1ec497",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "432fc98c-1306-4277-ae18-f519ba2241ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f0ae90-5487-4a04-9f26-a7a12742fc3e",
        "cursor": {
          "ref": "50075397-4775-43e2-bb8c-485816c113cb",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0a656c82-3236-456d-b8d2-e9dc80c4c0cb"
        },
        "item": {
          "id": "36f0ae90-5487-4a04-9f26-a7a12742fc3e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e3f21d7e-8290-49b5-a02c-fd5bc498615c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39898fd6-1dd8-41b3-b698-154d888feca6",
        "cursor": {
          "ref": "4a405c55-72b7-46d4-a196-9fb8c592fa7f",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a2aa4331-9cad-4d7d-adf7-7cf6ab98ac3e"
        },
        "item": {
          "id": "39898fd6-1dd8-41b3-b698-154d888feca6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8fa9b9da-19b5-40e5-9a27-3ce5762b773f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d4d2f6-62a7-4a3a-9550-60598ce399b4",
        "cursor": {
          "ref": "74ca4a56-54f0-44da-a387-6a90dda90edf",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5fb3a0d3-e7e2-4c03-a275-860d9469da01"
        },
        "item": {
          "id": "01d4d2f6-62a7-4a3a-9550-60598ce399b4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "35bc0d1b-e573-4d0c-8c2a-605a0430151c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b5dea9-3094-42ec-a68b-6ffabc525009",
        "cursor": {
          "ref": "558996c7-8f53-4109-b1b1-033c86214ccd",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c2e83036-f677-45ec-98b3-6795a8c80e77"
        },
        "item": {
          "id": "78b5dea9-3094-42ec-a68b-6ffabc525009",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7e4bc4d7-f533-4a35-8c12-e444591bdf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b37c83-a987-4dae-b023-6f42cbee00e5",
        "cursor": {
          "ref": "d938787a-ae27-457b-9846-f7a08d7c30ae",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "42c9fc40-c6e9-483e-9e90-0d3a8e131ae1"
        },
        "item": {
          "id": "25b37c83-a987-4dae-b023-6f42cbee00e5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "00895c92-a7e1-47e4-bdb8-3d01313ab47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf6f42-6d5d-438e-881f-bc968d772250",
        "cursor": {
          "ref": "9fac4999-f998-49ed-bf95-77010a2858cc",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d1cef04-f78d-429a-b5d7-0737354639df"
        },
        "item": {
          "id": "cccf6f42-6d5d-438e-881f-bc968d772250",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "18b6f298-9e5a-416c-b44c-67b59c02dc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70bbd1-4cc4-495b-8989-6c4bb236d557",
        "cursor": {
          "ref": "c5d5df27-4cc8-41b6-bb38-cfc45b45fae8",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "15a35718-c2fe-4510-bf70-8dcc7e70c50a"
        },
        "item": {
          "id": "3a70bbd1-4cc4-495b-8989-6c4bb236d557",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b6d1e35f-553e-41bc-b874-b1c3884ed681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2065f0-412f-4932-891c-372da3a58aa5",
        "cursor": {
          "ref": "6c620cf7-7117-4714-93a3-5bc673f96615",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b214e968-6994-4df7-b937-56e801d4e1d3"
        },
        "item": {
          "id": "2a2065f0-412f-4932-891c-372da3a58aa5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "295bae66-a5f2-47d1-80c8-7011505cd0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ae785e-f721-4c1b-ab8b-28f8de8a754b",
        "cursor": {
          "ref": "c2982bb1-5017-4537-957d-cbdb2814f85d",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5c2f1551-1520-40b1-b112-66f1b8ab7222"
        },
        "item": {
          "id": "68ae785e-f721-4c1b-ab8b-28f8de8a754b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "daba6d26-e366-4447-bcff-1e039c33110e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e3cefd-6096-45f7-9db6-66e319e3a53b",
        "cursor": {
          "ref": "e924d29a-bc0e-40f7-9b3f-bb2e92b5aa7c",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "052ed14b-c8b1-46d3-a572-1cd733dd93a0"
        },
        "item": {
          "id": "41e3cefd-6096-45f7-9db6-66e319e3a53b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "05f7f6fe-7dc6-4c4b-bd93-fa5e4b59ae64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d2dc61-e9c6-428a-9e72-2e760173cf96",
        "cursor": {
          "ref": "e8284039-370e-40b8-8a4a-631d9467f15c",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "47d27365-fbc1-4253-8d9d-bbf17895d468"
        },
        "item": {
          "id": "f7d2dc61-e9c6-428a-9e72-2e760173cf96",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba96a28c-adb1-4a03-bd41-15dd2dbdf91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ff184c-4eed-43e6-a450-1546016541b5",
        "cursor": {
          "ref": "90300d0a-a5c5-495d-95a3-157c8ce37080",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c33d8b12-5d69-4cd6-9af3-a8b31bba9244"
        },
        "item": {
          "id": "e4ff184c-4eed-43e6-a450-1546016541b5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6b873a7d-6774-4c9c-85d2-a551eabe0654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2417a261-29d4-48df-ba2b-16fbfe6d100c",
        "cursor": {
          "ref": "45122650-7f33-465a-bbb3-df3a204ac8df",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "865d4809-46bb-431e-bdd0-a5bb706413c6"
        },
        "item": {
          "id": "2417a261-29d4-48df-ba2b-16fbfe6d100c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "236ba323-0d7f-45e3-9440-07c89daa1b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7c0b84-22dd-46e9-ba81-757986315bc4",
        "cursor": {
          "ref": "0453b8ef-b548-4287-a506-327820676254",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0bba7ddf-2d9b-41e4-9c57-4f8b90c565ea"
        },
        "item": {
          "id": "9c7c0b84-22dd-46e9-ba81-757986315bc4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b263e5d0-2718-4d1b-939b-65a694d168b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db25fac9-7503-4866-a429-ee0796921570",
        "cursor": {
          "ref": "a103c21f-c8d2-4487-9888-97b346c4395c",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cb5a03c6-82c2-41cd-b244-865fe2793a60"
        },
        "item": {
          "id": "db25fac9-7503-4866-a429-ee0796921570",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fe7768fb-be40-4e1f-a389-485a1d9b4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7e29d4-504a-4a20-8b11-11854f35be40",
        "cursor": {
          "ref": "dc47bfd1-1330-4def-b030-65db72d2bb3e",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f79d5a0-cfd3-44ab-a7b4-d05754acad62"
        },
        "item": {
          "id": "ff7e29d4-504a-4a20-8b11-11854f35be40",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d7566d5c-9643-44c0-bf7d-49acbca4ab74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d94c15-29f0-4cfa-b28c-c5377b7c78fd",
        "cursor": {
          "ref": "e309b1bf-0198-4f52-814b-c17537c71bbd",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6a1fbe5d-25a2-41c0-a542-f3136d893d7b"
        },
        "item": {
          "id": "95d94c15-29f0-4cfa-b28c-c5377b7c78fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2abe6358-fcbc-4140-9f5e-6dc5a727b586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581945e-75d1-4986-b9d0-621008789e90",
        "cursor": {
          "ref": "14049738-a736-434b-ada2-19b50754a6de",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "be8cbc98-b9ce-4672-a946-db1782c6cdf7"
        },
        "item": {
          "id": "d581945e-75d1-4986-b9d0-621008789e90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "26423588-5e4a-4c89-b1f8-51c0afb33f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbc2156-595a-4e16-8ca9-308383e5ca43",
        "cursor": {
          "ref": "e0d9ad96-ca00-4a25-9cf3-5603ce7c6904",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d36a0b17-0427-491c-9679-c658d014f0cd"
        },
        "item": {
          "id": "9cbc2156-595a-4e16-8ca9-308383e5ca43",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a634e03b-e8a4-4285-846d-bc08e8c7227f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafdece4-a09e-4719-b479-215cf97a5ef6",
        "cursor": {
          "ref": "a01d9cac-c14a-47e0-8fa6-8aca5d31cb92",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f324b116-a58f-40c8-a1a4-cde51b8c5585"
        },
        "item": {
          "id": "cafdece4-a09e-4719-b479-215cf97a5ef6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22a63115-183b-4a2b-9724-0a5fefe60773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fdc7bd-9f25-445b-9108-420a9e336f63",
        "cursor": {
          "ref": "7561770b-fbc5-4be9-a2c3-303fb6a9fa9f",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f2cc209e-f9a5-4b1e-a80f-a9e6166fe9ca"
        },
        "item": {
          "id": "f3fdc7bd-9f25-445b-9108-420a9e336f63",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0294e119-c38a-42cb-a2cd-a04d9e0293a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ea1be5-84ef-4fe4-9bdf-643abe1b4f52",
        "cursor": {
          "ref": "517ad305-48ae-4b8c-9115-da3102194b87",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "01318f93-765f-4c70-af8c-bafe13253d73"
        },
        "item": {
          "id": "80ea1be5-84ef-4fe4-9bdf-643abe1b4f52",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "528f9ece-0bdb-45c7-ad08-89979c5248c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e2dc4c-7c0b-4424-8772-efc143c879df",
        "cursor": {
          "ref": "72661b42-fa76-48ef-9c00-9e2cf81b262c",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7de53495-7a76-480d-b785-c7f692b85818"
        },
        "item": {
          "id": "a5e2dc4c-7c0b-4424-8772-efc143c879df",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3033e4ee-740e-4bb0-a5b1-dab4195e03d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b375d1ec-0804-4fa2-b916-00373e589344",
        "cursor": {
          "ref": "8eb3d991-e208-4747-8ae2-09f0d86bc78d",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6e73bd71-20f8-43fc-8eea-43899844f6d7"
        },
        "item": {
          "id": "b375d1ec-0804-4fa2-b916-00373e589344",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "564f5c9e-1151-4609-9435-eb92b2ec337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d3e1dd-f0cf-46a4-b174-ab8b5217f6f9",
        "cursor": {
          "ref": "278851c2-d897-47ac-a85f-a0b43c91a325",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "06c6c590-f033-4103-9d84-164b2bf3f3bf"
        },
        "item": {
          "id": "d9d3e1dd-f0cf-46a4-b174-ab8b5217f6f9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ba5ba23f-fab1-4471-b57e-629c321fa3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f866eb0-17a7-4ed5-917d-dc2a2cba3a69",
        "cursor": {
          "ref": "a325c04e-d53a-4360-9e91-d5a73fbebbd3",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "290e6135-cdab-4553-92fc-3a905708cdcf"
        },
        "item": {
          "id": "7f866eb0-17a7-4ed5-917d-dc2a2cba3a69",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a9aab3f7-d4ae-43a3-9558-2d50fe416a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74426f4e-3d02-4c00-a9d8-4209c2f47b14",
        "cursor": {
          "ref": "06d17a84-b8d4-42da-8719-e68da239b99d",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1d4d09d6-6747-4cb3-ae8a-d2e13ef6e981"
        },
        "item": {
          "id": "74426f4e-3d02-4c00-a9d8-4209c2f47b14",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "20f80d0f-1ff3-4f76-967d-14d96e9dab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4416fd3-1e3c-4d8e-8ea3-569d6ae4a71a",
        "cursor": {
          "ref": "551e7cf8-ee90-4674-a6d3-1aa3e7baa8ac",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d76066d4-1ce6-4b5c-a199-903b4b74e9b4"
        },
        "item": {
          "id": "f4416fd3-1e3c-4d8e-8ea3-569d6ae4a71a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "421bbaa7-c615-43bb-a488-f8a38f57fd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497df7ad-5a25-4aef-9e29-0a4afe12b893",
        "cursor": {
          "ref": "60c84e38-b09a-4e72-843e-daf59750538f",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "870c06d3-08c1-4081-a9e7-aeb72b1da194"
        },
        "item": {
          "id": "497df7ad-5a25-4aef-9e29-0a4afe12b893",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a4fbd6dd-4f5e-44e2-b6d2-a0fb8346b46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243f05ef-5719-4f9b-9f52-eea52f2e0e4a",
        "cursor": {
          "ref": "a45615a1-d3ec-4a1a-94b3-cea13a005cb4",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3088c2da-7760-4f87-af45-4fe860be13aa"
        },
        "item": {
          "id": "243f05ef-5719-4f9b-9f52-eea52f2e0e4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1f06d877-99d4-40b7-ae54-dfb9c48d34f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d31e2c-60da-462a-9b2e-bd97186312bb",
        "cursor": {
          "ref": "cbeed8ec-4927-4f87-aa29-34ae25229ff7",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dfce236e-6871-4c94-9c8d-68a672543003"
        },
        "item": {
          "id": "42d31e2c-60da-462a-9b2e-bd97186312bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d8f20edf-12c2-477b-ae3d-f207094cdf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474406d0-4458-43dc-a6ab-c14b570b6cae",
        "cursor": {
          "ref": "11cf60d5-5927-4180-971d-18db50289481",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b52a3db7-8187-428d-9308-11850916d7fc"
        },
        "item": {
          "id": "474406d0-4458-43dc-a6ab-c14b570b6cae",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6da28690-f008-40d3-a109-f1a61606aeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a0656-1158-47f4-bb9b-1269636e4a45",
        "cursor": {
          "ref": "822dc75d-41a0-435f-9a76-e0f40fe22362",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d5a66f3d-6838-4558-9055-0e48f69eb936"
        },
        "item": {
          "id": "ef2a0656-1158-47f4-bb9b-1269636e4a45",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ebe1e161-0a6a-4adf-9f8d-c0a95bf112a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5af61e2-9191-486e-b68f-d4e78c65f157",
        "cursor": {
          "ref": "5e8afd63-5865-4e53-a2e2-311d547a2642",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "08a79b85-7d39-4b2c-b852-c626f92f0583"
        },
        "item": {
          "id": "a5af61e2-9191-486e-b68f-d4e78c65f157",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "68116bc4-d600-4de7-8d85-c4ed25c1a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22181c-03e7-47a3-9ba9-f965b12d0a15",
        "cursor": {
          "ref": "d88d5eb1-0c14-423d-a53e-ea05f4215403",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "080f1be4-aa65-4397-84d4-30626d7de2e4"
        },
        "item": {
          "id": "ec22181c-03e7-47a3-9ba9-f965b12d0a15",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6aae16ca-1046-4f2d-b939-73e7e4e11622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa302bfa-60ba-4a8f-a7e8-ec24b0ba2013",
        "cursor": {
          "ref": "4926a428-1e96-48b7-b351-e6fbe03a7a42",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ce919f03-a266-44c6-bf9f-6faf2bbb860d"
        },
        "item": {
          "id": "fa302bfa-60ba-4a8f-a7e8-ec24b0ba2013",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "538ba928-761c-4fde-9147-1d37f6bc46c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a971e1-dccf-4d80-9d0b-bb455562d69a",
        "cursor": {
          "ref": "abc18083-3911-4c02-b958-bffccd8d6715",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e1ecb7b8-bb3d-4529-9b10-98c3cc1bf7a2"
        },
        "item": {
          "id": "94a971e1-dccf-4d80-9d0b-bb455562d69a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3deff42b-ca48-498e-8711-abb751d29952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae286f27-7b9f-4ac8-8155-ad9229d5ff85",
        "cursor": {
          "ref": "b4746d5a-bc77-4b1d-822e-f63b4bfa34de",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cb7a62d5-9e9b-4a71-a984-669461c6b5af"
        },
        "item": {
          "id": "ae286f27-7b9f-4ac8-8155-ad9229d5ff85",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cae3afae-518e-4651-874b-c8fd0252d9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4660371-862f-430c-936b-56f6ff10ddcb",
        "cursor": {
          "ref": "61cbf0c0-1472-4f3f-bcc5-2a51659242dd",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "41ee20a6-3ed2-42fb-8e67-813ed9bf734c"
        },
        "item": {
          "id": "f4660371-862f-430c-936b-56f6ff10ddcb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f7d7c40c-e784-4cd9-9b4a-156a5ececedb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3039ba-009e-48c4-91e0-d4c8fa155cfe",
        "cursor": {
          "ref": "de47021d-fdcc-41f1-aa81-0bd8a877ead3",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d44877aa-8c67-4c0a-9c85-cdf158c9e1a9"
        },
        "item": {
          "id": "3d3039ba-009e-48c4-91e0-d4c8fa155cfe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73760baf-e9fe-497c-8b41-ee18c14620b0",
          "status": "OK",
          "code": 200,
          "responseTime": 631,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db42801-e90d-4e59-b1c5-a6108395c2a1",
        "cursor": {
          "ref": "4f710e96-31dd-4cf4-bd39-fa8bfffe28bd",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a248afc7-2556-49f4-97c7-27e15c8da14b"
        },
        "item": {
          "id": "3db42801-e90d-4e59-b1c5-a6108395c2a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d0cab48c-f48d-4df7-a17d-dc6101f5545d",
          "status": "OK",
          "code": 200,
          "responseTime": 1925,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7eaffc-9d22-4c2a-805e-1e78d1b10d32",
        "cursor": {
          "ref": "38b765f2-2436-4205-9250-24984dc57b9d",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0af4cb7f-ad64-417a-b14a-fc464ae57a7f"
        },
        "item": {
          "id": "5c7eaffc-9d22-4c2a-805e-1e78d1b10d32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4d8df98f-4ad1-4988-acde-07fa082d8d24",
          "status": "OK",
          "code": 200,
          "responseTime": 1661,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f744d720-383e-41bb-9706-f0ba88a92aee",
        "cursor": {
          "ref": "0b9a2023-5d12-4f94-8f2a-162663acbffd",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5495d660-b13e-4c00-9ba6-5c30021b2ef5"
        },
        "item": {
          "id": "f744d720-383e-41bb-9706-f0ba88a92aee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae45acab-64e2-4c3e-b0c7-e665366e0c70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f744d720-383e-41bb-9706-f0ba88a92aee",
        "cursor": {
          "ref": "0b9a2023-5d12-4f94-8f2a-162663acbffd",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5495d660-b13e-4c00-9ba6-5c30021b2ef5"
        },
        "item": {
          "id": "f744d720-383e-41bb-9706-f0ba88a92aee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ae45acab-64e2-4c3e-b0c7-e665366e0c70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70174caf-5e29-46e8-8907-fc05b9da8a3d",
        "cursor": {
          "ref": "66de15df-5504-413b-a5ac-00d4c4d0b69b",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d3c7b950-4f86-4feb-8627-6bbe48d73b4f"
        },
        "item": {
          "id": "70174caf-5e29-46e8-8907-fc05b9da8a3d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0c392a1-447e-49b4-8a98-befa95178205",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9c4870-d751-4098-84ab-ec0e776006cf",
        "cursor": {
          "ref": "083b8dab-e1ac-4196-aee0-a43d7fbd31f7",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e8baf98b-c224-4dc7-bf32-5d564baa298c"
        },
        "item": {
          "id": "1d9c4870-d751-4098-84ab-ec0e776006cf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4c646596-f2a0-4356-82c5-6ba39f215ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}