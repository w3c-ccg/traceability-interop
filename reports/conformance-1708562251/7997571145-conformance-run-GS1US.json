{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ffbaa82d-ac2a-431f-ab20-0ab421e52641",
        "name": "Clear Cache",
        "item": [
          {
            "id": "560e12f8-383c-4aae-beb0-7b32ee52425c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "34521183-7314-4f0f-b897-6e7a0f09483d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "582f13f1-702c-4dea-9e56-c3d181aea015"
                }
              }
            ]
          },
          {
            "id": "24547264-6d65-4f53-9f1a-0b321058cea4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3ee55fa-4288-430b-80cc-5b2dcead5f4e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7b3437b8-780e-4fbe-aae4-33235cc2bd7c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9c21fbec-5404-41dc-8e59-ee81b88d3b19",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "28066ae3-6b8e-4dd0-a0b6-8e1398d0e54e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40d1eea6-e8ab-4557-8878-10be81522678",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d472d1-8fb8-4782-a7e2-0002fb0f0c3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45b3cc88-791b-4b86-8340-9c2260c58782"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb8d129a-7698-449f-980a-950a7d9b7091",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c59b396-8883-47f6-ae16-84cbdc62a872"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06bbf38b-74ea-40ca-ab85-0d962de923e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5c2178e-fcfd-41a0-9eb9-cb3d6c410e21"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a17a9fc9-b829-4b61-ac9e-19fe7c0e8b76",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e39fb15e-0c44-49e0-a95e-ed09b10be32f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573cd8ed-6300-4cf4-8d77-0a124dcb80f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6038bd1-7aec-4db8-a363-3924fbc2fcf1"
            }
          }
        ]
      },
      {
        "id": "6f55d4a2-359b-4227-9447-ef4ae0d02b90",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bf54a030-f97e-4f59-8cad-b075f9cff7ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d873004a-855b-4057-88a5-ac9a224d34f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0b68cef-5fcd-4720-9880-ef9245cc73c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de6de5a-16e4-4388-bdb5-f5d9cee58c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "704c40e2-e515-4649-9f9b-5ce519943139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e32995-32fa-46dc-a768-bb401fd1280b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54490972-4db4-48fa-bd07-0dacc5742b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11806673-4410-426c-b8cb-ba400eeeeba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3809f-8546-475a-a477-afd9408fedb4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b490dd-06c9-449b-8b8e-a9be79c7f3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b602c6c-0225-481e-9319-34e4f8f3713d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "432b5fca-4c1b-4498-8f36-0b015bbdd85b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9ff2922-be24-4173-aea8-42659cf779a7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b78a33-5afa-4a2e-9b8a-1e59c9a7eb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7310e8ae-d5c3-4fcb-aabb-951b14466f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653c089-ece5-439b-afde-e78ac050a250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e852441-dfae-4692-bc75-8b4d52de56f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "615de933-94be-41b8-8403-2090ee0fbac4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9558fcbc-89be-4dd5-bdbc-1d5aaba712cb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19d7ad02-3ed0-487c-993c-103fcd03f853",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1a285845-d0f2-458a-9f54-10183df81bcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aab24ac-50e3-4f24-927a-67a483df95e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d1d95859-b932-42c7-9615-b0172d80312c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee56e2db-d401-42bc-a1bf-750bcbf64918",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4328993d-abae-481b-8c19-d1257264298e"
            }
          }
        ]
      },
      {
        "id": "1e1a75b2-e586-4799-b6a0-1192b0ddba22",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0496b5ab-bd52-4f0b-918b-4d630dfa3911",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88b4b078-140e-4085-8c2e-51b54ff7e244",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6521978d-70a7-4200-8f49-5c28b96b503a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3be9bc-d471-46e6-a1fe-90f936869ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e96c5ee-7470-4d35-ba91-357615a1a266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a2b316-9eb8-415b-a2d8-f2408c41828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7b508ce-5b20-46f5-b26b-5213adfffcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93476f2a-c91f-4e1d-8bf3-9b69d7f9d778",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1217e13-bece-44bc-a1af-277721040100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8345db4-840c-4a03-b6e4-0bc3ea8e71ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a8e76d-91b4-42cd-9a8e-4cf0dae6a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1307767e-3d73-40f4-97ff-36b9ab4190d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1361427d-8071-47ef-9e2d-78f6e7842ae2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b14faf-74b2-470b-8d14-e0d2e9c0d146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d18ba3-abb7-43df-8734-9c8a78d263de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6b7d98-69e4-4728-b5e9-a84cd0c5c35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f56c99f8-096a-4215-946f-358390d16134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797663c9-50e9-4d7d-9a44-0d299e9733ee",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785976d4-dfdc-48f4-b51f-ad37b7f36474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c3e738-4b7d-40a4-8a63-5907ecf2c21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1573e24d-6e8f-4d26-a7a0-f4b6554b374a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2544fbf5-aaa4-4927-8ef1-0a8be8719d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b12ec16-d023-41a2-9c38-ef882a61af2c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f88713-9e01-4556-b92a-597b630ee1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfca6148-3976-4833-86fd-c9cdd0316702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e86cf9-7204-4060-9245-87b5c679a152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c790321-2aa9-4c44-8d5b-cf07125c9ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a41fead-6098-4945-90b3-86cf46b413d6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1d061d-6503-40c1-bfd4-23f3aae7da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66451769-50de-4069-8634-388fd9ff2cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d8014-f752-4b14-a952-084c590de7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "079c80bf-aa57-4258-815a-e044e09e7b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803662ab-eb7b-48ba-8079-627ac037bcd9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476f26fe-c934-4395-af16-88dcef04259c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0f2d95-90df-4e48-88e8-cc8af8f94ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2f8b77-0c08-4ebc-ad1e-80a7bcab9ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d26a3d36-c148-4791-85c0-b45a91994dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ef35c-acb5-4e72-ac87-3de39caa7b70",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9c651a-4a77-4fc3-ab4c-3fc046de44a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d80056c-7d32-4ebe-9c94-046bd3efb8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47db1170-c6a4-420f-b59e-d83d926a7366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76ed3237-c5fb-4b88-a823-54e5925fc168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff24ecdc-c37b-4048-8472-767391893c38",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc4ee6c-552d-4a05-9306-c3f49514fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5005c4-cea9-46bd-b90f-4c8a8afb87bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9065d-23df-44e8-8cc7-c1de0bbd2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4ead2e9-617c-4ac4-9b00-82d412c0f67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad39fe5-d384-4c6e-a867-0af417fb67e6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b250a4b4-214e-423a-b1f9-b79cdbafb635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481fce5-27bb-4c33-9c70-56515183b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d8653b-dd67-4fd5-80d6-189dd25c577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99262ec8-45a4-4f6a-9b71-70a5d2b21b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d5df2d-3fc0-4862-a47c-282d810f54db",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8331c21a-754e-478a-a62f-a007be3bf28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd98ea4-e7d5-41e4-bf3e-926c9d1e5027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2bd7b9-c50a-4bdb-b422-fead41d5af1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a19739b-2610-419b-b92d-abc57ea21af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715c6b6b-c4fc-4bf1-ab18-82f5d28ec6ea",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec4bacb-e061-49dc-a2de-4ecc9ea513cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937aad5b-fa38-4e0d-9afb-f06998d0ff20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54a6f0f-60b7-41ef-9fdd-08c4840ebbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e55d2d7b-f5af-44c7-889e-2e4e38862487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e15419-75cc-48a2-b8f3-268287816256",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db73c29c-c319-42f4-9261-9ea773e5d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93871777-c993-420b-9478-a09d6699096c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6844a7ce-17a0-4dd2-9443-d40bc20cb571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d785448a-28cd-4d28-98cb-a1dc63361636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdd4dc8-5881-4ba0-a22d-b24bdf856bed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ad6445-b5a0-4b6f-bfbc-4178a580d913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776c18bb-3505-4db2-8b30-c8f4ec37481e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb46f3a-0d43-40e1-ae0f-3ee3b0e1f42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c647e782-0039-4ffc-9152-433b8e4f4680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033122c2-b2cc-43f0-8d2f-bc45ee878956",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61aa55d-e1bb-4e09-810e-cdea6ee090f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2608a8-ff1c-4c42-aa80-e99c09ae0cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9933deff-d077-4285-b6e2-0b0884c00fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b709b3-7781-4b18-bfa5-2737ece48a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b07a0af-87e3-44d3-ba9b-28fa401a0d19",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93037bef-4c68-4bcb-ae0d-334eadf2d959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4343613-7d39-4deb-94d5-dca702da94a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf860c5b-4eef-4fb6-96e8-1a4c733d6c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20f59f55-e9fa-4a25-8e85-b4621f92018c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989184b-4a2a-483c-bc96-2e564093f370",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f945cbd-e7a2-4581-8362-b58cefb4e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802e4519-0f9e-46bf-9c0f-84706716199e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1876bc-550c-4692-9742-44f6da497251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e25b617-101d-40df-90a6-605cc8e24906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e20d80a-f037-4cec-be9d-dd3ff3181203",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad45f583-4d74-4d03-b60d-e914882466aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69beb708-21f6-4a0e-af7e-6fda956e53ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae50d64-9c93-47ad-b841-1a0f3baaf596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d9b852-89c4-4487-b124-2ecfd6907101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494056be-8b66-4064-894f-5ef99333b86d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce9cb2c-451a-4dd1-85b0-e284c5f7514e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b1badd-8d69-4c20-8323-73a356e6f4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177287b-d29f-4abb-a806-2509756fccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ce314e-3359-4b46-8e07-22017fa0272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814187d4-cf33-41f5-97a0-0db93770cb02",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f72eb10-f720-4475-a041-066096366a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d9397b-5eb8-4f9f-aa77-ff9806e00304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bafb8f-d44a-4114-86ff-6d371567194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3048f6ee-d366-4353-a46d-a1e1dbe963a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202197ac-43f2-450b-884d-78265df0d666",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a39df14-8444-46a1-aed6-ef9bbe7e7343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4bdb83-eccf-4819-8c79-1be4a3f2d154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb8b9b-2072-4185-a6a8-fab4e6b33897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e286bfb4-a9cc-403a-9e7c-b8262776cebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd1dc28-c3cd-4fb6-8a50-e79313a210f8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3db369-4f25-4634-9664-0d5c27084beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f531f387-5b98-442d-b79c-fe12605bcd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c75ce9-3280-4703-bd98-d465150cea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6a7a6c-3de8-42ae-89d8-ca73152c31cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa54dd88-e582-4458-9293-18af3b194bcb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b094acd-77a2-4ec3-8f3a-594fabb4276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6d0436-9647-48d5-8ee5-399a4f41a303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99685ec-c054-44ec-a7f4-c7e64a43e0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d986ee-768a-468c-90f7-f0c7bd90d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f96b5a5-1256-4da4-a0b8-c8ac0079498c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ecd5fc-a3e0-4ec5-8d0b-5f586951a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7badad9-dff4-4ef2-bc0f-e0cc44ef3d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cd51dc-06bf-4931-b491-bef68b1dc0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7b11fb-34de-474b-b0f8-4ceb8ce52e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7117de3f-c4cb-416a-a2cf-29bb4092860d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8789d0ef-11d5-4760-a9f4-1cddfb193f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5a3720-5e38-4a59-a70c-9daeb23336ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d568e-f66a-4062-b704-f52f5eb9e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc42c69-0d20-451d-a4bb-35ef38a40d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f2dbec-e2d8-4e16-ae35-0804c0131ec4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cca0b3-4f49-4822-829c-d5a984ae4f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb177e13-de07-4788-a6d8-4284c74283fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b42cb4f-75c5-4fcf-a742-0327acdea719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25136840-db3c-4429-89c3-a28e9c4474a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6a185b-8b43-4917-ac5b-8b6d16a1560c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ca2f2e-d495-4ba1-a920-f7f67cc4affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2cbab9-0e36-4460-95ce-aa07fffe6690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04b772f-2f80-406d-922a-41b8b756479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "801cbc1f-0962-4914-a69c-85f95763f190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c456088e-34f2-493e-aaaf-0332bbe409f1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00febf3c-2e11-4fdf-a50a-f065bb253985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba57fbf-9fa7-479b-93fa-7640aada4f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12933a2-de4b-43e4-a006-fcf0f279e681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "167c270f-3c16-4f18-9a81-6bb621c76eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98be5a7e-0b78-41bf-842c-57edcbfdf142",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ed159e-4875-42cf-9038-6ade7b354739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73566f75-af46-402b-a2f3-c00db06cf276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b341f-e849-498d-bbf5-09c76255073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e80265cc-948b-4ee5-8f23-fd9d541c9642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78b4f4e-214a-43d0-80d2-e333d8a345d0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a7bd4-cbe6-4ccf-a4a8-5222284f4cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b30e76-2573-4eba-91e7-9c12a2a91c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0134eac4-af28-4b8d-b864-b5e70bc948fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a838327-434f-49b1-a59c-50f4e8fb4cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ed7d3b-0238-4cf3-8a47-5fc5d2f6aa5e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f234c4c0-2993-4617-9c58-9a11a423a2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc8cf81-f866-41b6-b2f9-603fc804f536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ecf171-4b5b-4e9e-909a-85b347442ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfe5fcc-4b6c-44fb-abf6-fc2d70dcabfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebcaf83-a49c-4759-b941-2dc168417a3d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1842e8-2ea6-473c-98b6-592064fad951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6769b7ca-4617-46c7-8f5e-d1a28afa7b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78819026-12f2-49a5-8980-a51d80a9a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24a2599-5e7e-4d98-9d44-b2e872d672a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3458adba-e088-454b-8533-19d3997422fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e70b5bc-f865-497f-9e95-3c5c5e8ee652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fead2d9-8236-4612-ab2b-6393d335ae18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51564764-8c2a-4c51-8426-17e5adb59eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1434043-95f1-49a7-94b8-4e6f78492401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0c64ba-b1b3-43a4-a532-a701c0acc18f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667ab82-1402-4f89-8b21-62bb549b623b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6782e81-406e-4f31-b119-7662ea884a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60f55f4-c133-4e14-9762-c87daf6e9b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd8e292-bbaa-44ea-8351-9b16285d4e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372a6491-5829-4b06-9b30-505940432044",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744bb039-1c85-4927-8937-168395e52796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309eeb60-b258-4706-bf7c-48358620ac25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28a09ff-8e39-4456-a9ea-f8d3ddb004b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "423aae3a-af13-42d1-a84a-414fbda54bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d89b395-a36b-430e-8856-4dd0393a33dd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1870bc-3b47-40ba-a66b-4190fdec333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cf692d3-91a1-4ec3-964d-0b104d9801ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6640f4-70b4-48cd-8076-f452dd248018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f590f54f-0484-4e52-b0f1-96e0227c2425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa117d5-13bf-43ed-86dc-6a4879bb829b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddea2ed-71cc-4714-a835-d7ada992f718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d297aa-3491-407b-b0ad-4664c660a798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a267469e-2626-479d-a03d-8c70a8cf2933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a99147-1073-478b-82fb-479af176aecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5d0c62-07a3-4108-bbde-b5d3b0b7466d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941fe513-e08c-43a6-a52c-106590b1eae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a4462d-9d4c-4518-a2ca-2ded4e30e163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b8f1b-60f7-4550-82d8-09ee97367a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b972d9-7f61-43a4-bfa7-dc5a979b2a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6826e7db-f9fb-4288-afe9-6f17e5687b76",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e540e8-7c24-4f51-83b1-131abd6519ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97943e9-1153-4f10-aa8b-e07339a2d920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651eaa2e-11f0-49ca-a615-a2dbe060dc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d047b0-e025-4b3e-aff4-95b53b090448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad466ab1-6f8f-4366-8acb-d58d3b19969a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c14c366-c1d6-485c-b0ef-85ed290de6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3030fe-24d0-4b34-9627-90f9f9676552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6872d-e3c2-4ff3-a3cc-723269ecd368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd4b4f4-ca29-43fd-8d0c-9a3eae117c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9780eacc-b878-4e2d-aecf-afd1127f4ba3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69260754-cd97-4205-87dd-aa50ded2ebb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b252dd25-64d0-4177-821a-276ee020997a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b1d99-ba6d-4bb8-8bf0-4f1bf783c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5f695f-6b7a-4f64-a82b-7105d8871f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1140a5ab-e8e5-477e-ae53-1928d89d38ac",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c912dab-ce07-4384-8357-e90145e92529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568bd164-f9a2-4183-bff6-97ceb92643ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30848fc7-9572-4d9e-b710-d2f900227e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3010ca32-b5f6-490c-a6b0-7e24a7018a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abae70f-4fcf-4121-b353-403f447c5d16",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da33cb3-d7d9-4453-b851-a45c5ed3b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b629217-04b6-476f-b8c4-b2a262cb8bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe5c961-4acb-4305-8c68-66c9a06a6fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a736a327-6717-4a81-adb2-01fd02ae6e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de3b238-24a6-4385-bf57-1cfc8b26c08e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42213bb9-66d6-4160-8e1c-759d8df036a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7ae23a-900e-4cc1-b8a2-cd3e914dbf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c29a85-74e6-4c18-85d4-468af56846bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "52070acb-572c-4743-86ba-7cc1f82bdd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a1da6-514a-45d6-b729-714d1302223a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c4742b-1974-4840-a36c-2e52167fd948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a30a1b-a5a0-47ea-9c19-1860f99efe6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faf6e9a-a972-4a90-90e7-656096eec439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe243712-d2e8-4d24-a647-768195718a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa4063e-976d-45e2-9707-a286f67240b7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b27429-0a90-4b43-927f-8a27f6105f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfebc16-4ef4-412a-8a88-fa0485be83d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c898ee-8cc5-47f5-95d3-7b83e65322ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "287da4c0-3dee-4401-bad4-cc461df450fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfb9fda-9f17-4873-af17-007347aa251d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bf082d-3d1f-4cb8-b6aa-dad0522370c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d2a991-be3a-44c5-b9dc-cf80140ff2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0ea120-c46d-4067-aa72-d5ba9346b911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86419712-26c6-4131-a764-59d3fbfd6064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c358311d-b1bf-4013-b57f-c66c62e8bfdd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fa8490-a9c3-41aa-bdeb-e98f4dca9a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cdd2ed-a306-42fb-9a76-024bad80cac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32abbdc-b12d-4e68-8653-a41bc1578776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d398b0-6ea7-4d37-b349-ba5e84a503df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24ecdce-c747-49fa-85c1-1f7dfa05acf2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d19d6d6-1471-4ea0-bf18-80a3e605f8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc9c8f5-3cd2-41ff-97c1-b0292ec7aaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523ffcde-dd7d-4779-99de-01d3a248bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39802ae5-618b-41d8-b3b4-99b46aab7b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540a925-2280-469c-a79c-2ab333473862",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d518980-7eea-48cb-804c-43edefdc763e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e23cd9-8f05-4043-a08d-4fbe9210ac90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8a6169-35bb-409c-b0ea-d3016b4eef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00cc1094-60bf-4fb2-a2a0-f006688e2ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5280de57-7869-4fb8-a5aa-36f6a5678662",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef225e-18a6-4253-8882-f26ae6c3768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac9bde2-f40d-4bd8-a8c3-38f3dac7537b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cd0658-59eb-4260-a9b7-9e08691148ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e5c386-7495-4c5f-bbc9-7b44024de6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f099fb4-15a4-4203-bfa4-67c6718cd170",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379cbde2-4675-430c-b5a9-483f4f45c3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ce60f6-da00-4b95-b111-c6f6ae5098cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4108fab-7e7c-4488-87a7-f8b95114d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "beacf9a8-99ca-49b0-a24b-7793f6c24607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f011e1-ef88-4590-9343-8cf54208fa4a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d25faf-0909-4d96-8793-5da8b4de8226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89403eab-379c-4039-9c77-8421003140c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c005c881-b41b-499b-96f9-fccdcf7183cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eed44b0-39a5-46bf-8c43-940f5ff581e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f41aee-fc3e-4bf6-a390-0b7ea43d134e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fa3d4e-8084-43df-97e5-c4c73e1ef88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaf7b62-3556-417b-bfef-199e6a0eaa62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ec968f-61ba-4eab-a381-fde3446932f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9eb297-b8a8-44d0-ae68-105f3f029ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f396dcd3-800e-481b-985b-10e84632a21a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26c4328-82de-4366-976e-46182c1dbe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1cc16e-b4cc-4163-ab5c-7bc94aaa8813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb9eb24-55a0-412f-965a-b3071489b8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d78a5be6-28f4-45f7-ae58-4b09b0acf23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5732692-cbb8-498a-bc0a-6d1e3035d117",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a61fdb-56da-43e3-a2c1-f01d66a05986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c61de0-70f8-4293-b846-62b19f171377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79b2f1-119d-4094-af78-fda45c5a6777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a89beeb-eb70-4558-9fdf-af1ab8352a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbf3faf-ff18-4589-896d-09a153677705",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b4c8cb-f6cb-4df7-a4cc-c3f018c0b479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2908e0-3803-4020-8b1b-a9bb0542741a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39b8d5f-2a1f-4f20-86a1-4fbbdc093a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8988ea-6349-4dba-8fa3-538569084a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d345aba-5b46-47f6-a848-8924aa42435a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78176fa9-4634-4754-88c3-f81258c0a77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ed7737-2cad-4583-80a5-18d4ba498405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f38dd-5c79-40db-9497-41736c676c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d97090-8e49-4e70-888c-472b906e81aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533b3cce-326c-433b-94a2-167f8b9bbc33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca61cf8-03e5-44c2-bae2-ea25e469f723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c7c301-90ad-4bf4-8fdc-e42bcc4ab07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414e0485-b74b-49bb-86bc-5a52fd84f937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cecd36e7-dab9-4c29-97e3-c5284594fc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abdaaca-37e0-4353-9009-44d3bd618876",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01db1bf-c8a5-486c-90b3-6e86e51f4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fe339b-2413-451c-8516-6b11223638a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d050b580-2769-4a06-ac7b-c674a68adb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a49d2d-5a24-493d-bb11-c47206d55517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b178ce60-899d-447f-aa15-9e7382b4704a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc46bf-d170-4c77-a477-4915ba86f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01981b-3b65-42f6-b070-9dc9fe13aae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea93c5e-71c8-4674-b2e7-673c21b5a6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70614d63-3a82-48a8-8b5b-9c02fccb0112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62adf79a-0397-4600-a634-faa3b6d4b2d1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8a772f-64b0-4664-be07-9f6e0eecbb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b23824-261f-47d9-912e-dc4405f24d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7df357-ee3b-4cf5-8029-6fefbf1acd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "391ba647-517d-4f89-ab73-ef4ad6dd857e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4272d7e8-c6d6-4455-9b4b-354f9d56b7e4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fa31bd-d8bd-439a-835e-9df2c8cdc664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39741265-b83e-4edc-b616-1ce08e29e294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ddb0ce-ca47-4267-9675-63258565eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b4a289-c5c9-4dff-b165-eb956a7433d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1e7ec4-012d-4c9b-8d20-7feeaa44b000",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b1293a-9ab0-49b4-8c7f-423815fdc641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd48471-50bc-4f48-a788-29b0bb92864a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ecf463-1b4d-4705-b715-a7bba24b1fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f9a262-0e5c-4220-a1d8-5cc3ec13e2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b54959-44d1-4629-8deb-07dcf110de6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0417a488-ad11-4d6b-bd39-c5b5251b56ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e04019c-568b-4d47-8afb-918426935706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47831082-a47c-40d8-a25e-187f4e805538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f442a1db-cf85-4281-9e96-cf26b9d037b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39bf5dd-695f-474f-904e-0785bf00bb98",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b7d903-92f6-4e78-84d7-96a08d36d8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ac661b-c413-4345-a646-fb6c6a9d4e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160f1439-bff1-4fa4-99d6-25646404052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d3042d-ea80-491e-a2f6-1cb512884b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7901b266-bf0a-4663-84ef-e9c15c080c9d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222d9aec-77d2-479f-9138-34c8e1a60faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a0c71e-48fc-446e-9679-90ba878ce39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8313ebd0-f16e-4c47-bd3c-45cb01872742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe47f041-af0d-4505-986b-317450b03358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6d5325-ea8e-4ecb-a753-aedbe0d6fbb1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e78dd6-65ca-46ea-9710-2f25dedd76b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c89d84-4afb-4d0e-8e3f-09590cd03055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0800cd5-324a-4f2e-82c4-cfbc74b419eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c8a384-ba5e-4df0-8189-5b6382b3d72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e41de67-cc14-4954-b3a0-2e7e62c05ffc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db1e68-8d7f-4650-ae07-20f7063a5d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedbf135-abbb-4315-ac93-f9965ccc5312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9853b56e-3258-4f2b-93ec-e1fada2eaf2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c3ac11-dbc6-4b9a-ac7d-c8520de329d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc1fd68-2eec-459c-bb89-2b8f69572ea6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6be91cf-c027-4945-9ddf-7ada3f5943d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cdff4e-ec23-4e15-956e-23f223c96b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf1e6f7-ee25-4193-aa6a-dfe3da3852d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34fb1792-0e47-4bc4-bfcd-f158c21cba63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091eba6c-f0a3-4d7b-86e6-4f83af6d9df5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014420e-1842-4f26-9456-65026b8f99d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0e975d-7e5b-40f1-a553-cd738e103c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2b04be-3638-4fc2-bf49-ecc29185bc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c880c703-8722-4ab0-9750-b93c2a4764c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fce42c-a403-4fde-9233-5faf7e2db3fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d3f14b-ee18-46c2-bae8-8f5d18345d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab9f713-5251-4614-a9be-29d4b5bbc1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd0109-e009-43c5-a7be-209b7b52407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "623afb05-5c98-4693-916a-f211461c6048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194330b5-2d6d-413a-a189-3c1f2b5fb460",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b705102d-a0da-4939-8ff8-ed111bdf52ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db433e6-ce8e-49be-ad21-c577ad2620d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6519f37a-9234-404a-8a57-86e0f018062c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2850223b-c337-44ec-9784-18c549eb604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9cce80-8c57-49ce-ac3c-b93819c5ea3c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94946ac9-153f-43e5-956f-832773f89414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065eb0c7-a743-4d14-8605-64cc2d7d29ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760519ba-88b4-4fb1-820d-7cc926fe2045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5c5c53-c83b-46d0-b956-7ad1a9d4d635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b4f2fa-5472-4983-bb24-7467f88eece5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979369e7-309b-4fd2-a460-5078d72e8fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac2ca57-87d5-4912-865e-52e1e4a0da43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b6a6cf-e5c5-47a1-96d4-303c3d51b9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "066133df-ac7b-48fe-9c0e-35adce9460fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98fa2ce-ffb9-4f1d-97ed-63ab7d321b9b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ee0b16-7936-481a-9621-3ebf1eb58109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55b02fc-fd4a-4043-91b7-5e1361147b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70621cd3-2200-432e-8985-c04d60298724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69e422b-1a5d-4ed8-a62d-11a45d8b5c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2764b15d-f136-4a1d-9e66-4284d664ecdd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41660b8d-3e3b-4869-b67a-32534712f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bae5e04-ce0f-488c-af92-364879adb27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fc60b8-b6c0-4866-a6eb-f96205fcc38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a91929-3875-4c8e-9857-ca54bf06dc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167bcfc8-fdbc-4e3e-a6a8-e2a473983df6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c9a9a-d5db-43a4-9958-96bce8326b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c8f63f-9d63-4947-b3d9-ab4ba535dfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96970db-d01f-42be-a218-48472909f8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c033d3e7-8eae-4baa-9e95-f7ea5b7cfb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322d7836-5d4d-4617-83bb-3a60f19294ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41474ab-51b5-4461-a546-59d7776dc7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481950a0-3216-4d89-9d43-315ae61ed4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cecfec3-412f-4c1a-8b44-a608e4d326e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9dda4a0-ac12-4790-a44f-3015a199ee8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ff1cc-c6da-4ffe-93f2-724783b10fec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d666ea8-4a44-47f7-96a9-61cb65f202d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a192e7-ea7c-4679-b0dc-cc6ccb44511f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4a1c92-df30-4556-9d33-c43de38a4fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a24d587-a279-4f02-b095-8c7bee41b8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f132dc-b85f-4664-8a53-dc936dfc4b71",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb37a8b2-fc02-4584-8e58-96beb6c12ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0c0885-76c3-4098-953a-9edf3ecc71c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd7f8a3-bb40-4d47-a911-14411fff4cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "636e2858-8493-4266-b00e-bc7d6ce8db52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7916544c-2e02-4591-8cf3-953e7f8d02a0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a3a6f-fdfb-4116-a94d-26f724a72f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b904e3d0-dac0-4ce9-a53c-c9d46cd5f46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe70b919-da4e-4b86-9a65-fbfad73bb115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e3484e-dfcc-4812-b7a3-1c4339740ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328babef-042e-4205-a9bb-08c21000994e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb56aff0-564b-4775-8744-f76d569d2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d483a841-3305-40c8-a618-640b9315c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dc6519-f384-4159-b359-317f307e9bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac780526-adf6-4fea-ac82-0e8685371d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439655e1-5a15-4261-9c95-3b88616ca947",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f4cbb8-34e0-43a1-b804-4edfbbd632d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4927765e-151f-44da-a988-71ad3efe4262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4951795-eb5a-4241-a04f-7ee618974d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8789226-4566-493a-b5fc-327e234546e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e51acb-3f7a-4807-9e78-57fa8b4ea6e2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90e47d7-4369-4b9e-bc0f-d22deb7cc212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0858080d-524f-4d0c-8642-b7cfd107c75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8cb134-e43a-48d3-84eb-5f66bbfdcd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73d61620-7552-497e-81f0-c13ebd1bdef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57129172-3981-4add-8d9f-6d0401198945",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff44a4e1-1e8d-4d2b-af7e-ef52ad2a92cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c824a5b1-267c-4cd5-a451-2330d06ddd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fa29ea-81ec-41b2-b33c-ce51a47ae5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f365e604-7bed-4dc2-8e46-73fd0375a504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3eb334-4219-4cf4-aebb-a11b7c66c4db",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f967d35-7d5a-44d3-9027-d8bc76ad192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8b4597-4256-4d36-bb55-82e73c856159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d5c384-b27a-45ae-ba9c-28cb529bb395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48cb4f5-6f7a-49c9-acea-5ffd1e57e31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec04ea17-99ba-4bec-8e51-3075c908384f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e781be40-e137-4b68-9afe-d00f63f09f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6270e01a-71e2-43f0-a5fb-700dee7c97be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff5b7d0-3621-4763-82a6-66f128879766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37180864-cf82-41ff-8a48-b6e16df16dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90feea5-65e0-4be4-8ed4-907a613cc07f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c41910e-fb8f-46d4-8be3-152d555986b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e04f311-22f0-4ea6-9bde-e329828e5de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78617738-3ba9-4bc1-81b0-2d2a94c60925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75567546-7102-4dca-a48e-7d4d7cab05e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b1c059-bb6d-4466-b2f9-4599449e8d6f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67b87ee-44c0-40aa-91a7-fc350ac97c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31243cf-42c3-4f69-8b1f-b552a84df53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f38be1-ef16-4154-a566-59fb1970d9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de21079e-b083-4d4e-bb00-533659183427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b246af4-b31f-47d2-99f7-0e3fba6b39f0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc69e1f-eba6-41d5-be31-5334228d7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baae8083-1f9f-4e03-b935-2cf2fc3f715d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7842ad2c-074d-442b-9f78-440a9efb87b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebce3ae1-6bd9-47cd-8bdb-505ee81bce35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9ec456-f58c-4b71-ab18-e14f70449a46",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f11fe81-5621-4122-a3ec-8948617265a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a7b449a6-cfe1-40eb-8a73-7bd73022b8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e25ee3-d349-40d5-b5df-40d5414802cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "87f30895-a1d5-4010-b4c2-cc050536c191"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a23eacbc-dab1-4e8a-a0f1-c95c0bac47d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ec93ad7-3b79-4e9d-abb2-71de5ea28cf7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f155bde-7929-46e7-a236-5679be447379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0ab11d9-1b03-4c77-a783-81216aeae4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6877d907-44ca-477c-a83d-9496075a4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa04d5cc-bbb2-42b5-a18a-12a3f1bed72f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59819abb-fc68-4ba2-a02a-e1a3ff17303a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b2dd851-f6a0-460a-a53c-48b0fa047b75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff0ebc77-bac4-424a-b229-97290c48ca88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "272fd1de-c0ff-47f6-9446-b6cc58fbe7b9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e3e94bd-c14c-4d64-8fbb-9dea222973c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3813a44a-aaf6-42c5-839f-d289493cd8db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1aa34c0d-2ece-4308-a5a2-037219d8b214",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8e161a1-b56e-422d-af7b-d89774ec1a94"
                }
              }
            ]
          },
          {
            "id": "fe8af5f7-c70f-4d04-a6ee-cbb404896e67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00a2f42b-47f4-439a-8782-63945c9ece7e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "37154fde-dcb6-4c19-ba72-f8243ac78512",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd2af97-49ae-460b-87ec-58617b7c64ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "436bcc93-fc5b-45dd-82a7-3130ac813470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90622a6e-2a0e-4a96-a8fc-05074f41ef08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5d7f44-9867-4714-a51b-bc12ea73b58a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c4092ac-4246-403f-8e2c-2972bb44d590",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "973b0d26-8e4a-4403-8806-98822ba633d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b77a5b5d-717f-422f-9ee0-82e462b5dbbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6b477c-13ec-4a32-9ffd-5d6b05aeb426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7d113cf-d9bc-40ea-af51-1f1d87f693db"
                    }
                  }
                ]
              },
              {
                "id": "80b47846-2289-4e86-ad08-d341cdb1a565",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2a55ebb-c968-46d8-b224-3a052adbd06e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0702b13b-cf05-4a43-b65e-b3101c14cf6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87c28162-8ec8-439f-b372-3850d3f654cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8bc92446-ac94-47c5-b1ff-f1ee9ab83edf"
                    }
                  }
                ]
              },
              {
                "id": "9f14c6ce-f884-4de3-867e-d839cbd6f28d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c157393-5975-46a1-a155-4ef089db8c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4aefcc1-b578-48f5-8ca0-f100bf456497"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5f10b96-abf3-49eb-8d9f-38f7d5f5f1b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1c219aa-49fb-49bd-833a-1b91fbb66768"
                    }
                  }
                ]
              },
              {
                "id": "bc49a6a3-3e24-4331-8a79-5f11248f5b70",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13a6e70e-b13f-4f86-b220-2537efe100fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b184833-d77c-497f-a3f2-c49b6dd2431f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c25b73-d11a-40c3-a362-714375ec631b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3dfc8297-e8d4-43f7-bbdc-1fa91ce5d6d9"
                    }
                  }
                ]
              },
              {
                "id": "c8aee532-64f9-4dda-8c6c-7899337997a3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c5f48fc-4a76-416e-a528-5ada16a05f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38eb8dd8-ca50-4b4b-abfc-9d2a09767880"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "765198f5-1f5c-4a43-8c47-24cb84262317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0c003b07-c850-4e1e-9970-95be2a06de2d"
                    }
                  }
                ]
              },
              {
                "id": "667b2d07-3568-495c-915f-d2e0404fa657",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2984a6f7-b316-482d-acc6-adc0313a53df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f6b5af7-5fe6-41d1-8cd9-9ac360b4cf22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dc8bae3-a64a-42f4-b7e7-7cef0fa41be3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26828903-fe0c-4de1-9f87-1faac59d4939"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba278e38-b372-402e-acef-f99926ddad19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc24614d-bc6a-424a-9a1d-7bdfb597571e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23f6196f-f869-4539-8d72-40f00095a192",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ccb09c39-06cd-44ba-88ed-253d59f4d129"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c8e627c-5ffc-4488-92a0-bce56cd32338",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80dc9fa5-6c1d-42b4-aa0c-113dd0f487e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "778af70c-6aad-4f60-867e-b6593c0f9fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b80d2111-8efc-4694-b9cc-b3e462aa31c9"
            }
          }
        ]
      },
      {
        "id": "502be7e6-e2ef-44dd-821e-8ed3981b1303",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb7faea9-5e10-415f-987a-15f038a7c84a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea64943f-f2bf-444c-b22e-a4c521440821",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95de7635-252e-4a57-99ed-def8abbbba19",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da3e486-0239-4d23-b2f0-52d438e3815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da548c7-e4ff-4875-b1aa-56e0e6afa19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd2252-f6eb-41d7-815d-6469ec5f4741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c513e576-25d2-4823-b5cb-a093777c1e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b8a118-d1f4-4db8-bb38-1c40382f14bf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc3a93-a9eb-46ce-9e91-6b70f000dccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b189a3e6-adaa-4a6c-9be7-31a6cd2684ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c72f30-baaa-4bbf-8a98-002dc2d67d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be933724-0f3d-4bfa-86f4-e7d8a8b950c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce28498-aaee-4583-aaff-6e5fce7633c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bb5c0b-f858-4c44-9b56-8ca51f97653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e8e8ef-ad0e-4fa3-9a7a-bb9e9d29c251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08edcd99-94ac-4070-b784-1959aa91ff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab658e3-0222-4942-8e17-993cd22d5453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a512ec-02a1-4de4-9ee7-d7d296954d1a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ec8ec4-50d8-4f27-a77a-28f6646f1967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb8c7a7-5af5-4edc-ab0f-3c606d7c2501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac38a23-a1a0-49e5-af4a-1c8d05ccc7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c947628-c151-4be0-a76c-a621fe1dcce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4685a5b8-4566-4cb8-a580-b84f25ca85c1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9134847-73d1-44a6-9be1-50d141ed4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1f861d-a36d-4836-820e-4cbdc7387511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d402c2-25e6-47c7-b63a-a1be249763f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e681eb-19a6-4828-a7a2-207d4b1489b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6bc339-e5f3-4567-b41e-d19bce4f38c9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f817fe8-9c1c-471c-b186-53c28c134458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600dbe36-2dbe-465e-8325-3f8e5a0ee0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22acaaac-5830-489f-b825-da8ab8e269f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c59e5167-a517-4d87-b117-b9bd17cb73fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b420cd21-d160-4e1c-9ca8-af1be9ba98e3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a896aa-f0f4-492b-8d95-c475d5058051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f938c0-bee8-4885-a635-0f74bd82927e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48c7cb-20c0-4f4a-bbad-196e504a2072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d470730-e3c3-4da7-9d5c-b36e9a0ebecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1897d-ca64-49a8-b8ac-e87c3b26863e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec46c5f4-9f6a-4779-b684-9206aa54be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4692550c-8580-450e-abc9-32e6523a9650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d8dba5-face-45a1-9845-d2678a9d6870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80934617-9a88-49cc-a3ce-f64fa1d0b799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4de5218-ce35-47c6-a88c-b466eadcdd2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825582e6-ebf7-4e84-9e54-2929593fd48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db562215-dc05-4340-9a50-6c75eaa27e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f23a373-32a3-4d6b-b834-91d1994c72f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77415203-f192-4dca-8497-ce20f20bc5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a19000-df86-4ed9-a041-dfe1900fa12a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7846dd-a97d-483b-b07e-6e7165d9bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3aa4d5-2e88-45f1-98c8-651279d10711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b37f4a-2274-4c8a-b254-9643b0ba4c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abda2c5-2c5f-4dd0-b9e0-1a906c6f3448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c906ad1-e8f0-4bb2-9fcc-630ab5c9452a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf17bf7-0134-4529-836c-e73b61048499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ca88ad-d080-46b9-bbc6-fe8447a6e932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238459f6-454e-47c7-9cf1-342fe1de4637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "655cdbe1-62d7-4125-9bfe-fb33d19c9e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07704ce-92da-4749-b96f-c2b632fca371",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7477f8d-0407-4f62-9064-c61642b1a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fd5070-2146-4222-91f4-adc25018f384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553081e2-eae8-4a29-8e12-95c3efc864ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3496d26e-028f-447c-a0e4-9b1c354abace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd266b4-c172-4bf7-85a7-a3da9ee295a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d09567-d353-4215-896c-cd0835aec3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e4856d1-aa6b-42eb-ac08-146347c0bfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d282285-00d3-4721-96b0-de9af2eb4210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5053d7a9-3e34-46be-b0fa-254ba0cd9ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ab6088-e59e-4853-b0a0-62583fc97fac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e258ce-a8fa-4109-a856-5825a3283208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9154e5e-831e-4a61-baf7-27cb1389ab1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ee4063-727c-4699-9f43-da14ed5ff4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64f2fa10-1674-4b9d-8ab0-812290efcfee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab1519-f20e-4eb1-95e5-50bcaa459692",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf86ac9-7986-4398-a47e-16c97dfe344f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7980f6cd-079c-4027-a160-3160010ec7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa30599-fbd8-4723-95e6-67ffe6e497c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c39bae-ec3c-4682-ab38-d86dc0ce3369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1694afb8-c22f-4c29-b436-a3f7b345714e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900ed03d-1ec7-4cc3-931d-1ad400d8e62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ccc33-d212-474b-8fc4-835035d57371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6404962f-b693-4196-8aca-86ad3b3c8558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b7c9b9-312b-4ca0-b354-1bb11c2fad17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b66096f-7138-4923-ad46-eab310c74b49",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b09865-4ae8-4bd8-9e86-205771237ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edc263d-b212-408b-9d9e-732d58ded245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52638f54-56c5-44e0-85c6-e78b690d0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c016c403-ba44-4277-bf15-09ed65b1e842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b479d18b-12e6-4c87-8c71-2579e9188dd2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d01061-a1f9-424c-8a4c-d26d3ebe3c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456ea5bf-0417-4b5f-9479-d59dca4e181f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15c7c4e-179e-40ec-9746-cd27b0381059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b39827d-90b9-40fc-a8c9-dbd67413f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0f10e9-ea6e-4e18-b8f6-9b7d93711838",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff0cb7-d208-4ef0-bc5f-66fe4eb9f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc94c88f-4b68-48de-9cbd-832fb1f4f7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4b971e-a3b2-4213-95ec-ead02858f62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eeec6b-1a4f-43f7-a0e1-aff46767758c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa119432-d825-49ac-8873-6ec40edec174",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936fa7f7-e809-450c-8e28-16885bea61fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca74b349-3419-47b1-8d47-f0c559cee3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865c80a3-b4bd-4d63-94fb-afc814e371b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5ba4dd-2348-41fe-9d95-48268b82f23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02daaae9-efd1-4aab-8047-0aca56a5b759",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58914c65-c7e7-4b4e-9074-155dd7f5f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87df83f-7544-490a-9c1a-e96e49aa38a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522202c0-146e-4ab1-9db3-2833b96993ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd97fa2-73ab-4a61-8055-d65ad990a513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa26729-c4c4-48cf-9a74-9498bbcb202a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0f228-c042-4905-a0b2-1d4a53211bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe96583-3ada-407c-a7bd-d4758e896006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33418cab-1f0b-4057-ad50-29d7ce4b55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "817634b5-b2ae-438f-ad2d-cc34378e8e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68dd949-a3b1-4e84-9d2e-872c015e3707",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274c09c6-2407-407d-a62f-8482115eb6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b991fb84-1067-4970-81df-4e27c074c537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b1b26-7f1c-4868-8b90-d11448d6c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e566fa53-5709-455b-b7ae-9780866bcb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3e8c4-e969-4598-b4eb-ae83a8fc6380",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "851142ae-9b5f-4e82-82b2-cac5492ead38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b74977c-f037-421a-8f8e-4a09812198d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72854dcf-bbb6-44f4-b507-ad39d4c62faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff58cbe-5c48-492e-a699-d760a9f6417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5c7706-c563-442d-8594-a3b306086344",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9d5851-6a1d-4c96-9f7a-7c988e9ee222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4bb1401-d628-4d4d-b9a8-e78504369055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a6fe47-528c-4cf3-b352-1dc440f6c28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "458dd55b-2268-40e2-94a1-c0a977443df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d047c15-7101-4a60-aae4-be45a550b38b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529f9506-8b8c-4fb4-9943-28228e1794a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ce16e5-9651-48f5-96fd-ad26df72c712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fa0c7-e576-45b0-a38e-20a1f8d6c031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c633e9b-35d4-46c8-8710-7124f4039afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf475f49-209c-4da3-bdac-981d9a1c3311",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1dd492-83d8-4526-820a-53a0a23b3642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19383584-ea21-4e12-957a-1280b2295684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520afa84-398d-4eb9-b155-cbb8d540f545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "467b85be-7ca3-429d-b6f3-9d1633dcdfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db14cbfd-510b-4d98-a452-4538a329c006",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f363dd7b-fbaa-4c54-b9b0-fc42af8f74a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25b88ee-7f03-4d15-a7e5-97596d269909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585df06e-199d-49a9-b6ba-d799470b7466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b63cd2f-07f5-4dbc-80b3-cca4a7ef07ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de34bee-911c-4068-af16-5eabe88aad14",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6537faef-d7db-4921-8a5f-c263f61ea04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0114b234-8b2c-47ff-b887-6c8e2ebd00f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb77e6-4048-40a4-97d3-bfd546d440f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd77ab63-3207-4a2e-b512-b40ecbbb0aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ede02f-0164-4abd-a2a4-b89ac033547d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a940c9-fc8e-4f83-aa57-e530b5dacb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea4524a-0a16-4a22-9021-bd87dcf5fcf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c133d9-03bb-40b3-bfa8-d8134b282480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44678c4-e9bf-4496-b562-629de2436320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffcb184-fb3d-47ec-b212-5066461daf52",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e863f2f-6ae3-459f-830a-4c725ba6c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd00ef23-dd2c-4963-9061-db3f39db5808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019b64c3-9fbb-414f-9e60-4a73cf347ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b600743e-52a1-4149-a235-15406b6e4063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde60a47-4724-4a87-bf66-7502a9fae58d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccd653c-92bb-47ea-947f-7105d398656b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b6ebe1-d68c-46c1-b117-fbc52a8e8b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0c4baf-5156-4297-b052-e29d8f5b5dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a98eff-8ef9-44d0-9f54-0c8c7484d636"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26b85fec-77a1-4223-8ddd-1758549322fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc1174a9-75fe-47aa-a189-c64be39bab3f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25dfe28-c255-439e-810d-0e399ae2f813",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "964a3331-e9ba-4da9-92f2-8fa326766d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c639f-bafc-41f4-b0d9-a33d5974233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85dec4c4-9019-4ea1-aed7-c442d83d21aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d2c4c5-6a12-45be-8ecb-e1f72c6bf743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ef24813-a3f3-4b01-8923-861e7cb15d23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "067677b3-194e-41fc-b745-37b6cb06af5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b3de554-afbf-46e2-bd41-9688f6fa6f01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7d967d6-2b59-40f9-ab84-c2ff6cbd2055",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acfa176b-ea46-4bde-9d77-f89685800463"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce77a614-056e-49d3-99e7-4b2a9b16aece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cc91bb2-2655-47a2-a916-c22f5fc36c47"
            }
          }
        ]
      },
      {
        "id": "df9b0de5-3840-4699-95f8-74d0b91a9e53",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3048ac4f-4538-4cb4-9c41-c6b778ea9a65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19fea5fe-4c7e-4f8e-a575-7421aa03148c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "363eded5-9444-446a-b601-1366dd12e83a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c70728-4469-4e25-81d2-b4bc1a813244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62cd1d7-539c-41e1-8d5d-3f53844f3d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a0683-5955-477a-bc51-2dbf0ec6a7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1a3b10-1d1a-43eb-b1ce-b46a8474bae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf801086-d72a-46c2-8797-82b072b40ad4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e25e63-2632-4701-8401-87c442a1018a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67cf4a2-a9ac-4a20-bbf3-3ee74c4e0857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0611854-422e-4641-9242-a3b05ac0b57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d6387b-3221-4817-b126-0f189c9b4f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a53142-61eb-41e4-872b-da8e4ccac20c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f475d1-a77e-46f5-a25a-6f50caea6232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f78c9a9-2d57-406a-828c-c510d56b280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8a51e-e741-4953-80a8-c3fb489f027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d56b6004-169e-48d8-88a4-b8c596a9e28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85199e05-0428-4478-b3f2-e16228335fbb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb16ba29-00bc-4dba-825d-6124f4337767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991ff9c2-990e-4571-aa0b-fc4a36fc2c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc47db0-e280-4e39-821f-2098440b7829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf891593-6c6e-4b9f-8b01-0483b22fe4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899807a0-2525-45ab-9ed9-dfa4b161aa90",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e7a9f7-f805-48e0-8177-de66c77d40ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b391fc2-30a8-4241-ad7a-7bd36eccc66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9621511e-f86b-4ea6-b23d-cad51a90f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4bfd64-91e3-4211-bde0-115916fd8549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ff449-823e-4ac3-bd42-5254136b24a1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4972b7be-ec6d-4e93-b258-10fa5e05db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d305e91-8157-4f38-9017-c5727c96686c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1bd4e7-d964-43be-bdd8-e851b5e1bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c762460-66ce-4b27-8a70-2647115038d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d1af36-9790-4ab5-89e3-dad31c181d30",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf98e2f-6706-416a-8a4d-10e5fd1a2cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e523f1b0-3b6a-4451-a9d9-03b9ef3e83fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a296d23e-bda9-45d3-bdf8-a2b3cebd7b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b58974-9546-4c00-8a0f-375164f3f5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1b1bd8-f914-439c-98ad-052f80c54d27",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb8a559-26df-4202-8928-18dd66f5c56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1a6104-19f9-44b3-b9a1-e825f8f91be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d123515-4592-4c54-8ebc-1cc75e02aa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a66889f-4d30-4b89-b1c3-b5a32deb782c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f5c195-275f-4d53-bd1b-b85a3a3fa071",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a415b79e-9fcb-4ddd-9bb1-929b48f33d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83cf928-cb10-4e9e-b990-31a9470f88b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf509e1b-b0b3-48c1-a02d-e7d42e0e28c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "368d5c9d-9b80-4cc7-80b3-cb79f9456109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb35ed99-034b-4cd8-8f0f-56d7f3539837",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c694cd-c6d8-420b-8706-57d4c3184f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb81215a-1ab1-456a-9cf8-82f3ff405131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ad9a3-7ea7-49e8-b3f3-1c00492f359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "203cb130-eefb-4770-ac72-bb40f7359b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ee5bf8-9d3c-4d8f-84e3-cbc8253c2c95",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c29fdf-5662-4a8b-8259-ce6fa8dc6b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b9250c-167b-4eb9-b376-1b9c1c19dc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02cdbf-920c-4105-aa21-6846d843da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "907d5716-02a7-48d6-bc99-a773fb0b3e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ec8070-573b-4bdf-923e-03a0e4a2adc7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3681feca-414a-4daa-91b2-e07819be0ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd60383-f27f-4da4-a458-3b7c92435cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade4ffe-4e07-4f27-ae5f-97386e033ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "401cee29-0d44-4817-b2dc-6cdfa4ad4a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0df8629-26a5-41bf-a89d-51f1c8bd97b1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4f7c9d-911b-4100-8811-7eb65042ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5359f127-11da-4a0b-b043-28af0da61d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc89e19-ad48-4982-8f7c-94a845658a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14dc7799-ee18-481e-8f66-1020f46667e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3a2270-08cb-418e-86f1-20c7f2cffa4c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee83558f-afb5-4b9a-824f-b1f3fbb17217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d588e557-0ee1-498e-8022-1e66d88bcd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edca0998-0630-407d-86d2-5fe0d6986079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd56fd4-8b2b-4121-a7f8-ad40cab69e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfa1460-13eb-4175-a6ef-73c8c288507b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d37c42-ee06-4fc3-bb71-535b128ae5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a771c43-0449-4c8a-8299-76a4e2853574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816b9a69-55b8-4dbe-a625-8d72bb32e3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "716f6364-a673-43ad-8dea-9bfcbd94b451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e54168a-a703-4826-ae05-6a41a25b2348",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4732a1b-1ab6-4b9a-95ca-84a3a8df8163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb30370-77eb-4ebd-a434-59b425a9dda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30559982-cbb2-4e2d-a444-003dc20ae7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a98ba24-b395-4fe1-bd9a-f2c27ce74e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32074cd9-0636-424e-b992-a602138e103c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5bffac-c521-400b-a15c-2bab9e0f0044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59af0dc-fa28-4d0f-8d0f-8f048d0238cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e301f8-42cd-4419-abb1-b7580523abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f90c34-07bd-41fd-b04f-ed67d0b9da9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e546c1e-08df-4338-834a-3057e0338658",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782c5d9-1d0c-4807-858c-9920f4f67aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc893041-0888-4a10-963b-0b08190fe46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bbc3cb-0a08-433f-afa1-b77bb66c3ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "769ca1cb-1afe-41d6-9117-c65647585143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8507a207-c554-4d5b-9920-e9dc1277a9bc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aededb-73da-4c02-ba9c-d1c264864e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eb5612-743d-4d78-8ea3-c3c90e448266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f80f4f-16c0-406d-a93d-f5d1f3331975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d0f317-f75c-4171-b154-31f614ea55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42afe674-b81d-4538-aaea-49ab67209f0d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bfff2a-de61-4b79-b953-510a7f4fc9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557a6766-810b-432d-8cbd-52ef1045a624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde8c451-5b3e-43e0-8ea7-1ab4902a2a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28785210-8a41-4caa-a5b4-f3d32bdd0bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a9bf17-968f-4929-ae04-0c8cdefe5573",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e285eb96-93cc-4f71-aafb-b2239ba07c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bcb3e7-a349-441f-8fc3-caf04982828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df87ea38-26a2-42f4-b476-ac3859da1556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "516407e0-45b3-434b-a81b-1a836a3a1e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c88681-ed14-40a4-bd84-5e49285f41ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702f2a2-4dab-460c-ba13-3838b7c7155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357d579d-6485-41ac-8996-ddc09f41f02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a25ade-e927-4fdf-b5d2-1bdebcbf6b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7b8362-f66a-42b0-85f1-90f74a4fa0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf1f4be-2997-474c-8e62-a8f0805b7826",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97752588-eee4-4895-8c9d-a127b736f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a105fe-759d-49a8-bd23-026c90fa723e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6470623-dd7e-433a-8956-55af16de1c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301b37d7-9651-45e3-997f-4afa08d6641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff0bc9c-f8f1-463c-8e35-98125378d707",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5896f2d-de3b-4310-b2e4-0bc96f2aabda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e04b65e-b434-42cb-9c6e-8bb83b5818b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f31e2e-e463-455f-ab82-19d4a3798ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "766e0c1d-a15a-49f6-9a82-be6a7134851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce05ff-b30f-4256-a04f-b5ba15957859",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20a4448-d8f4-48a5-bdc8-bd006605e578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77c61bf-8919-4fbe-a6f6-04ca5dc244d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593e8034-e514-4d60-b1b1-0acf23c3a7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4a1577-96f8-411f-a56a-e26fe48f64db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534cd7a-f93d-43d4-aa93-795cdfbff68a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb626e8-cb42-4ecd-b5a2-146324f8a21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57754bbb-7132-4bda-bdd7-6581bd10005a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d7cdaa-b47d-472a-88ac-52b013af9215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8ceb4a-ea10-4cec-a679-72cb567a8073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316395c9-b68d-4e72-ac61-e51810f9aa90",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4547688a-ee4e-4560-bbe7-a0cb088fc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f03ed90-42b1-461a-ae63-120890fb562e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cc3720-4c9f-4bbe-b05a-4c30223baab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3bb0c1-9c3b-4dec-83c5-c7c66b0d9dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f38c112-be56-49bd-ba47-5cb7caf2d40e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ed6718-fa82-42a2-98d7-69550021f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d9d84-c41d-489f-a090-bf019753ef86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91e17c7-80bf-4ded-a49f-0a8e4ecb50e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5812dd29-3eec-48dc-8fd2-10a0242c73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e68f02-1180-46ce-b13f-ebc44ea0a78b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead7b1d6-ab50-4be5-a527-e079979485d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8892235b-de41-49b4-a471-86c5237d6089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c60ac58-b0fa-4ffd-bd94-5c871249d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6109376d-bc64-478e-b9db-14759a1de6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c02f098-60c0-4151-85c9-213df09c03b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dce1d3-5304-4954-9dc1-56700f3b3f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f00cf5-dd91-4acc-bfde-a78abb33b06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf7e497-f1f4-487d-bf81-23598da48c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da19a996-4ff5-4cf1-9570-a714e6d54c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e121a9f0-bdf3-44f6-bd3f-76d761fc92e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5705590-0da7-47d0-b2a2-784d549e9ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595915bb-bf82-4906-ab63-4369fcd40f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f1f472-62c1-46e5-84b6-0977dbee3032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23386f28-8afd-477d-b806-1daedf18e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f99710-e226-467e-8fab-1a58fe98e65a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7996700-6f25-449d-a92d-b7223e08a43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1b1473-f9a9-4ea2-b156-358b39b5a7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579f0e57-0d8d-4fce-bd36-4655c3d1353f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38221dd3-aa6f-474d-b16c-230d9abb74d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cea8baf-3dce-4d1c-81fd-86ceee94ba32",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad60fc88-f4b6-4d26-a77c-b4482d88b208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee304146-6a54-40f2-83f2-71780f17b14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20d9a1f-0582-4da9-82da-af446c6351f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e3e7b1-5f53-4d44-8bf7-5a2ec6481e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39b890b-0e11-4a49-a568-950f54a58cf0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7637bc-e291-43f2-bb80-6c763da3cbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a949f5d9-3637-413d-8551-6663b69c6fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfc714b-0881-4c33-a39e-ef2d6ca68e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "708c549a-b1b9-4dbf-a132-7acabb8f9d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661b0ab8-81fe-42a0-ae3c-d09d0b0e67fc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125cb266-4c41-4b40-8d81-51a45c1cc154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57ebab1-a41a-4e4d-897f-f0a70360e11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a3e874-d60c-4a37-96ae-816239079411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2577fb1d-4117-4eb9-8f77-285be0d464c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9b4fa7-2d03-475a-a4a0-46eb475fe412",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfe575f-c006-4af8-a90e-00988a37412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a867d6-55a4-4150-934f-6307b1047d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f0568-c1ed-448a-8fa0-e1fbc98e80eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695b51af-259b-417d-840d-28facfcfd3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975969f4-bc4f-491f-a410-60df05fe7f10",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60504f47-7216-4b31-8edc-fd6879ab5f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0d76ad-13b3-49d4-9d2d-1b0f3b97169b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c79d140-5d51-48cf-9bb8-eee813a29f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff5754b-efbf-487d-beb7-4861f64806cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "440c9bcb-b3df-45e9-ad7f-af15c11c1b95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ff07bd7-5be4-444c-bea5-59856b085075",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e02fc9-b2b4-4cbe-93ba-eedc2ad5456d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6b09b067-4695-49be-a2fc-950f7357a592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb7c818-8bd1-430f-9f22-17e4af85acdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ef6f5a5-b9c1-4cbb-a342-81130020a4ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd2a503d-8765-448a-918a-52c869f12c6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e20b5040-3654-4644-bd01-2f41bf5fd4a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24151f75-5690-47f6-959f-31eb8d99ae4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c552de4-8c40-4e0b-b776-2e6b0e72b998"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49c2a1f2-3dbc-47ca-8b11-31767756fd9b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f13b4603-e2a5-4f88-815e-0c3024ad4f46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b3f310b-9fdc-439e-bb94-575ff04e438e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "782f526c-78f3-46ce-a638-fc38a8d2b56f"
            }
          }
        ]
      },
      {
        "id": "7364f38b-7f66-4c6c-9753-f6016aff4ec1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ae9cefb-e06a-41e2-9fb1-304ee7fee4f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd71af9e-b233-4cf6-a8d9-6b9cd08433b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ef7a917-7f7a-4167-bdb7-f3cf13b654ad",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf63999-b71c-4a4a-a54f-c4692aebbb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5d5435-2c63-4a02-8d91-23ae7311f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794f8be-bc33-438e-9bbb-dd8c06534aa0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7b2f2a-1672-4697-a268-cee7599fcb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9adc5df-9c63-4c3d-8528-7bed135bc902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5483cfeb-7304-486f-b458-950d6d81314e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92e8d17-e930-4fcb-ad6e-7c649604c9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4160a62a-f603-422c-a788-f387a80f91fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae62e1c-c49b-4cfb-a285-f337bd470d02",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d5385a-45a5-42d2-84f4-801e6233011e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491012a4-2552-4a7c-89dc-b6c904e2fcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16900c1-da7d-4480-a66f-16f10f85771e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e4226c-8695-4513-9288-7e41aaeef4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6856059-b9f0-48c4-b472-8a8be1b1c5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c761e9-f21d-474f-a623-ee0220544afe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cde6ca5-f85d-4d5c-822d-a04af726fa57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297e248e-d254-40a5-8cfe-0285ae09da16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26742fd2-4d1c-48da-879f-91602d2706ad",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6748ec-74da-4268-9570-ca524bd14025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dcd4a1-0300-4ae7-abfc-54c1f4d65c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c81c61-a92a-421b-b6ab-009787ed88a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f473c4-3960-419d-ae46-c73913a53b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2305962-9a82-4761-960c-66301c3b792e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342ac4bf-e9e7-49ad-bf27-d652d3fb668e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e32b0f4d-b625-4459-8e72-64a8d858ad9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f92841-118f-4670-873a-0b3a1dd3895e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a678f891-4581-43be-8a1a-0c492b273c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a876bb1-360d-44a2-afef-40a97402989a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f1ec5-4ab3-470d-bbe6-f6594c91e570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b425dff0-e12f-49f2-bd8c-61a5b5156936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da608d52-9e2a-4e1d-b3e9-602c3de174ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f825841-3423-48a4-9ff0-4c970e4652d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae49c68-8d4f-48c3-9082-40f75d402f02",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9fbe11-0be2-4780-9cf1-c89340d3d9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c053c0-6184-4420-9a3f-06e963a2eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226111b-f3b8-4a3a-b735-9bcc2576bf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d257599f-2d30-4638-bee2-0b9837c0eebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96668fbc-c6c7-48eb-809d-da1bec9ea239",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c032a288-04a1-4e58-ab01-7101e7f6896a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e9688c-dc3c-47ce-951b-734c14410e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb86b53-6719-4117-be08-cc108eb0cd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f913719b-296d-4f29-bbb4-85ac2019d91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f9f83b-2e83-4dd9-86d8-4083ee62500a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f487628d-5795-4971-8858-94706f49aecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07f9b26-32ae-4a4c-b29a-19b11103b0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7efa5ce-e874-453d-a7b7-aed62e4688d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889f9fab-707a-4462-9aee-1a359b7b942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7c8aef-04d0-4901-8f19-e124edcf39cb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc1349f-1fe0-4e10-8652-c90a7e2ee6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a58f5ecd-8853-4090-9f52-f23075e922dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e803f82-6d6c-4f6a-8688-2cdbe019a169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fc78ab-cf29-4448-baa8-b94e2d21ba95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b19fc48-7606-4967-926f-37079f2eaedc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183f9af-e26d-44cd-85b9-dfd9939e1423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5382fb-554a-4c75-a624-fa443b7bd594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a8795d-c4d4-4255-b5a5-63a6e61dfd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b92295-250e-42db-b143-9f172f5b1c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07ac95a-84df-44a3-b3e4-87f1921f7634",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004c2cb6-49a7-4f54-8b56-363d5f5cba4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc91e30-5411-4b04-872c-8340d58bffa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff71542-16c3-490d-8ca2-1090bc3a1be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75eacb4-6c48-42a1-9e81-3f69461b2f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fcd88c-ead8-44f5-bf5b-26d9b9897552",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6aa3eb-2ef1-4fee-840d-00677fc622a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8f2607-3e75-481a-ad87-1e0dc08877ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc3375-1f83-4611-b83c-74d3e7f88420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d755e5ae-9b73-49c0-a6ae-b4d6391a3e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bd55c0-e449-4dd0-b316-8261f23a157c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21e51fa-e06e-4a21-bbeb-7725efad626d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa06524-0c5d-4dc4-9f31-46f9abb7e4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074f8b75-ee76-4aa2-97c0-792258e7da80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f5ffb3-449e-4755-887f-f3fb100ca295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d191681-a804-4a6d-89f6-341729c7e4e0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4054f95a-09f5-489c-8643-07f932b36742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ed60aa-b255-49cf-a3cf-d378b1c24d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a5bc2d-21f5-49e9-acad-4ac8d527ceca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efc5fda-5521-4db6-a8b3-75b14e5ebeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cd0b46-9317-45a9-b9bc-cc0b08b2bd76",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd9f694-595e-4ac6-aed9-8f1444bc6f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9b5e29-cb64-43db-8c12-27f7e614c201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6acdc3-af54-4723-87dd-08d1d3f6fb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a065aee-bc46-49d4-aa22-3050c41e7769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79435f1-d602-4d74-a40d-e98be3ec357a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67338755-765b-48ba-b393-c22e7c15544c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230007e6-5213-4800-8a1f-5a411b751d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4de5db6-ddf7-44b1-86e5-973073830c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14dd60d-2812-476e-84e3-c94effef70d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c61466-1ad6-4694-ab1a-1a99719346b6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d3c3b-d21c-4fb3-bba9-2ee13e9ed54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13282ea5-1b65-4f14-8d4f-291571b7e8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a34c1c-d5b8-4ad4-9e60-85ae9db92a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c95c9e-a215-4329-8946-c52bd1c8811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d361b2-f432-4f49-b297-4ee52d32b56b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1607cab0-6861-4fd9-b4ea-352dd0bc3786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47585302-0f8f-4dd4-9244-177f55310eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e14d00-e9ad-499a-bfdd-4f60c2cbb0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37113093-63fb-4bb8-a701-426b7ad0577b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66f67d3-0a24-43b1-be50-a63f4889b892",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964218ad-dfe2-407d-8dfd-9c2eda18417d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349102cb-76a9-4fca-991d-ad524afb0872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ce366c-329c-45fc-b2b4-9ef3dcae87f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d71cbd-5821-47fa-af87-8891b775e4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21a8aa3-970b-4688-82a0-390dd8c592fc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efba5b5-cfa2-47d8-8128-2ddd9bd697b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458aadd9-a1ae-4d18-9cdb-8eb253f8c10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45bded5-9330-4ffa-921c-d9873b4b3442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9b9a2c-ec5d-4d3d-b3e6-6d41bfedf038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b99ba24-3f0a-4742-a95f-041154b0f8fa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d67719-587d-4a0a-8ac8-1824bb7f25e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b49beb30-2642-4130-a686-7f344df112f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95f1174-d467-44a5-9ee3-e7e4c4754f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be69a230-e94d-4bb6-94ec-19b4a63ea7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b1f1e-a3bf-421c-b7ab-effc6633089c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527f2266-fb5d-4317-a2fb-36c310a4bd43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40022f7-7074-4be7-8faf-d72a999d6d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db39894f-1abd-4396-922e-0a8c34a373a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70466fe5-f346-4272-964b-c8d16f8e6060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d8246e-079e-4df2-b7a5-2fefe11912bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbe257f-489d-4f2b-a220-6735ede94a04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e740857-3937-4d5e-8f46-b136ac31eeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daecfb3-8920-43e3-a1c3-1443d96f969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e65edd4-aed1-4ff0-a898-4e45ce775cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f255a-98ad-4f08-97fd-3b057facb369",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349dca03-a4a7-4d57-bf1d-9841e0244063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86c1c62-7741-44fd-b1e5-a6b3953d72d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676cdfe-a273-4f8a-9d92-86c75888df84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a242bd9-0732-4f7e-969e-b80f6241dd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea35c05-7fe8-4525-acb9-f132e34b418e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09f5a15-df13-4838-ac3a-bb2c3025b585",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc6fa03-140b-43b4-b16b-b980df5d02af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572bc863-6b79-4e53-8491-e47182806d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b829e35b-1563-4abd-8782-731cd5f5e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb31c5f-b77f-4000-9ec1-5e3d2413f538",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185163c9-2dea-4852-bf39-c01b51e6ae43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd82b364-cb41-43e0-ad03-5a6787e05d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27694638-6046-4741-bd96-40bf904a34f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f537e540-785b-4425-8f8d-ebeb50cc3480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7548b2a1-44ca-477f-8d50-18ff520e5029",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc308e5-947f-42e6-b373-ff52590d639d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbddd46d-152b-4151-a885-60d84aeec56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef7a2f7-fd18-41cc-8025-f2e19d1da555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4641a7-f12e-4d83-b953-4004e29c61af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3be9a6-6f51-4249-9ea2-051d3589549f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d809f42f-b332-4f2f-ae29-85ea4b828f1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b16dcd5-01be-495f-bad4-927a545b0b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32a1c12-6dc1-4bd1-8864-13af4a3a884e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa38caf-c7a4-46ef-a620-8e9178b30b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783e1ea6-9d7c-478b-b6dc-b5523a3b182a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2cf473-3abe-4322-832a-33e99d64662c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a5f99c-accb-4e1f-9878-83069f0d32e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1958ad3-9e5d-4766-b959-cc6c577c5c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9d3288-b7ba-4904-8a5e-8ce6f34a35a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24f3e08-fcfe-4613-89dd-c13c7541061d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8cba15-2da3-4415-ad2a-f17cb8460ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4638750a-d7f1-4fc7-9ca0-f319ce4e700f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e80daaf-22a0-41a2-85f1-604a6fdc7e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1540c25-d91b-4b09-8ca1-e80e250277d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f319fc9-c18e-454a-8f1d-674d9d404d18",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d0507c-0811-4a55-aff9-b6224e08f7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a874cffa-f699-4f2d-b78e-aa354b9502fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566d4835-945e-49fc-bcca-ce32a367a1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d57acf-9192-44af-b453-6958401891d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588c8920-0209-4984-a8a1-9db2ef86975e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d9b122-559f-4484-93ee-6bb2844827de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbf906c-927d-4d93-a2f6-ca317a454b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d190b4f-d685-4877-b009-8eb774e7897e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde9f112-1b4f-42e7-8ae9-8bbd868ff5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b9695-6a9b-48bf-acd4-f938d18c1277",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40cd092-696b-44d8-ad46-6ea1156a9f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9515a0-de58-4163-a64b-a73f2f11266b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b878f8ec-e069-481e-b804-64da024e7f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633be17d-8d1d-461a-867f-221b6513271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc306eb6-f3a2-4a6a-a423-39d4ff5e1938",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cdc660-55d3-44b5-86df-361f4aa778e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc0f66d-c3c5-4431-88a9-606c9032d970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1beb6f-5160-4433-929f-5cdb5b78b8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f714e60-21ba-4937-a6d9-58643c30aeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c614df2f-fcb5-446b-8062-da1ff29f797e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dd7d22-58c5-4e12-be05-b90f0a93967f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c91eab-7d93-4c22-8098-2282bc13d382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4dff47-66e9-4a46-9a33-3d66ec6615fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35143ad6-f24c-49cc-a1ba-0fe6c9046c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c966a265-80fa-4b3e-851a-ed5a27409b6b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58774001-5271-4c2c-af38-2b0348fbbfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a121b-6e4f-4c84-b479-3ccf2bbf8734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee266634-692c-4535-b06d-d1a99b71acf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e940872-28ac-4531-8eb0-afda7d6332bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46589000-ee00-4b2e-9d0c-874d2a3c1c6d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37590a18-ef56-4d68-822d-20d3b345dd7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8f8248-a589-4bff-b7b2-c9458d10e939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b093bee-5880-4fab-8d06-b00e1970e3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b5d0c5-9e13-4d50-b55c-6d30532b1cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91fe6d3-c26c-4441-b81e-3ac65c4a26a2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b83c082-6727-480b-bb12-63f48fb833d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc80c4-2150-4aa1-9625-900739150502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ce703a-1e72-4ccc-a882-241904dbde0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96aa9997-d216-4ffb-a711-fb79e01b3029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2419ac-b0d9-4981-b77f-dffb15c2b51b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a76687-3eb4-4200-9264-b323127a4f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7698048c-e190-4f69-8b9f-2abd2a8a3d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cc3393-c0b4-41d4-87eb-91d8f5aa540c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22f74dc-8caf-48c8-84af-fb01cdf69a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac31e1f-a704-4c06-b55b-62136d24b9cf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793bdd93-a700-40f3-98f8-12b3e18dc3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f994e9f-452d-440f-88ce-5d0823405e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaf4b98-c369-4ece-bf53-9e4b952a6ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f7a91c-b7fd-4c22-94e3-264f44ef8d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e8f130-e7f0-46a5-9457-99b013266d92",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f91ad1c-e7f3-4403-9948-d95881b535ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651e456e-32b8-4fb4-9a22-1a9d73d73b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04958eaa-304f-450e-80c2-e4f6ccf27fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae39525-2f13-4ffb-b2f8-aee40c5c4091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5a0f0-e0a2-4425-8256-13c3e0dc0260",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f23ef2-fa10-4503-8ed5-5aadcdb3effd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabcfc89-407f-4f47-8ae3-75ee56044871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223407c5-cc71-49e3-8f98-42d16ceb5139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6371db48-86bd-46a7-975b-98558e5fdfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d285d106-1142-43e0-a750-60e46e4fd364",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154a3f76-ed39-4efc-86a6-efbc10bbcf82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2944b997-8d38-48d5-8ca1-78e9cf712daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e996e56-8bbf-475c-8dfe-c575d6e4a33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edf5e40-66de-43e1-93ab-c149d216cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81b4c10-f4e8-498a-b8d0-9aac8a668851",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0428c7-70a6-4cb3-b814-4fbf7e6774ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c2f2c8-6728-488b-a293-a50a30d39132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b47e5c-e4f4-4f16-9775-8299e4cc6ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4f407e-2934-4ddd-927e-dcc551be2d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35df667-b692-45bd-81bd-aa281a464392",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2575b3-4040-48bb-8555-4f5254cd6921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf21c578-16a0-405c-8149-73f95f6eddaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c1c809-ef67-4ff2-b431-d67eab63c363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13583e81-7a74-4d05-a1d4-e1960c0ef549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb432841-cd8f-4a75-b5cc-bd0fb1028393",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0f949d-5a02-41d2-a98e-8ec5bc26c664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d295a6b-53af-4984-bb67-0d76cd44c7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9eb71f-9c13-4827-a462-a03a079db75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160f1941-4673-423f-bf05-cce0fd3bb515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3b1c62-7e80-4ffb-8ede-696fe63a46fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2718e6-b046-4a2d-a58d-ec0a1c6105a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd08343c-1b7c-4880-956b-c5cda7e8ef7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672f57c-4a06-4a2c-b516-6e8427d0dbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c00da2-0a14-4a8b-bea4-20691763151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15651f77-8dca-4025-aae4-79f263f67893",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3946aca-69fa-4982-a52f-c7c2aaa157bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1799b7-666d-4f80-a4ab-12f2159ca32a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befddf65-4e1f-40b6-9b77-7242aed3d1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff72fd59-5f72-40f1-beca-8e236863511f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdb2fcf-3fac-4b7a-9bfc-bf3c765ef44a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f44c58c-b1c3-4ec4-a57f-9c5c35b851f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce725a26-2d3a-43e2-baa8-c7363317bd08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f1a8cf-9132-4d3e-8362-d4a6c4253d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a71eac0-e499-4626-b9aa-e222c8434f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2907bb-1a37-4cec-9745-275f77196156",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4659664-83a6-4f9d-ae43-c4f64d33b1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f01aa9-f76e-495b-ab9c-20ecce6e8ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbc9c81-09cb-4214-8f52-d7b987cb8264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8ccbe8-ee64-48b3-81ba-ad975d229b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe1e7b9-b35e-4780-b871-7c5092abe835",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2b8dff-5d14-41eb-a5db-b6809c7a5ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2c3820-17d6-4c0c-bb04-94a06681c42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda586af-cba0-4888-b19d-40679e567361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71911cb-6015-4c91-b833-7cd0d1e0b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb825025-7e47-45f8-92cd-51084cbe6b74",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455a9cb2-d442-4d0c-a5be-e026a5088cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf22b46a-d929-481c-9453-b550868cb535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c2f048-7884-4555-9d76-17ef41fb49c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eed15c-1d1e-49e6-adc0-160e9d19ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399f8e5c-4f73-4059-a950-c8100ddc3b0b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc13ad9-39ea-429c-819b-044a7e846ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2edaeacd-3174-4c57-aab3-51b41322dfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3c7898-a7c2-423c-93a3-f870a75e8105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166f39c0-b367-41a4-9bef-f7244a5f8535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e8b3b1-626e-431a-91b4-09e14548e2e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b18f77-89ba-4658-9a4a-3343870f5045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d158269-f2ca-45a1-9d3a-8517c98150b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6df95fc-0a16-4616-be10-42a38d710b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353d3bf8-c0c6-4369-b4fa-8252d9c9a5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ddff3-7974-47f9-b136-0075803741c7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8579370-7670-409c-8565-59947d035ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43146711-e2a8-437f-b59b-a9a0a9ee4551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb99c0-56eb-49bd-955d-eaa0e6b78752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed72ca3-c160-49d1-b53d-03c23b284fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e21081f-08df-4820-a350-ce088c3a4527",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77f51c2-492b-48b0-858e-cb8582267a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78558ec3-3636-4580-8da0-d520e21f4cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6a0093-8f99-4819-8f4c-fe8afbafed3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a8e593-39a6-4187-a056-d9dd26e8ab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae037aa-9fde-44d8-9fee-4219ceb1a044",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa85a49-22db-483d-bcbc-765e6d48a921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d79d76-4b7a-4542-b55e-457258b78dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7da062-9c0c-47af-a633-a876342ce34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29683919-072f-471e-bc7c-7c405f4f9be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed916557-8207-4fdc-baeb-b3fbd80c1d53",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d61ee7-9bcb-4273-b4ae-794f8a977c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927251df-5dc0-48b7-92c6-465cb9e1f7f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaf019c-e9d6-472b-8903-6db1a144a05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbf62ac-57bc-4809-9f88-b02ac6925b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2130bea6-7107-41f0-93bb-665e00d9d608",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf046b2-1735-4a27-8221-8c2968bb5f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f67e861-b58c-4fb6-9b1c-76f50fada3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff62dc3-903f-466f-b780-abc4e55834a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f12f626-914e-430e-a6fc-18e678c1d5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed705b-01c3-4405-92c4-1541e29485f5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd952ec-65b0-49f6-996a-c1fbc8e7d24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "592144c2-7bf5-4f47-9c98-450c7872d9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f02fb6c-be68-4b90-b6d4-90d567c1c5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e89fd1a-9e8a-44d9-9cf9-811b6a101fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b730f170-8260-4ddc-bbbb-aed16b9b0a50",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f92c30-f822-421c-b4ae-3da8621ad77e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a5b55a-3454-4cef-9398-bc9733dfce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850899c-cc8f-413e-a4f6-c983d7d791e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cd1714-724b-4cff-970f-9c8587360cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075f7ba5-4400-4acd-9da4-260585b56591",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12245015-b65c-4d35-9c4b-90183924ac87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f490954-20e4-4994-93b7-f1c6d79bd6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c903a5f-5efc-45be-ad7e-18dfc9d2dab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189aae11-50bd-42c0-bccc-28b2c0317c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0a0351-b25a-40f7-a525-ca32985b09f1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911a5472-7bcf-448e-b7dd-72e94716c483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "098bcab4-f397-482a-b009-a780e8d576be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9672dfb7-9a09-4383-9612-ab65f4e3cdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8dc843-ad6f-409e-93ab-ae2fd61a059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249666b1-1c04-43de-9e66-ac1eaa105da9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7a6363-36c9-466a-b358-50b2c43d1785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4121433-cf32-490e-9054-cddec0e0a881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a401929a-76ae-448f-857c-07d9d83f2a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1fca60-0b87-4536-8c7a-afc654ab13f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffef69ab-c489-49b1-bf79-b4be13713e58",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cc5b1e-1b08-4dfc-8c92-99045757462f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff2f3c6-cca1-4c1f-b4a5-a41b8cc1438e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b688204-d712-48f6-947d-99ade939a70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d5c188-e648-404d-8abd-c40bf8ee4a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037eb43a-ae89-4de6-8f58-783d8355a179",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453ff381-13e7-4215-af45-a0dfcd60cd6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dba942-6897-4648-ac07-b98046478f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a8037-96ab-4d86-ae51-85b9b2f594ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e89a9a-f77e-47dc-b2f6-1420050bc4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8a7a6d-91e9-4b93-82a9-81ba42e551f6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00015438-9554-4f29-b4de-e43810bf3786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0220487e-0a8d-4e6a-b1ff-f72cc16ff803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5750947-f434-4d4d-a6ea-f15595d695e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccff73b1-fc84-49ae-9dea-e392589d1978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb73c983-87a3-402c-b1eb-f6e26e7505ee",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a7bd7c-fc09-4673-84d6-597e8d974896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5ac5a8-a26c-4cec-9ec7-eb845f4ffa4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c54e889-3bd8-430f-a728-21fbcc17276c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1c0c2e-0203-4c3e-982b-6354c1cdc342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defb938f-f743-4938-a6d1-f6328efbf762",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cece4e-01f8-40ca-bc76-e85c9586d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c857dd74-acbf-46bc-b93e-2fc74dc03c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ce7b15-09ef-4fa3-a952-03fb2c4e1093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d91e51-523d-42ae-811d-6debada8a3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76b895c-d842-4d1b-a927-ebd0c3737233",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f23fcb-1c25-48e8-80a1-05e6a52b4701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa2e5ee-4c0b-48e0-9c34-94930400f593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3c4226-75c7-4346-ba27-be5a35a849d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fd8070-ad58-42a5-84ef-c54a141d84e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42af7c7-86fb-4228-9604-6116483da00b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3e9f4e-6318-4e87-828a-6532ed0434f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fcb2035-fae5-4413-863a-783530838627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c7747c-706c-491f-93eb-430d91d27b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead7df75-154f-47a1-a748-d1072bb00db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43c6096-2aca-406e-b6dd-c86ca41ef396",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a0e22-fb01-4417-ab29-7fa713bcc3b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb86239-d57f-4f72-805c-64b7308290e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8888f00e-9e7b-497b-b272-0854aa3b3918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0afcb546-3133-4deb-b622-4e6faf11b8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b820f6e-d1d3-4245-9d8f-78232338290a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4a12dd-8513-4513-a0bc-5634b2ade2f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48443aff-97e2-469d-8a0e-cbce33ec38b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd64a078-3a17-489d-9814-1ec86c539c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ddfb18-a50f-4a7f-91f6-9d02237304cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102a54d-e5d2-4ddf-98d3-5ae393b68759",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe3a8ee-e7f5-42bc-ac23-883539da7fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c086bd-97f2-4890-bf8c-f1d256681491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc0224-c575-4c9f-94c8-98d42a449b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c952041-4b37-4758-823e-93f7bb7f47f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c351375f-9a29-43b0-9705-69609fecfcd7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba631e2-2bc5-4339-88af-f3f851afb9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618e8cd6-27d7-48c9-aed1-c6b545a718d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1858b9f2-7a9d-443a-a986-1add65690175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a1da94-653c-4b41-8e12-0aad3d91b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42080576-6f4d-4899-ae26-2924bbab8282",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22830506-267c-4399-9354-c73da64f7ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e934788-1290-477d-93e4-d89e7b436a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb420dc-64f0-4f8c-af5d-5cc4105de46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c062806f-e6e8-4eb9-92d1-92a791e4e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db1737-d407-4e2c-92d5-b5d2d531592e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec2c168-db89-42da-860a-3bcfa2e12677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3e9ec7-c9d9-4f8e-88ee-eb1df3fa7400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6596e09-a98f-4d26-878c-8a2c8bb8d0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a36a746-7a9e-4ddd-9f40-4cdef83478ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b942dbc-8e1b-45e6-92c2-ee5800dc4899",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b648bee-aa0b-4369-ab6c-7b9af6a5f0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8578a109-9e8e-4fa6-bc41-29cc0e959df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83a9160-4636-4e16-9848-c80e5f5d2050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5893ab3-91b8-4e43-a230-f1ed8ec31ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6238f5-8889-4431-88cc-f4ac1049dbf5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29fa155-cedc-4298-9a22-a9ac45bf525e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3f4ef1-95a5-492c-8a6e-4a0aed364eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f136c4-1115-4eae-b4ce-43bb9654bf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3710ecfe-71b9-4210-9c42-aaa7c0a6a885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a8aa97-61f7-4fc2-956a-b2e2309cd5c6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13efbd8-814f-4c34-956b-30799471a28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c1dff3-d15e-440f-82a5-840821d80883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd15f89e-64a9-4190-a0a8-9bc20336c921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f10238-d7f1-4563-b320-8532ed3e9acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0e9bab-0b74-4004-a0ca-e07542a02812",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e40913-58c1-448f-9fea-d84931f760c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587c237c-dee9-4eaf-bfc4-d95000e53241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4eb9a-9fa8-46ba-b727-484c52cc5f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b399dc84-e5f3-4aa4-8464-c32ca2a5d4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3767d4cc-834d-4eeb-a807-9652b1e2ba66",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd15a79-542f-4cad-ba00-82a71f553dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b5e0ed-e1cb-4c84-b1c1-4e2082a8e294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263109d7-ee02-444a-b409-cfdf1a136954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f97981-22db-45ff-b10f-cf058732aae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435aec9a-4926-4fb2-9529-96e1985ad4e7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4129c73-5ad9-4bdb-bf2a-b61464caaffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3faf014-9190-4ef6-93a5-3ba19b5cdbb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0695de2-8614-46ca-b208-968cd4986acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e889e0be-dd01-4cee-a13a-8ce8034412d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e74f39f-43a2-4dc5-90ce-ed993b3c5a6a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2fe860-d950-4e07-863c-897932eb251e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d3616b-5928-4173-a3a6-c206dfc5819a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4254f09d-b177-4ab0-9436-f3e6414874bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eece95b-bb1c-43cf-aef5-f7b0c4a20c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765b733f-f5c8-4935-b46b-3d1660cce104",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d52675-2bfc-4969-abca-01d8baa2d636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afc175c-a778-459e-a2f3-95e7f1b4f08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6ba237-3e81-4b52-8d33-c6e66e7cb13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d28160-4229-4e60-b12d-5517c8232fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b87428f-46b3-4df5-9e97-a4879d9e4383",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc9abe4-7e9b-4a1b-8649-58a3b82b82fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790915c6-fc1d-4c11-894a-88b48d86c2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3e671-1a07-4ecb-b5ac-363b74719296",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55664077-7816-466f-a090-554993c8eec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72b1e94-c6e1-439c-8faa-26598cb6c570",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bba346-064d-4728-a2b0-a6a819727b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2db44fb-06d8-4f48-963e-7a84325e4be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd74c55-923e-4152-944e-b92f71753860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d723c774-bfd8-4d73-8fee-4d6b8189d0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1810d183-1d03-49b4-a045-6525e96a3c79",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d87c01-f2f6-4602-b49d-25b00f28a22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a91aa7-eed1-4d18-83e9-cfd5cd2b860b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663d8ea5-3d28-40a1-a395-27df16f321e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed1d8dc-0ddc-47d7-91d0-d09db0503ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6838659-74e7-4d8e-a344-76487d92595e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505d77d0-7e57-434e-92f4-4cab4c6e688b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35908d9-21ed-4169-9089-f378a86a8219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fb56c4-421d-4171-8e75-834defa5aad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4d216a-e2c6-4416-8d91-15e82e9ed666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84867fca-80f8-452f-ba26-2cf5bd99bba0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aed310-c29b-43a9-adba-a60f093f5809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929736bf-79f0-4ba7-bac0-644918c91cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0830753-4343-4623-9410-dd0d1572abb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6074aaf8-696c-4ca3-86c6-5b309c388986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a7cab1-41bd-426b-a5a2-bdbf8479f917",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec53202-42a3-4b58-bb32-38963c3c950e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a6c813-7b98-4b56-9484-a81f4c48f726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9fbbc7-148a-44d0-8111-6ec38f9e1396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d5f6dc-6ba5-4f07-ad9a-ce081fc90ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a206da0-374b-450e-9396-a78c233916a1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861b4f29-680d-4a16-8d0a-51329f0be624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37a9cdc-99a1-491a-9419-cc519d77e535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7314ee-0321-4c38-acb8-93a8ce69c464",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8177f563-9e75-4bdc-96a7-6a69f11977c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93474f2-6958-4aaf-a731-e92801041466",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22be3936-5ec3-46b8-b435-1f32483b5c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568e0719-13e4-49cc-82ff-f4356cf47355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91350f7-0579-4dc4-babd-4149769e21f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b918035d-276c-40f7-b1f5-576defd0c766"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d94fb897-455a-429d-b68d-95239bb7c3f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "127124cc-30db-4851-8e07-0fe10a8092cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d09d169-0934-4596-9723-c9d518ed62eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4853f998-069b-4a8d-8cae-33cec83ff49e"
                    }
                  }
                ]
              },
              {
                "id": "8b89cbe2-3304-4c7a-b2ca-1e2b64453448",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4985f04f-1c86-4856-a260-09ef647af4dc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3622cefd-cb9f-4884-8a1c-611d8229046a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "855c3fdc-7268-4b39-804e-7190d6558e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cad5ad-191c-4d07-826b-bdaf8118a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cd21696-4f63-45e0-87ec-10843f6d5b7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1225d0c9-5bd5-475c-89c1-438ed154bfad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821ec44a-cf83-429b-bae4-3345956bf4ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133cc913-b772-4381-9f44-db94c69e399d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7da60a77-6030-41ff-9bde-408791cf19a5"
                    }
                  }
                ]
              },
              {
                "id": "42e843c7-a42d-45c3-9940-23f839aaa198",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "04c7c7ab-a55b-4f0e-b092-8191a387c384",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141dfbeb-9971-46bf-b792-0a9def03ddef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cab89598-16c4-419d-a29a-04ac6fb17eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaad63eb-6860-470d-870e-6102a5c13701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c3ab77-719b-4ca2-b594-f96284323ea0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d501e45-6815-4634-a83a-536af1caa2b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa9e3bb4-a210-404f-977b-64132f5bdbff",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75ad9aec-1084-4c43-9a2b-87a3eaca00bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f543896c-b76a-44d4-bb18-47a25fdbe77a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53de9eff-11e3-4368-af62-5a8180b2fe66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5865d893-69c9-490d-8e55-6138d80c7408"
                    }
                  }
                ]
              },
              {
                "id": "f88ad80c-6aea-476b-ad4f-40a136dfe2e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16392159-0d80-42ac-a6d1-3568d41a6dad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0acb17e-4397-4953-8330-564083dc8be4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "506d10d9-ccd3-4b68-a9b9-295d3f81aac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1297eac3-94c6-4222-8cc5-9eb546f5f598"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c252e854-fc2b-4663-9284-86a5d6a5c366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "12c4a1cb-e6fa-476a-8f81-e765b6bb59dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ba612af-40c7-459b-acd5-b4e7f45f5fa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ca121ec-dd27-4581-bcf3-25041546a328"
            }
          }
        ]
      },
      {
        "id": "f1fd4094-3faa-43f3-9dd1-0fc4712c28b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cffffa2e-dd3d-4e4b-9574-1df765c7d57c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c605dc8-f4c5-46a0-9ee0-88af25fb156e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2d022a5-e4c3-4f6a-9c75-96b6dd682039",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1e68f6-b3bf-42f0-b998-42a408f659cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "19473a70-57e5-4cbb-98d7-40ca176420b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65b74bd-c6fe-42f5-8769-7adb786eeadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e59cdd05-3368-4ac2-9c33-d9fab0a7161a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d95a7575-ac62-4537-88b1-ddb2fa9aac95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17856829-94cb-42eb-99b4-5a7bae583650"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f41a91d-c893-4b6c-970e-bb78710ce434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39585313-b871-435e-8121-aab38d351fc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1da45c2c-6aea-4be7-ae73-f8a3dda5afed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "807126c5-8196-428e-be51-b77e5f4d84fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9e630e7-2b23-4373-aa02-7bc39ef30597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3988838-a280-4a0c-8991-13937671a002"
            }
          }
        ]
      },
      {
        "id": "805e831b-fbfe-49cf-9bfe-b800e214cd27",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d03d46b0-9a8e-444f-be48-eb40585d43bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2e5ad5a-c56c-48ba-aa12-1209be12104e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "512bf9d9-951c-496d-9432-829064ebf9b8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea3536d-3191-4291-8a05-8e3e5df5c2fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94c8e07c-11b0-4986-9264-a8f5187430cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2683903-904f-4386-899b-ef67f5a55bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f22a7ed-aa63-4444-82d6-ddbd29391432"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9069486f-efe4-47ce-ac11-900be26fb632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17fa5d37-46f3-4b7e-8020-ee4154539afe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4857e7d4-3dc5-45d4-9891-f58ae07d24bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5450d5fb-d43a-47aa-beb3-fa8ed19dbd8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dca8e76-ed29-46ee-a949-9bb5a14ce401",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54128daa-f1e5-477c-b108-5ca577404512"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad7baa0b-d808-4a02-aa27-20877be89e7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f314d9a0-f4b3-4504-89c5-a967e57e01bb"
            }
          }
        ]
      },
      {
        "id": "e12d6dc1-76f6-4fe1-a7c3-76bd8c09c745",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c841271e-3638-4ef2-ba7e-0befd47f126a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ec652e3-e70d-4018-9e15-6c0bb762bc01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d99dc02-5468-48c2-91a1-bd9edc09eb53",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a318de03-c370-49b3-b8e8-fcfc7564a252",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95cb1fb8-b062-4ba5-920a-59c1c5a28c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415da958-dc5f-4c1b-9cf8-9fee8c0d993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a3f5d68-63ea-40e8-ac23-ad86168895ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "131379a3-370c-43b4-8c3c-de429f71d285",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b80b11a4-bdec-46e7-928c-de06986d0f21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0bb384-7315-4654-bb35-02f2fd0d65b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a857f7b7-a1fd-45b5-835e-d7d558a3fe8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3beaf8fe-6ca8-4a00-8251-468e86f2b3e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f002f5bf-5851-40e7-813c-59f5ef47769e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1280627b-994d-43fc-adbd-d0c881020fe0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81cfadd8-13d9-4759-9774-61bf09e76e60"
            }
          }
        ]
      },
      {
        "id": "5d4ab644-b7ed-451f-9f56-9bdab5a6d034",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36527e6c-8019-4265-aa0f-8367810fdf46",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e75557e-e4c7-4585-bd24-2ca6377f8e21",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "859829ce-0ac1-4280-bb53-e01121af4969",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "657b8348-4154-4095-87df-754a99d32e0e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7befb1a0-f183-4e7b-bd95-4d0192abaab2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 92.40701754385964,
      "responseMin": 3,
      "responseMax": 10337,
      "responseSd": 667.1076264096463,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708562028707,
      "completed": 1708562064015
    },
    "executions": [
      {
        "id": "560e12f8-383c-4aae-beb0-7b32ee52425c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3ae15f51-6a40-4216-a5a8-88c872ebb1fe",
          "httpRequestId": "8b708ef5-ad66-409a-b2fa-87f03155de63"
        },
        "item": {
          "id": "560e12f8-383c-4aae-beb0-7b32ee52425c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8b3fc819-0d78-4b65-a599-142129ccc68d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "24547264-6d65-4f53-9f1a-0b321058cea4",
        "cursor": {
          "ref": "4c3923f4-0913-4807-b4e3-e8566617f6b8",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "60c34485-96a8-42dc-beae-a405e9078bba"
        },
        "item": {
          "id": "24547264-6d65-4f53-9f1a-0b321058cea4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3efd5f0b-2181-49be-9004-852678f2432a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "40d1eea6-e8ab-4557-8878-10be81522678",
        "cursor": {
          "ref": "fea4ca43-f719-4b84-bc6b-85c532e01531",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fcf01162-f481-4c75-b0ab-7b5a2cd6d346"
        },
        "item": {
          "id": "40d1eea6-e8ab-4557-8878-10be81522678",
          "name": "did_json"
        },
        "response": {
          "id": "2b6f262b-24a6-4bf5-a88c-3fe84c3105cc",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b68cef-5fcd-4720-9880-ef9245cc73c9",
        "cursor": {
          "ref": "3cbef94d-aaba-49d8-9485-60811bc94741",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d09a9199-3824-4051-bfcd-abe506e1e4f2"
        },
        "item": {
          "id": "c0b68cef-5fcd-4720-9880-ef9245cc73c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "7147d1eb-4487-4d3f-826a-45d3ffa5e110",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b68cef-5fcd-4720-9880-ef9245cc73c9",
        "cursor": {
          "ref": "3cbef94d-aaba-49d8-9485-60811bc94741",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d09a9199-3824-4051-bfcd-abe506e1e4f2"
        },
        "item": {
          "id": "c0b68cef-5fcd-4720-9880-ef9245cc73c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "7147d1eb-4487-4d3f-826a-45d3ffa5e110",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e32995-32fa-46dc-a768-bb401fd1280b",
        "cursor": {
          "ref": "f7792708-b5d3-44f3-b828-e708a8d43967",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "46b4d1ae-5131-4091-8407-868d3b4077d4"
        },
        "item": {
          "id": "47e32995-32fa-46dc-a768-bb401fd1280b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8dd4e610-b091-483c-aae6-4ecd91657989",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3809f-8546-475a-a477-afd9408fedb4",
        "cursor": {
          "ref": "171fe19e-d816-4c4e-807c-dd8756b2e7ab",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b072f05e-8983-431a-b533-988c07f05142"
        },
        "item": {
          "id": "c1c3809f-8546-475a-a477-afd9408fedb4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "55a2ee27-c442-47d2-b18c-cbbcd2ab7536",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ff2922-be24-4173-aea8-42659cf779a7",
        "cursor": {
          "ref": "91d78089-2d82-4f44-af48-7634335c74d9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "985c087f-b300-46d4-a55f-a038ac08f6e4"
        },
        "item": {
          "id": "a9ff2922-be24-4173-aea8-42659cf779a7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "52399e04-9fbb-484f-ac41-2d3e209df07f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9558fcbc-89be-4dd5-bdbc-1d5aaba712cb",
        "cursor": {
          "ref": "415be407-94a2-42b0-bd57-d40752a7f016",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "070c47d3-20cc-4b4d-86d9-5bfb0aa27127"
        },
        "item": {
          "id": "9558fcbc-89be-4dd5-bdbc-1d5aaba712cb",
          "name": "identifiers"
        },
        "response": {
          "id": "0ddc3df8-1d28-4497-88ad-213d58430f35",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521978d-70a7-4200-8f49-5c28b96b503a",
        "cursor": {
          "ref": "b409cf71-3f86-44d5-baa2-1a85ecdd2ff2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "11c5c9ca-ddc0-4715-9389-f815d5dd1bb1"
        },
        "item": {
          "id": "6521978d-70a7-4200-8f49-5c28b96b503a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f90008c1-600a-4fce-a937-02c84deed0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93476f2a-c91f-4e1d-8bf3-9b69d7f9d778",
        "cursor": {
          "ref": "ccc85a6d-07cc-4fec-99a7-2059fbc5cd13",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3af7e905-8369-486f-bc44-5c041c604436"
        },
        "item": {
          "id": "93476f2a-c91f-4e1d-8bf3-9b69d7f9d778",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8d3a1192-dd8d-4a69-9565-37d12370175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1361427d-8071-47ef-9e2d-78f6e7842ae2",
        "cursor": {
          "ref": "8ec1731a-322f-42db-91e0-6a88803aeee8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b4b25bd8-f597-484d-839b-a275875c72d1"
        },
        "item": {
          "id": "1361427d-8071-47ef-9e2d-78f6e7842ae2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1f18eda7-adb6-4ede-b71e-d38dee377b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797663c9-50e9-4d7d-9a44-0d299e9733ee",
        "cursor": {
          "ref": "e9cf8218-bd19-4431-abbf-5c06d8f3c7a3",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "96bc8de9-c21c-496e-bc9d-6a48d9108d91"
        },
        "item": {
          "id": "797663c9-50e9-4d7d-9a44-0d299e9733ee",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b937363-37c0-4b6d-8468-3f67613e6c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b12ec16-d023-41a2-9c38-ef882a61af2c",
        "cursor": {
          "ref": "745fa195-fc08-4138-b553-fe51bad08bd2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d96189d9-8762-4084-8686-cee7d144ec8d"
        },
        "item": {
          "id": "5b12ec16-d023-41a2-9c38-ef882a61af2c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b7c8d134-8b91-4eb8-8040-cee2a53d37bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a41fead-6098-4945-90b3-86cf46b413d6",
        "cursor": {
          "ref": "70ce9943-10bc-4cac-86f6-95a47f979422",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ac877e14-e7ab-44be-bbcf-dae43cb681ef"
        },
        "item": {
          "id": "9a41fead-6098-4945-90b3-86cf46b413d6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "105b164a-e809-4f92-b189-553fc8999e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803662ab-eb7b-48ba-8079-627ac037bcd9",
        "cursor": {
          "ref": "a22d9d72-2f87-4d5a-ae9b-ef788520a7b8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d96d79ef-209e-4aa8-b0e5-4adaead64184"
        },
        "item": {
          "id": "803662ab-eb7b-48ba-8079-627ac037bcd9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "57557419-79e9-4f68-888d-85367a1dc171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ef35c-acb5-4e72-ac87-3de39caa7b70",
        "cursor": {
          "ref": "907e6c19-c8c5-4c7a-be4d-e83ea7421559",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dcf39cd8-fb6d-4b11-8165-91455fc04285"
        },
        "item": {
          "id": "204ef35c-acb5-4e72-ac87-3de39caa7b70",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ed984b8a-19c1-4deb-af9a-dad450729283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff24ecdc-c37b-4048-8472-767391893c38",
        "cursor": {
          "ref": "ce986ae2-c6a2-4310-9802-0b9c09bfcf5c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "87176225-0005-4a1f-b8a2-972fb6cb978b"
        },
        "item": {
          "id": "ff24ecdc-c37b-4048-8472-767391893c38",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e5c7f903-efff-4d32-bb09-3052ac1ed889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad39fe5-d384-4c6e-a867-0af417fb67e6",
        "cursor": {
          "ref": "1e0adda9-767b-469c-a153-8dc8bf7a0986",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4ed2b594-ec95-466a-a303-2700ad105fbb"
        },
        "item": {
          "id": "8ad39fe5-d384-4c6e-a867-0af417fb67e6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3e070448-1938-46df-9a32-4f3d4bdaea61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d5df2d-3fc0-4862-a47c-282d810f54db",
        "cursor": {
          "ref": "12656edf-6b9f-4762-9d43-b3fb38ceb461",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2704c122-d6e8-49c0-977d-50b155627838"
        },
        "item": {
          "id": "06d5df2d-3fc0-4862-a47c-282d810f54db",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cd98a2fb-abb7-45f7-bd11-6745b940d9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715c6b6b-c4fc-4bf1-ab18-82f5d28ec6ea",
        "cursor": {
          "ref": "9c6f68d4-18e6-4919-90ed-a8755c9dcebe",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46cd1873-5ea8-46ff-ac9a-e26f29daa186"
        },
        "item": {
          "id": "715c6b6b-c4fc-4bf1-ab18-82f5d28ec6ea",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "dd4c511c-9988-41c3-804f-cc8a7224c638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e15419-75cc-48a2-b8f3-268287816256",
        "cursor": {
          "ref": "687cee48-f17b-46e1-bd11-2531381a2ae8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "701b6dfe-800b-4633-9dae-682e4c2aa04b"
        },
        "item": {
          "id": "e2e15419-75cc-48a2-b8f3-268287816256",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f5f9937c-9c6b-4250-9469-e0d44a92707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdd4dc8-5881-4ba0-a22d-b24bdf856bed",
        "cursor": {
          "ref": "9170816b-64c8-4e65-b95a-51eaac983295",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "002eaf23-3d09-4466-ae70-9e13be5a968d"
        },
        "item": {
          "id": "8fdd4dc8-5881-4ba0-a22d-b24bdf856bed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6b9d7674-110f-4dd4-8803-09697b1fa54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033122c2-b2cc-43f0-8d2f-bc45ee878956",
        "cursor": {
          "ref": "10e7207f-f913-4126-a159-ca3c1bf0c9bc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e46df914-282b-4c4c-bf56-6926aef23c37"
        },
        "item": {
          "id": "033122c2-b2cc-43f0-8d2f-bc45ee878956",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cea7c525-d450-491f-83c6-d1bb879e6773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b07a0af-87e3-44d3-ba9b-28fa401a0d19",
        "cursor": {
          "ref": "d8e735b3-81eb-437d-885d-451f9280ce61",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f08f77e2-a13e-490b-ad1d-288d1ae844e0"
        },
        "item": {
          "id": "0b07a0af-87e3-44d3-ba9b-28fa401a0d19",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b56e723a-50cd-4734-a828-712031ba248e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989184b-4a2a-483c-bc96-2e564093f370",
        "cursor": {
          "ref": "e0027fd0-620e-4825-b1c5-dd8fad348f4d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7cb70d0a-2c55-4a6f-a989-1dab95498d41"
        },
        "item": {
          "id": "6989184b-4a2a-483c-bc96-2e564093f370",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "40a3161b-b093-443a-a03f-4d5fc1335f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e20d80a-f037-4cec-be9d-dd3ff3181203",
        "cursor": {
          "ref": "4175ef69-0fcd-4fcf-a1cc-41b5b64daa70",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6be1c5e9-c980-4c87-bc54-694047c39626"
        },
        "item": {
          "id": "3e20d80a-f037-4cec-be9d-dd3ff3181203",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "94376876-0e1f-42ed-90b4-d62023ae4832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494056be-8b66-4064-894f-5ef99333b86d",
        "cursor": {
          "ref": "7b482539-745e-4bc5-8ded-583360575a13",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88b48db9-8072-4de9-8948-d2edd34c9761"
        },
        "item": {
          "id": "494056be-8b66-4064-894f-5ef99333b86d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b08ce49a-0391-49c7-a462-9fa96019b631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814187d4-cf33-41f5-97a0-0db93770cb02",
        "cursor": {
          "ref": "723edf79-97b5-43d5-9b9d-e25be3353023",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eaf8d9cb-d812-409d-8fb7-602e0bdb230d"
        },
        "item": {
          "id": "814187d4-cf33-41f5-97a0-0db93770cb02",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1cf9af1b-fa48-4436-914d-0accf8da0682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202197ac-43f2-450b-884d-78265df0d666",
        "cursor": {
          "ref": "ab03dde7-4ad1-4685-aaa6-8f46b5aa214d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5b489492-e953-4d37-812d-cc0b6f10d850"
        },
        "item": {
          "id": "202197ac-43f2-450b-884d-78265df0d666",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c8c8ab0-36ac-4e79-be84-4cc52d667fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd1dc28-c3cd-4fb6-8a50-e79313a210f8",
        "cursor": {
          "ref": "c783c3d5-6b0e-4e3e-a2ea-8a4e644c5e9f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dcfda16c-46de-41c4-be84-2fa2a34cc810"
        },
        "item": {
          "id": "bfd1dc28-c3cd-4fb6-8a50-e79313a210f8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c7521cc5-bee4-4e3f-a11b-da50ca04f64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa54dd88-e582-4458-9293-18af3b194bcb",
        "cursor": {
          "ref": "bed65ce7-fa6d-461b-a720-ac7135494403",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "219bdb3a-60d7-48c0-b072-6435b35fc5db"
        },
        "item": {
          "id": "fa54dd88-e582-4458-9293-18af3b194bcb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3d0cdad7-a956-4010-9fca-ad9461e071a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f96b5a5-1256-4da4-a0b8-c8ac0079498c",
        "cursor": {
          "ref": "7adff238-7f6b-48cf-9d27-7f0be4eb49ce",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d1910de3-2a34-42e8-9b2b-68d87972f7df"
        },
        "item": {
          "id": "0f96b5a5-1256-4da4-a0b8-c8ac0079498c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41ddb2ac-e852-4085-a003-a9281f875ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7117de3f-c4cb-416a-a2cf-29bb4092860d",
        "cursor": {
          "ref": "bd242f55-da6a-40b9-8f74-f47dee4625df",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a388cfb2-49dd-4f4f-be3d-78c6ca6a7d74"
        },
        "item": {
          "id": "7117de3f-c4cb-416a-a2cf-29bb4092860d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2743056c-1d35-40a7-8d4b-c5ce070a14b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f2dbec-e2d8-4e16-ae35-0804c0131ec4",
        "cursor": {
          "ref": "004641f9-f779-458b-ad47-a1a0a1641258",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1a45504f-b211-4561-9ba1-7d3c9dbde85d"
        },
        "item": {
          "id": "98f2dbec-e2d8-4e16-ae35-0804c0131ec4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "15515628-d268-4345-b127-7863a29b55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6a185b-8b43-4917-ac5b-8b6d16a1560c",
        "cursor": {
          "ref": "de50d654-f2d8-442a-acb8-0d26fe5502d7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c6e1ccd3-7823-4f92-a06c-032dc1184169"
        },
        "item": {
          "id": "ea6a185b-8b43-4917-ac5b-8b6d16a1560c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "932ef42a-2e0d-4cca-84cc-8a05dbe87c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c456088e-34f2-493e-aaaf-0332bbe409f1",
        "cursor": {
          "ref": "9d74cf91-6cce-4a93-a346-f9b1ab149abe",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fefda652-2ff8-4d94-9b44-7729159ac0a0"
        },
        "item": {
          "id": "c456088e-34f2-493e-aaaf-0332bbe409f1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "520e81fc-c7e1-427d-9770-d9398157bdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98be5a7e-0b78-41bf-842c-57edcbfdf142",
        "cursor": {
          "ref": "1ff10da4-14a3-4ea5-95fe-8997dc7fe721",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5b80fe5b-c080-4a6b-b2ee-ed1e11590cbe"
        },
        "item": {
          "id": "98be5a7e-0b78-41bf-842c-57edcbfdf142",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "044d3a07-49ae-4a9b-bfb4-f2e6969cbfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78b4f4e-214a-43d0-80d2-e333d8a345d0",
        "cursor": {
          "ref": "acbf5470-26c5-43ec-bbf3-12f05dcfe944",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "674a8f72-780e-4864-be16-37b05737e481"
        },
        "item": {
          "id": "d78b4f4e-214a-43d0-80d2-e333d8a345d0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "704816e1-bb27-442d-a755-360cd0017247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ed7d3b-0238-4cf3-8a47-5fc5d2f6aa5e",
        "cursor": {
          "ref": "0a6f6df1-2500-4069-87fa-8bfeb18140f6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "95580305-ad9f-4136-ba99-1abf4dd2d3dc"
        },
        "item": {
          "id": "04ed7d3b-0238-4cf3-8a47-5fc5d2f6aa5e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "22a1dce7-6819-4500-9f78-7b2f53848383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebcaf83-a49c-4759-b941-2dc168417a3d",
        "cursor": {
          "ref": "fca7f8dd-5d57-46f0-809d-a1ccc90e677d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a9544a05-3345-47ff-956a-e4d87ecab639"
        },
        "item": {
          "id": "7ebcaf83-a49c-4759-b941-2dc168417a3d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "36dd864b-be97-4a7a-b623-9c2fd7baf312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3458adba-e088-454b-8533-19d3997422fe",
        "cursor": {
          "ref": "a6d1f6ab-c5d2-4416-a66b-816d7509b7a6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "be47ef92-e8a8-4e38-b732-924317ce1e5d"
        },
        "item": {
          "id": "3458adba-e088-454b-8533-19d3997422fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "85e48d43-b4af-429a-8e97-dbe8d63282b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0c64ba-b1b3-43a4-a532-a701c0acc18f",
        "cursor": {
          "ref": "0f6200f3-a193-4a9e-bec5-8151b6ca2e29",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "70b98667-8f26-4338-9a79-e599be5c90da"
        },
        "item": {
          "id": "7e0c64ba-b1b3-43a4-a532-a701c0acc18f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7b57e84a-25a0-4433-97ad-548686aec7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372a6491-5829-4b06-9b30-505940432044",
        "cursor": {
          "ref": "ecad626c-a3a8-4891-99cb-1ef7fa709009",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2ac35ce9-7923-41f6-a682-17d83e59b06d"
        },
        "item": {
          "id": "372a6491-5829-4b06-9b30-505940432044",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "69f71e5e-b70d-49f0-a45b-3f3b1ee2dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d89b395-a36b-430e-8856-4dd0393a33dd",
        "cursor": {
          "ref": "8ea83ec8-aca5-43c5-8977-092cd583489a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e57238a5-c075-4e87-ac45-bcbedfdcd889"
        },
        "item": {
          "id": "5d89b395-a36b-430e-8856-4dd0393a33dd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d6d142de-51db-4263-a770-59ca31aadd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa117d5-13bf-43ed-86dc-6a4879bb829b",
        "cursor": {
          "ref": "71c073c2-181e-4d58-90ab-4810f5efbe95",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "394ff206-6a0e-4ee3-a236-f753633a9e6e"
        },
        "item": {
          "id": "ffa117d5-13bf-43ed-86dc-6a4879bb829b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7396a74f-3b28-4ce1-ae81-5ec50dd718ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5d0c62-07a3-4108-bbde-b5d3b0b7466d",
        "cursor": {
          "ref": "8fe46b14-047d-4f8e-a766-7e10f738473f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc919cd1-e1ab-4fba-9f54-68b7fdab101e"
        },
        "item": {
          "id": "5a5d0c62-07a3-4108-bbde-b5d3b0b7466d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d7b61f7d-974f-4f07-b3e1-284c443d057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6826e7db-f9fb-4288-afe9-6f17e5687b76",
        "cursor": {
          "ref": "03facb6d-ec4c-4157-be39-cce0e36a4e63",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "60ed9c52-2e81-42e5-9c06-10cfc8b78d29"
        },
        "item": {
          "id": "6826e7db-f9fb-4288-afe9-6f17e5687b76",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b58ef10b-b9d8-43e5-894b-5d93e41fedc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad466ab1-6f8f-4366-8acb-d58d3b19969a",
        "cursor": {
          "ref": "e7aab212-047c-4f59-9df9-e650df349c49",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "852a750c-854e-4089-a64e-a726ec0c575b"
        },
        "item": {
          "id": "ad466ab1-6f8f-4366-8acb-d58d3b19969a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "05c10caa-a016-4f12-9ee9-6dfe564e131d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9780eacc-b878-4e2d-aecf-afd1127f4ba3",
        "cursor": {
          "ref": "4c3f682b-f05d-4377-8b8d-bd3d62f7dc46",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5a1b05d1-de82-41a3-87a8-2bfe6aed7c3c"
        },
        "item": {
          "id": "9780eacc-b878-4e2d-aecf-afd1127f4ba3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "db66f3a9-bcb5-46dc-acdf-8ac1fe1635b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1140a5ab-e8e5-477e-ae53-1928d89d38ac",
        "cursor": {
          "ref": "a323a2c4-2391-428a-bf4d-66c7d5e59558",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fcc2370e-d746-443e-bf3a-d6a7183b3d5d"
        },
        "item": {
          "id": "1140a5ab-e8e5-477e-ae53-1928d89d38ac",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b58006ce-e9a3-48f7-b000-80422ebf67c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abae70f-4fcf-4121-b353-403f447c5d16",
        "cursor": {
          "ref": "67a4e8af-c088-4f33-a42a-a32c7c74ec57",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4f039c1b-0067-43d7-81ee-298bb815e457"
        },
        "item": {
          "id": "2abae70f-4fcf-4121-b353-403f447c5d16",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "841442d7-5644-4bd9-9e44-51ec76d022fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de3b238-24a6-4385-bf57-1cfc8b26c08e",
        "cursor": {
          "ref": "33a0118b-0aea-4f22-9854-8d1443615222",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a21008bb-932d-48e3-944b-d65828d5c36c"
        },
        "item": {
          "id": "3de3b238-24a6-4385-bf57-1cfc8b26c08e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d8e3eaa7-0c8f-4909-b1b3-5fc776257063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a1da6-514a-45d6-b729-714d1302223a",
        "cursor": {
          "ref": "b4f16f7e-a29a-4512-8be1-970f7fc7d3cc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db83309c-6610-482d-8093-82afe0cd5635"
        },
        "item": {
          "id": "f28a1da6-514a-45d6-b729-714d1302223a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8b8dc7b-6b71-4e99-87c7-912cf64cf1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa4063e-976d-45e2-9707-a286f67240b7",
        "cursor": {
          "ref": "8a19919f-64fb-4205-a950-14ba8ac1c2d7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "60e333ad-a942-439c-a824-26e93a3e7316"
        },
        "item": {
          "id": "5fa4063e-976d-45e2-9707-a286f67240b7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f6017d77-1658-46f9-b3a2-2c3589914d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfb9fda-9f17-4873-af17-007347aa251d",
        "cursor": {
          "ref": "ae0ff352-a3cc-454a-9e5e-fd6c02ac9901",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "07faea27-af16-4094-b5c9-a72d83a81308"
        },
        "item": {
          "id": "edfb9fda-9f17-4873-af17-007347aa251d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fb7c6f56-738a-46ed-a641-694913a3d817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c358311d-b1bf-4013-b57f-c66c62e8bfdd",
        "cursor": {
          "ref": "0a374e7d-0d6f-4c1d-975a-be08e6ef9000",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c03e6150-a46e-467f-be76-45651eb5aee4"
        },
        "item": {
          "id": "c358311d-b1bf-4013-b57f-c66c62e8bfdd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "86b1207e-1baa-447c-b4d5-7d79627fb9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24ecdce-c747-49fa-85c1-1f7dfa05acf2",
        "cursor": {
          "ref": "fe7a1291-f840-4de8-84fc-90e255d85d92",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "64e4b21a-a23e-473e-a0a3-8073738c339a"
        },
        "item": {
          "id": "b24ecdce-c747-49fa-85c1-1f7dfa05acf2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "826e6f0e-91b8-4bd1-8895-f43212acc6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540a925-2280-469c-a79c-2ab333473862",
        "cursor": {
          "ref": "8438e416-7eca-41be-8578-64968c8c316a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0e00ec6-0b45-43ef-8b72-019b33fd49a6"
        },
        "item": {
          "id": "0540a925-2280-469c-a79c-2ab333473862",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "94cbaf51-5252-4bc3-9e7f-4c9c98ee91b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5280de57-7869-4fb8-a5aa-36f6a5678662",
        "cursor": {
          "ref": "8051435d-fd52-4762-b913-907a5f968ed1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3fcd5e95-c191-4746-a7a3-6fe29080dd64"
        },
        "item": {
          "id": "5280de57-7869-4fb8-a5aa-36f6a5678662",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f72ed4a7-44cd-4e26-9d7b-24fdefbf9090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f099fb4-15a4-4203-bfa4-67c6718cd170",
        "cursor": {
          "ref": "3b39bed3-5a37-487f-8180-0e1d03fe2e02",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "575b6b20-81af-467f-b992-c48427b9a4d7"
        },
        "item": {
          "id": "9f099fb4-15a4-4203-bfa4-67c6718cd170",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "02e677e6-fa87-439c-a615-84294adb6e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f011e1-ef88-4590-9343-8cf54208fa4a",
        "cursor": {
          "ref": "6cbad1fc-0ea9-4385-9e8b-fff62bbebd6f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "da56e6b7-d155-4aa7-b188-a1eeefc3d3de"
        },
        "item": {
          "id": "b3f011e1-ef88-4590-9343-8cf54208fa4a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1804f58b-5d9d-4a22-ac70-6d6febaaed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f41aee-fc3e-4bf6-a390-0b7ea43d134e",
        "cursor": {
          "ref": "6320d90f-0c9d-4e58-9c88-6cfcdae64e58",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f2c7180-f863-4c96-b925-740f1270495e"
        },
        "item": {
          "id": "c2f41aee-fc3e-4bf6-a390-0b7ea43d134e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b3e57cd7-5cc1-489e-99ba-7488ce086de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f396dcd3-800e-481b-985b-10e84632a21a",
        "cursor": {
          "ref": "79ef664f-3f79-4516-b515-15b80da96084",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "588026d7-612d-4ed7-8228-a0716c108e66"
        },
        "item": {
          "id": "f396dcd3-800e-481b-985b-10e84632a21a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f4f9eecf-b99f-486f-b9af-2d638d7086b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5732692-cbb8-498a-bc0a-6d1e3035d117",
        "cursor": {
          "ref": "efe4df55-12b4-49de-8600-58e270a07a7e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ec9f4c4a-decd-4917-b3be-0aba89e0be11"
        },
        "item": {
          "id": "b5732692-cbb8-498a-bc0a-6d1e3035d117",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "795e2f5f-5b79-4e46-8df9-82bce43de30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbf3faf-ff18-4589-896d-09a153677705",
        "cursor": {
          "ref": "c2d21d4a-9875-44a5-bbc8-7cb766f40422",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6ab0b257-f87a-491e-aca2-0c555c0e54be"
        },
        "item": {
          "id": "8cbf3faf-ff18-4589-896d-09a153677705",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3e70b004-16b2-4a7a-bbec-79fafca539e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d345aba-5b46-47f6-a848-8924aa42435a",
        "cursor": {
          "ref": "a31c7260-3487-4eb8-bf9d-a386abb56e81",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2c0342cd-7b0f-4040-9691-c0ac4bc71588"
        },
        "item": {
          "id": "8d345aba-5b46-47f6-a848-8924aa42435a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "80eff0d9-3409-44de-9c53-5d7bcaf06b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533b3cce-326c-433b-94a2-167f8b9bbc33",
        "cursor": {
          "ref": "11ba43e5-3959-44cc-af77-8fa3f396ff11",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "77ead0a1-0bf6-4280-b457-b553f2296a67"
        },
        "item": {
          "id": "533b3cce-326c-433b-94a2-167f8b9bbc33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "babf4c2b-36c1-4d91-b2c8-28fb3af0483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abdaaca-37e0-4353-9009-44d3bd618876",
        "cursor": {
          "ref": "441b9715-06a9-4294-905e-71fd711a51f0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10f5423a-8d07-4922-a54a-8a8ec555330b"
        },
        "item": {
          "id": "7abdaaca-37e0-4353-9009-44d3bd618876",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da6906cd-c243-4374-b171-fc0d33bb0dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b178ce60-899d-447f-aa15-9e7382b4704a",
        "cursor": {
          "ref": "26a61656-a18b-41bc-8b11-0a54e704f38b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d2a4bcb3-e81c-4e56-ab3f-f3206fea853b"
        },
        "item": {
          "id": "b178ce60-899d-447f-aa15-9e7382b4704a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "811aad90-d81d-4f6f-99d6-5125f663d0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62adf79a-0397-4600-a634-faa3b6d4b2d1",
        "cursor": {
          "ref": "bca24adb-6a00-42f7-ad72-f946226f5161",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f9c61f60-64ee-4e22-8865-e91fe21ae91b"
        },
        "item": {
          "id": "62adf79a-0397-4600-a634-faa3b6d4b2d1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b0e068b-c235-4791-b57c-adf9164bc16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4272d7e8-c6d6-4455-9b4b-354f9d56b7e4",
        "cursor": {
          "ref": "d9c498a3-b064-4ced-9615-572693a2f8b6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9eaec095-aa04-4e28-b2cc-6e2d6d0a2c8c"
        },
        "item": {
          "id": "4272d7e8-c6d6-4455-9b4b-354f9d56b7e4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ddbf4d0a-cf90-4b3a-9268-35b7767ed709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1e7ec4-012d-4c9b-8d20-7feeaa44b000",
        "cursor": {
          "ref": "53dcf58c-2502-4792-b571-2014b55fa966",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1b54cdd5-7f5d-4f53-90ff-d3b4de12146b"
        },
        "item": {
          "id": "fa1e7ec4-012d-4c9b-8d20-7feeaa44b000",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5a60161f-d09f-4542-ac2b-67217c7397a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b54959-44d1-4629-8deb-07dcf110de6a",
        "cursor": {
          "ref": "d34b75e6-b6ec-49f8-b46f-47a7f1962e6c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f8a4f751-04c0-4b11-ba73-046db03a9c1b"
        },
        "item": {
          "id": "18b54959-44d1-4629-8deb-07dcf110de6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "16c4b3b9-ea64-4c67-8db3-90afb5e9c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39bf5dd-695f-474f-904e-0785bf00bb98",
        "cursor": {
          "ref": "acc3f0a3-d30b-4f7b-b137-031f688dac6e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6967f899-09ec-4457-941f-d64d2b83a26c"
        },
        "item": {
          "id": "d39bf5dd-695f-474f-904e-0785bf00bb98",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f171a16f-23b6-424c-9284-9e581cd94e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7901b266-bf0a-4663-84ef-e9c15c080c9d",
        "cursor": {
          "ref": "f8bc4882-941a-41a3-8708-78c8aab0cbec",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "030d73f0-0f0f-4f08-ba72-d8916207a1ef"
        },
        "item": {
          "id": "7901b266-bf0a-4663-84ef-e9c15c080c9d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d2724862-01f8-446e-a95e-598dda6a52d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6d5325-ea8e-4ecb-a753-aedbe0d6fbb1",
        "cursor": {
          "ref": "37320cbc-f42a-41a6-82d0-615d21772de8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "307ffd57-6fb8-4eaa-8a1e-6f1edb60c952"
        },
        "item": {
          "id": "db6d5325-ea8e-4ecb-a753-aedbe0d6fbb1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2a66f2d8-c6e5-4c26-ae0b-8827857fde8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e41de67-cc14-4954-b3a0-2e7e62c05ffc",
        "cursor": {
          "ref": "6116a2af-2e6f-48ac-89dd-60e7a1ff6675",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9c17aa8b-476f-48f3-96ef-1bda52d0bf7a"
        },
        "item": {
          "id": "5e41de67-cc14-4954-b3a0-2e7e62c05ffc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "17d17166-1cba-493d-80ce-9f381833f4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc1fd68-2eec-459c-bb89-2b8f69572ea6",
        "cursor": {
          "ref": "96f030fc-eb9f-41d7-8e20-0ad64b3e783c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1166f646-cc85-4fd3-a5b6-81704dc33739"
        },
        "item": {
          "id": "5dc1fd68-2eec-459c-bb89-2b8f69572ea6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c187c19c-5735-4a23-b9a6-ac16b50d6986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091eba6c-f0a3-4d7b-86e6-4f83af6d9df5",
        "cursor": {
          "ref": "0f86fc6d-b5e5-4544-8beb-2186a7e4a057",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6bbf77d-6a35-47b7-97d7-5c4b5dfeacbe"
        },
        "item": {
          "id": "091eba6c-f0a3-4d7b-86e6-4f83af6d9df5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "97127ff6-aa5e-4af1-950e-3eb3a6580a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fce42c-a403-4fde-9233-5faf7e2db3fc",
        "cursor": {
          "ref": "74cdf0a1-9398-4868-ae15-5407fef851ec",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "33a1033b-f84e-4aa3-9fe5-6b35bfe14369"
        },
        "item": {
          "id": "96fce42c-a403-4fde-9233-5faf7e2db3fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e3e5e7d2-f557-4a12-af10-bad268c95eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194330b5-2d6d-413a-a189-3c1f2b5fb460",
        "cursor": {
          "ref": "9ae93245-2373-4c65-973f-4caefde9f3bb",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e05aa83b-ba72-41f5-bc13-d6f04132c67b"
        },
        "item": {
          "id": "194330b5-2d6d-413a-a189-3c1f2b5fb460",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e5e4f697-b2c2-416b-b2a6-3a26cbbf7000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9cce80-8c57-49ce-ac3c-b93819c5ea3c",
        "cursor": {
          "ref": "7b008c18-9133-4197-92e1-7eeec2b73b9e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "014a11db-7da5-4f5e-bb54-72827ee0f46b"
        },
        "item": {
          "id": "aa9cce80-8c57-49ce-ac3c-b93819c5ea3c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "79de32c7-b17d-4a17-8ffc-f657091f8d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b4f2fa-5472-4983-bb24-7467f88eece5",
        "cursor": {
          "ref": "b4dc5ef2-f896-40df-b6d7-db72f76bc06e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65769e6f-5f6c-440b-99c7-fe4ee934cec4"
        },
        "item": {
          "id": "02b4f2fa-5472-4983-bb24-7467f88eece5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "182bef4a-6a8f-4251-8b3a-63c71da5bf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98fa2ce-ffb9-4f1d-97ed-63ab7d321b9b",
        "cursor": {
          "ref": "8f0b2c9f-e82a-439e-a1ba-c89637be3ad1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8d0f5515-32bb-4111-8417-38ac58aaeb12"
        },
        "item": {
          "id": "d98fa2ce-ffb9-4f1d-97ed-63ab7d321b9b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bacfaef1-1718-4e47-8877-259a29833501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2764b15d-f136-4a1d-9e66-4284d664ecdd",
        "cursor": {
          "ref": "5fe729bc-3259-49d5-9b9e-3cf948184318",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f8897d5a-065b-4975-b79b-00d3fca64fc6"
        },
        "item": {
          "id": "2764b15d-f136-4a1d-9e66-4284d664ecdd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f55bca6a-ff74-4989-ac9e-747f534482d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167bcfc8-fdbc-4e3e-a6a8-e2a473983df6",
        "cursor": {
          "ref": "22b9f561-098f-4d43-b11a-18fbc2b4df72",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fd98da0d-99b8-41ee-9f3f-132acadf8170"
        },
        "item": {
          "id": "167bcfc8-fdbc-4e3e-a6a8-e2a473983df6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f1b2f0c7-2919-4490-a8dd-ef430dcb0a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322d7836-5d4d-4617-83bb-3a60f19294ba",
        "cursor": {
          "ref": "e21311c1-a988-4069-8da1-e95a1fd44cc0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "15a96ec3-80cd-4be7-9816-dabfd6c82d11"
        },
        "item": {
          "id": "322d7836-5d4d-4617-83bb-3a60f19294ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e83393c3-a241-4a83-b33a-8adc888a6984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ff1cc-c6da-4ffe-93f2-724783b10fec",
        "cursor": {
          "ref": "283a0923-da4f-49f7-abe1-fc00185bc568",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fcad5f9e-d7b8-4087-99ad-177055ba4fb0"
        },
        "item": {
          "id": "5f9ff1cc-c6da-4ffe-93f2-724783b10fec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dd60092c-6899-463d-97fa-601467dc1744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f132dc-b85f-4664-8a53-dc936dfc4b71",
        "cursor": {
          "ref": "73c52cd5-f2b6-4dd8-9eb1-2736acb8107e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22390498-f324-44e7-bb61-128e989381a3"
        },
        "item": {
          "id": "68f132dc-b85f-4664-8a53-dc936dfc4b71",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1587300e-678d-4580-92ee-c23556081d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7916544c-2e02-4591-8cf3-953e7f8d02a0",
        "cursor": {
          "ref": "af5738d2-aeb5-4719-8485-18dc572fa1b4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cbf6508a-a631-4f82-b51e-41b1f5d07b9b"
        },
        "item": {
          "id": "7916544c-2e02-4591-8cf3-953e7f8d02a0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "05e7f9b8-1205-4a4e-81e3-52856e246ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328babef-042e-4205-a9bb-08c21000994e",
        "cursor": {
          "ref": "bd0c81af-1d04-4ea1-9f42-040255549939",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4e0d4a93-8b69-402d-a60e-a967ebd2a3c2"
        },
        "item": {
          "id": "328babef-042e-4205-a9bb-08c21000994e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7e53c1b-3462-4be4-8592-c790b8cf068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439655e1-5a15-4261-9c95-3b88616ca947",
        "cursor": {
          "ref": "e32bc8f9-9cc6-4087-85fc-693be110b0d6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "59e7a5d6-e195-40af-baa6-520a41de174e"
        },
        "item": {
          "id": "439655e1-5a15-4261-9c95-3b88616ca947",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "743948d0-efb4-44c3-8a9e-ed2e5ebfb72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e51acb-3f7a-4807-9e78-57fa8b4ea6e2",
        "cursor": {
          "ref": "16324d5e-016c-4671-ade6-4b85eff8c554",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "535cb7eb-71e5-4236-8c67-17287a2bb0f6"
        },
        "item": {
          "id": "44e51acb-3f7a-4807-9e78-57fa8b4ea6e2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "331e836d-671c-424d-9e01-f369386a5e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57129172-3981-4add-8d9f-6d0401198945",
        "cursor": {
          "ref": "ef9fd550-0159-498c-a31b-2558ba235477",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dc7ee6c3-846e-4300-8eef-30e7faa461f6"
        },
        "item": {
          "id": "57129172-3981-4add-8d9f-6d0401198945",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b77d3743-5164-47f0-bc48-2fb012e3ca8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3eb334-4219-4cf4-aebb-a11b7c66c4db",
        "cursor": {
          "ref": "1a7edf8b-6758-4d8a-8aa4-315f0a4d7744",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6040a562-75cd-4bbc-b0a4-ce40dc7f97ff"
        },
        "item": {
          "id": "bf3eb334-4219-4cf4-aebb-a11b7c66c4db",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02fdb936-5a1f-4388-9a79-20bd9ec0ddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec04ea17-99ba-4bec-8e51-3075c908384f",
        "cursor": {
          "ref": "f787f7b4-3298-42ea-a076-878b5a0238fa",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "64aaae80-9f4e-4d06-84d1-215b9694cbcd"
        },
        "item": {
          "id": "ec04ea17-99ba-4bec-8e51-3075c908384f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1bb3a4a8-098a-4f86-8d74-01e1de99c49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90feea5-65e0-4be4-8ed4-907a613cc07f",
        "cursor": {
          "ref": "5805378c-8b04-47f5-9006-8832ee335dcf",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "efd2e2ed-58ec-47ec-bf43-09930cee5be5"
        },
        "item": {
          "id": "c90feea5-65e0-4be4-8ed4-907a613cc07f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9a9452d0-46ce-438a-bc6a-dcbf15bd43f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b1c059-bb6d-4466-b2f9-4599449e8d6f",
        "cursor": {
          "ref": "ed3206ea-45b7-4055-b88f-27a990434597",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2fbf1f00-2577-4444-bbc0-85d147013b87"
        },
        "item": {
          "id": "34b1c059-bb6d-4466-b2f9-4599449e8d6f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4ec19777-6ee0-4e9c-9e5a-795889cb541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b246af4-b31f-47d2-99f7-0e3fba6b39f0",
        "cursor": {
          "ref": "12ac8cd3-dc5e-4e13-b9fa-3933d87b80f0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2f40242e-df99-4b1b-9c72-207d1f8841b6"
        },
        "item": {
          "id": "5b246af4-b31f-47d2-99f7-0e3fba6b39f0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "70e2963f-ce3a-4bca-a8e7-3fafb2e9c426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9ec456-f58c-4b71-ab18-e14f70449a46",
        "cursor": {
          "ref": "5d07a045-4d4e-491d-9c17-a184ac0369ee",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8dbc7b4a-994d-4dad-8323-98e50dcdbc50"
        },
        "item": {
          "id": "da9ec456-f58c-4b71-ab18-e14f70449a46",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3d7baa29-a306-4836-9842-219709e863fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec93ad7-3b79-4e9d-abb2-71de5ea28cf7",
        "cursor": {
          "ref": "c000fe99-9158-417f-adb0-49af96f701e5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "faeb61ea-c7b6-4615-a135-6bee684af27a"
        },
        "item": {
          "id": "7ec93ad7-3b79-4e9d-abb2-71de5ea28cf7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd5bc058-b9e3-476a-8e60-ac9844000440",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37154fde-dcb6-4c19-ba72-f8243ac78512",
        "cursor": {
          "ref": "2b1f3c13-4775-4a98-be0a-d4c114993a4c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8bd84478-360d-4ea1-adad-593641b2046e"
        },
        "item": {
          "id": "37154fde-dcb6-4c19-ba72-f8243ac78512",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "eb09263f-cd66-49a2-93b4-2e85b364168b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "4c4092ac-4246-403f-8e2c-2972bb44d590",
        "cursor": {
          "ref": "018bcc0c-3ef8-4c47-a203-692d7a2ba86e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "349b0122-d7c3-465a-b084-dcf37a04eef9"
        },
        "item": {
          "id": "4c4092ac-4246-403f-8e2c-2972bb44d590",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a3d33bca-5f2c-4c39-82b4-2d818453cb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "80b47846-2289-4e86-ad08-d341cdb1a565",
        "cursor": {
          "ref": "e3401ffc-cd85-4b92-8657-1927082bacc1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "73d401af-94a2-492f-9ed8-39e4d9e7a1d9"
        },
        "item": {
          "id": "80b47846-2289-4e86-ad08-d341cdb1a565",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e7129141-13d3-4c70-8267-c0734d8e33ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9f14c6ce-f884-4de3-867e-d839cbd6f28d",
        "cursor": {
          "ref": "8f523739-d8e0-4e7f-b9f3-973f66290b8e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cde3f4cf-a4e4-44ab-bc0f-8c994d031021"
        },
        "item": {
          "id": "9f14c6ce-f884-4de3-867e-d839cbd6f28d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2ca072af-0819-450c-adcc-84447fe4271b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bc49a6a3-3e24-4331-8a79-5f11248f5b70",
        "cursor": {
          "ref": "b562f9c4-3a2c-4a94-a5d4-5ed702bb5bc7",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "94f1964d-37c4-41d6-b2ea-5bded0549cf1"
        },
        "item": {
          "id": "bc49a6a3-3e24-4331-8a79-5f11248f5b70",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6f84e6f7-bef0-49ec-8334-56eb6684abdf",
          "status": "Created",
          "code": 201,
          "responseTime": 10337,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aee532-64f9-4dda-8c6c-7899337997a3",
        "cursor": {
          "ref": "6e241c7c-fa8d-4f5e-9652-5c07186a0edf",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "580f60f3-1052-446a-9f13-db893065bd1d"
        },
        "item": {
          "id": "c8aee532-64f9-4dda-8c6c-7899337997a3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7e0833a9-458c-4099-b3ab-13e581a849e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "667b2d07-3568-495c-915f-d2e0404fa657",
        "cursor": {
          "ref": "3dc26016-093c-4dde-b95c-061dfef96cf7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0d78fed8-082a-4027-bca1-a1514d0bab09"
        },
        "item": {
          "id": "667b2d07-3568-495c-915f-d2e0404fa657",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c8dce97-023f-4cbe-90c6-be0892d678a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "95de7635-252e-4a57-99ed-def8abbbba19",
        "cursor": {
          "ref": "33e0a859-786a-4457-a06e-614569620f37",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b7eeef89-7af9-4b22-a7c2-04d820ee06e4"
        },
        "item": {
          "id": "95de7635-252e-4a57-99ed-def8abbbba19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4730d785-c183-4a19-a717-2943c044bd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b8a118-d1f4-4db8-bb38-1c40382f14bf",
        "cursor": {
          "ref": "0befe185-eab6-4858-ae15-19e835c7e526",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8d40eefa-0d15-4188-af75-c13d3e59564a"
        },
        "item": {
          "id": "90b8a118-d1f4-4db8-bb38-1c40382f14bf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d15856b6-cc45-4558-839e-7ed5639cccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce28498-aaee-4583-aaff-6e5fce7633c4",
        "cursor": {
          "ref": "742e6dd9-93ed-42ea-888e-72a996644ce5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c3cf02c4-15b8-4a4d-92c3-083977f8c81f"
        },
        "item": {
          "id": "5ce28498-aaee-4583-aaff-6e5fce7633c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2808aad3-9b22-4e98-8fac-10cc26e857f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a512ec-02a1-4de4-9ee7-d7d296954d1a",
        "cursor": {
          "ref": "b4ee8ae7-4bca-4731-8c21-87a88806e39d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "75559c91-a84f-4131-b22e-978c23b86599"
        },
        "item": {
          "id": "36a512ec-02a1-4de4-9ee7-d7d296954d1a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3443abfe-9ba4-480e-96c0-cdaf1b31d1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4685a5b8-4566-4cb8-a580-b84f25ca85c1",
        "cursor": {
          "ref": "86954a29-d648-4c17-abb8-fb7f27402184",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d2f2d844-320a-4d1c-a9d9-95b1cb56e3f4"
        },
        "item": {
          "id": "4685a5b8-4566-4cb8-a580-b84f25ca85c1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b5e2fd2-9549-4072-8388-6a2ba5797e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6bc339-e5f3-4567-b41e-d19bce4f38c9",
        "cursor": {
          "ref": "b838a28d-0638-45b6-b1e2-8c54886c41ff",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ad7ee68-0f9c-41b7-8bc5-ac51da9cd566"
        },
        "item": {
          "id": "da6bc339-e5f3-4567-b41e-d19bce4f38c9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a0bb509-0ac7-4e22-9ae3-480dcf97d800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b420cd21-d160-4e1c-9ca8-af1be9ba98e3",
        "cursor": {
          "ref": "2fc1a36d-8f98-42d6-beb8-56a28d4df5bf",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "56a3e5d8-a96d-4729-bad9-0c0e98b96d04"
        },
        "item": {
          "id": "b420cd21-d160-4e1c-9ca8-af1be9ba98e3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b341b75d-935e-4ec2-87dc-591dc5d4b04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1897d-ca64-49a8-b8ac-e87c3b26863e",
        "cursor": {
          "ref": "e49678aa-52b7-430c-a0cf-38035146daf9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4e969ad7-6356-4b6f-9801-0fa309c3d489"
        },
        "item": {
          "id": "3ba1897d-ca64-49a8-b8ac-e87c3b26863e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "39bbbdcf-8f82-4fdb-8c71-c77b80d77853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4de5218-ce35-47c6-a88c-b466eadcdd2a",
        "cursor": {
          "ref": "0aade413-b6ae-4aec-9d69-3594ac9eb68e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b982d18a-6127-4e19-ae82-dc3330221db3"
        },
        "item": {
          "id": "f4de5218-ce35-47c6-a88c-b466eadcdd2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8a798c7-2a0c-4d4f-b5cc-3973afbd54b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a19000-df86-4ed9-a041-dfe1900fa12a",
        "cursor": {
          "ref": "a4e7b2d8-810c-47b9-8500-4bd48620c8d6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ff966046-0924-4980-8eef-ff9501eacb4c"
        },
        "item": {
          "id": "87a19000-df86-4ed9-a041-dfe1900fa12a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "54a0e02e-d2ed-4c71-936e-b78cee5a3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c906ad1-e8f0-4bb2-9fcc-630ab5c9452a",
        "cursor": {
          "ref": "54cfcf90-265c-4850-9036-59eaea525d4f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "67204082-e616-4aa3-bbc1-fc4d8f430388"
        },
        "item": {
          "id": "9c906ad1-e8f0-4bb2-9fcc-630ab5c9452a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "653c434e-b645-44ce-976f-49dda0119302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07704ce-92da-4749-b96f-c2b632fca371",
        "cursor": {
          "ref": "c8c1b201-1bdd-4e16-8c43-f8ad93f9aa4c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e1d233f9-9985-4a81-b7ee-512b2443954d"
        },
        "item": {
          "id": "c07704ce-92da-4749-b96f-c2b632fca371",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c7621ee9-cb0c-4b86-a127-27f201012889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd266b4-c172-4bf7-85a7-a3da9ee295a7",
        "cursor": {
          "ref": "e1f9dd4f-ec09-4acb-9eaa-9abfbb8df49f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8dd476b2-0890-44aa-97c8-a9af5bb65be2"
        },
        "item": {
          "id": "1bd266b4-c172-4bf7-85a7-a3da9ee295a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "647d7f96-56ea-4067-a2f3-dd2fb761f49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ab6088-e59e-4853-b0a0-62583fc97fac",
        "cursor": {
          "ref": "34024dc4-ada0-4c8b-b8e8-abd396dcdcd3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "01296af6-e601-442f-bd94-05acac99dd3e"
        },
        "item": {
          "id": "36ab6088-e59e-4853-b0a0-62583fc97fac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e30c4ff-1549-40a5-98b8-1f4ac2b6a317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab1519-f20e-4eb1-95e5-50bcaa459692",
        "cursor": {
          "ref": "3a9fa985-bc86-4fa1-b277-189d96b8cda1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "94291b42-8de1-49a1-8521-58de99530b40"
        },
        "item": {
          "id": "60ab1519-f20e-4eb1-95e5-50bcaa459692",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "436e310e-7cd5-486a-a165-933c34bec026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1694afb8-c22f-4c29-b436-a3f7b345714e",
        "cursor": {
          "ref": "ac00f63b-28a0-4f8f-861c-c1f6eede8fec",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2a221dda-8336-49ad-80c7-96355cafc77c"
        },
        "item": {
          "id": "1694afb8-c22f-4c29-b436-a3f7b345714e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae367cd2-afc5-4ca0-886c-868c8d534996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b66096f-7138-4923-ad46-eab310c74b49",
        "cursor": {
          "ref": "194cb7bd-a447-4f56-bcc1-981ea3b0d758",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "08fd1886-24fe-4c9c-8d5f-abd4fc59ea0b"
        },
        "item": {
          "id": "0b66096f-7138-4923-ad46-eab310c74b49",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "28d06e60-8b82-44fe-b173-1824621abe79",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "b479d18b-12e6-4c87-8c71-2579e9188dd2",
        "cursor": {
          "ref": "d3b7a67c-b3db-41fc-94ae-6131ec6ce2d9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "236602d8-814d-4fc8-a2a5-d83e1319ffc2"
        },
        "item": {
          "id": "b479d18b-12e6-4c87-8c71-2579e9188dd2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "be513cf3-d46d-4736-bec4-068e577d4e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0f10e9-ea6e-4e18-b8f6-9b7d93711838",
        "cursor": {
          "ref": "17edbf01-7e3f-4440-8a99-cda643e6432c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f681f843-8507-4e5c-8af7-92e8386b9d53"
        },
        "item": {
          "id": "af0f10e9-ea6e-4e18-b8f6-9b7d93711838",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1b649f2b-61e8-4403-8c81-6a096b702698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa119432-d825-49ac-8873-6ec40edec174",
        "cursor": {
          "ref": "a64c372e-7dc7-4160-b080-d5f1be1c2079",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "39c9abaf-6072-494c-9da6-da53a6b3b017"
        },
        "item": {
          "id": "aa119432-d825-49ac-8873-6ec40edec174",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "113e3eb6-1576-41b0-8158-2563aab43397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02daaae9-efd1-4aab-8047-0aca56a5b759",
        "cursor": {
          "ref": "414f6b02-a37f-4ec2-a5a4-a68be70516c1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5f7c89a-4d7b-449e-8258-a6120ffda01f"
        },
        "item": {
          "id": "02daaae9-efd1-4aab-8047-0aca56a5b759",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3fdbbea0-7582-41d3-a17f-4702d6ace2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa26729-c4c4-48cf-9a74-9498bbcb202a",
        "cursor": {
          "ref": "4d66868e-3ea9-4c9b-82e6-db611fd56a13",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "33510abd-76b0-43b2-9981-7b19a2e963d6"
        },
        "item": {
          "id": "cfa26729-c4c4-48cf-9a74-9498bbcb202a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "03c7d155-8841-4322-9d6b-d69d884a096b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68dd949-a3b1-4e84-9d2e-872c015e3707",
        "cursor": {
          "ref": "f1942697-ec35-4608-8edc-66e299dca897",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf8b0267-2817-4787-bc8a-01bf7fa73e12"
        },
        "item": {
          "id": "e68dd949-a3b1-4e84-9d2e-872c015e3707",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "824f76bb-fb42-4e16-94e2-561b94b487c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3e8c4-e969-4598-b4eb-ae83a8fc6380",
        "cursor": {
          "ref": "9f86dc17-0eaa-46fe-a1de-8fd24192dc5c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4fafcd62-2c7c-4067-ac34-79521896d22f"
        },
        "item": {
          "id": "1fb3e8c4-e969-4598-b4eb-ae83a8fc6380",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07de1815-cdd3-4749-9078-df4fe205f516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5c7706-c563-442d-8594-a3b306086344",
        "cursor": {
          "ref": "8742f454-c9fa-42ad-aa2f-674337f38467",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c59fc654-e88b-4d15-a146-258026c7a759"
        },
        "item": {
          "id": "ee5c7706-c563-442d-8594-a3b306086344",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49501eec-542a-4e84-8950-9d79dc1e58e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9d047c15-7101-4a60-aae4-be45a550b38b",
        "cursor": {
          "ref": "312aa1d2-223a-49f8-8cbd-ebb9d73b842f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7d628a85-dab5-4e56-9500-59f2c334b7f1"
        },
        "item": {
          "id": "9d047c15-7101-4a60-aae4-be45a550b38b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8eaba622-eabc-4eb5-be00-7fa02e1e4a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf475f49-209c-4da3-bdac-981d9a1c3311",
        "cursor": {
          "ref": "6ad21955-fc52-4d65-9e9a-c3c348c8e449",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "430e4d51-7053-47f0-89eb-d0da6f7974e4"
        },
        "item": {
          "id": "bf475f49-209c-4da3-bdac-981d9a1c3311",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "417c61c4-2e58-46e8-ac5b-45aa9b3109d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db14cbfd-510b-4d98-a452-4538a329c006",
        "cursor": {
          "ref": "51b433a7-b935-4480-9b3b-de8f03c657db",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aed3435e-abe5-4834-a030-d796a05c036e"
        },
        "item": {
          "id": "db14cbfd-510b-4d98-a452-4538a329c006",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6eae3357-1c6a-434b-84e3-63919298e9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de34bee-911c-4068-af16-5eabe88aad14",
        "cursor": {
          "ref": "3bbb964c-4ddc-4823-8f9a-35314ddd27f2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e9dce05d-600a-40ac-b3e7-57af612a237c"
        },
        "item": {
          "id": "5de34bee-911c-4068-af16-5eabe88aad14",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48eaa571-8d1c-41bd-91bc-f7a54513324f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ede02f-0164-4abd-a2a4-b89ac033547d",
        "cursor": {
          "ref": "c2c1645a-1385-43e9-96dd-ac404d7c0385",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2845c372-93cc-4ed6-b5bf-109a240ff6a5"
        },
        "item": {
          "id": "51ede02f-0164-4abd-a2a4-b89ac033547d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecc2d9de-aa23-49c4-ba3a-cb7f00256d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffcb184-fb3d-47ec-b212-5066461daf52",
        "cursor": {
          "ref": "2a7866aa-3d9c-422f-91c2-09022844ce40",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bbd884a0-74df-4435-809f-a2857c80faa3"
        },
        "item": {
          "id": "bffcb184-fb3d-47ec-b212-5066461daf52",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99037a92-98bc-41fe-be49-73a4fb5d9342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde60a47-4724-4a87-bf66-7502a9fae58d",
        "cursor": {
          "ref": "3b292dc4-f17d-4523-80e2-a0f0cb655140",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "51245770-bd04-497c-a8f5-894387014f97"
        },
        "item": {
          "id": "fde60a47-4724-4a87-bf66-7502a9fae58d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2bd9f1d0-7c08-4af2-85c0-43a3bd9f7e0d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "dc1174a9-75fe-47aa-a189-c64be39bab3f",
        "cursor": {
          "ref": "3fdbb5e0-93d4-48c8-89d3-5b7875ab9a1c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "81f8c72b-90e6-4b79-8f8a-381be7dc3f85"
        },
        "item": {
          "id": "dc1174a9-75fe-47aa-a189-c64be39bab3f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf877e01-13dd-44aa-a6e4-67dbf6d49086",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363eded5-9444-446a-b601-1366dd12e83a",
        "cursor": {
          "ref": "f34af656-21b0-4ee8-8b10-b874fe96d3f6",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f43e155-d1ac-47a2-8dab-25cc2cc956c8"
        },
        "item": {
          "id": "363eded5-9444-446a-b601-1366dd12e83a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9f59cb10-6d34-4fa9-b308-e727907f0aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf801086-d72a-46c2-8797-82b072b40ad4",
        "cursor": {
          "ref": "5280b99b-a4fa-4037-88cd-1a415bc5e949",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "88bab6ba-33c8-44b4-931f-7badbfd40796"
        },
        "item": {
          "id": "bf801086-d72a-46c2-8797-82b072b40ad4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b061c26f-2929-4c8e-8453-e270710fe368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a53142-61eb-41e4-872b-da8e4ccac20c",
        "cursor": {
          "ref": "2c13e38b-9eb7-4bf1-8d95-c1ffe210addc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3335d376-fa3e-4a8f-bfd0-46764dcfe399"
        },
        "item": {
          "id": "90a53142-61eb-41e4-872b-da8e4ccac20c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5a0a9ac8-f9b0-49a9-b164-7fa8616a47a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85199e05-0428-4478-b3f2-e16228335fbb",
        "cursor": {
          "ref": "a6ff627c-37db-4a91-a21f-7be98c154cd7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dfaf2be3-1d7f-4e3a-b957-b1904b84cf9a"
        },
        "item": {
          "id": "85199e05-0428-4478-b3f2-e16228335fbb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "584ce8ed-9f04-46f9-a7e1-4d37f76d7c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899807a0-2525-45ab-9ed9-dfa4b161aa90",
        "cursor": {
          "ref": "a1cd67f5-88ab-4d07-9ab3-8e678fb3dd84",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "44c89d3e-5620-4092-83b8-462ccaa77e78"
        },
        "item": {
          "id": "899807a0-2525-45ab-9ed9-dfa4b161aa90",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "269b7910-9e4a-423d-b188-3ed1f75e90b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ff449-823e-4ac3-bd42-5254136b24a1",
        "cursor": {
          "ref": "de39e82f-d024-4f08-9aef-97b17c621add",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ef0dec55-6637-421b-ac77-b19dd12fe5af"
        },
        "item": {
          "id": "3d5ff449-823e-4ac3-bd42-5254136b24a1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "592d34ac-c629-4952-a866-7a097afb98fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d1af36-9790-4ab5-89e3-dad31c181d30",
        "cursor": {
          "ref": "6b16d845-f0c3-4182-b460-35bc3af0d377",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1871c404-b07a-492d-a523-90e1e7da51a2"
        },
        "item": {
          "id": "c0d1af36-9790-4ab5-89e3-dad31c181d30",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4704010-3bf5-4b03-8398-8bf5bf167059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1b1bd8-f914-439c-98ad-052f80c54d27",
        "cursor": {
          "ref": "549c66b4-f435-47b5-812f-7f4d9bcc823c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4da1387-a364-4fcd-a5b8-cb63211c234d"
        },
        "item": {
          "id": "9d1b1bd8-f914-439c-98ad-052f80c54d27",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f464efa-31d3-4c93-8afb-dc97dbdce843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f5c195-275f-4d53-bd1b-b85a3a3fa071",
        "cursor": {
          "ref": "cbd99166-7433-41d4-a4f1-8711784c0f2b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d936e3a0-8793-44bd-9856-adaa4f1492ba"
        },
        "item": {
          "id": "51f5c195-275f-4d53-bd1b-b85a3a3fa071",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2587e116-03cf-436a-8e32-98a520e0425b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb35ed99-034b-4cd8-8f0f-56d7f3539837",
        "cursor": {
          "ref": "c8c4d846-1ade-40b8-9a07-941f35393685",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ac5fd376-3412-442e-bbc8-453f98f1f1c6"
        },
        "item": {
          "id": "fb35ed99-034b-4cd8-8f0f-56d7f3539837",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "45ddab20-31a6-42e3-87bb-9cae8f4afdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ee5bf8-9d3c-4d8f-84e3-cbc8253c2c95",
        "cursor": {
          "ref": "9cd1b69b-e657-4352-af85-55db60307e65",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ae4a774e-25a4-4153-a6fd-55bc74cc7b3b"
        },
        "item": {
          "id": "b0ee5bf8-9d3c-4d8f-84e3-cbc8253c2c95",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a842e42-1370-4f02-8e89-ba6c9171b97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ec8070-573b-4bdf-923e-03a0e4a2adc7",
        "cursor": {
          "ref": "853b5814-b685-4851-99c0-36cf17e8fa39",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c9f4f5fb-dcb4-4763-8e79-efd046f146b6"
        },
        "item": {
          "id": "15ec8070-573b-4bdf-923e-03a0e4a2adc7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "976c2aa7-70bc-46f1-a442-8f7a825ef770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0df8629-26a5-41bf-a89d-51f1c8bd97b1",
        "cursor": {
          "ref": "a8c2fd21-29ef-48ff-8c03-b29bb07a5def",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "16315211-748d-45fc-ad6e-2fd8b93f0eb1"
        },
        "item": {
          "id": "d0df8629-26a5-41bf-a89d-51f1c8bd97b1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "379b32f5-b22c-49b8-bfee-16d17f4982c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3a2270-08cb-418e-86f1-20c7f2cffa4c",
        "cursor": {
          "ref": "0893377e-86b6-4f40-b1c6-0c3dab269128",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5da8ef68-d618-4f3b-8bb7-780858371f76"
        },
        "item": {
          "id": "7d3a2270-08cb-418e-86f1-20c7f2cffa4c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9a41a2af-d4aa-47f4-b792-2b4c7067157f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfa1460-13eb-4175-a6ef-73c8c288507b",
        "cursor": {
          "ref": "6fb68752-cf7d-4c3c-90fe-2fec4947d6c7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4760ba47-8b7e-41a3-9f0e-72e21e5323bc"
        },
        "item": {
          "id": "2bfa1460-13eb-4175-a6ef-73c8c288507b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b6c3726c-551e-449a-b7e3-20004b7ac706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e54168a-a703-4826-ae05-6a41a25b2348",
        "cursor": {
          "ref": "0b0a6e01-712e-4b6e-9f99-12c5c0528592",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "79b90d66-76dd-411f-ab98-8a605004e916"
        },
        "item": {
          "id": "7e54168a-a703-4826-ae05-6a41a25b2348",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae4aa7c6-bbbc-47a9-a87d-b9a0cae47384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32074cd9-0636-424e-b992-a602138e103c",
        "cursor": {
          "ref": "1e1714d2-228c-4520-8d1b-38074a1a2158",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "63a283ea-3fff-4c93-ac58-7c7708302cdb"
        },
        "item": {
          "id": "32074cd9-0636-424e-b992-a602138e103c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bccb50bb-60c3-4958-996a-72a9d870cdc0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "6e546c1e-08df-4338-834a-3057e0338658",
        "cursor": {
          "ref": "4bfeafc1-1f8c-4fb2-aec9-8d16205e627c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a2085929-b753-4251-9a58-8fcbb2468663"
        },
        "item": {
          "id": "6e546c1e-08df-4338-834a-3057e0338658",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "87846812-20f9-4ab7-8e2b-86c2686a36db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8507a207-c554-4d5b-9920-e9dc1277a9bc",
        "cursor": {
          "ref": "8992e112-0454-49ac-a331-2b63a19202fa",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d39abccb-6784-4a65-84a0-232d13a766b7"
        },
        "item": {
          "id": "8507a207-c554-4d5b-9920-e9dc1277a9bc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a9300db-3fc2-4e1f-902a-49d1e0054e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42afe674-b81d-4538-aaea-49ab67209f0d",
        "cursor": {
          "ref": "38b30bb7-2f74-4002-a46e-12c94aea6dd6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5457b1e6-18f0-4e8f-a5b3-268f32e49eb9"
        },
        "item": {
          "id": "42afe674-b81d-4538-aaea-49ab67209f0d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9daaf4a-cabe-4d3e-b822-c114d182dc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a9bf17-968f-4929-ae04-0c8cdefe5573",
        "cursor": {
          "ref": "c6a8d16d-989e-4966-bb34-55879547a133",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "14d14abe-3298-4f5d-bd9e-57a294c0b7ea"
        },
        "item": {
          "id": "b9a9bf17-968f-4929-ae04-0c8cdefe5573",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dfe66412-a6f7-44eb-96c7-8f7325bc2158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c88681-ed14-40a4-bd84-5e49285f41ad",
        "cursor": {
          "ref": "8cf63093-cfa1-4b07-8c0f-8bedd5b84665",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7a87617f-ac0d-48cc-b6cd-0a0802baa97e"
        },
        "item": {
          "id": "88c88681-ed14-40a4-bd84-5e49285f41ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dd46393e-a9dd-49da-891e-d8fd525319c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf1f4be-2997-474c-8e62-a8f0805b7826",
        "cursor": {
          "ref": "4151ebe4-8466-481f-9960-587f66a9095f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9d0b0c8c-39ad-43e3-8730-a40e7eb2b5bb"
        },
        "item": {
          "id": "6bf1f4be-2997-474c-8e62-a8f0805b7826",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed59df57-41db-4670-927d-320ad4de4aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff0bc9c-f8f1-463c-8e35-98125378d707",
        "cursor": {
          "ref": "0c08a5c5-eb4a-45d0-89e1-0bf1966cc669",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "67669e83-1e0c-4cd9-9961-227e9e9dff9b"
        },
        "item": {
          "id": "8ff0bc9c-f8f1-463c-8e35-98125378d707",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b027deaf-0284-4791-b4e7-025a5092eea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce05ff-b30f-4256-a04f-b5ba15957859",
        "cursor": {
          "ref": "c66cac23-ab78-48d0-a40d-c3a7f779d00f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4c7923f8-5f26-47b2-83c6-6b5449dcb7eb"
        },
        "item": {
          "id": "b2ce05ff-b30f-4256-a04f-b5ba15957859",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "900379ad-2e5f-41c5-901b-7465a0fc9404",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 127,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "b534cd7a-f93d-43d4-aa93-795cdfbff68a",
        "cursor": {
          "ref": "7acb69f9-1bbb-48a9-8805-53b4bc5a50eb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c9a063f7-a593-44db-8119-bc2b638a85b5"
        },
        "item": {
          "id": "b534cd7a-f93d-43d4-aa93-795cdfbff68a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b1044c5-2bb8-48d8-b442-49322524eade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316395c9-b68d-4e72-ac61-e51810f9aa90",
        "cursor": {
          "ref": "e2f1f712-c281-4ffb-99e9-61bbd786fb4e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "186ce446-a424-4475-b738-9bd1822b225b"
        },
        "item": {
          "id": "316395c9-b68d-4e72-ac61-e51810f9aa90",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4fdd407c-bd58-4d06-aac9-0d7633b20217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f38c112-be56-49bd-ba47-5cb7caf2d40e",
        "cursor": {
          "ref": "da7a4774-064d-43e4-bcc0-7c274562fa99",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6cd39623-a69d-4644-b9cf-33865a2bb507"
        },
        "item": {
          "id": "5f38c112-be56-49bd-ba47-5cb7caf2d40e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6d011c04-c4fa-40fc-bcff-09a3e53b3925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e68f02-1180-46ce-b13f-ebc44ea0a78b",
        "cursor": {
          "ref": "9a578450-3b20-43e8-b130-7acc2e741756",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c550528a-ad6b-4fcb-beb2-e50ec21a005b"
        },
        "item": {
          "id": "a6e68f02-1180-46ce-b13f-ebc44ea0a78b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "05fa6bf5-9da5-4bf2-9278-22b67fa2f9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c02f098-60c0-4151-85c9-213df09c03b7",
        "cursor": {
          "ref": "4024382a-26b0-40eb-b389-d1e79a3cf562",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7495da91-4f96-43d3-b299-407daf7e8c95"
        },
        "item": {
          "id": "6c02f098-60c0-4151-85c9-213df09c03b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df538341-b468-479b-851e-794a6eee3082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e121a9f0-bdf3-44f6-bd3f-76d761fc92e4",
        "cursor": {
          "ref": "9cb2c956-7b5d-4b46-b55e-ec7281a79f7e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3b32ea03-f980-41c0-af68-80fa80056454"
        },
        "item": {
          "id": "e121a9f0-bdf3-44f6-bd3f-76d761fc92e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "56d227df-7842-4848-b7e5-69eecf956daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f99710-e226-467e-8fab-1a58fe98e65a",
        "cursor": {
          "ref": "cdbe39ae-5998-4779-8195-a64f13cb4884",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "22ba9eba-c68d-4e19-bf9e-facae081f356"
        },
        "item": {
          "id": "14f99710-e226-467e-8fab-1a58fe98e65a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "feac17f2-7b34-448d-aa7f-be466f53eb2b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "2cea8baf-3dce-4d1c-81fd-86ceee94ba32",
        "cursor": {
          "ref": "4424dc1b-ff37-4022-9d30-be11171715e0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4934178c-00da-47c6-a9f3-9e2a75b64955"
        },
        "item": {
          "id": "2cea8baf-3dce-4d1c-81fd-86ceee94ba32",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "41e2f047-7989-4425-9df4-b72326455886",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "a39b890b-0e11-4a49-a568-950f54a58cf0",
        "cursor": {
          "ref": "12ae0eaa-e3d9-4544-b0fd-4b7e815de9bc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c65bc42-85a2-4506-a3ef-e2a07bdc23cd"
        },
        "item": {
          "id": "a39b890b-0e11-4a49-a568-950f54a58cf0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5bcc8d5e-76dd-4073-8aef-82e913c908ac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "661b0ab8-81fe-42a0-ae3c-d09d0b0e67fc",
        "cursor": {
          "ref": "e288efb3-91da-4692-a992-32e60db426fe",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5af5943a-c7b5-4e4b-8e80-ec0b952f2959"
        },
        "item": {
          "id": "661b0ab8-81fe-42a0-ae3c-d09d0b0e67fc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "95c57a29-23ca-433d-82a0-a6cebcca6d8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "3f9b4fa7-2d03-475a-a4a0-46eb475fe412",
        "cursor": {
          "ref": "6e9807fc-429c-4987-b677-2d022ed448e7",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "fb97ad2e-7d9f-4633-a65e-f0ee481ee7c2"
        },
        "item": {
          "id": "3f9b4fa7-2d03-475a-a4a0-46eb475fe412",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5741cd00-50b1-4c62-a052-aea8d08c6bbd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "975969f4-bc4f-491f-a410-60df05fe7f10",
        "cursor": {
          "ref": "2a9fdc88-b63d-4fa4-8cbb-68148e92d23f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ca347825-af40-4c04-adf1-e0bb33aa7fca"
        },
        "item": {
          "id": "975969f4-bc4f-491f-a410-60df05fe7f10",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "17092542-7e79-46a2-8e4c-5f73f97a96d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "2ff07bd7-5be4-444c-bea5-59856b085075",
        "cursor": {
          "ref": "bf456829-dc50-405a-9563-6db33c3df002",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "813da13d-b1f3-49af-a7a6-0a719995f14d"
        },
        "item": {
          "id": "2ff07bd7-5be4-444c-bea5-59856b085075",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c850936-c12b-4542-9880-d44f63f545a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef7a917-7f7a-4167-bdb7-f3cf13b654ad",
        "cursor": {
          "ref": "7b759ec7-3a49-4606-9461-6c74a1a8cf0b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a2d4ee29-586e-4ddc-b839-955fed93a4c2"
        },
        "item": {
          "id": "9ef7a917-7f7a-4167-bdb7-f3cf13b654ad",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fa08cc16-19e4-4427-9b01-5dffb5af8c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794f8be-bc33-438e-9bbb-dd8c06534aa0",
        "cursor": {
          "ref": "ce88cf16-9612-4b06-9151-ca963c676a33",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a53236f-0696-455a-9676-059d3c358d9d"
        },
        "item": {
          "id": "6794f8be-bc33-438e-9bbb-dd8c06534aa0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "54a95870-8112-4a80-a352-4f6f32349d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5483cfeb-7304-486f-b458-950d6d81314e",
        "cursor": {
          "ref": "a92c1cbe-b500-43b6-98a3-09e83cc556b2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "58e0cec6-0cc7-4818-81bb-c363faeb4209"
        },
        "item": {
          "id": "5483cfeb-7304-486f-b458-950d6d81314e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "907787fb-43e0-4163-b0e7-ee38d4042ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae62e1c-c49b-4cfb-a285-f337bd470d02",
        "cursor": {
          "ref": "7d034931-0678-4764-8594-74a3f611af82",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bcd8545f-a203-4b56-8913-73ea97bcf9e5"
        },
        "item": {
          "id": "6ae62e1c-c49b-4cfb-a285-f337bd470d02",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "57508579-058e-4bc8-b6b3-cefb4575a674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16900c1-da7d-4480-a66f-16f10f85771e",
        "cursor": {
          "ref": "d88180a6-697d-48ad-b4c9-5ce547b8a6bc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "71a5cd33-2286-4094-9c00-22b1e8e180cd"
        },
        "item": {
          "id": "b16900c1-da7d-4480-a66f-16f10f85771e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a9912d10-76a9-4972-8518-9c5cdb93091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c761e9-f21d-474f-a623-ee0220544afe",
        "cursor": {
          "ref": "505eba63-f602-406d-a8fc-6423e5581996",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7d740e11-e69e-496b-ace1-5a772500af82"
        },
        "item": {
          "id": "a2c761e9-f21d-474f-a623-ee0220544afe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "739892c6-0b62-4a97-b0c9-5c8c4710f163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26742fd2-4d1c-48da-879f-91602d2706ad",
        "cursor": {
          "ref": "69b09ac8-7af3-4f22-bd85-2f6d53f7b916",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2cf1a499-873b-47f9-81a0-1128876ec7b6"
        },
        "item": {
          "id": "26742fd2-4d1c-48da-879f-91602d2706ad",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "635e7100-7295-4304-83de-2d3c1b8f07b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2305962-9a82-4761-960c-66301c3b792e",
        "cursor": {
          "ref": "7c848001-aa3f-4693-b571-29e4ec45ca40",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "327b4ca1-cd58-4733-b077-302b79bed38a"
        },
        "item": {
          "id": "b2305962-9a82-4761-960c-66301c3b792e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9e3328d4-5d8a-435b-ad75-6fde894a78a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a876bb1-360d-44a2-afef-40a97402989a",
        "cursor": {
          "ref": "fa65799c-3ad2-4de8-83ce-3f1752ab82a5",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e9f900ff-c029-41ca-bf9b-ff8db16d27e3"
        },
        "item": {
          "id": "0a876bb1-360d-44a2-afef-40a97402989a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "daba2310-8090-46fe-9bc6-fcf54d14b176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae49c68-8d4f-48c3-9082-40f75d402f02",
        "cursor": {
          "ref": "a8bab503-e22b-49d5-bf1e-3c5ab39e9e50",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "088e247c-b92b-423c-aa60-8f8c447f4082"
        },
        "item": {
          "id": "bae49c68-8d4f-48c3-9082-40f75d402f02",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "765f5d6f-3081-4d34-bd2d-130ffe8a42a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96668fbc-c6c7-48eb-809d-da1bec9ea239",
        "cursor": {
          "ref": "be508d86-413b-4800-92be-43cf0a71f90e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0547483b-1906-4afa-9716-09a993dc93de"
        },
        "item": {
          "id": "96668fbc-c6c7-48eb-809d-da1bec9ea239",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "60b08522-9851-497b-b3b7-664e2081c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f9f83b-2e83-4dd9-86d8-4083ee62500a",
        "cursor": {
          "ref": "7f431c96-06bd-4cc5-9d72-abef51936363",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7b6bd2ff-0c0c-41c5-a0f6-f77bc12b3940"
        },
        "item": {
          "id": "f2f9f83b-2e83-4dd9-86d8-4083ee62500a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f4a42ee3-0371-4f7d-b889-f30b62367468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c8aef-04d0-4901-8f19-e124edcf39cb",
        "cursor": {
          "ref": "793fac95-1ecd-42aa-8d83-84016c938b60",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a17f5b3c-af58-414f-b39e-766dbbf98602"
        },
        "item": {
          "id": "aa7c8aef-04d0-4901-8f19-e124edcf39cb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53032475-38a5-4e54-a812-50d7353691ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b19fc48-7606-4967-926f-37079f2eaedc",
        "cursor": {
          "ref": "3211c400-93e1-4138-b5fe-dbe4982b0d7f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e95fe4ec-26b3-460c-8c32-021874879e96"
        },
        "item": {
          "id": "6b19fc48-7606-4967-926f-37079f2eaedc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e1d9c907-db8f-446a-8c4c-99606e75b8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07ac95a-84df-44a3-b3e4-87f1921f7634",
        "cursor": {
          "ref": "a893e35a-da34-4c9d-822a-8adb264b4b02",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed5f5020-04c0-4290-a0e1-c358d86a5650"
        },
        "item": {
          "id": "b07ac95a-84df-44a3-b3e4-87f1921f7634",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5c680a45-6684-4493-8315-b0683f7a3d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fcd88c-ead8-44f5-bf5b-26d9b9897552",
        "cursor": {
          "ref": "8e722eab-077d-46d7-b903-1d474cf464f1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2bc190ab-4961-45e1-a6b9-9e5a234e6f91"
        },
        "item": {
          "id": "23fcd88c-ead8-44f5-bf5b-26d9b9897552",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f2d8bef4-ca2c-4c71-9c02-df393822848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bd55c0-e449-4dd0-b316-8261f23a157c",
        "cursor": {
          "ref": "7c233b28-336a-4f29-9d1b-233d296ea676",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "342cce3e-014a-4eac-9053-9a9762acda87"
        },
        "item": {
          "id": "74bd55c0-e449-4dd0-b316-8261f23a157c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d0ba15a1-a8cb-4d8c-9ad0-4c87ff6ec757",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "9d191681-a804-4a6d-89f6-341729c7e4e0",
        "cursor": {
          "ref": "4dac95dc-6ae0-42c3-be80-2ccc49a3e1dd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a98d8c44-fe9f-4944-bfaa-80d80924132d"
        },
        "item": {
          "id": "9d191681-a804-4a6d-89f6-341729c7e4e0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "decc0baa-dab1-4ce7-9055-733528858e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cd0b46-9317-45a9-b9bc-cc0b08b2bd76",
        "cursor": {
          "ref": "68c9cad6-7730-47c6-80af-b7643317141a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3229e4e6-8697-4285-8abd-da30def25ddf"
        },
        "item": {
          "id": "d6cd0b46-9317-45a9-b9bc-cc0b08b2bd76",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3aeace10-acdb-4fa0-95fd-e155743a36ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79435f1-d602-4d74-a40d-e98be3ec357a",
        "cursor": {
          "ref": "1bb8cc8a-d69c-4b77-8931-e76d0efaf6b8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "99b7567f-5623-479c-8796-118fc5b7ae83"
        },
        "item": {
          "id": "a79435f1-d602-4d74-a40d-e98be3ec357a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "efd8007a-fb64-4f1a-825d-93da7b409847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c61466-1ad6-4694-ab1a-1a99719346b6",
        "cursor": {
          "ref": "1152de32-6a9f-4e59-a207-71832b34eb17",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "87f6c08c-4ca2-4fc6-95a0-29e9e115f667"
        },
        "item": {
          "id": "e9c61466-1ad6-4694-ab1a-1a99719346b6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "226e127a-45bb-4813-a4ce-7e109bf88883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d361b2-f432-4f49-b297-4ee52d32b56b",
        "cursor": {
          "ref": "46a9267c-3b56-4630-9b02-1ecad7bf13e7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7464d905-e5e4-42fe-bb2d-6de75af6f754"
        },
        "item": {
          "id": "28d361b2-f432-4f49-b297-4ee52d32b56b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bbe07f84-d21e-47f6-87f8-68193fe6efe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66f67d3-0a24-43b1-be50-a63f4889b892",
        "cursor": {
          "ref": "d3363843-2e34-4647-b2f1-5c61c2db0bf4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a0cb9c62-215d-418c-955b-c81827ffd590"
        },
        "item": {
          "id": "c66f67d3-0a24-43b1-be50-a63f4889b892",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "aa2b549a-8d32-4058-8559-0afa5a1835db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21a8aa3-970b-4688-82a0-390dd8c592fc",
        "cursor": {
          "ref": "3198bf38-0249-4761-8735-c966c3ceee64",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f3b3714b-9797-4761-baea-86ecec91d4c1"
        },
        "item": {
          "id": "c21a8aa3-970b-4688-82a0-390dd8c592fc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "062d1d17-19b9-403c-a2cc-8f2c5ab7712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b99ba24-3f0a-4742-a95f-041154b0f8fa",
        "cursor": {
          "ref": "a71df576-0b03-4aa9-b701-d2d06b89e043",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e3108a2c-0391-4872-b43a-380bfef26a99"
        },
        "item": {
          "id": "5b99ba24-3f0a-4742-a95f-041154b0f8fa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6e2a171-d8bd-4a4c-b16c-e706bb427716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b1f1e-a3bf-421c-b7ab-effc6633089c",
        "cursor": {
          "ref": "ada9d004-e64e-4c28-a554-2f60e6df83af",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ab80b482-fd05-43c7-9120-0b20aec06132"
        },
        "item": {
          "id": "511b1f1e-a3bf-421c-b7ab-effc6633089c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9265db35-88d7-454a-a510-26fee1a39ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d8246e-079e-4df2-b7a5-2fefe11912bb",
        "cursor": {
          "ref": "1ec1da5c-f3ca-484d-aa7c-4a2e33489f6c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "26d86080-6481-4c9f-9a78-3b964790a4db"
        },
        "item": {
          "id": "43d8246e-079e-4df2-b7a5-2fefe11912bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5893be25-ca1f-420f-a953-795497ca06f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f255a-98ad-4f08-97fd-3b057facb369",
        "cursor": {
          "ref": "7b7954bc-2e1d-4bfe-b1ec-f8a573661283",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "99accda4-2001-409d-8964-5490fd3f989f"
        },
        "item": {
          "id": "fb5f255a-98ad-4f08-97fd-3b057facb369",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ab7373b-4629-4e65-93ab-5b94ed63a290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea35c05-7fe8-4525-acb9-f132e34b418e",
        "cursor": {
          "ref": "a675273d-abfc-44f8-8dca-386794f54dd0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "048cafd5-105c-4b6e-b29a-95e679b9337b"
        },
        "item": {
          "id": "2ea35c05-7fe8-4525-acb9-f132e34b418e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c48228ac-d3e0-4751-bfc7-9cb570fdcafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb31c5f-b77f-4000-9ec1-5e3d2413f538",
        "cursor": {
          "ref": "5dabc16f-3c1c-455f-998e-d0be1cfad814",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6394898a-cefe-427d-a4c0-d445e4185688"
        },
        "item": {
          "id": "bcb31c5f-b77f-4000-9ec1-5e3d2413f538",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dec29cec-cadf-4fa8-8dbe-e6d25baf99d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7548b2a1-44ca-477f-8d50-18ff520e5029",
        "cursor": {
          "ref": "ad5b8e0b-ac07-4f4c-9bdb-07d44d6875ae",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0bafa832-2cd7-4795-b758-1206617876f8"
        },
        "item": {
          "id": "7548b2a1-44ca-477f-8d50-18ff520e5029",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "260b9faf-0d32-467b-aede-6bf23ae987f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3be9a6-6f51-4249-9ea2-051d3589549f",
        "cursor": {
          "ref": "c14ce687-eda1-4e4c-b14c-107cdae346f8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b85e5a0b-d21f-45d9-8280-a140f1e7113b"
        },
        "item": {
          "id": "ec3be9a6-6f51-4249-9ea2-051d3589549f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "51ea1579-7928-4196-93f8-baee5288924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783e1ea6-9d7c-478b-b6dc-b5523a3b182a",
        "cursor": {
          "ref": "6e600946-8b19-4661-b0d6-05ec9361a093",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f76bc1ce-a9eb-4342-966e-6bcdc4afa90a"
        },
        "item": {
          "id": "783e1ea6-9d7c-478b-b6dc-b5523a3b182a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "665c040e-7643-4c9d-9156-0fbe4646baf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24f3e08-fcfe-4613-89dd-c13c7541061d",
        "cursor": {
          "ref": "d16ddd63-ba04-49cb-a429-8c48911ba7da",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "860f0ded-502d-43a3-9494-2a5780afcb74"
        },
        "item": {
          "id": "f24f3e08-fcfe-4613-89dd-c13c7541061d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2531e601-0bef-4185-b30c-1fa73ee195da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f319fc9-c18e-454a-8f1d-674d9d404d18",
        "cursor": {
          "ref": "37a4b48d-3c80-4d7e-85f6-7126e75e15cc",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "33af47f1-2327-471f-b825-ec8c160dc0c9"
        },
        "item": {
          "id": "7f319fc9-c18e-454a-8f1d-674d9d404d18",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a9f336e3-cee7-4842-b9c6-349eb854f2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588c8920-0209-4984-a8a1-9db2ef86975e",
        "cursor": {
          "ref": "7b7ac610-d018-4c81-bded-85893e399404",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "34dedd0a-0ab7-44f6-8d6e-9949b00fd95b"
        },
        "item": {
          "id": "588c8920-0209-4984-a8a1-9db2ef86975e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "abd2b645-6968-4c68-8555-69ccc01df6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b9695-6a9b-48bf-acd4-f938d18c1277",
        "cursor": {
          "ref": "cad002c8-95dc-404f-84a9-930a996e45c8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "914d83f0-90aa-4fea-988b-504330426518"
        },
        "item": {
          "id": "ed6b9695-6a9b-48bf-acd4-f938d18c1277",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c1673fd-e675-4488-b6b1-21a4c75cb567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc306eb6-f3a2-4a6a-a423-39d4ff5e1938",
        "cursor": {
          "ref": "bdf077e3-3a22-4090-bff1-97e1b281a135",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9c04a7dd-4301-43bf-bdee-0fa6e8f301dc"
        },
        "item": {
          "id": "dc306eb6-f3a2-4a6a-a423-39d4ff5e1938",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20a70c1d-c8ad-4f83-b0d8-9a5906ccbce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c614df2f-fcb5-446b-8062-da1ff29f797e",
        "cursor": {
          "ref": "5d398d82-55eb-4f36-a93a-323d0838cf0b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c321352b-e9ad-4a3a-ae10-1edae4489359"
        },
        "item": {
          "id": "c614df2f-fcb5-446b-8062-da1ff29f797e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0c24b6a-25d7-4093-8117-b7bfd1db1770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c966a265-80fa-4b3e-851a-ed5a27409b6b",
        "cursor": {
          "ref": "e2bd7e1b-9570-40b3-8d1c-d8291ddd97f0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "25d93e73-e088-4901-bc80-e81099783479"
        },
        "item": {
          "id": "c966a265-80fa-4b3e-851a-ed5a27409b6b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4a631626-8410-4706-8f2e-e106bce821da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46589000-ee00-4b2e-9d0c-874d2a3c1c6d",
        "cursor": {
          "ref": "609208a1-999b-4115-a3e7-cc15aba33e52",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4a777fbb-3d57-4955-8906-6b627f25843e"
        },
        "item": {
          "id": "46589000-ee00-4b2e-9d0c-874d2a3c1c6d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2b238d05-41cb-43dd-9bb2-b0c6096bc254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91fe6d3-c26c-4441-b81e-3ac65c4a26a2",
        "cursor": {
          "ref": "6a223e32-5319-4338-ba7a-343b94cdafac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "69b4fecd-db89-4d23-9762-d0e4cebf055a"
        },
        "item": {
          "id": "c91fe6d3-c26c-4441-b81e-3ac65c4a26a2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f12984ee-247d-489b-bd99-7e809f770238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2419ac-b0d9-4981-b77f-dffb15c2b51b",
        "cursor": {
          "ref": "236dd2b6-bc8c-4ab0-84a3-427ddc4e50a5",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "47eaaa58-63c6-404c-859e-1f8fb38bc604"
        },
        "item": {
          "id": "7b2419ac-b0d9-4981-b77f-dffb15c2b51b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c3e4bea0-ac5b-4113-81ef-224316247d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac31e1f-a704-4c06-b55b-62136d24b9cf",
        "cursor": {
          "ref": "5dfa8860-b857-4bd6-9b7d-32b56aac9f82",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd71a663-829a-4a6d-a937-73fe0084c1f9"
        },
        "item": {
          "id": "2ac31e1f-a704-4c06-b55b-62136d24b9cf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "73d9c900-42ee-4beb-882f-91f4b111a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e8f130-e7f0-46a5-9457-99b013266d92",
        "cursor": {
          "ref": "4f0c3769-7c3b-4cf7-84c8-6cb4d2b3bc08",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5b668629-67bc-4933-9f03-28c09cc70c54"
        },
        "item": {
          "id": "65e8f130-e7f0-46a5-9457-99b013266d92",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5099dd1c-96d4-4dae-9188-321916b11075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5a0f0-e0a2-4425-8256-13c3e0dc0260",
        "cursor": {
          "ref": "6f5b2637-a977-4e4c-a160-c91afabf3537",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ea41c375-dd22-423a-9d91-7fcbd84ccdef"
        },
        "item": {
          "id": "77f5a0f0-e0a2-4425-8256-13c3e0dc0260",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bb82f4f5-ebc5-4e63-834e-da3ae4aefddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d285d106-1142-43e0-a750-60e46e4fd364",
        "cursor": {
          "ref": "2154e8a8-167e-4874-9253-43956cae2554",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0762c126-7911-4218-a44f-f8daeae83123"
        },
        "item": {
          "id": "d285d106-1142-43e0-a750-60e46e4fd364",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8f4f59e9-9a91-40e5-a4e9-7880ca6ddd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81b4c10-f4e8-498a-b8d0-9aac8a668851",
        "cursor": {
          "ref": "b116707f-a64c-40c3-9a1e-1960c2af298b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ada51331-af79-47f5-8ac9-1074737122ea"
        },
        "item": {
          "id": "e81b4c10-f4e8-498a-b8d0-9aac8a668851",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4852a7d6-3168-4922-a438-518ba1f087d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35df667-b692-45bd-81bd-aa281a464392",
        "cursor": {
          "ref": "af3f5439-3587-45c4-b093-28dad61e4e5e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e03252c7-77ee-4615-9eb1-9be12173c728"
        },
        "item": {
          "id": "e35df667-b692-45bd-81bd-aa281a464392",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1faa311e-582e-4a41-983b-cad124519acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb432841-cd8f-4a75-b5cc-bd0fb1028393",
        "cursor": {
          "ref": "41cc10ec-fe63-4e1b-8517-228ddaaa1b27",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0d424693-6a81-4831-aba7-1aad7c34bb22"
        },
        "item": {
          "id": "bb432841-cd8f-4a75-b5cc-bd0fb1028393",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "86836430-1d6f-4e9b-a23f-b00a97df5f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3b1c62-7e80-4ffb-8ede-696fe63a46fe",
        "cursor": {
          "ref": "1cdc2c75-bd5e-4673-ba38-1265a5199083",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ca40611d-d29a-472a-bfee-7a74e8a3e86a"
        },
        "item": {
          "id": "4f3b1c62-7e80-4ffb-8ede-696fe63a46fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3c7eccd4-2fa7-4b06-beea-937192e6f744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15651f77-8dca-4025-aae4-79f263f67893",
        "cursor": {
          "ref": "8b546c52-ebf7-4249-a26f-c1ecfdbb82b9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d64187ae-8da2-4780-a2e7-c0ddbe768dbe"
        },
        "item": {
          "id": "15651f77-8dca-4025-aae4-79f263f67893",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "564496e7-4840-4833-a815-25b117111a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdb2fcf-3fac-4b7a-9bfc-bf3c765ef44a",
        "cursor": {
          "ref": "7b2feebe-b723-47b0-af5e-7228d16f104b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "56d0d954-cc77-4d09-a211-3f163e6e24e3"
        },
        "item": {
          "id": "acdb2fcf-3fac-4b7a-9bfc-bf3c765ef44a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16eecff6-d43a-4301-82cb-5ed0250a0d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2907bb-1a37-4cec-9745-275f77196156",
        "cursor": {
          "ref": "aa22ff33-a220-49fb-9205-59721a14678b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b11bfe1b-dc4b-4285-9282-300d7b42f6c2"
        },
        "item": {
          "id": "de2907bb-1a37-4cec-9745-275f77196156",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3eaf5451-fdc8-404e-9587-ed0aef96b667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe1e7b9-b35e-4780-b871-7c5092abe835",
        "cursor": {
          "ref": "9cacd1e5-4c45-448a-8603-eeb3cdb0ba7d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a696b18f-dbcb-4a9f-bffa-acba5d96ab11"
        },
        "item": {
          "id": "2fe1e7b9-b35e-4780-b871-7c5092abe835",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "633ac23b-3cf2-4358-b5d8-0542f4313ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb825025-7e47-45f8-92cd-51084cbe6b74",
        "cursor": {
          "ref": "4a2bfde1-53a9-4837-9839-e82453ac2419",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0621fbfc-b138-4064-974f-9295f8c540d4"
        },
        "item": {
          "id": "cb825025-7e47-45f8-92cd-51084cbe6b74",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8bf14864-ec68-4c48-b9df-20af85a6d464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399f8e5c-4f73-4059-a950-c8100ddc3b0b",
        "cursor": {
          "ref": "ec4eb2af-f5e1-4884-b48b-fbaf9135a0ae",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "14958ccd-f0dc-440b-9d53-0d124c68ae18"
        },
        "item": {
          "id": "399f8e5c-4f73-4059-a950-c8100ddc3b0b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a5b1c8f3-aeda-45ce-a36e-68f87da80262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e8b3b1-626e-431a-91b4-09e14548e2e0",
        "cursor": {
          "ref": "1cb98adf-d1e8-470d-b571-1bc44882458f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f147f6b5-5e6d-4ffd-ab41-cc60078858fc"
        },
        "item": {
          "id": "59e8b3b1-626e-431a-91b4-09e14548e2e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bf991c3f-cdbc-4bc1-b704-a55407c0da3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ddff3-7974-47f9-b136-0075803741c7",
        "cursor": {
          "ref": "53bd30af-de5f-4f32-9e7e-b48be92dd393",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f550ca64-3580-4665-b4d0-d90f99c0f28b"
        },
        "item": {
          "id": "8d7ddff3-7974-47f9-b136-0075803741c7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7238fe7a-4d83-42be-bfc3-eb828580ab7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e21081f-08df-4820-a350-ce088c3a4527",
        "cursor": {
          "ref": "377481cb-e340-49ea-b6a5-f35eeade1900",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f8f2a1a-ec22-4afd-b154-958b28cb0887"
        },
        "item": {
          "id": "9e21081f-08df-4820-a350-ce088c3a4527",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ee5f10ae-9411-42b4-9320-943df1600bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae037aa-9fde-44d8-9fee-4219ceb1a044",
        "cursor": {
          "ref": "ba2c333e-2795-420b-ac46-38171b778cda",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c4731eff-0e06-42c7-bb2a-f8a7908a0a1f"
        },
        "item": {
          "id": "5ae037aa-9fde-44d8-9fee-4219ceb1a044",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cf2ff7c-88eb-4c45-9210-e28d7d72bb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed916557-8207-4fdc-baeb-b3fbd80c1d53",
        "cursor": {
          "ref": "10d679c4-a701-4508-a4ea-c45fe23b696d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c6e22700-d548-41ac-87cd-7b2330d23c10"
        },
        "item": {
          "id": "ed916557-8207-4fdc-baeb-b3fbd80c1d53",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "def38c46-e26b-4089-bd4c-fad648b55ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2130bea6-7107-41f0-93bb-665e00d9d608",
        "cursor": {
          "ref": "9011a4f9-5a59-48ec-9d5c-0143ea82a742",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c5abf5ef-6a86-46c4-9436-d9c28c2c5ad3"
        },
        "item": {
          "id": "2130bea6-7107-41f0-93bb-665e00d9d608",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1715f1e2-88bd-48fc-852d-b96f8f8f0fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed705b-01c3-4405-92c4-1541e29485f5",
        "cursor": {
          "ref": "6f265b78-0f80-4b0a-ad4d-19bff50290ac",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e21cb660-8645-4257-a84b-e95b5d41bff5"
        },
        "item": {
          "id": "cbed705b-01c3-4405-92c4-1541e29485f5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0138412-dc66-4980-af77-1672803b7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b730f170-8260-4ddc-bbbb-aed16b9b0a50",
        "cursor": {
          "ref": "0dcb2d49-acc8-483a-8329-1ac1a7b0a880",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5c2a695d-b7e4-4209-bc1b-e54e96f2affb"
        },
        "item": {
          "id": "b730f170-8260-4ddc-bbbb-aed16b9b0a50",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ddb9bb4a-02dd-4b42-9cb9-1cd72d7a832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075f7ba5-4400-4acd-9da4-260585b56591",
        "cursor": {
          "ref": "5fde4820-fcbb-43d4-989a-b6c8240b3ac2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0ded31fc-6d86-459c-8aab-3b261f110742"
        },
        "item": {
          "id": "075f7ba5-4400-4acd-9da4-260585b56591",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c41a5fa1-cc10-48d2-8590-ad99d0a73a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0a0351-b25a-40f7-a525-ca32985b09f1",
        "cursor": {
          "ref": "e9042b1b-10fa-4bc5-8357-14868c7c6b78",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71ec23a0-d5e3-43f3-9ec3-2816f142fdda"
        },
        "item": {
          "id": "ca0a0351-b25a-40f7-a525-ca32985b09f1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c5a5dd70-47a9-42d6-8261-a43e144d32fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249666b1-1c04-43de-9e66-ac1eaa105da9",
        "cursor": {
          "ref": "79e0d844-6609-4d70-9e7c-7d00d95318a1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4d1f974a-b1e0-4fb6-997e-632aecfd44ee"
        },
        "item": {
          "id": "249666b1-1c04-43de-9e66-ac1eaa105da9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "617cfe4c-1859-4d27-b50e-622a5c0bb326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffef69ab-c489-49b1-bf79-b4be13713e58",
        "cursor": {
          "ref": "b19d9370-ab1a-4951-b5e9-5aafe082cecc",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05c2b1e6-feba-489d-8428-a9b06dc90484"
        },
        "item": {
          "id": "ffef69ab-c489-49b1-bf79-b4be13713e58",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a8dde11c-5c81-4680-9ca7-7f546edffa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037eb43a-ae89-4de6-8f58-783d8355a179",
        "cursor": {
          "ref": "309f2241-3c88-41a1-98bf-c292c7bbcec0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b00e4ef3-2c1e-4a1e-ac5b-1479c2a7e184"
        },
        "item": {
          "id": "037eb43a-ae89-4de6-8f58-783d8355a179",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d63348af-a39d-451e-b919-6e805168e28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8a7a6d-91e9-4b93-82a9-81ba42e551f6",
        "cursor": {
          "ref": "272d290b-addc-4b3e-acde-107ebcb1d0cf",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1cc3999-dbcb-459a-9895-6b85bad49ff0"
        },
        "item": {
          "id": "5b8a7a6d-91e9-4b93-82a9-81ba42e551f6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4eb68b5d-e0f2-47c4-95c8-f28d3fd5ada6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb73c983-87a3-402c-b1eb-f6e26e7505ee",
        "cursor": {
          "ref": "3c91390f-fecb-4f99-b7a0-fc2288cba039",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e7b9f214-57bd-43c5-b5a7-0c906f10d5a9"
        },
        "item": {
          "id": "eb73c983-87a3-402c-b1eb-f6e26e7505ee",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c390df66-731f-4d47-b0a4-66fbbf6febb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb938f-f743-4938-a6d1-f6328efbf762",
        "cursor": {
          "ref": "5bc007e8-608a-4b74-ba27-825d9f24c3cd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "17622233-726f-499f-b696-1413593cbe81"
        },
        "item": {
          "id": "defb938f-f743-4938-a6d1-f6328efbf762",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "468dec56-99f5-4258-87e3-a991fdba2bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76b895c-d842-4d1b-a927-ebd0c3737233",
        "cursor": {
          "ref": "2165b41c-7c05-4e4d-8a2a-eca257ff6c49",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9aae7a4e-4587-436e-a6be-0bb6106843a2"
        },
        "item": {
          "id": "e76b895c-d842-4d1b-a927-ebd0c3737233",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dbf97824-3215-4e92-8176-ff71bb4b114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42af7c7-86fb-4228-9604-6116483da00b",
        "cursor": {
          "ref": "eb5be258-c20e-43df-87e1-346b2cc91443",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b6c0adca-c540-4d80-afe0-aa0b2a79344a"
        },
        "item": {
          "id": "f42af7c7-86fb-4228-9604-6116483da00b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ec0d13c4-7407-4d67-91df-05acceea0dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43c6096-2aca-406e-b6dd-c86ca41ef396",
        "cursor": {
          "ref": "f53ac20e-b117-45bc-a05b-f0f6334bcb2b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0d91c6df-bbab-49bf-a728-b69012e55eae"
        },
        "item": {
          "id": "b43c6096-2aca-406e-b6dd-c86ca41ef396",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c4ef0bd1-452b-4b1a-90db-253333c0124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b820f6e-d1d3-4245-9d8f-78232338290a",
        "cursor": {
          "ref": "2744e58e-59dd-4d93-b01b-214a2d87fe1a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0d6be936-5574-44ba-a1b0-5e667defc4e2"
        },
        "item": {
          "id": "9b820f6e-d1d3-4245-9d8f-78232338290a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7da1a46c-a51d-4d8d-a9f9-f881e5e1b6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102a54d-e5d2-4ddf-98d3-5ae393b68759",
        "cursor": {
          "ref": "b2fe4005-bd16-4932-a209-613065037ad6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e0fa43d6-5e30-41b6-9124-dee057fedfaf"
        },
        "item": {
          "id": "4102a54d-e5d2-4ddf-98d3-5ae393b68759",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d756fdf2-dffa-40f5-8806-792b37f28fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c351375f-9a29-43b0-9705-69609fecfcd7",
        "cursor": {
          "ref": "b6af0d8f-46e0-4436-a8bc-5654bea2a764",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b1e7f5e2-8a03-4f31-a452-d7dab5d85003"
        },
        "item": {
          "id": "c351375f-9a29-43b0-9705-69609fecfcd7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5b0242b8-5303-4c1b-926f-e13abeffc210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42080576-6f4d-4899-ae26-2924bbab8282",
        "cursor": {
          "ref": "10a05eda-4b30-4af8-a480-112dec8a587a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "95b20cd5-2fa1-47ee-a326-d083aea7364b"
        },
        "item": {
          "id": "42080576-6f4d-4899-ae26-2924bbab8282",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "47ef343f-ee6d-423a-b59a-2d77b4da959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db1737-d407-4e2c-92d5-b5d2d531592e",
        "cursor": {
          "ref": "782dd8ca-642f-4597-94fd-fcb4abcd42bf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5891841e-0e9d-4e5e-ba37-c088a2769902"
        },
        "item": {
          "id": "59db1737-d407-4e2c-92d5-b5d2d531592e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "05d2d4a5-9489-4f7c-beb8-f57e6d4712df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b942dbc-8e1b-45e6-92c2-ee5800dc4899",
        "cursor": {
          "ref": "3626519a-2cc0-4523-a967-d771481a1898",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a7f95554-6472-4bfb-9e27-22e5ef669ab2"
        },
        "item": {
          "id": "1b942dbc-8e1b-45e6-92c2-ee5800dc4899",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b81826e8-3ea7-4599-abd6-c3960fc35446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6238f5-8889-4431-88cc-f4ac1049dbf5",
        "cursor": {
          "ref": "c1cb63e3-36e3-4470-8ef1-e6a5d3bfc0be",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b67d8195-fc91-487c-ace2-590aeaab57ca"
        },
        "item": {
          "id": "2c6238f5-8889-4431-88cc-f4ac1049dbf5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3d6da588-b740-4a81-bcd7-c75c914cf2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a8aa97-61f7-4fc2-956a-b2e2309cd5c6",
        "cursor": {
          "ref": "5549e0a0-5af6-41d4-b97c-29b920e92483",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "27c195ff-c4ca-4a83-ba42-e577928e2fe4"
        },
        "item": {
          "id": "86a8aa97-61f7-4fc2-956a-b2e2309cd5c6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4519bbf8-1c91-4ad9-ab8d-d09586f9bec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0e9bab-0b74-4004-a0ca-e07542a02812",
        "cursor": {
          "ref": "ff88bc36-84d4-4eb7-b4ad-111352072677",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "35053bb3-cbd5-439c-9c45-faa80d981cdc"
        },
        "item": {
          "id": "9f0e9bab-0b74-4004-a0ca-e07542a02812",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8d5fee59-42df-47e5-8976-0de0efa50ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3767d4cc-834d-4eeb-a807-9652b1e2ba66",
        "cursor": {
          "ref": "011264fa-0230-475d-b5c2-3e9a00165a36",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f19feb55-1fb0-4b1d-8773-0e6b366032a0"
        },
        "item": {
          "id": "3767d4cc-834d-4eeb-a807-9652b1e2ba66",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8bcb2fab-9971-4126-a234-2c96f83b6347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435aec9a-4926-4fb2-9529-96e1985ad4e7",
        "cursor": {
          "ref": "973cd4c6-0cf1-4beb-8266-a841b950963c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1d3d0eb5-fe66-4524-8112-77e53cf93281"
        },
        "item": {
          "id": "435aec9a-4926-4fb2-9529-96e1985ad4e7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "daefa724-8977-421f-aa02-6893b8a01718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74f39f-43a2-4dc5-90ce-ed993b3c5a6a",
        "cursor": {
          "ref": "5aa02327-c4b9-4c27-aa1f-cf3f59bd9016",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "599b2852-7732-4654-84e5-1a5a2a27ce29"
        },
        "item": {
          "id": "6e74f39f-43a2-4dc5-90ce-ed993b3c5a6a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5cb2b851-6aad-4583-a036-e849342f3d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765b733f-f5c8-4935-b46b-3d1660cce104",
        "cursor": {
          "ref": "7e3b79fe-60da-453c-836c-0a00160cfaf6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a37cbcea-9cb0-4132-bf48-c3a005034586"
        },
        "item": {
          "id": "765b733f-f5c8-4935-b46b-3d1660cce104",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "33060d5c-3eb3-4671-b38d-0c2351beed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87428f-46b3-4df5-9e97-a4879d9e4383",
        "cursor": {
          "ref": "24f3a3f7-7986-472c-8468-3478dd981130",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d5114fcf-04b4-4cb0-af6a-2771331a614e"
        },
        "item": {
          "id": "6b87428f-46b3-4df5-9e97-a4879d9e4383",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "aee565ef-0d2a-4ec8-861f-2eac129d322a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72b1e94-c6e1-439c-8faa-26598cb6c570",
        "cursor": {
          "ref": "658ee023-1108-446a-8547-66219fb1bce9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c37e4bb7-08e7-46fa-b74f-363b70ecd9fb"
        },
        "item": {
          "id": "b72b1e94-c6e1-439c-8faa-26598cb6c570",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c0e19c6-6178-488a-9795-c9f7cadbfe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1810d183-1d03-49b4-a045-6525e96a3c79",
        "cursor": {
          "ref": "9ca62234-8651-415b-83e6-08922986e907",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ee09e0cc-fac2-444c-ab12-033a41cf8eae"
        },
        "item": {
          "id": "1810d183-1d03-49b4-a045-6525e96a3c79",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc5437bf-c905-4e62-a943-1120aa6e8036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6838659-74e7-4d8e-a344-76487d92595e",
        "cursor": {
          "ref": "6647e5d8-0f5d-4d9d-8aed-751e63a045d7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "38177a80-f1e8-434e-87f5-8d593729fee1"
        },
        "item": {
          "id": "d6838659-74e7-4d8e-a344-76487d92595e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "018b2077-d866-486f-95e1-9fc1c9e451c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84867fca-80f8-452f-ba26-2cf5bd99bba0",
        "cursor": {
          "ref": "cd31839a-315a-4503-9c21-7d6b2d5ea45c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3a686b00-7eef-4525-86f6-0e81f213e91c"
        },
        "item": {
          "id": "84867fca-80f8-452f-ba26-2cf5bd99bba0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da050eb4-561c-4d2d-a618-5d3874974d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a7cab1-41bd-426b-a5a2-bdbf8479f917",
        "cursor": {
          "ref": "c2317f65-9954-4c8b-b098-d167214aeb2f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0a4aab86-a043-408e-8366-e20fd74d2b6d"
        },
        "item": {
          "id": "35a7cab1-41bd-426b-a5a2-bdbf8479f917",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "73222547-e77f-48cf-ba1e-200096a7ebd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a206da0-374b-450e-9396-a78c233916a1",
        "cursor": {
          "ref": "9ee80981-0116-4fc1-b9a1-db3304abb956",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "93d402e7-135c-421b-a7af-f00c6df7f05c"
        },
        "item": {
          "id": "5a206da0-374b-450e-9396-a78c233916a1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9211171b-0822-4160-9fa5-cd4bf07480d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93474f2-6958-4aaf-a731-e92801041466",
        "cursor": {
          "ref": "aeb66a8f-d89e-46e6-a420-9c5890d9df26",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1d8acfa7-07ed-4606-8f8f-a032339a90cf"
        },
        "item": {
          "id": "b93474f2-6958-4aaf-a731-e92801041466",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f202b899-68a6-4be9-a2be-8d01ca735130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4985f04f-1c86-4856-a260-09ef647af4dc",
        "cursor": {
          "ref": "3e92c202-44fa-4f0a-97e0-80a3350e843e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ee41f5de-424e-43e0-8207-bc9f8b3061f6"
        },
        "item": {
          "id": "4985f04f-1c86-4856-a260-09ef647af4dc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e4b9eea2-db14-411d-a875-07e698f25f15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c7c7ab-a55b-4f0e-b092-8191a387c384",
        "cursor": {
          "ref": "922da71c-1c6a-42ca-8a34-07528d243c3a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "90b24b7a-55ce-460a-b276-a38d25b0c8db"
        },
        "item": {
          "id": "04c7c7ab-a55b-4f0e-b092-8191a387c384",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "55897be7-e73c-4638-9a7f-889bb78d8dc9",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9e3bb4-a210-404f-977b-64132f5bdbff",
        "cursor": {
          "ref": "d78d5cbc-eb54-4d5f-a26b-1fab774010f8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "66a2f440-ca57-4f6a-97bd-e29b7b666031"
        },
        "item": {
          "id": "aa9e3bb4-a210-404f-977b-64132f5bdbff",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2336e04d-6548-4b45-87a5-c06474fdf0ad",
          "status": "OK",
          "code": 200,
          "responseTime": 2557,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88ad80c-6aea-476b-ad4f-40a136dfe2e7",
        "cursor": {
          "ref": "483ee1ad-89e6-464b-b7b1-956764cc0e28",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d7070708-01e8-4fd5-bd20-c1c54cccbb47"
        },
        "item": {
          "id": "f88ad80c-6aea-476b-ad4f-40a136dfe2e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "56beac60-437f-4d2f-beef-3f2ffc7d6d93",
          "status": "OK",
          "code": 200,
          "responseTime": 3419,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d022a5-e4c3-4f6a-9c75-96b6dd682039",
        "cursor": {
          "ref": "f0bd395e-aefc-41ec-ac2f-d808f37c7fae",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "91064132-aa0b-4b77-8641-9048f0f99014"
        },
        "item": {
          "id": "e2d022a5-e4c3-4f6a-9c75-96b6dd682039",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1c75f478-8d23-4a94-867a-df4a509fbe12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d022a5-e4c3-4f6a-9c75-96b6dd682039",
        "cursor": {
          "ref": "f0bd395e-aefc-41ec-ac2f-d808f37c7fae",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "91064132-aa0b-4b77-8641-9048f0f99014"
        },
        "item": {
          "id": "e2d022a5-e4c3-4f6a-9c75-96b6dd682039",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1c75f478-8d23-4a94-867a-df4a509fbe12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512bf9d9-951c-496d-9432-829064ebf9b8",
        "cursor": {
          "ref": "9ded0082-f06e-4c97-90ca-61a06e578873",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6c27ea7b-59d3-4aba-90d3-a1e3fdbfe93e"
        },
        "item": {
          "id": "512bf9d9-951c-496d-9432-829064ebf9b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f529914c-04b8-4c27-b8c0-6abbdbafd01d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d99dc02-5468-48c2-91a1-bd9edc09eb53",
        "cursor": {
          "ref": "23ab11ff-789e-45a8-aeb5-a00f93a9363f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "026c634f-01db-4311-b835-73eea63e404e"
        },
        "item": {
          "id": "4d99dc02-5468-48c2-91a1-bd9edc09eb53",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "712c6767-ddef-4866-8cf4-359a93937678",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}