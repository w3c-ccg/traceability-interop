{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d2a1c51e-177d-4886-9231-deb91a8f5f1f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "59a6a05a-268d-4b85-9034-6cc05208795a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37a907b6-187b-4c45-a757-e82743825076",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b98f02da-bf10-4aa2-aa4d-934b0a444a89"
                }
              }
            ]
          },
          {
            "id": "519e86cf-70c9-449a-bd5c-37fe5d9721bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5314c994-f523-46d4-9520-2c69a1fcc9fc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2e7633e9-9b9a-4102-b46d-cc657a069efb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4b17048-cf4a-4966-a4ae-e375f3b2f12c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "621c2595-9ebc-461a-8637-9d086df1c104",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e959a50d-e45b-4616-ac2d-3caf9f7c7b74",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ea0cf1c-a62a-475c-a021-0b10a63c335d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12bfcc7d-d3b5-4bb3-b675-aabe2dc37dea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e56b45a6-089c-4fa0-b23e-5c03e685d846",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "266a9ffc-3f74-4516-a6e6-eaa03f82ca13"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d4e470d-d571-4849-91dc-d122e7905f4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e07c2266-ddf5-476b-8afc-7a3cf7a5789b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f5101e0-a8c0-48c1-adbe-65e014330d99",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c58fce1f-1100-400c-9701-81997a3c990b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "089dcc9c-6e17-44c2-86d8-7e7bc46235e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "849110bc-daba-458e-8e2a-bd3c16cfd8b1"
            }
          }
        ]
      },
      {
        "id": "e4772f8c-546b-4451-abc7-ceb93b28d6d6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ba0f329d-223e-43a8-80ef-42436f071a3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcd7b81d-48d2-4f6e-8434-2052af11a5d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "856e9705-1a59-4de2-9ce7-a4428b4b81ca",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d994a7a-c608-433d-9fc9-be4ae06445b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a3b76e-4d03-4849-adaa-24b59ca1c891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0fd7b0-7960-4fd4-9a49-06cfe9c83ec8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe6497e-4155-408c-904e-7d4914dc8b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e82d7f4f-2c16-48ea-bd26-68f7517d0ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f932c85-d265-4fc9-8e84-8d6662b04508",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f4da1-9e9b-424e-b81b-37321821ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6bd7389-4cf2-4137-adb4-65fa047a426f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4c756dc-e154-4b50-81fd-e5af5f0b6417",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e76cd81b-d758-49c8-b102-fdba22d4e02a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec30c168-b460-4ad5-bbd1-65fee9b8ad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d74025a-46bc-4f40-b41f-b651c526f4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ed67c-faae-4efe-bd35-06644758d893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5edfdf9-e408-489c-b347-8e740b26bb10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dad1fdf2-8bde-45d7-9265-a2594d94b305",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47b84f44-271f-45fc-a415-328e1818afcc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f13bc1f-481c-431f-b43a-4a667556d818",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "55c5e7b2-6ef4-4bed-900d-4bdec1679ef5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "730800c2-1a23-40b4-ad33-37b3c7caeb1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ffee3cb2-feae-4403-9b7d-85203af16436"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dbb2d19-e01f-44d0-a379-7277faf17079",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf233fdb-bfc9-4912-84dd-0e27a6dcc2ff"
            }
          }
        ]
      },
      {
        "id": "8685331b-f662-4f92-a4aa-2142aa4062d3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9cefa702-06ca-4a89-9bde-38bf01bbf000",
            "name": "Negative Testing",
            "item": [
              {
                "id": "808933cf-776a-4a44-805d-93045fa3cf36",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a52bd022-159c-4474-9b44-67f85fe9f954",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2dbfb6-2f5d-463b-b3df-5271aa7ab7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fb1d20-9df4-48e7-8b7d-a653b96a24d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b50fded-0943-4495-a8d5-4e434366bf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "455cdd3c-155d-46bc-aafa-bb7799d9db11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe9a77d-3722-41f7-92d5-07148cd5ae82",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eed2dae-f136-4e4e-838a-1de3a2138c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d2ba63-7db5-4968-8cef-40be962e5380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26beed48-3d6e-410d-a54d-68f0e2e86ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d44f42ec-9a71-4b26-aa75-a0855d1daf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3805c5-8e5a-4530-a406-e8f27b4fc586",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9a8ecf-c07f-4af7-86f0-84291f9b03de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fc5be8-2fd2-4119-95ae-a122b7c0430b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c070e09-9db7-4ae0-b604-c2407117a4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "670f8977-2380-4ba1-901e-b0b1b810a850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0871b9-41e1-4748-8ac6-b45541a9ce06",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a690706f-01db-4556-bcb4-4438d3f73784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ac71f9-31c9-4c83-8520-bb347edd210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470276c7-7d6a-427b-9899-dbf5e7fcedb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "237a0f98-63e2-43ed-98d7-949d25c3763d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b63d76-0721-4f09-8ea8-f6dde7678078",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3ad7a0-58f9-4f4a-84e2-85b320e769dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c17bd89-c2ea-4913-aec5-e0db26974d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568ade73-2348-4868-953f-54e398941f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "154322e0-145f-4c0f-a4a4-647c826b4bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797c9e35-ab6c-4739-9d34-bc98f7aa31fd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c099f8c-8b88-4985-a1a5-d1f3e849c31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cd06b1-4fe0-4dd2-97c5-184b0a75d14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0016f9-1d04-4be7-97ac-8143991648a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d83bc61-5829-49c0-bdf1-0590aa53dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f86b3f9-722c-40e5-aeb2-08ca502f1831",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fde713-f414-45c0-9a7d-09c4aee65255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d635945f-85de-4754-a390-ffc9e8d75058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d576e5a1-3bd0-4e3b-a7a2-34a8f15555d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "909cfa71-4311-46cf-b25c-07af0442d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ff042f-e6cb-48a5-bb96-840a3726a7f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f016c950-a95b-4d65-b324-df99242c51cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5081a1f0-3ed6-4451-a35c-19ec52b1058d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88609d2-8932-485b-887e-7f9ec9d77990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3296b810-5a6d-47c8-b78c-6ea25ccf96af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6192d16f-2f68-4ce5-8d76-52909f67a69d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9bb72-ee60-4682-a4f7-b952770c6381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc0ccab-b999-49b5-8bc9-f14b8a86b349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fded0de-3e38-4388-8a63-f8c85eef6345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e2c843d-142c-4ec4-9748-dfd9838841ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8465d787-eb77-4e18-a1f1-039b4a090e0d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2a5423-5dce-450d-9e6d-1f7d8385a77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4260e90d-4f5a-44d7-8784-c796663781a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef1d408-5ba2-441f-90c8-7082443f8eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ad4e25-f040-4ede-ab13-6715c682eedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb41765-7552-488c-ace5-53abe31815de",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b66542-2ac1-4dd2-a65c-6932b91e1c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c531e72b-7101-47fe-9e88-eef3eaddcf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d1e93c-3a3e-4f5a-8caf-4307e9a7c2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f23ca2-dd64-48f8-a9c9-824b8042b07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb577e3f-c3ed-456f-a00f-2d2b34e43f82",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef5d423-ab2e-4e10-8c60-029be7a91683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88138da-4f4c-4be6-b9a3-f028f314df31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0835657-7ba1-4588-8a9d-3b38d6e18bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b49c4c-3d35-4b07-aac8-83ba2bb09388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5273de-f8bd-4ad7-a21e-24f005aa6f1e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eebea1-6975-40a9-83b2-f8716ed6acf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a566c3d5-3ccd-4af2-b4e9-1ae75b94cf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5762b83-e43c-4ade-ba57-410dc7afe613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc3ada8a-d185-4e5c-9f59-c13cd02d8ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e7aa4d-f432-47a3-8950-eaaba61d4457",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ba0c97-c361-4f8b-bb51-c6831ac05f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497ec306-47d4-4973-b4a6-8dd576e4bc65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6debcc3c-5891-4cf0-a962-317a8bfcaf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4238e0f-182b-4452-9dcc-2af5a6cdcf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343c497a-421d-453b-bb3f-0943537e2570",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f49952e-a80c-411c-9b80-9b1af4a9a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f7233e-45b1-40c0-b0cb-c34ea52eb241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ea3f2e-cb0b-4787-a509-7ccf26da55fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64d7456a-c1cd-4019-954e-7ea8a984359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd9eb65-86b9-480e-be24-b47306824cc5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b092942a-8645-40be-9564-3759781f9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b787c073-bd09-4ef2-a1c5-cbeacd4956d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a8c9af-ae6a-4d20-9c70-1d04e2d5788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8820409a-03ac-4d34-b45b-d1ed9a33cda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25689a9f-c389-48c4-97e3-d83995340384",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9857be4-3057-4965-ba5a-602b05a4025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad41a18-a65c-46ce-a4d5-9b70a1a91b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1f7d52-88c0-48b0-9b5c-5babfa0b9212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45a1511f-21fc-4288-a2bf-d2d6451ca2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e69476-0b5b-4494-97b1-f514df142e7a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a710b02b-fb1e-442c-abac-399525d70b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6906324-aa4c-4828-a54f-b72d01e6acc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065a7ab2-da9d-4084-bb56-91565b3aaa8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f905e89c-ed26-4f9c-9a5c-633303cb03b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa389593-ac89-42b1-9d0c-caf03e8c996e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd4e6e2-8c66-44a0-a795-974f249b6209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b602834-84c7-4edb-a9e0-4a07c65774a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a92fb2a-661b-41ea-b821-ecc335a91d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcb71b7-9ca1-4b40-8673-8cee859fa76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8f79e6-ae48-4669-9d33-4366b6bfa259",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d083559b-8493-46c8-a67a-152694d48a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cb2cc5-c8ed-4804-83f9-12926f0975f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25ac73-771f-46cc-8ef4-c92acd66b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8048608-1899-4eca-93cf-bd7c9b95452a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86f27e2-588d-44a2-b03b-9a636d50a1a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9336ddde-e2df-4ce2-9714-bde6a34f2217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b30f79a-696f-4c9c-a663-f6c36caa04c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575c36d9-b669-426e-9d05-11c9807cec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c895bb3-75b6-41f6-bb64-de84c5c29e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547b5416-7413-49d9-b851-04db60543b05",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeba9bf-c1a3-49c1-8ef0-bc6a4e1ace59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde10dc2-9d77-4497-95af-687a086ca8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63f4809-5196-47c3-aaee-47d9149a9826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c97b7b-f4a3-44d1-83ce-f0cb9927b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6db97b4-25d5-415a-b621-ba797163e344",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2605459-abd0-4d97-b9d7-f5ddde0cff97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d670c16-f70e-4efb-a39f-2e0963632d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fed11b-1326-4ada-b589-f0edf6e46fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f853b3a-d16b-4c5d-8cda-d62d89d37dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405e9506-afaf-4041-a246-3cb3afb1a7d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83491828-0f29-4b65-a07f-78d99825e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2b6261-ec73-4139-91f0-1f260d10dd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c852dc56-2c3b-4920-8aa3-b45ec1c4e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05c9860-27e7-4c04-b380-811e217aa564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8ee0c-32c0-47a9-907f-04961c77cef5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b2c0bb-4db1-42af-b03f-9a2b86f80224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a5d36e-e71f-48e8-bebe-97c233d1db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e2ce78-cf41-4909-8d94-5a8699090863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4654578-849b-4565-8707-f06163a9973d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655055ea-c9bf-4bb4-ac44-23334e1ed8d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fddbb68-08e7-4e21-bdc6-691ee50553c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717337e3-3926-438c-8695-a0b6252ad4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b29d2f7-ac56-4bc2-a4e5-2cc6fc7105e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2ec0cb-b195-459c-bc9e-a9e72a33a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5b7651-b5e3-468f-a4e5-6c1f5a2cce00",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ca05fe-f2dc-4ee4-8db2-c9af1bc6c289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9982262c-2914-4bc5-b2b8-8cad5c9b7a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e4e366-ce30-4b3d-98c5-fd38661b16a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3e7d0a-1f2d-4b1d-bbf8-c918fac79fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6d43b0-411f-46bf-8994-1a0385eb8e1a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36237bfc-c7e1-40bf-a660-948164056c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f6a06b-bb09-44e2-80f5-46f4ca4ff6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4843e08f-afcc-40eb-bc3e-002a7a5c71f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4691b32f-3202-4fbf-8c49-53676d2ba7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e9a81a-38bb-4475-b0cd-6cb8ca6cff32",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf50c8-74a7-4666-827d-ab2048727f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c897feaf-a6fa-4f19-b1e6-e2503d9374a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f280fbc-e099-465f-b591-0c174f566e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b082746f-35d3-4261-92f1-0677538a0871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5fc032-0edf-4455-9b5f-ea1ab40248db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e680eb-d0d3-4f19-a58e-8063951b9a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc213c3c-143d-4544-9cdb-2c55181bdf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dfb7c2-73d2-48a8-8eba-5cf62e6d7e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "70752eb5-b80f-497c-84b3-9f730ca3bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304d155d-e7b3-49a0-89e7-05d33455bbd0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99840851-a487-4598-8b8a-691a49e9fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c2039e-4d98-40ec-9583-9644e91d72ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879afb7e-6db0-4ef7-8943-febe8391c714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9da9e8-dc79-4e07-9bd8-9f8f711ea0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea9afde-7f57-4e12-b392-dd7da44f647f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e3bba8-89b9-428d-969b-1ec1c6f3987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d421b4c8-2e6d-478e-9bb7-f7a3072b185f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40b2b98-7087-4049-9887-e308b6894b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e342bd-20c9-4607-b9d8-a1656126a97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffd1048-583b-48f5-830c-2e785338af48",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a9cf23-ec72-458c-bf63-ef0f9af6db60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699c73a9-7524-42f4-982b-5cc71c1f6f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f600ab06-4f0c-4a98-9541-89a509608338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10e6912-76e5-4d37-8596-4e9cafca9d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e35a9-d596-4a14-9dc0-9a8fb0536031",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e58ac7-1952-4e75-94d4-ff05aaf528ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b026d6d-035f-4359-bfae-15de9230f3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f345db59-96f9-4a51-b524-ce82db73f378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "162f1bf4-897d-4a97-aaa5-5d5a358c04d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de8d537-83d3-497d-902d-845d1b9344a7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da45b84a-4114-4ce7-aef1-30e9c48a4c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb706c8-57da-42b4-a9f5-34a326c16885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8290e56a-47ee-423b-aa3f-11c41e104386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b43c67-ce6a-4902-8221-1ec167aecc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335a977b-42c8-4964-b913-03af7b427c3f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e152fcd-c5cd-402c-a8d7-d2b1f41455e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "059fa45c-8530-44bc-9c93-b99be183ae61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be83af57-36fe-4022-9e10-b54f4e3c4c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21b4af90-5433-421b-a803-47dd11866065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52b5eac-074f-40a7-8eba-231c13219ad5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76742ff9-774a-4ff0-801f-51878f0eca59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a8a3c4-8b90-494d-ac4b-7b57f6b0d6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1ea610-2473-460b-92fa-57aeeab64a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88bf1484-e11a-46a5-871a-264cecd915a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78cc2e-d0ec-4b6e-9653-2bfd6415acd3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24c2f2a-ffe0-40dd-81c1-0306582b9397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3f9118-0472-4e17-b836-a5ead7b225d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ac03f-818f-4026-96c8-15cc53c776af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bb05b1-8972-4196-8286-4d1a7ed5bb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc7226e-22ea-4646-a7cb-04e249dd11d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b170e949-cfe6-4731-9938-3e479f5cd1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614c928b-5703-4351-aad5-eab976232310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdee41a-1498-426f-8f4d-41970eff0d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3423c8bd-6164-4d70-9810-3840e1127838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276b803e-dc0d-4858-81fe-31d083ff1155",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe477a28-0799-4557-a91b-1da1bfe2ed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb9f03a-e7ae-4b15-9098-41b1caa591c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2e2481-e6d1-4975-bca1-35c43104c140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7176ac85-f312-4125-b483-fd9b1cd88795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec80f7e4-d9a6-4947-8584-bcf053d19247",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299b98b6-5bbb-4de6-a0e7-18af3dec8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54be58c9-068e-448a-a00c-d239a5be1920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302653f2-bc64-45b9-8ec6-ce88ca847764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c675a43-601a-4f76-af7e-e46e6bfcc538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c94479-0f68-46f9-be6c-1a61f7901c58",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159131f3-ffec-4f08-8739-1d3d806aa059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaa12c6-e37e-4322-a685-a75331bf276d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff220ddc-b87c-4f33-8879-70acd6d779c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "85921df8-9a1e-4d1e-8ee7-56699be5fbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011aef21-a729-48b3-8bec-3e7afdf5c501",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0f065d-0084-434c-a285-a6d91373d69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3c356f-a0e0-4858-b27c-eaa73b1ad647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4386effb-8f79-44a1-8002-5f9effc26d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "865747b7-5201-4002-9d83-82258ca6eaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560bf858-e696-4e83-af76-cac546170a61",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735624e3-9bc9-4560-b9de-d45647663d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc547653-023c-4ec7-9dd6-4f50bab0dda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8ff059-ce69-45c0-b318-b9883f33cd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "08599885-9b87-4b44-b13e-c565c6e43a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bf1f58-d2dd-4ecf-ae93-ab94e1eaba94",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bddc58-a351-4143-be9d-a41440dbae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca6c3e3-9724-4b82-b81a-8beb4ac5e1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e254923-056d-465d-afdb-26d9833b9c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e54b8ac-d287-4d50-973a-71dee8a7c42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66365f9c-d808-48aa-a9ee-0bd609998b63",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21592f9a-a47e-4021-830f-5b9ea56eb143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220bde64-53c3-4246-b5ec-09ba98496178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfc4836-f5aa-4424-a7e0-90af418de264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d768aeca-31ed-4f77-b585-0ba7dc2d0470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509281eb-c635-476e-9eed-47a594192572",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dee5e61-e4c0-4781-b4bc-664c4549896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a046a49a-2f3c-4590-9992-efb949fdfcd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8228f045-0716-449e-bb1e-6eca63cfd730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5e382f-6041-4559-8833-588d132c4137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e25896-f379-4727-97a5-105e8b140c34",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd692adf-951e-4be6-97e9-d40f6a0b21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f05a6d-8f4a-4994-a4c4-e34aa6756cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c09cd6-ee49-4f54-b29e-308b59d2a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a94b57-69b2-475a-baf1-a1250ef6bd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff827c9-1fb9-4a4e-b7f4-fae0d9215afa",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d9273c-dc83-4ac1-a757-ac0c1e2ef6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef1d4a2-b193-482b-8723-ec5e6ae659c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b736d274-1142-4e94-a1a4-92e0db24cd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b524bd5-7264-4ad4-b80e-9a1d80b698de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeeaa9ab-15d9-4344-a9c4-b4636573a843",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ece4ec-2e58-471f-8f1c-42ec2d2cb415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3215baa-ad9d-4a9a-8191-d483a6b559d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb1d262-11b8-4eff-a37c-5cc1db2bd590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "778993e3-5d4e-4ce2-aec3-295695647a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabb64d7-3192-4fb0-90d9-4d4dfa71dfa7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da2915f-d892-407e-a9b7-a7be43e1ecec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e56987-32f1-4487-bfdc-97d7a7f88dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af67707-93f1-4402-84dc-7179829e3009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bde6eaf-d883-4a7c-a14e-10776053f239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96d1f23-8ec9-422a-9105-7c48fe7cdc71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68114143-b8f4-4c59-838f-6cb79d5fca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9755a6-c331-4c8d-8548-9207a6f0712a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3772ac29-72f9-42a3-b9db-3f81c3ed77ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6071ae73-3257-4f84-a6f4-e7a3c40c310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9895e3d5-cbb0-4302-9b54-43f1a19becf1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03377a1-9dc3-401b-9182-036b525655ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a2695e-a3f3-46ba-bfc7-b2b040aa5869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a88a9fb-1d86-471b-b8d5-bce23781f744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ade8922-2da2-4d49-899e-d75009e1abc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6f03e-4b02-48ae-9c32-a8aafb428c51",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9777ffb9-8643-421c-8991-ba41e6d299c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3045ddb6-99f7-45ba-be6d-9a9f0fc8d0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c31759-3f59-4756-aa24-919bc5f97e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c3e623-8be2-4a54-ba61-9a7ce31d3751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f6845f-b5c3-45e4-853f-ba7ec1781f89",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88a2948-f863-4add-9f40-52c18ba9f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b732e66-cead-445a-bb6a-dcf79f4cef4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6003d771-ab45-4704-8795-0f85013c1cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeb2de7-ea83-45b2-8053-93655918eadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a133d88-a475-4bbc-a82c-fd6ec423de14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b1efe6-8d5f-4409-9ab7-f77415a0e12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40fac49-89a7-42b9-aa63-58073a63511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42192616-e096-45f1-b0ee-4e22ccb4f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2a1640-2161-44da-9917-ad4ed8e3a88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850dd88a-f0c9-4496-bc93-c9799bebb8f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb88a0-6e95-442f-9307-07f377134509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d374db55-efb7-4343-a1cf-362809f4e492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767f22d6-44a9-4053-8490-a02409e5771c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1f9e32-e4d2-4562-b975-22081d2fcfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed893aae-6b90-4717-9605-a4fea9bb6927",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58bc722-7304-4212-b3ac-5bbe9cd5d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d26955a-dd6a-4404-82d0-c22ea0104eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc92e03a-09bd-46d2-82e6-0a3ceb16cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd101df-55db-4ad6-b1f7-e4b35176878a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75f39b4-b8fe-4fd8-b83f-0539b6cdf04f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40b8d15-8a0c-472b-9deb-9478f478820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0936f69-6f4f-432e-84b9-3dd4b0abb94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a04c8c5-e9e4-4411-a57c-1e83cb5135a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c49e353d-a41c-4854-a521-7f0c2d422b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf43d7cd-e4f3-4383-9930-a5dc2e2089cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319fd136-3644-4b8e-9923-2f90e3324fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae5175c-b145-4657-8598-fcb716c608a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95521ae3-f1f6-4225-a2c0-0e50b1923eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7848c0-ed95-4e3b-81dc-7db3e307f403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3a32f0-0fa3-4f17-b9ad-171ee3efb798",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45ca19e-bdb3-43d3-8e9f-d6cad947a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b8118f-a837-4036-89d7-907d3bdde974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210735c0-b312-45bf-9b87-dc3508fe99a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "adb5f7bf-b2dc-4103-b593-1a86e957a107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a1efee-e694-4a77-901d-a42ac04e33c4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cd84d0-f32b-4618-9dbc-5930d310577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81908cd0-9f32-4cdc-8ed3-30e4d144b216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9fc138-6cff-411c-bf6c-5cd73a509a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba74a2b6-d87f-4074-9b11-ef3a5bb0df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e572bf46-346a-44cc-8099-89dce6c08a8d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d694e1-3a46-445e-aa2b-c83ad469a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdff8c2-58fd-441f-baa2-f6d285092cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9256f134-6d12-485d-8817-e587dcb52d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52282ef-e459-4699-9c8c-1cd4f582e979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae323d30-1688-4ddb-a22d-7b147d56116f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c78dec-ea10-4a37-a63b-299def53b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52984c0e-5fa9-4878-b3d1-28ae1a65e8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf78d99-7174-4e98-9b11-4ff91ea25c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad82801-5c34-4b2b-a3d5-81969b2db51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c335bcd7-a389-436d-977e-a67778cdf6f9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9ce509-8eed-4275-a722-c2eb264ccc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ee755f-11f8-4588-8d81-51afdf45adbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca88db6-f93c-4664-8e12-2027e6b3824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2a93e0-9578-4cb0-8bea-347500594ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08ae62a-459a-492a-9953-743d9331c97a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0f0b37-88a2-492e-b414-f2da87f3cce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa560ed8-a56e-4f92-a28d-a5c5abb6c4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e891731-ab54-411a-b29f-8731693632a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1be3d2-50ec-451b-970c-2860dd4ccb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5946dabc-7b0f-4e80-acec-703b8072a19e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3176fbdc-80d7-458b-9aac-93ebb9e29456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737527dc-1f3f-488b-b366-526b26e5fd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efa8b0b-71fd-4d94-a8c3-91629ec0e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ea6d93-d245-4d68-9d68-3b768cf97bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b399d835-1919-4c4f-bfeb-7ad521d54b74",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630cefed-0580-4a8b-bff5-0117f3be5d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e37c83-2fb6-401e-afa9-22cbee1c33fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ade331b-357e-4d2f-baa4-bec6393714e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab20144-a028-4bad-9ef9-ded56fa58fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbb92e2-ce96-4608-857b-02cd56942ecf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a97f5-6bad-4199-936d-a619ab244b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a817706-5078-4bee-87a0-6d421b4a89cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d2ab87-236a-4367-bc1e-1244e61c03b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "390c43e5-b2b2-4037-aa8e-c1943fa171df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac40bf4f-4649-46ee-8c6c-8c33dc270617",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e4f3d4-22d6-4170-8c2a-8ac9a5f5ab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec0bf52-1f86-487d-b8fa-01c88ee88ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4512f2-8aae-49c4-8aee-0019ab88fab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2815221-56d4-42b1-a9a7-0adf101e492e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b717731-1f2a-404a-9151-240e16e5579d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ef8295-821b-4256-a685-08b0c9b87430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6520f852-99ee-4eec-a42d-c9382a660edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258bb205-10c6-4d53-9aa0-918f2a6daeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "223a3372-093e-4e73-ad08-d60726bc76c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc7af5-8aaa-4822-a3cd-0115bf150c85",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe2bd77-b612-4501-9f0f-56075832d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be5bcaa-a7b6-4538-8b99-830c0dac8ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a142278-3db6-4f94-8824-69635c3e3629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa201221-53c4-444d-b081-1f3c1d8b7150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b559c0-a30c-4509-98d7-911b6a74c87d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9c0004-8c5a-4886-85e5-15d456ff1ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53288acd-2a1b-4726-a30d-1bf5f3149f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb934a50-d4fd-4037-89f0-50fec7a0fe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d4ce85-0947-4e8c-929e-835455c0d10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea27f6-2bb2-4597-ad1e-b8b6fa2ba876",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd86697-cc24-4f8f-802c-f8009a82c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8fb99c-023a-46cf-b1c5-c7908f47c6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a2ca67-aecf-4a4b-886b-8e68abd274c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0def800-b0c3-462f-8323-ac04ea8aa6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda6e877-f34a-4942-b894-971f63b84e4e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5717e8-2460-47ee-a722-d03a86451043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b21ab96-4535-4610-9020-73739c6dac0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ffd35f-73b7-468d-b976-e62e80810fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4215275-6908-4776-8296-33830d7f685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f2f8a0-7837-449e-9672-923c266e315c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a91c65-e211-4f94-99a9-6f1e97e9dac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502d1d1e-67c1-4c7c-8914-d69fd611b614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1417bc3-12a4-4413-8f66-66df84de9d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f146057-29ce-4a84-b097-bb063ec60ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c289a6-ecb9-4ea9-b616-417112c914af",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de165d44-ac50-4c2b-9ec6-15e2d5b935cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e120544c-411d-4001-8f67-469aec00bb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b12c1ce-1e05-4874-b27a-fd25b12f3ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b500cc-d60a-441a-88de-92437d29c8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cbe7b5-2f7a-4167-865a-206d34e3afd4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77a7710-3417-41b5-9366-736f0684fdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f670c858-8e6c-4858-bbd1-f69fe1d0eeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eefb9e-36ce-41b7-8398-f1adcc679e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df44326-4ccc-4ea2-80b2-812aebca91d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d8ce0c-f4f5-412d-bcda-1d3b9c506120",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44adba2d-5b96-4c54-b167-996010482595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d450f8ae-dbd4-42ce-a4e6-84286e51f2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825a0568-9d28-4dbd-a3aa-9e8716f7ab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18a7fdc5-38a4-4197-9d1b-41f88f865942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f478ed-e56b-4113-a4d7-0b9a9abab0e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f85eca-8037-44f5-b455-27299dd3bc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5080a478-48ac-4947-890d-ac0ec6a70e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a8ebd6-b6f6-4831-874c-d51006bade4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d3e93e-86e1-4980-9de4-1c3fdbaaa4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85355a6e-2b27-4ca2-a009-ddd5b017ad75",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b665a2-29f8-4a1e-bf98-07cdfb4b8e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96fb67a-b600-4948-b369-3db33f38418e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f6cbe7-52e7-4233-b407-b690df8ab688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f3797f-c658-49c2-89dd-8bbeaed2d51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654fe6f3-434b-484b-82ed-199a9e01d0be",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a35cdcb-60fa-4a27-910b-cdbdc5a5eed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de1e470-0564-4718-8f78-0f3a46ba5f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60325b79-73eb-46e0-8477-8dbccd370f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d50eb07f-7564-4b4e-a64b-53633fc8e729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54adab0c-b692-42a8-9e6a-f205727e1c7b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fb1507-e1cd-4e0f-ab92-3f1ec57d05a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5655f708-7354-4daa-8a9e-36776bf4bef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1154074a-15a8-4700-ab19-0dc1bf135423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1ee6f4-f1be-4b57-8c25-8ca735c7117d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9eaaaf5-5b32-4f67-84f6-628738174893",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a44732c-7c04-4bb8-8dc9-f499e4c6ed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fdc458-6a5c-4be1-9e34-92a4c2475aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929b3729-dfe6-4b52-b8b4-0c647bcc418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f243a99-d2a4-467e-911d-453c2fdfd345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d95de7-cc9e-4195-acd4-d3ea946d7711",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d4f0aa-8c9a-418f-a3a5-4aae50118cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3f32f5-7756-4330-a601-463bebf5091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f2891-c95e-4ce4-af9f-97944112d4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78e9bcd7-1fb2-461d-9dd8-3561ff401f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459dc284-4c11-4e97-a056-ba6f018ad7f6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0246d1-f7d0-4b32-9a9e-52042a0bbcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c8d4de-cbb1-4d15-ad13-b3197fe109c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb10df2-0abf-4fef-bfc1-d7f078d12bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c02d38d-9db7-4d41-9b99-a0489ce76a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa6e61e-66bb-44b0-aaf4-43cb4c20c806",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abaf27c-6e77-41bb-b6e1-ff99fd289eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fa0530-157b-44d3-99c0-42b6350834a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fe15e4-2d9d-4d33-b005-e8fcf453e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9acd35-f637-4fda-9c53-c627c99bc56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ba529a-8727-49af-a595-d8d6dd813f1f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee62bf8a-be36-4bb7-9a8c-cd93841c0eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8552d91f-fadc-45d8-9ac3-48a206be0cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb53f9f8-4cb6-47aa-ab60-b04ddb676f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8e0a10-e23a-48a1-9a8c-46e9054d4362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936abbfb-a9e6-463d-84bd-2ac7988af008",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d464c9-9d91-4df3-abec-88fd51bb3009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41df1f33-6268-4d83-84f8-9839d73d8cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec1e8e2-cc1f-4984-84bd-ffa2c7656c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3df22da0-31eb-4e60-92bc-32632dbe4391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac1281a-ce22-480f-ac36-0999696cd5f0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6bc13e-dbd2-4c5d-85ed-a0e4bd5aabe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b032a1b3-011e-4692-a351-17e5e627a7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ee8a28-2259-400c-9529-3bcb63515338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01d8b780-8e95-4dab-8221-ecfe448481f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd776540-c5c6-44a9-9d54-7f13ca72f82c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500b8b10-9d9c-4d77-bede-97011af81530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9d5332-4e41-4407-ac0f-5973300a55b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecae12d-147b-41e9-89d3-ac50c57e0e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec8f958-ecdf-4240-b10f-4426d33d9b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d478d737-6fd9-42c4-a03b-cb124cd25d26",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c70f55-8f1e-40ad-9cf8-86b44e742875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "517592b0-f85a-4595-a7da-8e249567aaa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc505758-956b-4c04-8827-bda23349487c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "437ef301-c899-417d-9f23-b519db2ea4e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f13fb1fa-ac61-43bc-867f-69949df140d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb09cd4e-8679-4ba7-a6ed-07ebdbca3ff0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf04947-3e40-43cf-9222-a347aa862537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4843c13a-13ab-414f-b0ea-0275ec0c96ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419ca8f2-8791-4bdd-9e69-223a54df3177",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "039d85dc-bf80-4e5b-817d-4b7d7caeb422"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c4a7cd5-6d66-4399-a698-03398c2db97b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f4594f4-6ab5-4ad5-859d-42c33ebaeb5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "158df7f9-d018-4240-8936-5a502bbcbc5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3616624-8231-4eb6-af85-46f69ae636dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "546f2a36-b482-4d0c-87ba-dc400acba4f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4fe185d-516c-45d6-9858-f97372cad2a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28ddea59-b1a6-46d8-88a4-407f996fe4b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1005ec7a-bdd2-4bb1-a815-fd4aaaf781a6"
                }
              }
            ]
          },
          {
            "id": "927bb0ef-252d-458a-bf2c-0ed2930f11c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "613df617-0edd-47f8-8daf-4e8b787b7b18",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2b242b61-e6c1-4d04-a33a-402f7d9de425",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b8289d-d4f3-4765-bfe9-08cf3f4aa80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ab2ba84-b7ea-40d3-b9ab-991d8e0f4992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52747e9-b104-4769-bc93-ab25455c8488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383173fb-a017-4abb-932d-e9a76cee427c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b0d0033-1e92-4368-ae91-a8523c60009f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db3f599-8c7b-4850-97bf-7e906a980f5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84ab80b2-458d-4e3d-a3b1-d92d8fd62eb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "326ac97d-9655-4b81-b6ce-704e8601a291",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e3bb6d79-e4ae-46bd-91cb-abc17b733f18"
                    }
                  }
                ]
              },
              {
                "id": "ae33882a-c3e6-45d6-a3f1-b9fea240afe9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a013920-e6c6-4706-abc7-65f48abf94b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2393f3a1-0d54-4874-992e-7166f5f14814"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b8bb22-67cd-4c9c-89cf-789265046a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aef82cf2-c76e-4cca-b277-886ab1754a18"
                    }
                  }
                ]
              },
              {
                "id": "4be0bffd-0a7a-4680-a780-c419c265d155",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0fbbf55-21a9-422e-96bf-518b1f7aaccd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0453c3fe-f6c8-4aa2-b34f-e9805ef2d77f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "863ffe13-f791-4685-8265-824a7b87d305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5f92d3d-9008-4d59-b130-bfd1025d3964"
                    }
                  }
                ]
              },
              {
                "id": "f575ca4f-1beb-4949-b04e-f7e226657d8e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0384ecf-0131-4142-888e-20bf183f26c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85a9b088-f122-4aaa-b75f-5868340292e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f0858ab-4126-41b2-a1b1-8124741eb71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7d2a2a5b-11eb-4ee5-aa8b-3f5f17e04116"
                    }
                  }
                ]
              },
              {
                "id": "d52c0d73-07dd-4772-bd9c-dfc484b7faed",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d191b3-636a-4208-a4df-997cf264ea28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acd52852-a917-4f41-b2b0-ebe087ec9102"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc5d2b78-b9a2-4548-a591-77b5652d071e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd67388d-12e1-47b8-80dc-5e0f1be468bf"
                    }
                  }
                ]
              },
              {
                "id": "bc3ca541-d9f9-4c3c-9de2-47cae744927d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4beaeaf4-c910-426d-ac29-1d071c631f5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91e82627-5c13-49c4-a66d-e88ac5c070e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d731a87-eaff-4fd5-8df3-a0e0760cb3c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8765943-5231-431c-ba11-bafe15d1dc45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6eaf9d05-94fa-4e99-bfe3-f9b7faa66a31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6f76503-96ee-4b93-a899-84a984d43282"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d4b6cdb-f347-4e6e-9819-4b06a14f2bbd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ab99319-33dc-4b32-82dd-8ca4459146fb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47e3120d-b9fa-4125-afa9-76303eae43d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ba3fed67-db28-40fc-9082-5e5e28327547"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adf40ce1-a7bd-4f72-b52e-b16bb225eae6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3da2b129-4f54-4864-9a26-22dc4932bb2f"
            }
          }
        ]
      },
      {
        "id": "4db0d8aa-42bf-48e5-836e-a448fa4ca038",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d391210-a04d-42cb-8645-b09deb9b39c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86e1f5fd-e389-4d45-8012-3359e1278651",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6adfdeb-4cef-4292-b277-828681c9c60a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f637c8f-6111-4612-80b3-4d9447aa539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13424a87-47f4-4b70-b3a1-7b7a52d4434c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1c5bc9-a1c6-47f9-928f-753f4c55a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe7ff94-e988-4339-95c7-6c4309d2f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a8fdc-5d7f-425c-a1fe-65607e42ec70",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a0919-9c6b-4655-af9c-798d54131161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b398d6-d3bb-4e44-bd06-b650f7ac8cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6453c334-83dc-4080-8f62-9fc3722b619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54db3c3b-ecd3-4078-a6be-926ef9f971d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7e8683-fe5e-45ac-a571-161e8fb50232",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa9f73f-6014-4125-aa61-17134ed868b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "691cd2d3-5f77-4f5d-a9d5-1a6eb3af7a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b0f2c-e372-492b-b490-8a9382bba959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0be130b-bde3-4910-9d42-5bac16f430c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6d8cb2-6d4d-4ef7-befc-0a205ec337c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b08645-9c0d-4a72-bf2c-c64626cbc0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6124d9a-4f91-462c-9a8f-30711b3f9af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8b570-303c-4b77-b86e-dc94ca12529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "727c74f9-9675-4a54-bc9b-c51c95066597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4976c9b-9a85-43d6-a50c-27df1820b119",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f25b80f-e90c-45c2-86e8-b0f4c3dd325e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b91fc3-4b0e-4896-99ad-c689074db464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5052f721-3851-4639-98b0-9776089b1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f8b492-f433-4f46-a168-d4009ab8956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ade721-e67f-4419-a0b5-e1c97e82fde9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca5ebb4-4cc2-4b17-b8f0-c9db2c6d338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d65703-1d0d-4261-8a0a-f09822c068ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e14bbec-8544-4cad-ba9b-0e8f4f4fce73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9f497b-a967-447f-aaf4-feb7b3b658bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80557db-9839-49f9-a50f-141f29117b22",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e554dd0e-09bc-4ba6-8c98-bf14c2fdccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334dee8a-53fe-4eff-8bae-b7eeee321b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb944165-99d8-45ad-aa2d-1460d9959c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a13e5c8-370b-48bf-aa94-a0dd6c734427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f516c7-9d39-41ce-95b0-ec5ab565c879",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1918c12-bb84-4724-b7b9-cd6f2ab281c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88c2bb9-26ee-4ba6-af00-3603275bee49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f238e20-cabe-417c-bdb6-8afc50a73916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27078ddf-d5a5-4cc8-9fa4-02ef5e405a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622f8d7d-0bf0-42c6-b99f-e4d260248d68",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d58f00-6343-4f1b-a8d0-a82316eaa645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fe20e5-1688-4a19-9a88-bc4c39417d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12811489-9c5d-4bbf-8f09-013a456b349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce571f55-09f2-419a-8903-8cf9f5d83afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff093f8-9082-4472-8861-6949fb161322",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de091d6-5f6b-43d1-b93d-a326da5a1195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d987a7c4-a2d4-4495-aba0-10a01f1e7bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb2f659-3c1f-4aa3-be31-f1e2976e4ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5822462-b894-43e4-97d3-989b58cb6a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c1dacd-0937-4e79-a96e-2eb021c5744e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45f8408-ad3c-4910-8f7c-a17dfcc46a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87f5210-9c5d-47a1-8486-1fb0df643a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d752938-baaf-4033-92ae-93c555665265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "312fb4e9-900d-4152-8a5d-fe0a222a6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5effa5-eca5-49c3-9dac-f2067fffaa38",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2151285b-9082-458c-b43c-daab30b3b1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674524ac-ab7f-47ac-a332-504405e03012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83551528-00e0-4518-a934-b724a01738b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "159e52cb-1898-4c86-8e92-9fb1f05d319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca3936-3529-4edb-a6c1-7b9861effaa0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc859c4e-1827-4fce-93ae-44d607ad405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdc87ec-3ea0-4a3d-9969-e72ce763b271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455c90da-75d1-4c4d-b814-6eeb9d345644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddb1130-c1b2-4751-9d0c-bcdc7ee54c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc4cf8-8b7e-49cf-b4aa-edaaaa375e59",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a024d-d85e-49c8-b37e-cffca2ae5777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1975fdb4-0b8f-4f92-8e7a-c3b746cf958d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21e0e6b-9a05-40cd-aa88-76d830c98a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "91253777-6fbe-4bd3-ae80-cef9f4e87b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bcb450-d8c5-4fae-8697-c3955ae7ef5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8731092-15bf-428d-8c0a-8b75e11faaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa096fe-6f94-450a-877a-257ba7e4ec39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8f8d13-c11d-4ef9-bec1-979730667a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a923cb60-a179-4953-a155-7208550f4b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5330efc-1df6-4e15-9db8-f19473e7a5e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f486ec60-b5bf-468d-9b26-56ee3165ed72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fa804a-6122-40e0-8fa4-bf1308378ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b32211a-f98a-47a1-bae3-526341870f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80274b9-3e9a-4b37-a9d1-56cacf9351d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aff13c3-e4d6-4091-807d-760fbefe59f4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2c924b-6c6a-40e6-aa44-1264fc39b56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27be443-d8eb-4946-a4ed-1e924c20a3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b816fec-112b-4a37-994d-535acdefaed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94bdea5-2d86-4f96-90ea-9d8d91a1a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c585f7-f661-41d7-9646-7a07a6cbda9f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10988ed1-0651-4aaf-83e3-10f48223eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c4282b-3cbc-4882-8c64-f3cd37b0db60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c050472-e05e-49f3-a8a1-6619d82746da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "603dba2f-8211-4ded-b60f-4210d3513e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede8db35-5ee1-49cb-94d4-c222e46ac5c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64871b18-2589-4c69-a826-21580a916ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e872a946-981b-47f4-9a0c-49a7105d440d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adc6e0d-7e37-47a3-82a2-8ddf2f8a4b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e452faf1-be17-4e34-8a54-3545470134e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7954872-a9b9-4b79-9a84-c4678ed3c610",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e8aa4-ac9f-45b7-a7d3-f329a152244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43d6b5c-964b-4e5a-921a-b97854b77e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180cea55-37b8-4bf6-ac41-27ed8676d963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "437a6266-db5c-45ee-9817-af5003f9b45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e11a0ab-74ae-4ce6-a042-a918c610f557",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad3d48-52c5-43dc-8055-8b71ceafc63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46fcde6-0971-494d-acf6-a99cbee4adc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bf4823-9b4c-468f-8e01-3c64387227a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b697a8f-5ef6-4823-a60a-2f2b3b7a6321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2780ec44-57e8-47fa-8f40-9943ee62f140",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8f7749-46e1-484f-ab87-b3f33a149e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15171f0e-d0f0-4d72-9f26-a83919cb615f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a836f05-13fd-490d-baaf-85f2b6211fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1dedf1-debf-4e82-84dc-71df147b4d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d3eabc-8496-4007-ad66-0044a3f351e5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f5dbc4-a3b7-433f-a502-e5734bcfb952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e01a2ad-5759-4a99-9a48-ba1efc031c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9191e3-30ee-4209-bc58-22d2f97b5440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "407d2b93-e4c1-468d-83a2-164f6c7362b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8cb97b-5d1d-4519-aa00-c44dcacb2a26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10628b8-06e0-4703-9cb3-f4b23a0da9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5c6e2f-fb31-4a33-9483-070cbd6f754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a461067-b826-426b-a34c-04b695bc8cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf50ec1c-4c78-40ec-95a0-999d44140143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c50991-5bf5-4fad-b987-6dbb1ec486b9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a435ded5-b8da-4684-9fcb-14f7124bcb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3c527f-63d1-4d83-8604-7a0568d599e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20e01f2-fc29-4a2b-80e1-5e398187204a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc38076-c3e9-43ca-b9b0-927998ec5cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77594820-3eca-482e-8eda-5d0d9ff02240",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b00b125-039c-442f-a507-3b8f45e748b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37803623-1240-4c35-87b1-af37fe200316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42cde08-088e-418e-8c46-c6aa58015477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ce838b-075f-4cfd-9a0c-573bb96cbfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d8697e-c26e-436c-9cd2-06bf9e7ed3e7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f3f8d-2a8f-4743-8024-116d2c2c2c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dea7afd-9d3b-42a8-a6a0-b9da38379ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d2b079-bd80-4d6e-82d9-f1090dd257c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cf3040-c332-4a79-80e1-157fbde7657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090f3f64-cca8-4791-922b-a4bccf609a06",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed3e124-6a0f-47db-aaec-8ad48a5152ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81ece18-78c0-4c92-be15-7ea61035dfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db46f859-8528-4561-a283-6e2e00c7334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0267d27e-955e-449f-be17-eaeff835edb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d321de-7614-413c-a4f5-2e31d90f2312",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaf895f-5a88-4fb5-b087-397dd952c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11d4a3e-61db-43ee-8251-ef1d8cc16769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca63d2-5987-43e6-90fc-8130f7952743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e025244-e62c-4f9a-b871-4cdbd66b963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71d145b-c258-4c18-8df5-6d489c28d639",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fbb93b-4de6-450c-a70c-cccd6c633c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3e9740-ea01-44fb-b2b6-164bd2ede422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16c8d7d-3682-4be0-9886-33e25f21b405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4676c6ab-9624-44cb-b328-30b9e2273202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e1305-d22d-48ce-b939-c64fb6c54a4e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67882828-00bf-4077-ad88-5f1af2634d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad91b70-fe85-4710-bee1-5bfe6827caf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdd964e-817f-480d-9ac1-d9b83a2b583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "195d96fa-1796-424c-8c70-687f337fe74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739aff22-108e-4892-8d79-4a73113b825e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0ff7b-cb90-43e2-a197-b2b6ecc37a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f7799d-a1c6-468a-8507-78548ca623f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7126d27a-4dd5-4cfc-a4fa-dede62a9d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1041b883-f6b5-434a-9b6c-811fb657128a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c890eb0a-c488-4269-bddf-9b85687b8679",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7f28951-694f-470f-b952-0a4484b2ca29",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b954e0-f421-4a7f-9271-f3f99c3b5f88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29c03145-3c67-4f8e-b430-026a034dd903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d1c70b-153d-4130-865b-fc3ef1a769b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62924fda-b80f-43d9-aedc-a981a8e88807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "005040f3-8fcd-49d3-9f94-050a48c77452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "709c916c-815f-4269-a998-ba071a5ddbaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5875e15b-1087-48c9-a7b8-4495d3bc40a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc8ac96-5045-46b9-83cc-06fe88cea641"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54470ee6-2665-479e-9840-c65bdf8eeb39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7dcc4c7-3cdf-4a6f-bb5f-64b30a860196"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19234f8d-fcc5-42c5-a342-20fc2711ee91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26436eb0-dbe2-4cb5-a5f2-750d513262c2"
            }
          }
        ]
      },
      {
        "id": "439ef4cc-e894-42dc-b45d-304accd07d00",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b655441a-a5c7-4bce-8052-dfe91b2d0361",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713da40c-2327-42fc-b0be-f5ab618c63e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae2bb5a1-e9e1-4ba8-b6fb-66e7c15de9d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3a47fb-e734-4a14-8777-1759c20eb798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8405e4-f10f-4038-b8b6-38e4c5d36823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95abc0d3-9b7e-416c-9807-df15a90b630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e5de03-38da-480a-97e8-e5263335944e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6624bba2-8ae3-4dcb-99b4-2440305b132a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886159d8-1f04-4147-9f69-5ab09ce8c91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be91fc17-ced0-4f69-a8a4-206e44642dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2cc4d0-361d-4fa7-a300-989ed1fb97ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dcf670-cf49-4479-a91f-c5cb0ccce77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f20a97-0ea3-4697-b8cd-b90bb011a2ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de18f70f-055e-4b3b-b053-7634306072f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e125e4-76fd-4efb-942c-3fa0e1263d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5bc88-2d0a-49f8-9b58-37c1cd69cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e3b640-b3b4-419c-98ea-47a1b0bec283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a035ed-4f3f-4a91-9a76-c3bdf36b85aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bdf157-5473-40bc-a2c8-91bff78e5707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6717674-2edb-4675-86c3-0e022685b839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae71899-856c-4d85-ba3e-ff2a5ebd1065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "622a6b7a-cb7c-456e-88dd-8e01c42ec387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbe8ea6-eb61-4d1b-9e3a-3992116f9af9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa0ea3a-f566-4314-a22c-d677fc1ee4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7a61ec-12a3-463c-9003-87bb90129817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd597c6e-615f-4233-876e-90b34cc21426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbeb3f6-3a77-4f4f-b9aa-7f6c6b7b778c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fc2591-1a05-4a9d-8174-df4af46db646",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83c5de3-7ce1-4dc7-b4bd-76df0d95c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5af18b-21d9-4484-9803-e81677bb6a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e90b52-363a-496d-bbe9-e741f95187f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d176df8-c09c-47f3-813d-53f0b0dd3374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d399e3-3cdc-4e00-9c7c-8a71ef1367f0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d1def2-8fc1-4b44-8942-5832f2c35130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f094059a-7975-4c63-a1d3-3abce83335af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb58410f-9dd6-40a1-9435-d820b0914253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89531bc-699b-413f-bc34-239a9e6e676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947cacfd-6b5e-4626-bc27-45df944e0c7d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d056609-ff1e-4528-9428-6ce32f8b12ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef84189-8ccb-404c-a834-f3f6c1bae629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee0915b-c42e-42d8-a56f-a066cdc20fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4420a34-2c20-4cc8-b485-9b6e62a0c1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ceb545-433c-4730-a1c7-eac413cbd59d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19e2b43-e214-4fdb-80ec-094300297949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c74ea3a-5201-40ee-a8b9-da9694de430d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b75151-5f73-42f1-843a-f85f0f518848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e437880f-d9b3-4fca-a8b9-7c69e7421094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed86f7a-3b1d-4950-b559-10a807246a54",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6876f4-f142-4e6e-b595-762c83d8a768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c726dc-4269-411b-a602-d4d7db7340b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7a2990-c1be-4918-b9d7-300134cb2c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19fbd81e-2ff9-4e86-9c1d-bbbbdc310b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daef2650-1df7-4af0-8157-17603ace0b97",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd3c7a1-7766-4cd3-a4fc-581d67bb41a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f4f83e-fd84-4dc6-b067-15ea25e821c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c2df1-13fc-44bf-ae09-f031f61d5ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93589b43-8137-4635-ade9-6282f3dd7943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660cbc9c-eb75-49c5-b5e7-cc4ccab88344",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02088b83-9553-4c14-8220-7f625e2371f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f060d1c-022b-467f-bb0a-3d8761d4872d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a124192-b4bf-4578-95cf-35b7d8eb77b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f814d6-b2c7-4bd6-b6ec-bd1387c3c2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4179b6-1cf9-4c10-a2e2-ae4f87cf4db6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e84cfe1-b0df-4c7a-a3e2-8426928f0a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dba6fc-7999-4353-8469-0d1624a86472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449b0e89-4079-49f8-b4ec-a749739c328a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2443493-62f1-4232-aeef-3775f7731d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786f1dd6-0c4f-45f6-9aea-ea7f977a9513",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec4eed8-4e37-42e5-bab2-903a8eb582db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c088537-811b-4deb-a7f3-3dce7c3dfd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b70f197-41cd-44c8-9e64-8c34faf95699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb02656-b4ea-4037-b813-aa4b8853bfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d763427-a208-404e-ae29-7760b250be82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc356547-e698-4fac-9684-d23dcd9ad36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca300d-469c-46c6-9806-608469c30e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f9eb35-cd2b-406c-bb43-0ed2ef71d7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f789c5-143f-44bb-97ae-479ca5bc1ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9863e72c-9d19-405c-a43e-84a88dfb9a8f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f3da3a-b322-423d-8f83-ccedcc16f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f9a770-07ac-4da2-8d97-bc12f29de973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848eb2dc-6a5a-4ab7-b57f-009dbfca59c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e54f67da-6952-45f4-8ea6-c7a2df6230ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9505a3f-b30e-4800-9538-b71ef86c5ff2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cbcbbb-b8b8-4778-a2af-99b003b4486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19e1c7b-d29c-4684-85ab-f2ba47b3819d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59917530-8df5-4ef5-8c76-55aba6f45783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef19375e-2c7f-4f7b-98f9-6de38fc6336a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acee11ac-9ca6-47d9-a997-b4d842905085",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f6c5d-972d-40b4-8d5a-2a62b405e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79124740-7c36-4d4e-a2d1-6c6c471e814c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a34806c-1c62-4f69-8884-60abb8ff8c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6c3551-68ac-44f6-b81e-38af854d2325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a71cd76-6058-49f8-9838-f96993c05890",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc3e660-ee15-49bb-8a57-f3cd768725f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a690a8e8-78fe-4fcc-916c-11d6d2b100d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04252628-6332-4e31-9cd1-259635a8970b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4319d631-bd2e-4670-9d4c-cfb56b576c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79de6597-fa7b-4580-a261-88838496cd8c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f467202e-eeaa-4895-8d5a-c64f5283f8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b542635-e3c8-4407-959c-dbd09bb5c57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b1b98f-4e31-42a0-95f4-b1b3146dec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a1f10f-2ddd-41b4-b1c8-55e85034c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3faf47-7a5a-4824-afa5-b311b612534f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d408697-77ef-4779-929e-e2c9d133c355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ee68f0-725a-416f-8874-f8e1eb8c8d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eacb6b-484e-44b3-968c-685c1e43d614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd06b16-923e-415c-b8af-0779674e9ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b24d31b-b52c-4fbb-a4d6-aa03d39ad91c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf98713-f4a0-492f-9059-f5b78a7d0cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f606968d-4154-400a-8361-0a3489ab738e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72b7f6-5d4a-4305-b1b9-9042f06a196c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3497d5-2a7a-4978-9504-0bd9e4bed457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a57c19a-6ea9-4813-ad36-17e910ca34f2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55de7b1-6600-4147-92d1-3449b65a8f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a062add-884c-4a8b-a6c2-504e971c73cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9faa77-98ff-4089-a141-e46a5c66d5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c88f198-cfc3-471c-8ed8-6118e28d2b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69113d59-8039-40ac-b2ca-7bc70d72f1d8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bf0132-116b-4916-b2ed-c39f6c4019c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b3a2c5-f3e6-4113-89e9-14baf34677ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035cc576-0f8c-4c7d-995e-974edcac3ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36e901f-7775-4631-886e-b196696b18d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ef3d74-4226-451a-9a18-9372bee75ac1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aace75-796d-4eca-a3a4-ed4e72544e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aa3b3f-a6c0-468c-a907-490e048b1f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3020d4-2520-4181-87f4-1ea6709711c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e2766b-8e3d-4911-9e9f-3cb4f7aa1c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf3d098-30d7-480a-a3ea-2dfb9de75986",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba1794d-4c88-4850-a24e-14fe61cc8e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5253dba-4ac8-4b43-b6fb-1fb9a10c074d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a86ad38-73a3-4a8f-985e-abc6a67bcc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "344a2df8-2e64-4b7f-b188-dd745c952197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c884b-7bcf-41bd-a2e9-b0efd1dd9394",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f424abe0-c59e-4a79-adb7-2dc6bee74fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07571472-7eaf-49da-abd0-d757f0cb7a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb1d39-c38b-458b-946a-42827ebd6712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f80e667-8844-42e3-b270-8511b403b287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365678aa-3647-44db-9332-4dccd8852714",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df13fe3c-8326-4031-83d7-eef52f2c4dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e663591-4817-48ac-81e9-fe3a75e61000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3e8aae-5fab-4857-8d43-408cb82c9a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a35dfb-f45c-48fd-9941-99916159231a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be6a2d0-85e2-4cf4-85ed-ba59408626dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4b4733-fc5c-40db-9cd6-1abde0666923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658b669c-7ee5-4d83-9646-f7b5e07b72d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97be9455-6078-4aad-a074-2ec49ed6275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a00bd1c-04bb-48d9-84ee-71a04b3c64a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00d75b0-1877-4742-afdb-fb4e373bb8e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "836fb994-1a26-410a-894b-68df5a988350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def2b9f6-5aa3-47e6-8b31-2efdc7e2de76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5804e669-8119-4b27-a0e3-fedc48e9a593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34af325e-6e8d-4d3a-b9bb-4b475834054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d99c64-1927-4362-bbc0-052e4ff67bc1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad31e8e-3e08-429c-aad1-4220ae180377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38eb92c5-5554-4b44-8c07-416b4c71b381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721231ca-ec9a-4437-b2c1-43fa32386aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6294d3d-24a9-41c6-bb93-5621a2cce766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee86a539-6d52-4fc4-a4a4-7fd2753d3fa0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc772bac-452e-4c7c-a896-8608af205c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6618d79c-79eb-4b01-87d4-8cd0ea40224e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166bae9a-a4f3-4f69-a039-0e2f739ebb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f17f625-d71a-4cf9-a010-ec4c6cbf4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c4fece-8e1e-4b43-81d5-cc45c62c6fa0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f62980c-1711-4f04-9602-c3cbc9e170ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807cc975-0ecd-4c7c-a863-cc2b9fde9fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e765c9f8-5e2c-4b8c-b3de-0868d0b1594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a36fdf1-7b36-497f-a649-890a0b31fd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e4f15-facc-4083-8dc1-1d2a4abef8de",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad43326-857b-493c-8db7-fa261e07bc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdfea9d-67bc-4532-a8ac-0ae5747db54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c726a6b5-8db4-4eef-ad3c-d9a6c1c00346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c433629-f230-4908-8918-87137b28c115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea4658d-1402-4252-9a89-3e97f4e0a862",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97561c45-4bd8-4130-ba5a-457f3a3a77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9138a76-a9dd-40c8-8ac7-b3b7488f81d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee64a688-a6c9-4969-a05a-881f2095c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19a97d6-23e8-48d7-9ba0-c8a704d23e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235f6ffb-f18d-4880-b322-b44ed83b69e9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad923fc-aa8d-405e-813f-90b11594dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1776271-5852-4ab8-a122-81efaba09fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ccbfc8-2130-4ff5-9d50-1f7f9537deaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37dd764f-5eee-414b-8ef4-b32f9c0237bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de5a012-fb9d-4d0b-a920-ac4c392932d0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4835690-1bf9-4f85-9bf2-f55973450971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8875b6b5-90b0-481d-a677-6b53684cc36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8663ae1-0757-491c-8555-be158cd38aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f44da64-96d9-4dec-8135-7b4e83cc75e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aeceb2fb-20c9-4dad-ba6c-18123117eb80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dddf367-993e-489b-8890-92a2a554fd51",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8188721-bc47-4bdd-b56a-d1f110bf7f8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "991d3133-ea7f-4941-9536-95f6985e965a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec8f0a-c8d8-4769-86be-65703743d8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9120b6cb-cc4c-4f25-a25e-4cbb4180c288"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7edf339-e3c3-4ed4-b01f-aad8ca3b6657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc2d13ee-b371-424c-b532-a48675da1623"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98f82bcb-1258-4e63-95ea-ad86e0b71f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c252189-f4b3-40ec-9a7c-017894f81738"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "452f444b-dd30-4fa9-92fd-77442ccb8d75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14112924-657a-4419-9786-d2c4243376e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b69a2b7-500f-42d6-abcd-a317a15fbba8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78c4bc4e-eb2c-481d-9d70-4eb88686cafe"
            }
          }
        ]
      },
      {
        "id": "5a4962ff-1b9e-4b27-b7f6-2da1e7c15f3b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "43da9824-7178-4d1a-8b5e-be334ca89ad9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96346579-596f-45e9-95eb-b58774dd67c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0d9a958-3685-4a5a-ab23-301b23777277",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b661487f-af91-4b45-8d20-6c2ba81b5171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad7b4f0-fdda-4d84-a767-946015569e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5245be-ff26-463a-9eb3-bd52680a9429",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ca79b-4132-4372-bfcf-b46a8bd1251a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a3f2a2-1168-4cb6-b263-659047e87274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7d4e92-3640-4070-b8ff-6357b2027b96",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7100d362-cf6a-4efc-bfac-4ffab335c9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93566d8-6e09-40bc-8811-d5e8592cc1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5786024f-3c2d-4aca-9eab-808d2ce72b81",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed7c09d-5b30-4b1e-b4cf-aac8d94755d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455b95d1-251f-4a6f-b40f-c35526452b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04039126-8ddd-4e50-99aa-9cd8552c659f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0988b8d9-f6f5-4ead-8ef7-52fca5c045df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc463656-686f-4c48-beb0-88678c0058f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cbec2f-fa27-4e2b-84f8-ec060edd162b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca2bba0-be3a-4481-91b7-1e62648563f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc9aee0-e6ee-423d-a3a0-01d70acf18c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0ae4be-55e5-4a09-988a-fc86923e1931",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a169e1de-48d8-4071-b82d-1a30d818de31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2334d6-01e4-48e4-b042-b070144e5a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a47ee-57fe-4d43-853a-baf139b29e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a402e97-52eb-40c1-a28a-f62705270bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b3e58f-1a09-4ce5-b7a1-70b06eeee8ab",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6f6101-3230-4ea8-b3bc-45d81d99cb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021f8fc9-f2c3-4eee-8fc5-30c440bd2a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9552b9a5-9fb6-4817-bb49-5f85a485a4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da637055-96e1-40b8-957a-704694c38228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57856e55-d6da-491f-b5e4-f100d16115e1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6de6ee8-ca3c-4b2f-bc83-07bab325e47a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9703d77-a89c-432f-9fe6-5e57fae918fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536125f0-9e5d-459a-a37a-1b6d5ea3de29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459303f8-8d4d-40c6-a7c3-7a7eb7d757dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfb154f-0c26-4a0f-af1d-154f05f5c4cb",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ecf49a-8056-4920-aa8a-6ca7b064bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e7b136-f493-4a59-9ef0-d77f88501d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84599569-28de-4882-b787-973b92bc38d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2beef9b9-52de-4b24-a19e-52e6bca7ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab788ed4-2c4b-48d6-b708-77a6b0a1e933",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44dafb2d-40cb-4aa7-b10b-14605b85d976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329f2251-8bae-46fe-90d7-6bdc65158283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d9879-b68b-4c49-8bf8-0745693a240c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fd85d0-ea0e-47de-a37c-b10a229d30f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c695a07d-4381-4173-bcfe-23a034981289",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7b9cb1-5539-4ba0-a433-74bf141b1ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656bd6cf-44ec-460c-86ef-e3b7df341293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1496cf7-4b21-44eb-9318-541723df5cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52aa02d-1a5c-4ca0-adaf-5b14b9900047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c80924-3539-4858-9efa-5524052a8b70",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c55de7-cf1e-45de-94c8-f162549304b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf6822a-61ab-4bd6-a258-b7631f0901c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9706d1da-8f50-440b-8b1f-67006c275ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03da6b9d-12e4-409d-a742-66b993908bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20013ad2-c449-4f13-822e-75a6bd765c32",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576c0f36-a6bd-4e89-bd0f-186044e32126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a6205e-97e0-4619-aa98-d718a1ea255b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29caebde-909d-4b96-bd67-0b729c8d3f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5167dc8f-8ba1-414b-86d4-ab6fcd8d234a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de4269-eee4-4c6f-bda3-a3803828f265",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1a05f5-3535-4783-8f1d-d797ecd1de18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a845aa-3545-4550-a3a8-48c1f9235d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d099451-d084-460d-88be-b6ef105adfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40647a43-9f26-4980-a3b7-683f6238459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa11a08-adc6-4f89-9218-55ac684b6c4e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e2ce3b-c4ca-40cb-aa40-0ef409bf4d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e417a09-4495-4129-94cc-c568affffecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fd271d-46c3-42df-894c-941bfe2a4986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff1d9c4-52fe-46f8-8830-25540a5bf2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c1f66-b343-450d-83a9-76be7bb176b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ae743e-a641-4270-8f46-8d5596425b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8e52bc-609a-4389-8339-73ccabf0bedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c42dad-a0e7-4457-bdac-dfa1329f0228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e00f16b-8418-4096-8750-a38da67f1995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c5d4a2-462f-47b0-8f95-07842462e82b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ee9a5-0062-4594-bf47-fe93a8591374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c0ef90-c73b-43a7-b381-1073b2048a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31efe978-3e45-49dd-83af-9041be587f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73625e4-fcff-4ff8-9c78-a6f2178d9645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57443ba5-32f7-4cd4-8d27-6bc47e809eca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503236fe-4106-4944-b6e1-d610d7232471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b022339b-269f-4ca2-bbd7-5e7b1a9479cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18d42a3-d300-439e-a527-f072449a8e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7b8071-9fe7-408f-b305-dda58a2c3605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab50594-17fc-49ec-b781-39ff44e41157",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd77d6e-0ec5-45c3-a8b9-40dc619b46db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e9f7bb-ad63-4207-8dd7-aca0d9b53a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fce51d5-509c-4654-898b-f6bcf3b85f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebed4c7-f68f-4147-800d-3a87edabc20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c564f87a-dc52-46a4-936b-552a4784fc43",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96343e44-6fd1-43ee-81b5-7a94a573f3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062c1897-3c8e-40fa-9308-bd79ec46d8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58e928d-3219-40d8-9c06-0303eb72117d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9f2562-0baa-4f70-bef9-45eb2184474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e16a7c7-f5ce-4388-af5c-3f32a4a5d6e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbb6c61-bc90-4df8-95b5-5c1149f667c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3593a6a-bc44-4bdd-81ee-489280c6dc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edebc9f2-a25f-466f-ac52-7a9e46d148f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c263d6d-d429-4d0d-a819-87511095ce28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2935389b-8d91-421b-97c3-accdb846220b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a932c8-4e6e-413f-99aa-6c6f1c9f596d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7478ac8-6414-484a-8acd-77434a780d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0da67a-2004-4b0e-862a-4f4b424ee90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c559b0-9ee3-44a4-8e50-072ab90a40db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7767b1-6d24-44c0-a4dc-3e2c8191fa75",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8884e17-78bc-438d-91d9-c39c39fb4118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97f63b6-4f9a-42dc-9c5b-319e60e3f8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e772645-bd41-4e2a-836b-0bf78f375365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fb5269-622e-4007-8805-74496bbf0d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b90743-a8bf-4220-84b1-8b3d2550bf38",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de680a79-89bb-49ce-b2c8-bed990a04984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24542f4-41a7-4726-abc9-63ed10879ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99af2b1-aa62-4a5e-8f7c-d646a042ded6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16307ff1-8847-4608-9afe-9cd637aa1d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e80674-bd72-4f31-b629-48604f9be8cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6dffdb-8bc6-4776-95cb-338c882acb14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddaf5f1-934e-4d22-bd62-6941e6da8321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b691227-3d4d-420f-819e-488ac8ce67c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfae4c99-ef32-45a6-a084-4cc0afca1131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f516080f-e0b0-43f8-9a1b-a9f6f70423ea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eebdd8-1860-4dac-ac3a-636a483cae3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7854e721-d2a8-4dc0-8a6a-23c9b6ca47bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68912a36-8afe-43c7-adff-15074c6dad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff0ab2b-8a93-4a8c-8cc5-bed217f0cd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a59dd2-1f75-476d-8f19-a5364a0cc328",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935e4852-bef6-4ab3-a0a9-d5d1858c6d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa8457c-0bb6-4612-b791-ab8c3a3601c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4294298-f3cf-4f8d-85d5-d0343309b113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96383b8d-26f2-471c-85d8-3ceda51ffa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f4353d-1967-4b78-8700-15f18a772dba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11b6526-da07-4a4e-994a-4c7026a74944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c9cbb7-569f-41c4-be50-020e2a196ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9988a728-3aed-4109-b836-925050e40431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72311df7-ff18-4506-b67c-78104a3ba1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8028ae61-ca85-46aa-a710-f1d4d372ff9d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fcdbaf-57d6-42de-bcd2-a2d2173d32f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bfecde7-5111-4a7a-88f4-08899b263976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066c24b6-e847-41ef-a280-8fdd3c8d56ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b50503-7665-4b6e-bde2-7bd7a63865b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3afc4a81-5397-4815-ab68-e808b3684705",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b3663d-693d-40da-9300-3a6efa22acfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb33c42-b5d2-4bd6-bab6-bb0a48521f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eca2259-1859-4c67-a9e3-8ca06dd8d7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945ea97d-d835-4fbd-b87e-d51948d4d1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbdfcc1-e811-4700-8842-351221704939",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2a7afb-75b4-4d6e-95df-c8b157b4c7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c3f234a-7f7d-43ee-b9e2-f7fef7bf24b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1def7c-7ba0-4ce4-b30c-ba7989d15a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7bcc74-7e3a-459d-8037-503e34372293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142343e1-5cc7-43e5-97e0-609f67be22aa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c462912-3898-473e-9775-31ba79023225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba298437-67dc-4065-acf6-a5f127e55b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4be1990-d55d-4ed1-b987-fc1086a3cbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e63426d4-39d1-44d7-90a8-7f95bf464db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165fd3ec-d2a6-4a91-8068-a347626b4a5e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c33a01-485f-44e9-91f5-a7e73549cdbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cd4cc04-45e8-4727-9ab8-246753958153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f518e5-69c0-4e30-92a0-a6a84c501888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02641c60-a061-4a56-8451-cbc00328028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c38442-021f-4aec-af35-35df3e457ce5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313fefb8-ebe7-4c09-a9ee-f350efa1f80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4966f31-5495-4dac-bb94-96a511ea90a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1082e4d6-fe8e-455c-8eb5-3266e71b5767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce54b43-eb09-4208-a1b6-73ce80072d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff869b09-ffbe-4bda-9976-e3fe2e68aeea",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3861c12-3338-452c-b418-d3663663c1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57849b11-7f83-4a29-8160-4604faac8b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f938042-d077-4fb4-98f5-c28b2db347a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3c722a-ed77-475c-9c51-a3ab52d2a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb4d8e5-46da-44f6-93fa-3419abf217d9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfd652a-16a1-4765-a140-1e52a60f1620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5c9cb7-3b39-47b8-9799-7fa6005b3519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994e3503-f943-479d-b188-a84f045a7c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503887a3-5272-4da9-9eb3-05bbedfe3ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0639d75e-b932-4923-8ea8-1c3828e9e8fa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f03d125-cedb-467b-afa0-cf8627cd3d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6323e2c8-5451-440b-80f5-9133692c3b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ede914b-e88f-495c-b7ae-b178440a73f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd79dd38-3f2b-446c-b61f-55682350e4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71ebd12-45e0-4bd8-9d2e-35e9dece87cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2412d-cd70-4964-8630-444b82d346d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d5e611-ebfb-4e7b-b0c2-7dfad6d65226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8506072e-e614-46cb-bd48-005ba48db82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2e503a-acb9-414e-87f5-2c3a66b1ab72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be55ee46-a091-4809-904c-e8cf91c436e4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d94055-957b-402d-b20c-52b96be632ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b16f23-e506-43ab-aa79-3c26ebffc935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a179d092-53c9-441b-b0f1-e88efc7d97e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75c39d9-8bb7-4eae-bbe6-4245cab4a4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5465a849-ee98-4673-bd3d-b3748d3da71f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a10a2c4-aff5-4267-8df4-c62fb0ebeebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847e2dee-4d2d-46e1-8437-756144c1928f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b19e339-739f-4690-98d9-f63ef423ceb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e4e801-2be6-4f96-8a3f-48c812f82241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27af0275-6f94-4482-9cd7-668763300e5e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b767d93-e927-4d76-b20f-32ed1bad553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16da69ed-dc5a-4b52-bf86-efe739d81051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44f43bd-1cb1-48cf-abc2-c7eb74782938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c74119-2736-41e4-8929-ea5b78c14c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367114bf-18dc-4ba5-abcc-38d6ac644145",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e85ac4-5001-4d76-b313-0eb2519954b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c02029-0701-466b-942c-2ed1de5a843a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32664230-1ccf-4a39-804a-355843f440a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2270ad-5556-43ea-b25b-3911f38e366d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce146e0-3675-4af5-ae71-0f14ed6fb781",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5cbedb-de37-485d-bc0c-47ba840a8829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777973f2-c48e-4d40-a66b-27f4252ff8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485f2e4d-7c49-4753-8f9b-946146628743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a7b7e3-79a5-4505-98b1-f58f11e5128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c667c42d-a4fa-4347-90c1-6ba46035eed7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69076f11-b581-4f60-b2d1-88397a48bc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7da93e6-7c72-42a2-9bc1-2ed1e80119d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd01f05a-a9f6-4284-b558-4c9bb475627d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a8d07f-8658-45a6-a663-fc227fb963a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a5741a-e5a4-43d4-98dc-78bda6dbf217",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c39c77-16d9-4b95-adc8-cd499d787344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366769b1-c984-4568-9ffb-063b1128284c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27f0f62-c0fb-4edb-8b40-747638bf6321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39d3455-6968-412f-afb2-09b4ce0fc550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089505b9-e4d0-44a8-9c65-43b3c7f8ce96",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c97f83-1103-43c7-ab5f-baebed030cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee764664-f60f-493e-aa48-87643c750fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91b97ab-43e8-46f9-8f3a-ff8fd2d0a3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47088e70-fbe3-4dea-a1b5-408f4e9af408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36530101-295c-44b2-9480-85fd57316615",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83ebaf-697b-4185-9cf5-e72def8d4187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e732a0-5fde-45c5-a8bf-1fdd48e76a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c00fb6f-4690-4e9e-b4a9-26e48dc4a5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fa24e3-d321-4896-8695-2deee892fb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba4343d-d4de-48a9-851e-498cbcdf4fe5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a41c3f2-0f97-4358-bee1-86238605ea24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb90c30-46c2-4d90-846a-2043b266fb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4209cc4b-c299-4263-8254-2d6508dcf664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868dd87e-4ad3-46dd-9a5d-8c7c4381f8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d6a5e-73ff-4f8e-a395-3806cd3a7a96",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ffd656-f78e-4d4d-806d-ca79ddbf5320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f37d30d-f145-4f44-a073-f17a83cde4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b98e0-8753-48d1-9953-3f902fcee457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f48431-69cb-4eef-9f39-e6b0d0d5dba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea24c09-8fcf-450b-b8e0-ee1ed0c3e205",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b5267a-9b16-431d-b4b8-9353eee8b004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24caf162-a58b-4920-a429-fb7d29002782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c2f6f6-021b-4b2d-ab5d-2cd207e847ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac48fe0b-fdb0-467b-b647-be594a44a9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9090b81-7c9b-4055-802e-e8dc38591302",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b3bbcb-a639-4d11-a53f-a952eed7ebaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afc9b08-408a-47d1-9db4-02413a3b357e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6401e9-c64d-414b-85a1-7d6556665cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a900dff-20a5-4862-984f-f10ddd955c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f5332-2530-4c47-b033-c6085481976d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8412e61-7cf6-4308-9210-ca57f7c47ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a30fb40-1084-4d9d-878b-e855de34661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6294645c-1455-4283-a4a5-b84ccefd47c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f2c2b9-d9cc-46b9-8b1b-2c5e92202f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9edbba-4eb6-4f46-92fe-48ac4589f14e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35045137-d609-4b1d-909f-1f85595697fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3102a769-b0a8-4f9e-99da-3aad12ae5535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6117b6e-9b11-4a01-93cf-53a77fb27a8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e07691-b9dc-4954-bbd1-715c08bbf1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0939fe4-37d0-4900-899f-9a34264bf95f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16cc138-a0d0-4b65-8120-2411ba8e0925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91f2e01-7efc-4970-8d03-00c56ff4e2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdda6b7-e44a-4fb9-a700-d013e5633da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a4e3d9-2cfc-4520-a0d8-35e4637eda74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf1d5a5-e356-46e9-9fb9-ca7acffdfe37",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0378ff85-1867-4756-add4-4c9b9c9c9aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b77754-db78-4c0e-8652-835449112db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac2788-6ccb-400d-8c23-f9c703b2fbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b637602-bea9-49bb-8c3b-b44cd6ca7a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b61dfc8-fc89-4b63-8f63-edef83324587",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b293b2b-59b5-46a7-bc5b-8cddbfffaa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455f9ed8-e47d-4a23-af18-7e7196091f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abad581-9682-4cc5-8b9c-4a78a8fe7f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f341231b-c44a-420b-b008-8584c43de860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd05039f-640b-467e-a44f-8b097628af8a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e56e305-635a-4813-9301-e5b0f3fec602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48fb319-d1b8-49eb-b5e9-d8329acfeeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb19c8c-2b15-4fa1-a7b0-056e3095c847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed87ed52-277c-4665-a830-907e0dd397f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f68ecc5-abfa-4911-85e2-9d2b65795d9a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d6f832-baf1-42c6-86cd-c3cf9c199f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09f85c2-5e42-4d6a-85a4-4ff29f21e819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a0d317-ae38-41ae-9d47-e6f8c4dadac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84be4ef9-2db8-47d5-9792-263f32c3b5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d4f7b0-21d7-4b76-9de5-edbda060191e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87b2d59-2545-40db-a5f7-4fab1b807ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb59c9d-71f1-4eee-b640-31f2874dae99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d79ff46-5851-4c94-bc77-bec51d522b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4b06dd-fa20-4e65-8e32-706462da6fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1b73e7-a492-46ec-b728-a955ac3ade0d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5370e9b6-0bcd-4c61-8873-90eac116b5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b82143-74d0-4542-89c2-18d280a7d547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c6119d-6c6d-45a4-9a33-33fbc5b0c119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5706b0d1-5609-46c7-a748-a78ecd3c1036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55b053f-998f-4c81-9ccc-6311abff79a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c89268-bb15-4013-8f75-49014cf9ed4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5726b6c1-08da-4a6b-aba1-be287efbffb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1567f6-5672-46a0-b861-06d06c7971a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e7fe2a-10c5-4fca-851d-98572b5dd8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8c9e8c-02c0-4b04-a7d3-9287ed95c0c3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b546f57-b9a7-446e-a479-e76b3ebdcb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974ab8f4-12e1-4a3c-90bc-cb25d8c795eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5206eae7-2d2a-4e0e-84e1-8797f0e60728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61024e7-5c6d-4439-aabe-94f97ce4374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7087421-ca72-4b23-9f65-68ca9ccec1c4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07e9b0a-fef7-4efd-a3a1-5b21ad601d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b27cae9-8778-45b6-81f8-bafccdd63b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81eb7ff4-999e-4b0c-88b1-3b5a2c7bff8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a122d15-cecb-4587-a475-32f3889adb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b9414a-5a5c-4db6-bcfe-4020aba5f41b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dace9a93-90b4-4a92-8b3c-2cdec2ffbf64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccf07ba-8749-440e-b072-bc9d83cef6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491f049f-9a58-4be6-90f6-935fb6de4bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25915a3a-82e2-4613-96c8-16657775694a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46c8b1b-f3e2-4e55-91d7-de1bf55878c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30220ba8-b068-4f84-9ced-8bdf70b37fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd8f97a-4c46-46e3-b293-b03a05c964e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793a44cd-d6f2-49f4-9c23-b3fc508b8855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca0f535-ba1d-45ba-a246-c985e49bcd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae26ff20-83e2-412f-ac13-877e8836507b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a830e8bb-429a-451c-8a7c-c15b768adb80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb29b5f1-bd5e-413d-bca2-ebadb1be9ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1701788d-a4fc-4cdb-91d9-5fa9b2984cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42d73a3-cd91-40a9-85d8-6a8958b765a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27ae745-2fed-4bbe-994a-37906de311c0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e37b09e-7061-47d1-8033-3bd2c7787efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd244be-a892-4cd2-b3e5-5bfe59cf6fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87c44d6-5ba9-428a-bbeb-35fc0ad9b1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5151850a-d456-49a4-a26d-28abca4e0a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fc493b-0188-45eb-bcfa-10043acaabe2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae2e9d9-0e7c-4085-9d5c-744cab1f87d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f114f55-2128-4e8d-abda-52eca7920112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a8c8d-d3f8-4f9d-9f0f-d2f69887ca6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d3728e-3fcf-4b75-ab5c-fee5bc63f646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0440b6-dd7c-4d08-b0ff-53d16aeedb24",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691dbfb4-2318-4f5c-bfc2-510585f1b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d44c23d-1b53-4a04-bb09-a9f51792ade6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41532f0-e626-41e4-9b87-4a1949054ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d247522-9c86-48c2-8ac0-f336d82ce33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b31bb9-a063-42d4-bdb4-58c3af658095",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5ac9a-849c-4c96-a897-37e4feac0c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6877b3d7-4e29-4b7a-897b-29140da5a97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78240b93-651d-4b51-8ce0-ec1eef55a834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94709fcf-6eb3-4b22-acbe-05bc47e80cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eb9482-d80c-4fc5-9cfc-82c69827c4b5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64f5bf0-41df-4bdf-9f49-3570833c01b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b51adcd-02a4-47af-b864-aefd3f750e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce96f31-9e20-44cd-a08d-044549929cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b25404c6-0fea-40c7-8804-fae4d9a08892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb47ffc-884d-42c2-b868-d8d61b82f302",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd3f27f-bd46-429d-8714-7c0379a60c04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ac8c8ac-53c2-4802-9108-ec0d1bc974da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dfd630-5f18-4ccf-a98d-a6ebe60d8c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6701e7a1-87f0-4744-9188-6e5eaab65b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd2b537-f92e-4b53-a9b6-19783a30a6fb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f3b3bd-6deb-43c3-a6d3-ea84956029b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e5e900b-ace3-4a32-905a-52682d5f9616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af49f43-b4b5-425e-b6e8-670e3b6a6cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74892750-3131-4cb8-b5bc-b776b5759700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd809ef-a067-41ac-8a2e-5430976b9c62",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdf330d-d9cd-4cfb-a70b-3488d7b9e443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572be4d7-8369-4e30-9fa3-b782f2b1b1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34b4ccc-ea75-48d6-8f48-f1305d3088be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7601399-1a50-40a4-bff3-55a15f9db98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3380d877-da6f-438e-aee4-c5915c2b7eac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b1644f-77d7-4638-8aeb-cdb2ee6f0381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ff7997-8aaf-47e4-968b-afe33345bb39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188220c2-06d5-4397-93f7-952b318c5677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e656cd-87a6-4fd3-ad2f-8ca1f7ddc7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07845450-14a6-4402-a44e-76f24a8e3333",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f35e1c-d17d-4650-b579-91314551c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd573c49-49d6-4184-960b-8c7f9d6bafca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebda2ef2-e3de-43a1-9d2d-922b504ce122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cb2604-6dad-45d6-be0b-78984f06fc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98482210-7279-48a0-9378-75f5cf69cec3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4cb093-b822-4d00-a19e-54cb7dfbb4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e8fb90-9ab8-465c-b7d8-a2316715dde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16b0b84-a006-4780-b0c5-d91817ea390d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eff892c-d346-4c92-96c1-c363ce029167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e9e03-d50d-48d5-a2e4-03bad17bdd77",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac14516f-2696-4fb8-b9c3-41194a73f5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c80df12-d275-45e2-81ba-068bd8d04df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8eb5e11-2a71-44ea-9b4c-dd143a409b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9687ad57-bbf8-4392-a624-b25bbb97b7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882be17c-ce1d-45c1-b2ae-a7f787afc69c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813b0168-db6d-4848-96d8-69c7bb42dc21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d1e5bf-3520-4b19-a2b7-e97ce9bcf6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9754cc5-6bf9-4f12-905f-0791ce18deff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7649efdc-f236-4733-b066-bf5f0fed15df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71ec50d-225c-46fb-af3f-b8163a99ee2e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6ac928-20a7-4f8d-9c69-3b8561e6e715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3555a1-531e-4959-9b4a-fa5305c80cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92415195-d776-4a1d-8175-51a6d72225a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a63e592-6cd1-4d87-8ed2-959a8008a1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd1c828-68b8-4984-9ab9-f592720cd1bc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e480a2d5-4908-4add-9b02-add3463103bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2af3f1-26a8-41ca-b625-76b956e1889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15144a5-2706-4b50-8ac4-d3fb99d66f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acc432f-4415-404c-ac66-12c8587cf704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0410ce-25f2-4ede-bdd6-c8d1a6f6cb26",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d224cda3-7b56-4766-b018-92f6d7a43989",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ac5bf8-eece-471b-8d56-33fbb3ceb78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c734e153-e3d5-4c86-b67b-6d5ca5026451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa21106-067e-4141-a02e-5812aa0bbfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2526f781-b88a-4334-8e6f-8438861fc215",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df1058e-11a5-436e-8e29-89e25f5bc47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88deb438-ad45-41aa-b582-925caa19df70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a999291d-73e8-4f30-932d-c11b9d5dd521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130ee66d-d6f9-4749-b834-80927f7f2188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87fd8d7-1d09-44df-bd82-e1c565bf1c3e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bd5eb1-9366-4f3a-b8f2-d8511fff01a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afcb013-531a-4aec-ab22-9044233960ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbefdcd-8274-4cbb-916b-8f60edfdb256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0dc7dd-860c-4ff2-b07a-700cda19f901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f628b3c-6dc9-400b-948c-53ce99830f53",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f81e93d-a76c-4783-9bd6-17f22bb13074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9873b5c-60dd-424f-8158-2f8f91bbd518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f473cae-117c-4440-988f-bf9a9cbd9565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dc5ec9-2154-43d3-9812-87b225949c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd56ed13-04cd-409c-a14f-760cda96c7a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a99e6c-38e7-42ac-af5d-b222cabcd734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebcd9a5c-73ce-4b33-bf42-d93d4cbe55bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a78ea87-33fc-45fb-8f04-957d6f0e8510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064c18e1-0915-4cba-bdf1-5674eede3caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3258d486-bea1-4b2a-b5f9-48c3723835b3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68477199-e032-414e-a9eb-d05000ee6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9139e67-a750-48ae-9bc4-f9c7c9813ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9bbc56-0329-48c1-a304-b49d16406e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cce5c3d-af44-4394-83ff-9eeb6124310f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93eb545-5af9-4988-ae3b-56318e57552f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9688f42-83cf-4db2-ac7c-fa52dac1ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef324fec-7e72-4709-b444-784ec83dbf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a1c00-5ee1-4d1b-9e36-b521bead4442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4c2234-8fd1-483b-9ba1-b266e13fba9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f5d3d8-97e4-4442-b302-f2447ed26636",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab1e2f-9101-489f-8b7c-ae40060c7ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773f4f3f-e398-4c11-900e-2560a2a8ac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e978760f-0275-490c-8891-3baf6cba0b2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb8fc3c-c2c2-4720-a68c-bd3d98d25cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f253d062-bd52-4346-861d-acedf71d0127",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f85a97-2141-463e-a44e-abf93589fe15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6072d6c8-c05a-476d-ae46-67e7f7d9daac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13101bc-0381-433e-bb7a-489a23fa4a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b867cf47-c0b9-4329-83ec-4ea73de1ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a00be06-e2ce-417f-9250-c3436bf370a0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b01eaa-4d43-45fb-9afd-6dcc9ab82cba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ade1e30-9a60-46cb-b9d4-0f14474f385d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ccc3bc-64e6-418e-8175-fba137e1cbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aed747f-a362-4cc7-9b10-0204c68da6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff75ff2-d316-4544-9fbe-75d74f03b3d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90315839-9296-4ce2-8b0a-3198997cb42e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba9f61d-7750-4f6d-b80c-afda91b8d7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4200080e-ec24-4b06-bf0a-bab5d74204cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786a3322-e908-46e0-b265-7ac197fc92fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d41ac1-0d0f-4a48-a577-015be821d25d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e54f91d-d7f6-49e6-9abd-a225dabec070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e71599b6-6def-41bc-b86c-dbe99dc7371b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85895093-d398-4a36-9561-6c251206f1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36794e39-b302-443d-9f96-2b5ad8606b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166682c2-dbbe-4ffb-b8cb-2c62b734fdf4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99adba85-9c35-4cfe-a9e3-8f3c9b76842c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d255cb8-17dc-4c69-95b3-893d3aa20c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c269587-65f9-4d7c-8121-635b3525c9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc57c9c-852a-4aff-9865-8a2f64b4814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2219a69d-f349-40da-bb3d-77ff63005a13",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a157832-9c7a-4660-88ed-04402a522ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ef38d6-4f46-4530-b978-a3488d42a45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb3faa4-4036-478e-b8fc-46fb545d0141",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b134d32d-f548-413b-bdcf-cb12e7c5e923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015fee3e-519c-47ef-bc0f-06bde65f94c8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d1c54f-02c6-4d10-9308-494926a87fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bbeac39-fa6d-47e8-b2d2-1e48c52723cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527e09b7-e0b5-473c-ad40-31a50e4f41f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9379906-d5e0-4f4d-8154-ee866cfd100e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3176258e-9cd5-4bf6-94e1-79b47e02622c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c5d25ff-9548-4229-b6b1-09737e1656d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d28f541c-e06a-4539-90e6-edd118dab01b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80bde384-b16d-4914-b961-f8a9e33b78a4"
                    }
                  }
                ]
              },
              {
                "id": "8453baaa-1caa-4cd1-82ec-de1c89d424db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e161d8b1-b504-47a0-a4d7-7005609304a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c54abf-5434-4584-b1fe-b24dc2329385",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "64d1ff01-19d7-4791-ae87-83e2076f2c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85993c9d-e58f-47f6-aefa-7bd2bfd4c8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29a3af4a-66a1-4b06-af63-84a7dbbbc88e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b35599df-18dc-4ee5-9114-2fe1a04a87a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ba493f1-50c2-40d4-9a74-e7cc0695d628"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4831ac4-1c68-4676-9223-28a75827361b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c45c8e06-276d-4db3-9e5b-8ca4e3651863"
                    }
                  }
                ]
              },
              {
                "id": "0a510e96-666a-45a6-a84e-70e18b129820",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "38ee21c1-034a-4ae1-98b8-83b50557179a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbbbb94-1f80-4f98-915b-9f397aa25c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "066e5a0b-9e7f-450c-b089-cb16c570583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005401e-1e79-400f-9833-aecaa0715db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aba6bdf-481f-4efc-b8cd-9c5289e2ddb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29dcf900-8692-493a-8c6f-291b4bdf7119",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41988e0a-2e27-4756-9283-7dcfd5064faa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1039fcf0-f1d4-4163-8d85-7e7467ffa3ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee2f6bdc-afe6-45b1-b61f-3f544c47a609"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7891220c-233d-48df-b8f2-c73d38f2b8df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b442b1e5-394c-4ca4-9dea-cbb2c9bb3290"
                    }
                  }
                ]
              },
              {
                "id": "fcdbb533-b3ce-4054-991e-78b9bcb98769",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c620600-4c3b-4cdd-a042-43e2c8789192",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9ec4c7c9-eac5-4c50-8320-bf909bb2a6fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef635615-65be-4e34-858c-4241c3c4fd82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "802edbae-d6fe-4677-bbe2-b904047fa86b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65ed1182-7afd-4fa7-b265-ef86f3fb4808",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4cf26a53-461b-4bd1-a686-1c75981abbf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e023e654-9823-43e9-b36a-3a55d512d708",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3dcf91f6-a8d7-401c-8190-ba4d95130bd3"
            }
          }
        ]
      },
      {
        "id": "0d22b76e-e38f-45eb-ba34-9b09baa7c1a2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "18a5503e-4dbd-4074-9a56-95b5cfe73751",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ca5205f-d97a-47bd-a270-44dc79b5af51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b9a025a-47fe-4da7-8d84-95088741692f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed73fe4-784f-4ea8-a4e0-698b6b4f4e81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "90a43ea2-d68e-401f-b859-238de9fd8827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532cf40c-8d0a-46f9-a5ea-556ae9b9a7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c814893c-578d-4972-9198-896476dd0782"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24037bcd-f41d-488b-a5be-2514812b41cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9b53290-78ff-4ea6-86de-db3de860b6fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "756ee812-6642-4aac-9b36-412c1738e90a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07386619-7610-481b-b86c-abf9b9d4289e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb024652-1f08-4558-9945-85d106465f3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f5fc42df-338d-4eea-9a2e-cdee5a3c5aca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a8b1d7c-a2ef-4d3f-8324-8b4a4c830a4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c441eaa1-55c9-46fc-9876-6446ba3ade6d"
            }
          }
        ]
      },
      {
        "id": "5fa75c60-7e51-4625-93c1-203e7c80e545",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8885d0c0-7e63-4151-a6d2-8f6c90265f76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81652093-390e-4631-952d-86821d630efb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b856245-450a-4ca2-9e0e-f0c8240c1c26",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50322df0-7428-455e-9323-0e1f57388e4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ad78b7-35c7-4ab2-8501-6463f85917d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d471c219-4be1-4c01-bc2e-e352dc06b175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beeca0ca-17f1-4419-90c3-c2785a21ce77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e202fef1-f7a2-4d7b-873c-60cad734ea6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb0bae1f-164c-4314-a0ec-3962fc6216b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd3a7b68-f264-428e-ab93-315d2713ce8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e141383-a609-4eee-8bca-c9775e740894"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00386db8-39e2-4276-92bf-97fa4f339bb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ab0d82d-9c5c-4e9e-9aa4-6d0bac6d3188"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddf98859-d853-4779-b728-2256211317ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "512c64e4-fd8f-4345-b5d4-60ba91e9c426"
            }
          }
        ]
      },
      {
        "id": "e603f487-5667-4055-89d2-1832bebef17b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ab5a13d-cfd9-4070-928d-14f427692796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab92f685-6109-4c86-a4d6-b096f7312803",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83cc18ba-5aa4-4946-8f8d-020028406a13",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58b601b-26e5-4bf1-986f-b7379c5003d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f31b9a7-e5a2-411e-9472-ccea1f6a918b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e665ac9c-a8e8-424a-9492-6c0f02357830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6aefa9b-bf7f-4929-ba66-ba4e84f52d70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f36f1a5-4555-4cbd-ab19-c06563ad9f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d83bc46-85f1-47c8-b9d8-18f637f98a29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a5d64f3-9084-47fc-b89e-11fe4dbb3401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7daaadcf-f515-4e28-9248-af1d344cd4a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53a46c71-a4e5-4d54-9081-6741b88f2082",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93b267ca-e887-4c05-97b7-e8a9888681ee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bda93f9-de2d-41a5-864d-0613add7ae79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b506a3fa-a06d-409b-9d29-205fa87c910e"
            }
          }
        ]
      },
      {
        "id": "95483444-a50a-4715-9c1a-a818bda18124",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8885f839-9636-4e08-97f1-1e6003517b34",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6260f2d-bc4c-4deb-872d-17bf0c8ac6c1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "520e0f2e-bb1c-4a63-a79d-71856ab5fe45",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a6928a3-2f17-470b-b32d-ce1d292c523d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68cb4cfb-7925-4719-931c-9b5ff47ed6d5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.72982456140352,
      "responseMin": 5,
      "responseMax": 464,
      "responseSd": 34.83586559206146,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708562028791,
      "completed": 1708562046045
    },
    "executions": [
      {
        "id": "59a6a05a-268d-4b85-9034-6cc05208795a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ec59a6a2-cb91-41eb-969b-34a536e41016",
          "httpRequestId": "fc615fa7-cbf0-440a-84c5-6929e8009577"
        },
        "item": {
          "id": "59a6a05a-268d-4b85-9034-6cc05208795a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b16ffdd2-53f5-45a3-a163-b081a3982d6d",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "519e86cf-70c9-449a-bd5c-37fe5d9721bc",
        "cursor": {
          "ref": "f0aa12c0-2fc8-470c-a040-d770856507de",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0a90eb3b-6725-4626-be4b-bc817d2c2379"
        },
        "item": {
          "id": "519e86cf-70c9-449a-bd5c-37fe5d9721bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36f2d28a-9ba1-439b-b57c-9beefcd53a24",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e959a50d-e45b-4616-ac2d-3caf9f7c7b74",
        "cursor": {
          "ref": "8fcbc0da-5adc-4266-ac51-2a184ca63bc1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4c6d385f-d621-49d6-b0aa-22b517ba583b"
        },
        "item": {
          "id": "e959a50d-e45b-4616-ac2d-3caf9f7c7b74",
          "name": "did_json"
        },
        "response": {
          "id": "73c95ad9-8356-489d-aacf-c75486a2850b",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856e9705-1a59-4de2-9ce7-a4428b4b81ca",
        "cursor": {
          "ref": "9490acf2-bc01-4a06-91cc-d8d6b2a587e4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc841970-7426-480e-9e49-d9449e590577"
        },
        "item": {
          "id": "856e9705-1a59-4de2-9ce7-a4428b4b81ca",
          "name": "did:invalid"
        },
        "response": {
          "id": "a51c4fdf-8c11-4dd3-b294-a23883a13106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856e9705-1a59-4de2-9ce7-a4428b4b81ca",
        "cursor": {
          "ref": "9490acf2-bc01-4a06-91cc-d8d6b2a587e4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc841970-7426-480e-9e49-d9449e590577"
        },
        "item": {
          "id": "856e9705-1a59-4de2-9ce7-a4428b4b81ca",
          "name": "did:invalid"
        },
        "response": {
          "id": "a51c4fdf-8c11-4dd3-b294-a23883a13106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0fd7b0-7960-4fd4-9a49-06cfe9c83ec8",
        "cursor": {
          "ref": "1c522d0a-c347-40c2-a8f6-69bb99ef16b9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e67867e5-7098-4468-89ff-be91cdeb63a3"
        },
        "item": {
          "id": "4a0fd7b0-7960-4fd4-9a49-06cfe9c83ec8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e547a13b-b32c-420e-98a7-0a6a37197b7c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 88,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f932c85-d265-4fc9-8e84-8d6662b04508",
        "cursor": {
          "ref": "efd7e99b-38f1-4411-b482-ed0e80a250b9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09b2b9b2-062b-4d48-abee-adcfcdcf9571"
        },
        "item": {
          "id": "2f932c85-d265-4fc9-8e84-8d6662b04508",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "60031593-0444-4f8e-b9c0-92dafae908a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76cd81b-d758-49c8-b102-fdba22d4e02a",
        "cursor": {
          "ref": "2fccd2b4-8976-429d-802d-aae3aff07818",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "855a38f7-7c85-43f1-918f-56e09ebc1ef7"
        },
        "item": {
          "id": "e76cd81b-d758-49c8-b102-fdba22d4e02a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f7f737df-d5c2-4d76-b72e-a01aa912fa54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b84f44-271f-45fc-a415-328e1818afcc",
        "cursor": {
          "ref": "e46bf8bd-89c3-456f-8128-fa2449857cd6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "444d3c36-c4b2-4b57-b112-52ca8b43d139"
        },
        "item": {
          "id": "47b84f44-271f-45fc-a415-328e1818afcc",
          "name": "identifiers"
        },
        "response": {
          "id": "1074820e-15cb-4d86-8efb-3310a025b969",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52bd022-159c-4474-9b44-67f85fe9f954",
        "cursor": {
          "ref": "043073c4-3675-4a64-a6e5-e64123c0ddc8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "357b25d0-b38b-49a0-b5d0-ee3650a29058"
        },
        "item": {
          "id": "a52bd022-159c-4474-9b44-67f85fe9f954",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "feb73a1c-772f-4f52-ae92-79ded005e915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe9a77d-3722-41f7-92d5-07148cd5ae82",
        "cursor": {
          "ref": "32e1ffa6-f970-41be-a964-5c0c56a855fd",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2591dc22-252f-4e38-a9bc-280be8de9154"
        },
        "item": {
          "id": "6fe9a77d-3722-41f7-92d5-07148cd5ae82",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4cf9a57-c4d2-48ca-9b9a-8b9b33b71da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3805c5-8e5a-4530-a406-e8f27b4fc586",
        "cursor": {
          "ref": "5a351d6f-343d-4ead-ae50-c42916f6fdba",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a7920437-fbdb-4fb0-92c5-293b6d6cffc8"
        },
        "item": {
          "id": "be3805c5-8e5a-4530-a406-e8f27b4fc586",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2f1bf0a7-3414-4682-8014-88f80de61d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0871b9-41e1-4748-8ac6-b45541a9ce06",
        "cursor": {
          "ref": "1ecc833f-758c-4670-9c3b-b10bc03e0a8e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "60f62385-99cd-45ad-b5ce-c41d059d17a3"
        },
        "item": {
          "id": "3d0871b9-41e1-4748-8ac6-b45541a9ce06",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5992fe1c-9d2b-45c1-b1f9-0cffc3127c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b63d76-0721-4f09-8ea8-f6dde7678078",
        "cursor": {
          "ref": "2269373e-62a3-4cda-ab73-b93632b16258",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "812ab953-1b13-4c15-8760-f0cea2d78bd5"
        },
        "item": {
          "id": "a8b63d76-0721-4f09-8ea8-f6dde7678078",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f02a5f6e-85f4-4824-ad5f-29cb6af0cb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797c9e35-ab6c-4739-9d34-bc98f7aa31fd",
        "cursor": {
          "ref": "dfed637e-2c72-447d-9bb4-6df7b0469b47",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "355a1c91-8f75-4e65-9e70-6f041c1254fa"
        },
        "item": {
          "id": "797c9e35-ab6c-4739-9d34-bc98f7aa31fd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aea4fd15-5269-4ecd-95b4-0b5c4974f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f86b3f9-722c-40e5-aeb2-08ca502f1831",
        "cursor": {
          "ref": "d38da403-301e-4180-b583-d757f1d09774",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0610dc5d-54d9-4eba-b10f-4d1c9f6f4b75"
        },
        "item": {
          "id": "9f86b3f9-722c-40e5-aeb2-08ca502f1831",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "57e46ff2-3052-4db0-9ed0-7ef32638b378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ff042f-e6cb-48a5-bb96-840a3726a7f3",
        "cursor": {
          "ref": "647262f7-d40d-4cab-aab3-2b4254124def",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cb49d5f7-78e1-45bf-880c-b868ef167114"
        },
        "item": {
          "id": "36ff042f-e6cb-48a5-bb96-840a3726a7f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3d149398-b380-4365-b951-58f61a1adedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6192d16f-2f68-4ce5-8d76-52909f67a69d",
        "cursor": {
          "ref": "ac1616ba-351e-4d9b-8cee-572bec3f817c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "aa05132f-4de1-4618-9f6e-9316373984cb"
        },
        "item": {
          "id": "6192d16f-2f68-4ce5-8d76-52909f67a69d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b369eb2e-dc3d-4438-95a2-05ac084d52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8465d787-eb77-4e18-a1f1-039b4a090e0d",
        "cursor": {
          "ref": "fdbb7ba6-d059-46aa-8df2-f6b8e2351575",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "19e9b0ff-52ae-422e-88da-a0872ef0a45b"
        },
        "item": {
          "id": "8465d787-eb77-4e18-a1f1-039b4a090e0d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e6bbf1d4-2c59-4ae4-adae-d43d1a194e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb41765-7552-488c-ace5-53abe31815de",
        "cursor": {
          "ref": "fd42993d-dfb4-41b1-a52b-85ed1ad92598",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ed6c5b38-4057-4d60-8092-b63adb6fd749"
        },
        "item": {
          "id": "fdb41765-7552-488c-ace5-53abe31815de",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3b32b3de-d50b-4c52-9a50-761df347171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb577e3f-c3ed-456f-a00f-2d2b34e43f82",
        "cursor": {
          "ref": "9d2bc6fe-1790-442a-9e4b-dc15ce8a5615",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "aa4f70a7-1e02-473a-8dc7-d6919d3c0cc8"
        },
        "item": {
          "id": "bb577e3f-c3ed-456f-a00f-2d2b34e43f82",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "15ba20cf-7b92-461f-9a3d-f09b403439b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5273de-f8bd-4ad7-a21e-24f005aa6f1e",
        "cursor": {
          "ref": "98219a98-4f15-45a4-a48c-17e563825db8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bd2e08a4-c192-4c86-8032-2a01270120be"
        },
        "item": {
          "id": "7d5273de-f8bd-4ad7-a21e-24f005aa6f1e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "da4fa858-485f-4d4a-94bf-2d39f1d467fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e7aa4d-f432-47a3-8950-eaaba61d4457",
        "cursor": {
          "ref": "6d255438-ef87-4f78-9e8b-ffde6b8eec95",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55972175-18dc-443a-bbf1-41c092319004"
        },
        "item": {
          "id": "c4e7aa4d-f432-47a3-8950-eaaba61d4457",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dc87bcc5-a016-492d-8f2e-afca23613517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343c497a-421d-453b-bb3f-0943537e2570",
        "cursor": {
          "ref": "d7baf50b-ae13-4d6c-b08b-fb09b04171ef",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e3509ac0-f54a-4ce0-8f45-c838119f2a14"
        },
        "item": {
          "id": "343c497a-421d-453b-bb3f-0943537e2570",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "42ba5fc4-2caf-4821-9258-950871e4a474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd9eb65-86b9-480e-be24-b47306824cc5",
        "cursor": {
          "ref": "d530db0b-b3f8-4283-9520-a633df0660c0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6c89d809-c46b-4fef-9915-e621ff3e190b"
        },
        "item": {
          "id": "7fd9eb65-86b9-480e-be24-b47306824cc5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "621eb043-bbc4-413a-8899-accd9811da1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25689a9f-c389-48c4-97e3-d83995340384",
        "cursor": {
          "ref": "97e3cbcf-611f-485c-8ad7-bd704a48aabd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0c1d5efd-ce2b-410e-85eb-28b0691589b3"
        },
        "item": {
          "id": "25689a9f-c389-48c4-97e3-d83995340384",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cb847b33-3ec0-461e-bcb9-dbbda88abe95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e69476-0b5b-4494-97b1-f514df142e7a",
        "cursor": {
          "ref": "d027a586-e92a-40dc-b1cd-8f5050b4076c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1e392790-b95a-4cc7-b559-8b82f42b3285"
        },
        "item": {
          "id": "b6e69476-0b5b-4494-97b1-f514df142e7a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c6ece5f8-3d81-43f1-9e04-ee84f25582e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa389593-ac89-42b1-9d0c-caf03e8c996e",
        "cursor": {
          "ref": "8a561419-927c-4073-b78d-1f63832bdc01",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e95efd2c-d088-4973-a1cb-b3fb0ce1a031"
        },
        "item": {
          "id": "aa389593-ac89-42b1-9d0c-caf03e8c996e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eee1fdbd-5f51-4312-a66c-ddf21e21b808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8f79e6-ae48-4669-9d33-4366b6bfa259",
        "cursor": {
          "ref": "bb9db4ba-a389-41f8-9ac4-7c9949d1c0ff",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7f3cafdd-8bc2-4fa8-b57c-58568f8b89ac"
        },
        "item": {
          "id": "dd8f79e6-ae48-4669-9d33-4366b6bfa259",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "03bdeb68-cc1d-4ee0-8a0a-19beaec99e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86f27e2-588d-44a2-b03b-9a636d50a1a5",
        "cursor": {
          "ref": "9430bc97-3833-45b9-b592-5c6ff4394382",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc9ff8fc-ace2-45b7-a896-9a0a7e9dc227"
        },
        "item": {
          "id": "d86f27e2-588d-44a2-b03b-9a636d50a1a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad679717-0745-43ec-9f3b-655d7d67026f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547b5416-7413-49d9-b851-04db60543b05",
        "cursor": {
          "ref": "c19ae185-55a3-4f50-b093-d966e5583176",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0303da1e-dbc9-4af7-8e3a-9da52a20b5b1"
        },
        "item": {
          "id": "547b5416-7413-49d9-b851-04db60543b05",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1eb8b525-d6ef-453c-827e-d4037f00112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6db97b4-25d5-415a-b621-ba797163e344",
        "cursor": {
          "ref": "52860d31-4ac6-4557-9dd2-1670d7531fab",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e30d9bdb-5eac-4374-8b7f-350d5b7e4234"
        },
        "item": {
          "id": "b6db97b4-25d5-415a-b621-ba797163e344",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8c691651-fc85-4be8-8ed3-ef8ad38b066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405e9506-afaf-4041-a246-3cb3afb1a7d0",
        "cursor": {
          "ref": "1177a56b-76dc-4506-811a-ebd44d1da370",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "30fb2d89-ebfa-40bd-975f-c45d752f3ceb"
        },
        "item": {
          "id": "405e9506-afaf-4041-a246-3cb3afb1a7d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d9cae6ec-281f-4e22-b923-1af734686f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8ee0c-32c0-47a9-907f-04961c77cef5",
        "cursor": {
          "ref": "88c86444-3a15-4f97-a8d0-b30b1c582bd2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7f5d3168-d176-4ea7-ba61-90c6f7d2fc04"
        },
        "item": {
          "id": "63b8ee0c-32c0-47a9-907f-04961c77cef5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ebb6948b-5771-4f21-a17f-25ed930d771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655055ea-c9bf-4bb4-ac44-23334e1ed8d3",
        "cursor": {
          "ref": "3ea3560b-0f01-4d02-9f98-a1b28bfad5df",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "968a6b73-c911-4235-9688-07c76b3a163a"
        },
        "item": {
          "id": "655055ea-c9bf-4bb4-ac44-23334e1ed8d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1be9970e-3aef-4f45-a10c-55efd4cb209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5b7651-b5e3-468f-a4e5-6c1f5a2cce00",
        "cursor": {
          "ref": "05015e67-02d7-4065-94fa-08dfb505bd9b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9f03343f-b259-43e6-b6b9-3aebe674a7f5"
        },
        "item": {
          "id": "3d5b7651-b5e3-468f-a4e5-6c1f5a2cce00",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a8cac7d0-3039-4175-8b92-34e78c076aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6d43b0-411f-46bf-8994-1a0385eb8e1a",
        "cursor": {
          "ref": "5bd83a8e-a720-40c3-a931-96016a857dcc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a14c1b80-ed5d-481b-948e-f7d2672dbbf2"
        },
        "item": {
          "id": "1d6d43b0-411f-46bf-8994-1a0385eb8e1a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "41f2004f-15e4-4ea2-99e3-2e28fe50b26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e9a81a-38bb-4475-b0cd-6cb8ca6cff32",
        "cursor": {
          "ref": "79cde4d3-744b-4be0-966c-0436db22e625",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ab196b74-b713-4f51-b3d1-33782f9ea415"
        },
        "item": {
          "id": "07e9a81a-38bb-4475-b0cd-6cb8ca6cff32",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "78ca46e0-4561-46dc-893e-f5d93f7e3a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5fc032-0edf-4455-9b5f-ea1ab40248db",
        "cursor": {
          "ref": "e6858fd6-b292-4863-aa4f-754486369fa9",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b091ac23-25c3-49fc-a308-4ea1af56dbf0"
        },
        "item": {
          "id": "af5fc032-0edf-4455-9b5f-ea1ab40248db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3388b0ad-3dbe-4a0f-9981-f2f7a457ae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304d155d-e7b3-49a0-89e7-05d33455bbd0",
        "cursor": {
          "ref": "d7352c4a-2f10-4def-9860-027ebcf6af9e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c4bae8be-e30f-48b8-aa96-37a139f0f367"
        },
        "item": {
          "id": "304d155d-e7b3-49a0-89e7-05d33455bbd0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6d1407c8-5408-4660-b64b-841d2a3a6bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea9afde-7f57-4e12-b392-dd7da44f647f",
        "cursor": {
          "ref": "dfe4c97f-c589-4dd3-b253-e5fe52678690",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "881c0149-6dea-4149-954a-c84963748fc1"
        },
        "item": {
          "id": "1ea9afde-7f57-4e12-b392-dd7da44f647f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e02ed252-b71a-4888-ba62-a9cb5304c2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffd1048-583b-48f5-830c-2e785338af48",
        "cursor": {
          "ref": "de046d0f-3366-48d4-ad12-330763d23e2a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ad3fe988-71cc-452f-a9a2-b02fb860199b"
        },
        "item": {
          "id": "3ffd1048-583b-48f5-830c-2e785338af48",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5b3b07cf-3c4b-4358-8269-3eae84286ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e35a9-d596-4a14-9dc0-9a8fb0536031",
        "cursor": {
          "ref": "6c60a533-5c3d-48ef-b111-30d3446704c9",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fa6849cf-b9a6-4bb5-b804-c7cf1e54ff42"
        },
        "item": {
          "id": "0b6e35a9-d596-4a14-9dc0-9a8fb0536031",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16d9fab0-29aa-4d39-b47b-ea31b7e70b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de8d537-83d3-497d-902d-845d1b9344a7",
        "cursor": {
          "ref": "cbb08a00-13a1-4e6d-af3e-439290550aae",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1bc8b205-dd50-4b2d-9554-6a1a82452082"
        },
        "item": {
          "id": "9de8d537-83d3-497d-902d-845d1b9344a7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4544821c-e279-49e9-8ab4-eee2a1bd0144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335a977b-42c8-4964-b913-03af7b427c3f",
        "cursor": {
          "ref": "97ed75cc-64d2-4fe8-89a1-76df4050315a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04f204d7-e4ed-4aec-845f-06a58526faab"
        },
        "item": {
          "id": "335a977b-42c8-4964-b913-03af7b427c3f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "61f7a9c2-97dc-4889-9aa5-cdaba709b8f2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52b5eac-074f-40a7-8eba-231c13219ad5",
        "cursor": {
          "ref": "d37ab951-d9ad-437e-8b10-32a8d4fc8239",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "30a89f8d-6451-4617-9d24-f822c78f7e84"
        },
        "item": {
          "id": "e52b5eac-074f-40a7-8eba-231c13219ad5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2bf8e531-78c9-4d0f-adc5-b1d6adc64ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff78cc2e-d0ec-4b6e-9653-2bfd6415acd3",
        "cursor": {
          "ref": "9cb04041-f365-40ff-916e-107b23e3bfd1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "195d1434-43b6-4ffb-943b-edbe3885cecd"
        },
        "item": {
          "id": "ff78cc2e-d0ec-4b6e-9653-2bfd6415acd3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74755014-51a5-4088-b281-684ef7ed1e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc7226e-22ea-4646-a7cb-04e249dd11d4",
        "cursor": {
          "ref": "c5322ad5-4477-4acd-a248-e2159c83154f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "04d00d46-5a40-4b15-b7ee-aa13fd92c128"
        },
        "item": {
          "id": "1dc7226e-22ea-4646-a7cb-04e249dd11d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0ba13797-21ed-4d9a-93a4-50a444051d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276b803e-dc0d-4858-81fe-31d083ff1155",
        "cursor": {
          "ref": "98f1ecac-334b-4529-81bf-079c42bf53e0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9e1bbdc7-46ce-427e-b141-e6902266cf21"
        },
        "item": {
          "id": "276b803e-dc0d-4858-81fe-31d083ff1155",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b28f3433-058d-4a90-9f91-074f31a03076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec80f7e4-d9a6-4947-8584-bcf053d19247",
        "cursor": {
          "ref": "64a7cd43-b6b4-494d-879a-911b32496ddd",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ab82daa5-ee6d-4acb-b1d3-13efde4beeae"
        },
        "item": {
          "id": "ec80f7e4-d9a6-4947-8584-bcf053d19247",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18684c0b-7d37-4e4a-accf-238dcda6b9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c94479-0f68-46f9-be6c-1a61f7901c58",
        "cursor": {
          "ref": "48d6b63f-8c35-4027-88ab-dcfe111a3162",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f0a8a5b-506d-4159-a7ba-952a74c96a82"
        },
        "item": {
          "id": "23c94479-0f68-46f9-be6c-1a61f7901c58",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3eacd3ed-41bc-424d-b5b1-2de908e4e149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011aef21-a729-48b3-8bec-3e7afdf5c501",
        "cursor": {
          "ref": "bb37c5ca-ade2-424d-8b86-aabc292745d0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "be4db1aa-2559-443d-b47d-fd732646baa0"
        },
        "item": {
          "id": "011aef21-a729-48b3-8bec-3e7afdf5c501",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ea11bcf1-54f4-4350-98ea-bc04dafca2ac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560bf858-e696-4e83-af76-cac546170a61",
        "cursor": {
          "ref": "d09f5d55-2396-4b17-80ef-ba10fee94c95",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ad85cd3-c663-4f38-9cd6-3184a76be984"
        },
        "item": {
          "id": "560bf858-e696-4e83-af76-cac546170a61",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce64a2ce-b57c-406d-a0ca-e73b30b1788b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bf1f58-d2dd-4ecf-ae93-ab94e1eaba94",
        "cursor": {
          "ref": "9585ac62-265c-4710-ba74-e85c32c8c00c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "34c3cdc7-fbe6-4989-88a9-365fac44c244"
        },
        "item": {
          "id": "53bf1f58-d2dd-4ecf-ae93-ab94e1eaba94",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "59da79dd-21aa-431d-9458-336a6625cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66365f9c-d808-48aa-a9ee-0bd609998b63",
        "cursor": {
          "ref": "ef98fb4e-8ab4-4fa0-9363-618d039400cb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "823a9a62-e6f0-4951-b78d-0a22190afece"
        },
        "item": {
          "id": "66365f9c-d808-48aa-a9ee-0bd609998b63",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e3b36e5-be62-432e-bfbc-f6539938f37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509281eb-c635-476e-9eed-47a594192572",
        "cursor": {
          "ref": "9ffb0ae1-856a-4d07-a12c-1791336c5490",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e1069dde-7056-4921-a6d7-e1afb7649862"
        },
        "item": {
          "id": "509281eb-c635-476e-9eed-47a594192572",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "706a44ec-ac10-4dba-9f14-9dfa8ffe9751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e25896-f379-4727-97a5-105e8b140c34",
        "cursor": {
          "ref": "58c5854d-774f-475e-8446-d5633cd5d306",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a8fcc8b5-f09f-4df5-87aa-bf815f710730"
        },
        "item": {
          "id": "34e25896-f379-4727-97a5-105e8b140c34",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2dbb1f17-865b-4359-a655-1879a90a463b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff827c9-1fb9-4a4e-b7f4-fae0d9215afa",
        "cursor": {
          "ref": "3273f209-6ac8-4f41-92eb-0d278c8ede8c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "288fd944-7b74-4c68-af7f-18e5e78558d8"
        },
        "item": {
          "id": "0ff827c9-1fb9-4a4e-b7f4-fae0d9215afa",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3f6db008-5222-409c-a786-ff9ad90b5fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeeaa9ab-15d9-4344-a9c4-b4636573a843",
        "cursor": {
          "ref": "bdc617ef-ff19-4509-a70a-cb06c14e744e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4d5a4a2b-5b55-4bf1-8cd7-e0b6425418ef"
        },
        "item": {
          "id": "eeeaa9ab-15d9-4344-a9c4-b4636573a843",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "17b66a7e-51b0-4f6c-a91b-5b2d53a21c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabb64d7-3192-4fb0-90d9-4d4dfa71dfa7",
        "cursor": {
          "ref": "58b6aa25-ca0d-45bb-ae3c-a1613928c36e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "328f3d94-250a-4f95-a0b1-90ad5ef750bc"
        },
        "item": {
          "id": "fabb64d7-3192-4fb0-90d9-4d4dfa71dfa7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f411d4ce-ea9a-45b6-b362-b74704599e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96d1f23-8ec9-422a-9105-7c48fe7cdc71",
        "cursor": {
          "ref": "5248af70-92dc-4006-b0a0-99199d76bf09",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50e075a6-4880-47ef-9bf6-4dbef1be8e22"
        },
        "item": {
          "id": "b96d1f23-8ec9-422a-9105-7c48fe7cdc71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1915ceaf-86fe-4968-b22b-8f8344fc3699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9895e3d5-cbb0-4302-9b54-43f1a19becf1",
        "cursor": {
          "ref": "80da3a7a-a5f2-48ac-945f-922ea41bf8b0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "83d6dc5d-0185-4724-9d6b-993b44ae2260"
        },
        "item": {
          "id": "9895e3d5-cbb0-4302-9b54-43f1a19becf1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a6b0fd6b-a60c-4156-a8fb-c24ab6be6a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6f03e-4b02-48ae-9c32-a8aafb428c51",
        "cursor": {
          "ref": "c6aa30cc-b374-4e36-a223-273306cce9e9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "40b5eb47-3664-4f03-9edb-594938f8fd08"
        },
        "item": {
          "id": "bee6f03e-4b02-48ae-9c32-a8aafb428c51",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e6897087-e314-49db-a9e2-c54dac32c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f6845f-b5c3-45e4-853f-ba7ec1781f89",
        "cursor": {
          "ref": "33eda7f2-3f9b-43d1-aa60-37cd2a52f438",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6daa3ff8-311c-40e3-9b5b-1c1a04da03ae"
        },
        "item": {
          "id": "13f6845f-b5c3-45e4-853f-ba7ec1781f89",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6ec91d6b-da0c-4dca-b520-195bc4004334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a133d88-a475-4bbc-a82c-fd6ec423de14",
        "cursor": {
          "ref": "2172e0a6-ec97-403f-9306-8f45d6772960",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5f4e79d7-b82f-491f-a76c-1ac9d4703eac"
        },
        "item": {
          "id": "8a133d88-a475-4bbc-a82c-fd6ec423de14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9c2ac350-aa43-4897-b006-328d8850cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850dd88a-f0c9-4496-bc93-c9799bebb8f9",
        "cursor": {
          "ref": "41a69ca8-c438-4ec7-8d1b-474682e3c747",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39fac88e-d276-4b33-aa07-43c68dc27a13"
        },
        "item": {
          "id": "850dd88a-f0c9-4496-bc93-c9799bebb8f9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "96a22ba2-864e-4a21-80f5-2342118701cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed893aae-6b90-4717-9605-a4fea9bb6927",
        "cursor": {
          "ref": "7b27800d-8df2-47c9-a912-72d948774b07",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a5cc2752-664a-452d-89a9-54256e01af01"
        },
        "item": {
          "id": "ed893aae-6b90-4717-9605-a4fea9bb6927",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0db8ee95-0772-41fb-8aca-c1f72f4d9b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75f39b4-b8fe-4fd8-b83f-0539b6cdf04f",
        "cursor": {
          "ref": "66d2cb95-aa03-4e94-98c7-a539be31ea59",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d75817b9-8642-45cd-91dd-e9a339471621"
        },
        "item": {
          "id": "f75f39b4-b8fe-4fd8-b83f-0539b6cdf04f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8dd8e58d-5f57-42f6-8d7e-59e4f9a2d8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf43d7cd-e4f3-4383-9930-a5dc2e2089cd",
        "cursor": {
          "ref": "4b5b8c47-7ba0-443b-becc-3bbcbe95c7e2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "72d9899e-e804-474e-a6e1-b5fb1e065480"
        },
        "item": {
          "id": "cf43d7cd-e4f3-4383-9930-a5dc2e2089cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aff11802-0dc5-4aca-bb6b-93d5672e50c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3a32f0-0fa3-4f17-b9ad-171ee3efb798",
        "cursor": {
          "ref": "ca2f202e-d8c7-4758-8207-cb0a034303ff",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5cf68755-c118-4680-b452-d4559f922c03"
        },
        "item": {
          "id": "5e3a32f0-0fa3-4f17-b9ad-171ee3efb798",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "402cfcf9-f507-4751-8ebd-82387b07db77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a1efee-e694-4a77-901d-a42ac04e33c4",
        "cursor": {
          "ref": "085fb45e-4554-4dfe-9532-b58df5ff2dae",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1c623ea8-65a0-4812-ad00-bff887616721"
        },
        "item": {
          "id": "e9a1efee-e694-4a77-901d-a42ac04e33c4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c1952258-9c37-404d-a7dd-054e88364b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e572bf46-346a-44cc-8099-89dce6c08a8d",
        "cursor": {
          "ref": "2d5054f5-4615-4884-ae38-239479a8cd6d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a9b52552-e98d-4a99-ae39-028827fa44fb"
        },
        "item": {
          "id": "e572bf46-346a-44cc-8099-89dce6c08a8d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7709f0cf-09e8-4b47-bd85-a5f334f8f2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae323d30-1688-4ddb-a22d-7b147d56116f",
        "cursor": {
          "ref": "46142e52-1e37-4078-bec3-77c11e5cd523",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3719e921-c393-4277-997d-3fe95c3cd730"
        },
        "item": {
          "id": "ae323d30-1688-4ddb-a22d-7b147d56116f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "85ad682a-a7bd-430d-91dc-53f424af9ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c335bcd7-a389-436d-977e-a67778cdf6f9",
        "cursor": {
          "ref": "7bef768a-02f7-4b3b-b26c-c72584ea14f0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4896fb82-ac8d-4d75-b75a-818e4a463931"
        },
        "item": {
          "id": "c335bcd7-a389-436d-977e-a67778cdf6f9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "921464e7-837e-445b-bfae-7b10df216b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08ae62a-459a-492a-9953-743d9331c97a",
        "cursor": {
          "ref": "8f468bec-950c-4723-bbda-9818156c2d81",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aa065042-797a-4118-bdb8-40e39a84a7d2"
        },
        "item": {
          "id": "c08ae62a-459a-492a-9953-743d9331c97a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a5befc8b-0499-4f1e-ba0c-53809bfd7e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5946dabc-7b0f-4e80-acec-703b8072a19e",
        "cursor": {
          "ref": "90be9bc7-6c4a-459c-8219-66a9be56b127",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8b7021c0-ce0d-48d3-b0bc-f9938fa71afa"
        },
        "item": {
          "id": "5946dabc-7b0f-4e80-acec-703b8072a19e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7358760e-19d3-4823-acc8-c5936a7f81ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b399d835-1919-4c4f-bfeb-7ad521d54b74",
        "cursor": {
          "ref": "c16ac019-ce65-4f16-8f5d-4e4a74f4bac3",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bfebea4f-acc2-44d0-9425-8f7d0e4be31c"
        },
        "item": {
          "id": "b399d835-1919-4c4f-bfeb-7ad521d54b74",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c6ef20dd-96b5-4691-91e5-f51f83769e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbb92e2-ce96-4608-857b-02cd56942ecf",
        "cursor": {
          "ref": "1753989d-2e1d-407b-aa94-68d843c5fc53",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66cf7296-361c-4f44-8c4a-8d48a2ae9891"
        },
        "item": {
          "id": "dcbb92e2-ce96-4608-857b-02cd56942ecf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d74f1dd1-b581-49c5-9bdf-80737d278e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40bf4f-4649-46ee-8c6c-8c33dc270617",
        "cursor": {
          "ref": "0ca5dc10-0784-4813-9b25-7e0a1b9b3667",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "abf01cdd-aa3b-4348-a0ab-d22c337ad108"
        },
        "item": {
          "id": "ac40bf4f-4649-46ee-8c6c-8c33dc270617",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6a7b1410-4c2d-44ee-9172-a3b0c7781b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b717731-1f2a-404a-9151-240e16e5579d",
        "cursor": {
          "ref": "6c66337b-ade6-4875-bec3-f9c4caf013cb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2386dbdd-84cc-47b6-b9d3-d6d5d7f49a5a"
        },
        "item": {
          "id": "0b717731-1f2a-404a-9151-240e16e5579d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9bab2636-f5fa-4bb2-9e24-4023410e9826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc7af5-8aaa-4822-a3cd-0115bf150c85",
        "cursor": {
          "ref": "5b45829f-e1d7-4a28-9ee8-f68277e1b4d6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9280a0be-4b8f-439e-a670-2c5844474b5c"
        },
        "item": {
          "id": "30fc7af5-8aaa-4822-a3cd-0115bf150c85",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eea4bd6a-d8f4-4b6d-87ab-bd48ddb121ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b559c0-a30c-4509-98d7-911b6a74c87d",
        "cursor": {
          "ref": "fb7f48bc-76a3-48a7-ac98-b05f7eff1a1c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dc9073e2-e7ce-4bad-81b1-2c0564b6ec94"
        },
        "item": {
          "id": "44b559c0-a30c-4509-98d7-911b6a74c87d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "38f01b2d-aa0a-4384-b805-fe4362d0794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea27f6-2bb2-4597-ad1e-b8b6fa2ba876",
        "cursor": {
          "ref": "d52e7bf0-e7b5-4f39-836d-75b8c06cc83a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a1ca9bc6-5ace-4d69-a009-f934798c0a59"
        },
        "item": {
          "id": "67ea27f6-2bb2-4597-ad1e-b8b6fa2ba876",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff9c16e1-6ef2-4a7b-8eda-c8fa8a7111b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda6e877-f34a-4942-b894-971f63b84e4e",
        "cursor": {
          "ref": "276e51b9-e345-4255-ab90-3d724bdef0a5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "33d0454e-77c9-4419-9728-71993e7a58b8"
        },
        "item": {
          "id": "bda6e877-f34a-4942-b894-971f63b84e4e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "be0ffee7-b120-4529-96a9-12c2f440fbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f2f8a0-7837-449e-9672-923c266e315c",
        "cursor": {
          "ref": "fbd0ad06-0a10-470b-969d-84a3d116f0c4",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bec059de-8be2-4118-9414-038612efaa9c"
        },
        "item": {
          "id": "83f2f8a0-7837-449e-9672-923c266e315c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e87741d6-3077-4697-9a72-4342ff3c6ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c289a6-ecb9-4ea9-b616-417112c914af",
        "cursor": {
          "ref": "b7f07018-1089-498f-9b95-1695a5f86027",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f5fb597a-dd1c-4372-933c-de35464bd32b"
        },
        "item": {
          "id": "15c289a6-ecb9-4ea9-b616-417112c914af",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f0dc14b2-1d0a-44e3-9798-fc178d07758e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cbe7b5-2f7a-4167-865a-206d34e3afd4",
        "cursor": {
          "ref": "cc3c1521-878e-408c-9fdb-0fb6d9ff1dd5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "40a028ba-5f95-4369-abe8-e550645e6e9d"
        },
        "item": {
          "id": "a1cbe7b5-2f7a-4167-865a-206d34e3afd4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9a8dabd1-5e81-40a3-a14d-c561fc1e58a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d8ce0c-f4f5-412d-bcda-1d3b9c506120",
        "cursor": {
          "ref": "158c0f44-db9e-4d5c-ad49-d746df25927e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa9162b9-e0ec-4df1-b9ba-44dfb8c10fe1"
        },
        "item": {
          "id": "98d8ce0c-f4f5-412d-bcda-1d3b9c506120",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a4a39c0-2629-4c6b-9eb1-5fa068a010a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f478ed-e56b-4113-a4d7-0b9a9abab0e3",
        "cursor": {
          "ref": "4e4c6061-85c4-4dbc-bd8b-80b6bb194f98",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "213ae84d-19ae-4ea8-a80d-44f12a6cd548"
        },
        "item": {
          "id": "29f478ed-e56b-4113-a4d7-0b9a9abab0e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "99866819-6ef4-45af-b4b7-086d03dde7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85355a6e-2b27-4ca2-a009-ddd5b017ad75",
        "cursor": {
          "ref": "a48ccbf1-3d72-4f1c-aad8-0199fa241a75",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "afb4f7a7-e048-452b-9722-c109aca7364c"
        },
        "item": {
          "id": "85355a6e-2b27-4ca2-a009-ddd5b017ad75",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "515bddb5-2c99-4ed6-9f0f-9ac3e6661a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654fe6f3-434b-484b-82ed-199a9e01d0be",
        "cursor": {
          "ref": "62894d0e-1d1d-40f0-852f-d71381a94c5e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea0537c3-e140-435e-b552-2d70c7e36c06"
        },
        "item": {
          "id": "654fe6f3-434b-484b-82ed-199a9e01d0be",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "38afbe6a-e3ed-4df2-8aa0-60e3bdcb05d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54adab0c-b692-42a8-9e6a-f205727e1c7b",
        "cursor": {
          "ref": "674391a7-6f81-4909-b527-2ed3af28babb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "addd4205-9be4-45de-87f9-77e3e6b2eee3"
        },
        "item": {
          "id": "54adab0c-b692-42a8-9e6a-f205727e1c7b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "56636b3e-3553-405c-8fe3-deab132e6f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9eaaaf5-5b32-4f67-84f6-628738174893",
        "cursor": {
          "ref": "732e2e41-086f-4aa9-bdeb-f8e61a100fd2",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "62fbda18-ec1f-4c35-8341-6a9b2a7904d6"
        },
        "item": {
          "id": "d9eaaaf5-5b32-4f67-84f6-628738174893",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2b84c06e-5693-44f6-90ca-c5dd3e523ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d95de7-cc9e-4195-acd4-d3ea946d7711",
        "cursor": {
          "ref": "5c48f9fb-6aef-4330-abf6-0eaf317142c4",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc26f48d-6f1a-440e-94c1-202e33cc4ae2"
        },
        "item": {
          "id": "b8d95de7-cc9e-4195-acd4-d3ea946d7711",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5ff1c57a-ea39-443f-851c-ebe07531205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459dc284-4c11-4e97-a056-ba6f018ad7f6",
        "cursor": {
          "ref": "ed3469f1-b867-4c7e-8939-8ceb5c88b9d3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f5e91712-a80b-428d-925f-f888c9325266"
        },
        "item": {
          "id": "459dc284-4c11-4e97-a056-ba6f018ad7f6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "06a5ca3a-8f2a-4dea-a5f7-f7bb49cfbe01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa6e61e-66bb-44b0-aaf4-43cb4c20c806",
        "cursor": {
          "ref": "27235cf1-69a3-473b-bb9a-ac682aa706de",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7252f7b3-bcbd-4d70-a0f6-0d9c542d8d41"
        },
        "item": {
          "id": "5aa6e61e-66bb-44b0-aaf4-43cb4c20c806",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8a0198c9-8a00-4e39-8aeb-318dba099f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ba529a-8727-49af-a595-d8d6dd813f1f",
        "cursor": {
          "ref": "5cffa36f-5aeb-4a7f-a4a4-20afffe69b37",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "87f065a7-5966-4637-a8e8-9899ffbb82f9"
        },
        "item": {
          "id": "b2ba529a-8727-49af-a595-d8d6dd813f1f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0383685a-816c-4143-b549-a111671c9108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936abbfb-a9e6-463d-84bd-2ac7988af008",
        "cursor": {
          "ref": "ae332bc4-2de3-4915-9797-3b8a31d3ed6c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2e453c55-2265-43bf-a85c-c98e8a04a892"
        },
        "item": {
          "id": "936abbfb-a9e6-463d-84bd-2ac7988af008",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "199b7616-049f-4a83-bc15-9120654669c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac1281a-ce22-480f-ac36-0999696cd5f0",
        "cursor": {
          "ref": "54ff9500-68a3-4738-bc8f-d50865dc1d64",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bc9062a6-2fb5-4a96-8eb6-b79d2bf23306"
        },
        "item": {
          "id": "dac1281a-ce22-480f-ac36-0999696cd5f0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "374b976c-45f0-4e4f-97ad-935c09146231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd776540-c5c6-44a9-9d54-7f13ca72f82c",
        "cursor": {
          "ref": "08fc5ce0-bb24-4b5b-8745-ac1cc28efe26",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "95651024-9a7d-4540-bf97-52be2ff37668"
        },
        "item": {
          "id": "bd776540-c5c6-44a9-9d54-7f13ca72f82c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4fdbe440-cbea-4dcc-a8ae-c83e50e4d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478d737-6fd9-42c4-a03b-cb124cd25d26",
        "cursor": {
          "ref": "28a97847-f664-43c5-b738-6aa0a341eddc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5467e0c9-54b5-46fa-9c41-74b95e27d6eb"
        },
        "item": {
          "id": "d478d737-6fd9-42c4-a03b-cb124cd25d26",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4e9a201f-f318-4188-886c-7f4166bbb520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb09cd4e-8679-4ba7-a6ed-07ebdbca3ff0",
        "cursor": {
          "ref": "7c008e3d-8ab7-4c75-ab4e-87822fe24e9a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b3ed99ab-8453-468e-adf1-1302ce5bc550"
        },
        "item": {
          "id": "fb09cd4e-8679-4ba7-a6ed-07ebdbca3ff0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "150d055b-963c-412e-9125-6ca81cd7cc79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b242b61-e6c1-4d04-a33a-402f7d9de425",
        "cursor": {
          "ref": "81ec7798-94ca-47eb-a55e-2e4056d6b060",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "72609aed-d9db-47c4-b83d-3310c9b6f31d"
        },
        "item": {
          "id": "2b242b61-e6c1-4d04-a33a-402f7d9de425",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3136afbe-8614-4179-83a6-997a4bfe5964",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0d0033-1e92-4368-ae91-a8523c60009f",
        "cursor": {
          "ref": "c589df11-0cfb-43db-8314-0593080dfe71",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e99df0cb-8f32-46e0-bde9-6e88a574261e"
        },
        "item": {
          "id": "6b0d0033-1e92-4368-ae91-a8523c60009f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3b26900b-024f-416f-a3d3-5f9f82530849",
          "status": "Created",
          "code": 201,
          "responseTime": 171,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae33882a-c3e6-45d6-a3f1-b9fea240afe9",
        "cursor": {
          "ref": "01924290-e4c1-4bfa-8c87-8521542a8396",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "65fc8284-c27f-457b-89ed-f0ce9fb5e2f7"
        },
        "item": {
          "id": "ae33882a-c3e6-45d6-a3f1-b9fea240afe9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "63008b30-657f-45e9-a585-423a1967274c",
          "status": "Created",
          "code": 201,
          "responseTime": 464,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be0bffd-0a7a-4680-a780-c419c265d155",
        "cursor": {
          "ref": "e6dcfab8-6753-47c0-97bd-b4fb064f6dfd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a215bc8f-36d4-431f-a614-963af1c26c6a"
        },
        "item": {
          "id": "4be0bffd-0a7a-4680-a780-c419c265d155",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a7d46bdc-9638-498e-b8a6-27927ec18844",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f575ca4f-1beb-4949-b04e-f7e226657d8e",
        "cursor": {
          "ref": "bb75a4a0-258d-49b5-9850-9b5b0617293b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b4ac12c9-6262-489a-bfbd-5509294c2d7c"
        },
        "item": {
          "id": "f575ca4f-1beb-4949-b04e-f7e226657d8e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ddded8ba-194b-4b20-b1b1-78a21b27c00d",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52c0d73-07dd-4772-bd9c-dfc484b7faed",
        "cursor": {
          "ref": "628466b8-7520-4104-b974-7634c24600f4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "23b727e7-6c70-45ec-bc32-74f9ea63f2a5"
        },
        "item": {
          "id": "d52c0d73-07dd-4772-bd9c-dfc484b7faed",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "439d86ef-18a0-4c47-b7d1-bf6336dd746b",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3ca541-d9f9-4c3c-9de2-47cae744927d",
        "cursor": {
          "ref": "ef9fb076-6d03-41fb-bbaa-457450c03b61",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "682723d9-c5b3-4f9c-ac80-e0cef769f422"
        },
        "item": {
          "id": "bc3ca541-d9f9-4c3c-9de2-47cae744927d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4a3a63f8-db4a-4b49-929f-8420d3372173",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6adfdeb-4cef-4292-b277-828681c9c60a",
        "cursor": {
          "ref": "01a21607-b87f-466b-9bdf-db9be0a50871",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ac290612-7959-40db-b05c-3beaefe5f687"
        },
        "item": {
          "id": "e6adfdeb-4cef-4292-b277-828681c9c60a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2edcd19b-2c25-4ae7-9ab4-374d094218fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a8fdc-5d7f-425c-a1fe-65607e42ec70",
        "cursor": {
          "ref": "a8e8ec3e-5a55-48a7-a686-d6c4af6bc1da",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2f7437d4-f86a-44fc-b396-54fa14831fa6"
        },
        "item": {
          "id": "0f7a8fdc-5d7f-425c-a1fe-65607e42ec70",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "73c404b9-e44e-48b6-b371-885557cf1bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7e8683-fe5e-45ac-a571-161e8fb50232",
        "cursor": {
          "ref": "4710baac-8ed2-4cde-ba0e-538bd8ed97ce",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cc3d9e9d-fdde-4db8-97fb-b67da2a34d2c"
        },
        "item": {
          "id": "cd7e8683-fe5e-45ac-a571-161e8fb50232",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5cfeb9fa-cd80-4720-ac74-f8b24486b7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6d8cb2-6d4d-4ef7-befc-0a205ec337c7",
        "cursor": {
          "ref": "0d5d7859-ae78-4e46-91e8-a0e1bb60beb7",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "72f1bd56-0fca-4c21-a7e1-3f2d1987db47"
        },
        "item": {
          "id": "ea6d8cb2-6d4d-4ef7-befc-0a205ec337c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dba7290c-e388-4ef7-a477-e98eded26445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4976c9b-9a85-43d6-a50c-27df1820b119",
        "cursor": {
          "ref": "b1ca0e13-90f2-4656-b9e7-c61fe0f1df78",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0d48b3d8-51a9-4dfe-bb29-596a7722f479"
        },
        "item": {
          "id": "e4976c9b-9a85-43d6-a50c-27df1820b119",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ebff5c9c-47ca-4873-a237-3cdb651ef51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ade721-e67f-4419-a0b5-e1c97e82fde9",
        "cursor": {
          "ref": "fab5c4f7-467c-4a11-94cf-e2b6edf4bd87",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2dcff356-a13c-469e-bd1d-4630947b47cf"
        },
        "item": {
          "id": "e1ade721-e67f-4419-a0b5-e1c97e82fde9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4046ebe-7e19-4d94-bc7a-04207976b5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80557db-9839-49f9-a50f-141f29117b22",
        "cursor": {
          "ref": "0db922d0-3bbb-4219-9674-ff54fb9ae07e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "097663fc-a1c9-4d29-a0f3-7358defc8b8d"
        },
        "item": {
          "id": "f80557db-9839-49f9-a50f-141f29117b22",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4a5e9f0b-d1a2-410c-a58b-6fdd3971e57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f516c7-9d39-41ce-95b0-ec5ab565c879",
        "cursor": {
          "ref": "456359c4-1157-40cc-bc48-309f119d83b1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "afc6918e-afdd-4046-a6cb-00400c215aae"
        },
        "item": {
          "id": "c3f516c7-9d39-41ce-95b0-ec5ab565c879",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "679eeff3-fc52-4c58-8466-a6970a2e3e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622f8d7d-0bf0-42c6-b99f-e4d260248d68",
        "cursor": {
          "ref": "36f853ed-74e3-4600-af4d-98acd04c41c4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "73811982-a58d-4c55-986c-84dff5860199"
        },
        "item": {
          "id": "622f8d7d-0bf0-42c6-b99f-e4d260248d68",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfd9ece3-9e13-4abd-8428-ae46223e80b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff093f8-9082-4472-8861-6949fb161322",
        "cursor": {
          "ref": "76102692-61d8-44a7-8c75-4fdd6a0f7c1a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5e884c3d-ed44-46e2-9c78-35bc6b46870b"
        },
        "item": {
          "id": "fff093f8-9082-4472-8861-6949fb161322",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "913fee2b-2e91-4006-b7d0-32e91363ed94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c1dacd-0937-4e79-a96e-2eb021c5744e",
        "cursor": {
          "ref": "bd019b36-0e97-4e8b-a6f1-d4e53f67f2d4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c91c79ad-0135-4471-b609-effcf2ec37b3"
        },
        "item": {
          "id": "97c1dacd-0937-4e79-a96e-2eb021c5744e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6edbcf90-6c17-420e-b4ba-c2303ce7f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5effa5-eca5-49c3-9dac-f2067fffaa38",
        "cursor": {
          "ref": "17ad4628-446e-4649-be84-d9c5e613c505",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3655168b-adb6-4b6f-89ce-4c52f6a2f501"
        },
        "item": {
          "id": "7e5effa5-eca5-49c3-9dac-f2067fffaa38",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50b73da3-9509-4a67-95bc-6401db15ef00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca3936-3529-4edb-a6c1-7b9861effaa0",
        "cursor": {
          "ref": "fd0a0e27-2955-4437-86a4-a303ddb0080b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0d914d69-73f4-44ef-a4b0-66d3742acf73"
        },
        "item": {
          "id": "70ca3936-3529-4edb-a6c1-7b9861effaa0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "76d2c58e-f3b8-401f-b8a2-0747f35883f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc4cf8-8b7e-49cf-b4aa-edaaaa375e59",
        "cursor": {
          "ref": "7dd8f326-5e0a-4a22-a296-05112a88b98b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0b6102d4-42b6-4f1c-a452-4ec6505f2204"
        },
        "item": {
          "id": "33dc4cf8-8b7e-49cf-b4aa-edaaaa375e59",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ead2a1b1-e387-42b2-88fc-2255dda2d418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bcb450-d8c5-4fae-8697-c3955ae7ef5f",
        "cursor": {
          "ref": "c023e865-075d-4d5f-be7f-f991787c542e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c4daa79-3247-43c1-982b-7ae6f9ad961d"
        },
        "item": {
          "id": "f7bcb450-d8c5-4fae-8697-c3955ae7ef5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3a033d5f-8bc4-4632-b442-d21264d133e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5330efc-1df6-4e15-9db8-f19473e7a5e0",
        "cursor": {
          "ref": "8b06c167-cde0-4c33-af2c-edb3baa037c6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c3e5f7a0-4313-4c0f-a372-05368a35660f"
        },
        "item": {
          "id": "e5330efc-1df6-4e15-9db8-f19473e7a5e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "87898a24-0673-44b5-bdb2-ced498ac6185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aff13c3-e4d6-4091-807d-760fbefe59f4",
        "cursor": {
          "ref": "6ec5737b-e8e0-45bd-9988-5f66972943b7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "adf44009-be6c-4a9d-a9bc-b33fa83af2f2"
        },
        "item": {
          "id": "6aff13c3-e4d6-4091-807d-760fbefe59f4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb6f803a-4915-4e8d-8a14-d1436e70aad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c585f7-f661-41d7-9646-7a07a6cbda9f",
        "cursor": {
          "ref": "3c1d37e5-ece8-4c8b-8ce6-8a8256ba3c17",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1405a9a-b43a-4dea-a849-174a3a038b90"
        },
        "item": {
          "id": "58c585f7-f661-41d7-9646-7a07a6cbda9f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5bbd1399-4d48-4992-8be6-8c5b11931838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede8db35-5ee1-49cb-94d4-c222e46ac5c1",
        "cursor": {
          "ref": "59c8c2ec-b5e8-4b1b-90bc-7e54449892fc",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f8c95d1e-3b54-4f33-a427-ab52b4599b6e"
        },
        "item": {
          "id": "ede8db35-5ee1-49cb-94d4-c222e46ac5c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ffa5b64a-10e5-4582-b41e-5c5bc8e99677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7954872-a9b9-4b79-9a84-c4678ed3c610",
        "cursor": {
          "ref": "520d5a93-c28b-4cda-b538-c541e6e50ce6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ba005435-09a2-4d5d-9c83-c047dafd404c"
        },
        "item": {
          "id": "b7954872-a9b9-4b79-9a84-c4678ed3c610",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0afa1738-63c0-4bbb-94b3-9e0bfac0fbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e11a0ab-74ae-4ce6-a042-a918c610f557",
        "cursor": {
          "ref": "431d94e7-4ad5-43b2-a391-6539ffbb4c41",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ec82ac93-c082-4765-be7c-7fcab954ac51"
        },
        "item": {
          "id": "0e11a0ab-74ae-4ce6-a042-a918c610f557",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "15ae5f6e-234b-4e64-8d2f-1ff6ae0d6269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2780ec44-57e8-47fa-8f40-9943ee62f140",
        "cursor": {
          "ref": "6fc012eb-9e9c-44d5-ac67-47e4619f984c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d504a76a-2675-48e4-b409-1101bcf8eaef"
        },
        "item": {
          "id": "2780ec44-57e8-47fa-8f40-9943ee62f140",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86115688-c6b2-40fe-a558-723da809e284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d3eabc-8496-4007-ad66-0044a3f351e5",
        "cursor": {
          "ref": "d42a1109-8da8-4479-9370-6d4693e67fbe",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8b7dd195-fc67-42c4-9c44-c2635c55426f"
        },
        "item": {
          "id": "82d3eabc-8496-4007-ad66-0044a3f351e5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2baf905b-340f-4453-bf19-940d85fdeab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8cb97b-5d1d-4519-aa00-c44dcacb2a26",
        "cursor": {
          "ref": "e1aa5b03-9342-434a-8dd9-6949b32cf379",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bf85a820-13e0-4416-b8e9-98c6c1425138"
        },
        "item": {
          "id": "cf8cb97b-5d1d-4519-aa00-c44dcacb2a26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa8ea8dc-2e17-4c34-8650-284840e216df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c50991-5bf5-4fad-b987-6dbb1ec486b9",
        "cursor": {
          "ref": "20c59375-af72-479e-81bc-6788faecab50",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c41e64ca-4eca-4a5a-9375-d053ac6db6ac"
        },
        "item": {
          "id": "92c50991-5bf5-4fad-b987-6dbb1ec486b9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "684e4685-c2ef-46f6-a9c9-e62b8ce075cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77594820-3eca-482e-8eda-5d0d9ff02240",
        "cursor": {
          "ref": "b3efa05e-38bd-415a-b95d-1b15796d1bce",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dfef6a41-a758-46ce-94a8-b62fe517e402"
        },
        "item": {
          "id": "77594820-3eca-482e-8eda-5d0d9ff02240",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7fa9fdb4-281e-4955-a8c3-f4c3e06300f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d8697e-c26e-436c-9cd2-06bf9e7ed3e7",
        "cursor": {
          "ref": "748c52a5-7e21-4c80-8dfe-66976fbcc6de",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "37647ed3-f200-4143-874e-fd21568a0417"
        },
        "item": {
          "id": "a1d8697e-c26e-436c-9cd2-06bf9e7ed3e7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "921fbaa6-821d-4202-a248-35c66db59d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090f3f64-cca8-4791-922b-a4bccf609a06",
        "cursor": {
          "ref": "d563b4ad-f8ad-4bfd-9c8e-4ad22418812c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0cd40c1-8980-4cdc-8c22-5d76af15b385"
        },
        "item": {
          "id": "090f3f64-cca8-4791-922b-a4bccf609a06",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "730e5c5a-1f16-4b7d-858f-e0b17a690d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d321de-7614-413c-a4f5-2e31d90f2312",
        "cursor": {
          "ref": "9579f9f5-8c1d-4eed-896f-b63c621607ee",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "82dbe8da-5f4a-443b-838a-49552af37408"
        },
        "item": {
          "id": "e2d321de-7614-413c-a4f5-2e31d90f2312",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "10510f6d-4e2f-4b81-a116-67dbec4351aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71d145b-c258-4c18-8df5-6d489c28d639",
        "cursor": {
          "ref": "2fc44117-102b-4997-8078-d7f7c768ed8a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e87e0d63-5e67-4f2e-95c4-bda5efc63ac4"
        },
        "item": {
          "id": "f71d145b-c258-4c18-8df5-6d489c28d639",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e277bdd-5f9b-47e1-96a3-d511e2c970aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e1305-d22d-48ce-b939-c64fb6c54a4e",
        "cursor": {
          "ref": "383a2386-b00b-4d00-8595-3a52f0fea54b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e7117119-9644-4f80-8303-e446adba38b4"
        },
        "item": {
          "id": "7b1e1305-d22d-48ce-b939-c64fb6c54a4e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8de04a81-bfed-4bdf-8b3e-543c7873ecd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739aff22-108e-4892-8d79-4a73113b825e",
        "cursor": {
          "ref": "5f392bfd-dd80-42bf-902c-3f7909874568",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "146793a8-dcf9-425e-bdd1-3e8eaaff97e6"
        },
        "item": {
          "id": "739aff22-108e-4892-8d79-4a73113b825e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "650c5417-1cbf-4a6e-a029-f62cb6dfe61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f28951-694f-470f-b952-0a4484b2ca29",
        "cursor": {
          "ref": "983d41ea-6c5a-4d92-8240-923dc86158f2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d4178c04-ce93-46b3-bcfd-dae44d31e396"
        },
        "item": {
          "id": "c7f28951-694f-470f-b952-0a4484b2ca29",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "404b3a3d-94b3-4d6f-9c29-d4546be8dd25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2bb5a1-e9e1-4ba8-b6fb-66e7c15de9d2",
        "cursor": {
          "ref": "f8c184cb-f1e2-4e7f-bef5-1c270c1a9998",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "748696da-9b7c-45ea-acba-7f712d8aa4bb"
        },
        "item": {
          "id": "ae2bb5a1-e9e1-4ba8-b6fb-66e7c15de9d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9d721e25-b93e-4fa3-9174-5041604c54fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6624bba2-8ae3-4dcb-99b4-2440305b132a",
        "cursor": {
          "ref": "8664b0c5-389a-4f71-a932-ed7d3be711d2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9e742a90-0c9d-4454-b3e0-972e3feb69e4"
        },
        "item": {
          "id": "6624bba2-8ae3-4dcb-99b4-2440305b132a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ddb46ca2-ff76-4be7-bfae-c968f6d029dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f20a97-0ea3-4697-b8cd-b90bb011a2ec",
        "cursor": {
          "ref": "a7b3b9c4-b5fa-4e87-add8-90bc9e262a87",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ab41be25-494c-4e37-8d94-9829f5790d11"
        },
        "item": {
          "id": "75f20a97-0ea3-4697-b8cd-b90bb011a2ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7e379a90-bfab-4ad7-b932-a6c7891418c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a035ed-4f3f-4a91-9a76-c3bdf36b85aa",
        "cursor": {
          "ref": "68a0278f-a6da-4bea-8fd5-be9dd8b6127e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "449c26ab-02b1-4758-81d8-08bd54d6adf7"
        },
        "item": {
          "id": "94a035ed-4f3f-4a91-9a76-c3bdf36b85aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bfcd8ed8-7a71-42b6-af59-3246b965ab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbe8ea6-eb61-4d1b-9e3a-3992116f9af9",
        "cursor": {
          "ref": "f1338a8d-9716-4b23-b2eb-f7a380df9c99",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "98fb093d-48bb-4b0b-8309-6df2d23b1aca"
        },
        "item": {
          "id": "6cbe8ea6-eb61-4d1b-9e3a-3992116f9af9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3280ff50-bc98-4dab-8b65-56fba8a723fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fc2591-1a05-4a9d-8174-df4af46db646",
        "cursor": {
          "ref": "06e9bc2d-0965-4313-b7e6-2da3abf47a29",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b136dd53-1453-4bd7-b045-873a2384d634"
        },
        "item": {
          "id": "78fc2591-1a05-4a9d-8174-df4af46db646",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0b888b8a-d5db-45a2-a3af-00fd9380d80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d399e3-3cdc-4e00-9c7c-8a71ef1367f0",
        "cursor": {
          "ref": "4ca6a2cb-db55-444f-a632-7d220e18c7fa",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aebb6223-1e0f-45c0-9c48-2efe61f5950a"
        },
        "item": {
          "id": "d6d399e3-3cdc-4e00-9c7c-8a71ef1367f0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f230501d-dd57-4a50-9f2d-8415461e6663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947cacfd-6b5e-4626-bc27-45df944e0c7d",
        "cursor": {
          "ref": "84211ef5-4291-497b-8365-8c79e6843ae8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3d6d4b78-a5ac-43e2-9665-1dedb97c5fc9"
        },
        "item": {
          "id": "947cacfd-6b5e-4626-bc27-45df944e0c7d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "305015fb-0571-4acd-87cf-d1738a76fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ceb545-433c-4730-a1c7-eac413cbd59d",
        "cursor": {
          "ref": "ec8b9247-fe6e-4bd9-b8b6-d7f27b7a7c09",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c0b8e2f1-06cb-4b2b-828a-73c442a647bb"
        },
        "item": {
          "id": "50ceb545-433c-4730-a1c7-eac413cbd59d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f3bcc1b4-9e50-410f-a24a-122694237019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed86f7a-3b1d-4950-b559-10a807246a54",
        "cursor": {
          "ref": "bf54a759-6cdc-40a8-819b-fefb49dc2a82",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "23e3ba9e-dcd1-4857-8270-9e2871d6167e"
        },
        "item": {
          "id": "8ed86f7a-3b1d-4950-b559-10a807246a54",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53664f61-a123-47e3-ba53-1e6261a0733e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daef2650-1df7-4af0-8157-17603ace0b97",
        "cursor": {
          "ref": "b3a0ebd9-a003-44c0-a298-c93e058a6422",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c2d1a4a7-1c50-444c-9637-66ca83ea2408"
        },
        "item": {
          "id": "daef2650-1df7-4af0-8157-17603ace0b97",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eb20da07-2819-4303-b58d-b6bef570ca50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660cbc9c-eb75-49c5-b5e7-cc4ccab88344",
        "cursor": {
          "ref": "7ceca1cd-3e89-46f8-82c8-15b15d4505ca",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4b0281b2-23de-4b16-96c9-1ec6e8976f5a"
        },
        "item": {
          "id": "660cbc9c-eb75-49c5-b5e7-cc4ccab88344",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a1268472-99d7-4f47-8846-a48590a531ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4179b6-1cf9-4c10-a2e2-ae4f87cf4db6",
        "cursor": {
          "ref": "9e53796e-78a4-495b-a711-9ba5ed00ea37",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1cd0603c-7573-45ac-bf6b-4e5243909aa6"
        },
        "item": {
          "id": "cf4179b6-1cf9-4c10-a2e2-ae4f87cf4db6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "08db8db4-503d-47ca-8c90-621985407837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786f1dd6-0c4f-45f6-9aea-ea7f977a9513",
        "cursor": {
          "ref": "9825e3c3-aff6-45c3-9004-06977b952c32",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "213889fc-8b4d-4d17-bd0e-3614fe277935"
        },
        "item": {
          "id": "786f1dd6-0c4f-45f6-9aea-ea7f977a9513",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "421df6e6-0992-4837-a0fd-3a94f81a5054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d763427-a208-404e-ae29-7760b250be82",
        "cursor": {
          "ref": "56fd652d-7089-455b-b0b3-96b43a854187",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7e58a0f-0448-4689-b3ae-b167477c2a0f"
        },
        "item": {
          "id": "0d763427-a208-404e-ae29-7760b250be82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "706c6706-8aeb-43b8-98ec-96b1adbbb42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9863e72c-9d19-405c-a43e-84a88dfb9a8f",
        "cursor": {
          "ref": "61be6dd1-3b91-48f0-8edc-d37ad028a43f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c797f1c4-db41-47ee-966f-96d6b0d0f569"
        },
        "item": {
          "id": "9863e72c-9d19-405c-a43e-84a88dfb9a8f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "70439526-b059-4e00-bc37-379b79a5e2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9505a3f-b30e-4800-9538-b71ef86c5ff2",
        "cursor": {
          "ref": "774f2c6e-f365-41e6-b61e-8f890755f4cc",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ab6711e7-ae8c-4488-9fd3-2690f4d3e299"
        },
        "item": {
          "id": "c9505a3f-b30e-4800-9538-b71ef86c5ff2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20835222-2157-4ff5-94d6-f0828cd155a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acee11ac-9ca6-47d9-a997-b4d842905085",
        "cursor": {
          "ref": "f564dc7a-6ef3-4be7-a7b2-b2d5da93c83f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "89aef5cc-cce3-4811-8c22-28a05a12e1ad"
        },
        "item": {
          "id": "acee11ac-9ca6-47d9-a997-b4d842905085",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f06d0fbd-8d12-452c-aecf-7cc1fb657272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a71cd76-6058-49f8-9838-f96993c05890",
        "cursor": {
          "ref": "79784d94-be75-4569-964c-f80dd37a97ec",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7caa97e3-544b-45bc-865f-02efb3175ffc"
        },
        "item": {
          "id": "9a71cd76-6058-49f8-9838-f96993c05890",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e1f4daa0-76a3-45c8-ad9e-f59e1cee9f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79de6597-fa7b-4580-a261-88838496cd8c",
        "cursor": {
          "ref": "b1c2eec7-ae6c-4fa1-b102-dd887b5945f5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3ffad8b7-64fd-4f7b-bd3d-2af99e69cafb"
        },
        "item": {
          "id": "79de6597-fa7b-4580-a261-88838496cd8c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8e24f0ed-d148-4f1a-8dfa-2b3c73131644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3faf47-7a5a-4824-afa5-b311b612534f",
        "cursor": {
          "ref": "22b0e670-2a52-428e-b9b3-7e9db5f90149",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ad0d034-d309-41cb-bf29-50bbb95b814b"
        },
        "item": {
          "id": "7f3faf47-7a5a-4824-afa5-b311b612534f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "64cb0ac2-9a5c-4b33-8282-f442c59b2bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b24d31b-b52c-4fbb-a4d6-aa03d39ad91c",
        "cursor": {
          "ref": "24821ec4-77b9-4ec4-9095-c41059989da7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4831131b-de80-4635-a71b-e5453f7ba3f8"
        },
        "item": {
          "id": "9b24d31b-b52c-4fbb-a4d6-aa03d39ad91c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9c2a275-f783-49ee-994a-1d612430c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a57c19a-6ea9-4813-ad36-17e910ca34f2",
        "cursor": {
          "ref": "93a7924d-1351-49e6-85d5-24905b9a18d5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f7369c5-c7c5-4efb-a54b-788f237b45e6"
        },
        "item": {
          "id": "9a57c19a-6ea9-4813-ad36-17e910ca34f2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4f6d5159-472e-41ac-8941-9a2540a7f5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69113d59-8039-40ac-b2ca-7bc70d72f1d8",
        "cursor": {
          "ref": "584b1c31-d324-49d4-9bc1-9ea9f840fac1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8bfdc779-8761-4fb0-8f24-7675b7dbdd91"
        },
        "item": {
          "id": "69113d59-8039-40ac-b2ca-7bc70d72f1d8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84b837f5-5ffb-4fbc-9b61-816678efe155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ef3d74-4226-451a-9a18-9372bee75ac1",
        "cursor": {
          "ref": "917b4bfd-a798-4edf-affd-9ceb0efcce16",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "234a0e6a-3988-46e8-bba1-e9888ce3db8b"
        },
        "item": {
          "id": "c9ef3d74-4226-451a-9a18-9372bee75ac1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bd7268da-e248-4adc-b9cf-0acc25a9bb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf3d098-30d7-480a-a3ea-2dfb9de75986",
        "cursor": {
          "ref": "c4ff4db3-b2d7-4602-a97b-70667394dcbd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "33be7bba-8722-40dc-8dc1-a1845535dca5"
        },
        "item": {
          "id": "4bf3d098-30d7-480a-a3ea-2dfb9de75986",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3c3d33ad-9feb-43aa-b888-838db69c2cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c884b-7bcf-41bd-a2e9-b0efd1dd9394",
        "cursor": {
          "ref": "563b8a5f-3d23-4994-9f9b-edd42e2e4348",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "54c33111-8293-44b4-b148-af0a7490f7a3"
        },
        "item": {
          "id": "2e4c884b-7bcf-41bd-a2e9-b0efd1dd9394",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bc503eb0-7b32-46c3-a26c-2975b02f78b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365678aa-3647-44db-9332-4dccd8852714",
        "cursor": {
          "ref": "2b46cc86-1659-4587-8f00-fdc27e801901",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "993e8579-0da5-4c04-963f-5be902045e44"
        },
        "item": {
          "id": "365678aa-3647-44db-9332-4dccd8852714",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d9065c5-0a4e-4af2-a6b9-8d42ae44324c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be6a2d0-85e2-4cf4-85ed-ba59408626dd",
        "cursor": {
          "ref": "8dcb5f4c-185c-455a-9466-9cbd5b68e072",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "712a0cb3-87b5-451e-8f19-9a77500be1d6"
        },
        "item": {
          "id": "1be6a2d0-85e2-4cf4-85ed-ba59408626dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f027467-7381-451c-b9c7-dc5f5384bb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00d75b0-1877-4742-afdb-fb4e373bb8e1",
        "cursor": {
          "ref": "c842b35f-9831-47fe-8f94-daa6e3c7b423",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ad7e520a-4904-447a-bba1-c8838ca8e187"
        },
        "item": {
          "id": "d00d75b0-1877-4742-afdb-fb4e373bb8e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8b0a4cce-1101-4e0d-8994-fd87b0cc4b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d99c64-1927-4362-bbc0-052e4ff67bc1",
        "cursor": {
          "ref": "16fb0748-fa5f-40a9-bac3-d5cfc2f00433",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1f911e53-2ce0-477e-8f03-e43a4456f1dc"
        },
        "item": {
          "id": "91d99c64-1927-4362-bbc0-052e4ff67bc1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eb628178-b934-4eec-b2e2-204991f6d696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee86a539-6d52-4fc4-a4a4-7fd2753d3fa0",
        "cursor": {
          "ref": "90cc47b1-66b5-4e21-8f90-ca9908c76b03",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "146183af-102e-4945-a964-7caf15deb73c"
        },
        "item": {
          "id": "ee86a539-6d52-4fc4-a4a4-7fd2753d3fa0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "41101c21-6ca3-4089-99bf-575e3d977f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c4fece-8e1e-4b43-81d5-cc45c62c6fa0",
        "cursor": {
          "ref": "5f001e30-02ae-4fdc-a0e8-c7bd3b2ef373",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ebead358-60a3-48be-a2ec-f4e95fa41207"
        },
        "item": {
          "id": "d0c4fece-8e1e-4b43-81d5-cc45c62c6fa0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e50f80f1-5fbc-4639-b1d6-bccf19d78765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7e4f15-facc-4083-8dc1-1d2a4abef8de",
        "cursor": {
          "ref": "bb5bbc3a-7c9f-4988-b4f7-dd9517e6a229",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "684700e6-4bd4-4229-9011-318ef36c93b5"
        },
        "item": {
          "id": "2d7e4f15-facc-4083-8dc1-1d2a4abef8de",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "93f34015-ed36-4632-8b28-648b3f3708a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea4658d-1402-4252-9a89-3e97f4e0a862",
        "cursor": {
          "ref": "88e42e6d-ec5d-4225-bce0-f8704eeb08f5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8bf891ec-24b9-49de-881c-557d81ae04f4"
        },
        "item": {
          "id": "3ea4658d-1402-4252-9a89-3e97f4e0a862",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3a746b64-0228-415f-a64d-06def13455d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235f6ffb-f18d-4880-b322-b44ed83b69e9",
        "cursor": {
          "ref": "00501ee3-68b1-4b5f-aa71-4d203b140857",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b88d0d59-2dfb-4046-ada9-9c4a561886af"
        },
        "item": {
          "id": "235f6ffb-f18d-4880-b322-b44ed83b69e9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "133e316f-dc69-4e33-8a5b-1175fe7486f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de5a012-fb9d-4d0b-a920-ac4c392932d0",
        "cursor": {
          "ref": "1bdb7e28-ddd1-4e96-956c-29f47f70aad3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f5d15be8-5e5f-426d-9222-5c8e33ac5fbb"
        },
        "item": {
          "id": "4de5a012-fb9d-4d0b-a920-ac4c392932d0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "44e32818-8912-4652-a158-f4500f16366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dddf367-993e-489b-8890-92a2a554fd51",
        "cursor": {
          "ref": "4469c4bf-bab2-4d34-bd22-f19a195c2e44",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "97d4fcd1-60c3-4290-b101-d7740071a354"
        },
        "item": {
          "id": "7dddf367-993e-489b-8890-92a2a554fd51",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8b7b9d7b-a9d0-4bca-bc8d-6386eeed8d3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d9a958-3685-4a5a-ab23-301b23777277",
        "cursor": {
          "ref": "2e5f7da7-007b-4c8a-925d-3488643d6838",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f4a9b280-d22e-416c-9f2f-92cb45d8cb75"
        },
        "item": {
          "id": "c0d9a958-3685-4a5a-ab23-301b23777277",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff5a201e-59d9-4599-994d-96f858e7a2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5245be-ff26-463a-9eb3-bd52680a9429",
        "cursor": {
          "ref": "ed652588-eef7-4d39-8f2f-ddbee4f118c9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36e48f45-7882-444e-a56e-8f18094a99d4"
        },
        "item": {
          "id": "5a5245be-ff26-463a-9eb3-bd52680a9429",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87bf7751-562e-47eb-adc8-30547382ad9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7d4e92-3640-4070-b8ff-6357b2027b96",
        "cursor": {
          "ref": "cccd11da-f909-4d29-a9f1-dc6fcde8ce93",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c552b580-62df-4d89-afe4-bc22ab293c88"
        },
        "item": {
          "id": "8f7d4e92-3640-4070-b8ff-6357b2027b96",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6a2006f7-7d35-4b48-951f-5f9432ea725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5786024f-3c2d-4aca-9eab-808d2ce72b81",
        "cursor": {
          "ref": "83778fdc-7d39-4d11-9f1d-e07148eebe39",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "199b2e57-715c-47d2-bb4c-176e5abd108c"
        },
        "item": {
          "id": "5786024f-3c2d-4aca-9eab-808d2ce72b81",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0d51d1de-4a9f-41dc-a947-5833ad5eccde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04039126-8ddd-4e50-99aa-9cd8552c659f",
        "cursor": {
          "ref": "e3ee2af4-8cea-49c8-b37e-2713e967791a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "88aed0ba-567d-469c-8b4e-1cbc831d3891"
        },
        "item": {
          "id": "04039126-8ddd-4e50-99aa-9cd8552c659f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "032f3e66-c1f9-4e2e-87fd-5dc0a4138963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cbec2f-fa27-4e2b-84f8-ec060edd162b",
        "cursor": {
          "ref": "e56a6d1f-9180-43ef-867b-3645d4a47525",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7f95dc46-33d5-4e80-886a-fbe239e23dd3"
        },
        "item": {
          "id": "f6cbec2f-fa27-4e2b-84f8-ec060edd162b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c7271b09-1754-4056-a5ba-293dab3e4c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0ae4be-55e5-4a09-988a-fc86923e1931",
        "cursor": {
          "ref": "a7708154-9ff8-4c74-8dd7-cb2040b9cb69",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37b9e25c-4792-481a-90d4-bf370f44f6c7"
        },
        "item": {
          "id": "9d0ae4be-55e5-4a09-988a-fc86923e1931",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a717c74b-1131-4f92-9a13-8b949d7c8812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b3e58f-1a09-4ce5-b7a1-70b06eeee8ab",
        "cursor": {
          "ref": "1756ce2f-5eac-44bc-ae61-261387c54d10",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d8f5520d-6d4b-4849-92c0-6106eed03df5"
        },
        "item": {
          "id": "93b3e58f-1a09-4ce5-b7a1-70b06eeee8ab",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e042dfe5-eaba-47db-93ac-8e8575d64afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57856e55-d6da-491f-b5e4-f100d16115e1",
        "cursor": {
          "ref": "6825bb38-ec8b-424d-87d9-feeb1c7b7853",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ffa01738-c9fa-4c97-8101-f03cd6852f27"
        },
        "item": {
          "id": "57856e55-d6da-491f-b5e4-f100d16115e1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8372a16e-c117-4c6a-9aee-2303bce9e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfb154f-0c26-4a0f-af1d-154f05f5c4cb",
        "cursor": {
          "ref": "9ea4823a-69d8-4144-bb9f-4cafad69fa31",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "963c4028-cccc-4f21-9a8e-2f4030e1b19d"
        },
        "item": {
          "id": "dcfb154f-0c26-4a0f-af1d-154f05f5c4cb",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aedf2993-f6cf-47d9-9c48-b557b556de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab788ed4-2c4b-48d6-b708-77a6b0a1e933",
        "cursor": {
          "ref": "a73e3800-bfe7-48e2-8504-a21f4eeb6d21",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e8f818b0-fd66-4ebf-aa6c-67fca6e74d60"
        },
        "item": {
          "id": "ab788ed4-2c4b-48d6-b708-77a6b0a1e933",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d0298fa4-0105-40be-80b4-cffd82a31baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c695a07d-4381-4173-bcfe-23a034981289",
        "cursor": {
          "ref": "6ccde585-73f7-4e61-91f4-dfd8750fdc71",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "38ec6120-b3eb-42fb-9609-b952ad3aa2d1"
        },
        "item": {
          "id": "c695a07d-4381-4173-bcfe-23a034981289",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a701b4cd-0392-4d66-84d8-12b9c2b5ab91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c80924-3539-4858-9efa-5524052a8b70",
        "cursor": {
          "ref": "b12cf49d-178f-4383-9ce0-8b21bc915f2b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "73d12201-b960-4d3c-8046-2572ec19934d"
        },
        "item": {
          "id": "40c80924-3539-4858-9efa-5524052a8b70",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "44fd007f-43f2-4215-b5a6-60b33add2d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20013ad2-c449-4f13-822e-75a6bd765c32",
        "cursor": {
          "ref": "80ff3e88-5701-4b27-adad-7e705bb1866d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b6040749-b00c-425e-a5a0-3a22af332ccf"
        },
        "item": {
          "id": "20013ad2-c449-4f13-822e-75a6bd765c32",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2dde6628-c0f4-4e42-85f2-20c60aed3196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de4269-eee4-4c6f-bda3-a3803828f265",
        "cursor": {
          "ref": "59226e39-ad07-4235-910a-bd9eb2f3a351",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a20eb6cc-3f1b-4ece-9a6b-08ea77f74bbf"
        },
        "item": {
          "id": "86de4269-eee4-4c6f-bda3-a3803828f265",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6667296f-1aef-46b2-8ec5-1a5df61840bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa11a08-adc6-4f89-9218-55ac684b6c4e",
        "cursor": {
          "ref": "e1c4df71-0138-45d2-9bcd-4b56ae142c3a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "70b537db-95b4-4bbe-ba6d-626d6172317e"
        },
        "item": {
          "id": "4aa11a08-adc6-4f89-9218-55ac684b6c4e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f800e0ac-3ec6-4ca0-a116-89a6b293ddc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c1f66-b343-450d-83a9-76be7bb176b4",
        "cursor": {
          "ref": "1df87b12-3719-460c-8de0-fc58f4b4fdc9",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "243de02b-f28b-486a-8be3-88eb70768415"
        },
        "item": {
          "id": "573c1f66-b343-450d-83a9-76be7bb176b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "447f9cd1-f6de-418d-80a8-00e1bc6ee774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c5d4a2-462f-47b0-8f95-07842462e82b",
        "cursor": {
          "ref": "289f3ae6-7e0e-4caf-a323-2a43e066486e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6212c41c-8d61-4ee3-9a52-6310acfa44d2"
        },
        "item": {
          "id": "a9c5d4a2-462f-47b0-8f95-07842462e82b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "957bc70b-2d24-43ef-92dc-5baec0ec7d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57443ba5-32f7-4cd4-8d27-6bc47e809eca",
        "cursor": {
          "ref": "8667fb17-facb-420d-8bb7-c42b1fe60acc",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cbc5b53c-9193-45cd-b654-38870b3e5a28"
        },
        "item": {
          "id": "57443ba5-32f7-4cd4-8d27-6bc47e809eca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f98200ea-753a-4295-97b5-37bd4405e5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab50594-17fc-49ec-b781-39ff44e41157",
        "cursor": {
          "ref": "529627ad-ccbf-4731-b71b-84077280165c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b15c638d-c73e-4672-a0ae-2be15a83fd91"
        },
        "item": {
          "id": "8ab50594-17fc-49ec-b781-39ff44e41157",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e5f61713-11ea-4596-a90d-5d4aa905739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c564f87a-dc52-46a4-936b-552a4784fc43",
        "cursor": {
          "ref": "a9fb7cab-91f2-4491-b867-7de1bfacfd47",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "91d22960-177f-4d5f-bdba-3c0c218f5ac1"
        },
        "item": {
          "id": "c564f87a-dc52-46a4-936b-552a4784fc43",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5f37f7aa-5383-4623-92a4-c702a86a3a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e16a7c7-f5ce-4388-af5c-3f32a4a5d6e8",
        "cursor": {
          "ref": "e70fa38f-d52f-4342-8ad4-d76cf149d04a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4cd94f08-31af-45db-b6da-f06f15a6d172"
        },
        "item": {
          "id": "3e16a7c7-f5ce-4388-af5c-3f32a4a5d6e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ea1ecac8-6a24-4183-ae46-da624cd7940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2935389b-8d91-421b-97c3-accdb846220b",
        "cursor": {
          "ref": "08895f82-a235-42bf-ba70-50bfaa22d990",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a321856-67ed-41e3-83cd-113fc306f0cc"
        },
        "item": {
          "id": "2935389b-8d91-421b-97c3-accdb846220b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7c537dbf-1d8b-4c20-83b7-95aa32e2c95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7767b1-6d24-44c0-a4dc-3e2c8191fa75",
        "cursor": {
          "ref": "5bb14b68-b7d8-4d3f-96df-ac071e002631",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b997a1e-6162-4e9c-8a29-6a0bc82a6b31"
        },
        "item": {
          "id": "3c7767b1-6d24-44c0-a4dc-3e2c8191fa75",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8afcba5b-0869-4bff-8304-bc3533ffb6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b90743-a8bf-4220-84b1-8b3d2550bf38",
        "cursor": {
          "ref": "49800c72-6149-4362-93dc-e879efbb6b9f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bcd69674-fd64-4d5f-bd7e-33db6e858eaf"
        },
        "item": {
          "id": "e0b90743-a8bf-4220-84b1-8b3d2550bf38",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1ecf1904-9fe3-4a55-a725-4b0a37ac6acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e80674-bd72-4f31-b629-48604f9be8cf",
        "cursor": {
          "ref": "e5668b1a-0778-43cb-8e5c-51271a98bffd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e4ba5302-d2f0-4fe7-aa2e-292d3521b9f4"
        },
        "item": {
          "id": "09e80674-bd72-4f31-b629-48604f9be8cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "46c049d4-25e7-4ee0-8600-880d96c3d912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f516080f-e0b0-43f8-9a1b-a9f6f70423ea",
        "cursor": {
          "ref": "e410bd6a-ef00-4d08-b566-a5a6f624b1e9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "61a06cf6-d864-4e97-8f93-deac35d992ab"
        },
        "item": {
          "id": "f516080f-e0b0-43f8-9a1b-a9f6f70423ea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a6c2f8fd-48f4-4629-89c8-c21528f8fcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a59dd2-1f75-476d-8f19-a5364a0cc328",
        "cursor": {
          "ref": "5c666473-f4f2-4b3d-b2c0-ff74baddd7db",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c0c5450a-c73c-4dd7-a163-a6ea9a568137"
        },
        "item": {
          "id": "f0a59dd2-1f75-476d-8f19-a5364a0cc328",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "beac57b6-60a5-4a96-a181-6087ca127ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f4353d-1967-4b78-8700-15f18a772dba",
        "cursor": {
          "ref": "c7f583d2-c614-4066-b764-8095e21d1f22",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "670b0d0a-8c0e-4ff2-b185-6ab9256cbe91"
        },
        "item": {
          "id": "07f4353d-1967-4b78-8700-15f18a772dba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dedf327c-5029-4259-a704-e0698b1d69f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8028ae61-ca85-46aa-a710-f1d4d372ff9d",
        "cursor": {
          "ref": "d44c3c0b-43db-4d2f-9d9f-2eb3f07a435e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ac42c6b7-93c0-41a1-be73-5751a01689ec"
        },
        "item": {
          "id": "8028ae61-ca85-46aa-a710-f1d4d372ff9d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2670b96d-a68f-4825-9a68-3bcf7a38a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3afc4a81-5397-4815-ab68-e808b3684705",
        "cursor": {
          "ref": "4f7d514c-08ba-4e7f-ac05-355859e0a6db",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5edb51c4-e019-4b22-9069-88a05a59edf6"
        },
        "item": {
          "id": "3afc4a81-5397-4815-ab68-e808b3684705",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9db965e4-9b45-48e2-b3dd-16db5e364134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbdfcc1-e811-4700-8842-351221704939",
        "cursor": {
          "ref": "93e54745-5220-4d24-90d0-b42d0d2277ea",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "83031001-eca5-4515-831b-ad7cabca3da2"
        },
        "item": {
          "id": "dbbdfcc1-e811-4700-8842-351221704939",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8109d30e-164f-4414-8689-23cb2234692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142343e1-5cc7-43e5-97e0-609f67be22aa",
        "cursor": {
          "ref": "26daf909-14ec-4ea1-a14c-9c79658302f7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f9d7d970-64cb-4df4-afad-4aabd983bd7b"
        },
        "item": {
          "id": "142343e1-5cc7-43e5-97e0-609f67be22aa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b5850e12-a37b-405e-8a77-26ffa3b2bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165fd3ec-d2a6-4a91-8068-a347626b4a5e",
        "cursor": {
          "ref": "37be20c8-cac0-4ff1-8d06-3ddf8efe1bc3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "36ea35ba-c8ac-45bc-9bcf-eafa9bf4b4c1"
        },
        "item": {
          "id": "165fd3ec-d2a6-4a91-8068-a347626b4a5e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dd7d4dff-f7ed-47b2-9895-825bfe79a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c38442-021f-4aec-af35-35df3e457ce5",
        "cursor": {
          "ref": "0a4dd673-e00f-4ed1-986e-66dcddf24ea0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "246509ef-7bd5-4115-b069-59ac592f0ec4"
        },
        "item": {
          "id": "81c38442-021f-4aec-af35-35df3e457ce5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ffc2ed26-a5ea-44f3-8d5a-e74f5fd26ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff869b09-ffbe-4bda-9976-e3fe2e68aeea",
        "cursor": {
          "ref": "74643387-469f-4fca-ab9b-293f43f3bef3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9c81334-8591-4a30-8720-e2fd3b1f593d"
        },
        "item": {
          "id": "ff869b09-ffbe-4bda-9976-e3fe2e68aeea",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e26e56ea-a1a8-4ccc-b3ff-6ed2e328aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb4d8e5-46da-44f6-93fa-3419abf217d9",
        "cursor": {
          "ref": "28ef2f7c-3fcb-4e7f-9c6e-c45cc89a69db",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "16d0c426-1f2a-4ebb-800f-e5a888f4a929"
        },
        "item": {
          "id": "4bb4d8e5-46da-44f6-93fa-3419abf217d9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e3c0f321-08e4-40c3-a338-7c871dd19053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0639d75e-b932-4923-8ea8-1c3828e9e8fa",
        "cursor": {
          "ref": "0d41db8a-80aa-4f63-832f-3cf73fc0c862",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c77895b5-62ac-4ddf-855c-50ad08fe67f4"
        },
        "item": {
          "id": "0639d75e-b932-4923-8ea8-1c3828e9e8fa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "07e67641-9ce8-4cb0-aa10-e3418dacf2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71ebd12-45e0-4bd8-9d2e-35e9dece87cb",
        "cursor": {
          "ref": "4072649e-9b3d-422b-b371-73c75db5c411",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a54bc608-6cd5-4747-8229-91cb9066171e"
        },
        "item": {
          "id": "d71ebd12-45e0-4bd8-9d2e-35e9dece87cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b724e5d5-7fc7-40bf-84b7-72dffc6a1e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be55ee46-a091-4809-904c-e8cf91c436e4",
        "cursor": {
          "ref": "e16a5d7b-15e2-4aed-b7ea-259f71f737de",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1b638da7-f87e-4d07-8f4f-2b6db02eaf30"
        },
        "item": {
          "id": "be55ee46-a091-4809-904c-e8cf91c436e4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5c1e6642-762e-43f3-b192-5a5f49db7ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5465a849-ee98-4673-bd3d-b3748d3da71f",
        "cursor": {
          "ref": "f1867c10-40fa-42ed-91d6-ee8ed45edc20",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "654b8465-6c74-498d-95c5-a31f005c5c0d"
        },
        "item": {
          "id": "5465a849-ee98-4673-bd3d-b3748d3da71f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eeada8a0-62df-411c-a130-3d6a306389dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27af0275-6f94-4482-9cd7-668763300e5e",
        "cursor": {
          "ref": "77fc757a-9187-4117-8d80-44d01a2828dd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1af73ce0-c0db-4002-9b26-573d5f750070"
        },
        "item": {
          "id": "27af0275-6f94-4482-9cd7-668763300e5e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed0a14f8-9587-4f54-8619-3bee3dcd4489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367114bf-18dc-4ba5-abcc-38d6ac644145",
        "cursor": {
          "ref": "348dbec0-1135-43d4-9bb4-f3101ff919a7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b7f6c766-0ef0-44ca-9b57-04b7e53357ce"
        },
        "item": {
          "id": "367114bf-18dc-4ba5-abcc-38d6ac644145",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "107a3334-27fc-4c19-9dee-0cf1227e3f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce146e0-3675-4af5-ae71-0f14ed6fb781",
        "cursor": {
          "ref": "b4687bb2-3d25-44e5-9c3d-516cf6ad335d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6057d94a-d643-40cf-818e-13dddb4febc6"
        },
        "item": {
          "id": "4ce146e0-3675-4af5-ae71-0f14ed6fb781",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "97dce272-319a-4e49-bbbd-6f28aa28ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c667c42d-a4fa-4347-90c1-6ba46035eed7",
        "cursor": {
          "ref": "4381cc00-5232-42bf-abda-d3c4ee8d73b1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "90dbe2d5-28ab-4e39-909e-e0f1adf1a67e"
        },
        "item": {
          "id": "c667c42d-a4fa-4347-90c1-6ba46035eed7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "74e85a08-5307-4372-bec4-3ef0a392927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a5741a-e5a4-43d4-98dc-78bda6dbf217",
        "cursor": {
          "ref": "c9bf38d9-119e-4217-a210-7a50b40534ac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce46d39c-a183-428d-8985-27149f68b634"
        },
        "item": {
          "id": "55a5741a-e5a4-43d4-98dc-78bda6dbf217",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3da79cd5-d262-4d98-82b1-930525196765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089505b9-e4d0-44a8-9c65-43b3c7f8ce96",
        "cursor": {
          "ref": "1410b801-326b-4833-96da-a0364f110927",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "38b615f2-2e49-4aca-8969-36c1b6b8febf"
        },
        "item": {
          "id": "089505b9-e4d0-44a8-9c65-43b3c7f8ce96",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f38f9dba-22e7-4e0a-a764-e0256f75f512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36530101-295c-44b2-9480-85fd57316615",
        "cursor": {
          "ref": "fd8893c4-92f3-413b-9c6c-541aa96f7d2d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "39cfd366-8f84-4fe4-aa9d-2af8893d8664"
        },
        "item": {
          "id": "36530101-295c-44b2-9480-85fd57316615",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b418532f-b480-4b98-9ba2-2dfae8a26e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba4343d-d4de-48a9-851e-498cbcdf4fe5",
        "cursor": {
          "ref": "9036afe7-3d96-4a7b-a7de-383f68aa5b9a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2f686371-234b-48d9-a161-66f49e8e05e6"
        },
        "item": {
          "id": "fba4343d-d4de-48a9-851e-498cbcdf4fe5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ffd9faa0-6be1-4cad-900a-a7e24f749fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d6a5e-73ff-4f8e-a395-3806cd3a7a96",
        "cursor": {
          "ref": "3dd7c93a-1ed8-4c24-847b-87d2409c4b12",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8a6d225d-9123-463e-bac5-5d0ecf97df39"
        },
        "item": {
          "id": "ba4d6a5e-73ff-4f8e-a395-3806cd3a7a96",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "657f4df0-2902-49b4-b02e-9a9f2fec2350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea24c09-8fcf-450b-b8e0-ee1ed0c3e205",
        "cursor": {
          "ref": "2a424edc-678f-48c4-8c7f-5997e5a27463",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4644dcd5-c6d6-44cc-ab3c-7ffb26bf121a"
        },
        "item": {
          "id": "6ea24c09-8fcf-450b-b8e0-ee1ed0c3e205",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cd7be4e7-b5c4-41f9-a239-f6991bf0d3a7",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "c9090b81-7c9b-4055-802e-e8dc38591302",
        "cursor": {
          "ref": "62e933ed-5672-4a7c-8cac-131edc9efc89",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2eebd1a1-105e-4f31-828c-b54a88e9c152"
        },
        "item": {
          "id": "c9090b81-7c9b-4055-802e-e8dc38591302",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "150b7e52-1fda-43d7-8dd0-5c6803f81652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f5332-2530-4c47-b033-c6085481976d",
        "cursor": {
          "ref": "c5fb165f-726e-4632-b992-0f96853be7f3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16777493-492a-486f-8c21-747dc0067bc3"
        },
        "item": {
          "id": "3d2f5332-2530-4c47-b033-c6085481976d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9eff5a23-cb4f-4b38-8f36-ce79ad89f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9edbba-4eb6-4f46-92fe-48ac4589f14e",
        "cursor": {
          "ref": "6cdb1f0f-50cf-485d-9bcb-5b1078e41493",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "45413304-2bb7-4308-a56f-e9d6bd13e305"
        },
        "item": {
          "id": "cd9edbba-4eb6-4f46-92fe-48ac4589f14e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a2f6c76-5a2e-4c62-8390-527260486082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0939fe4-37d0-4900-899f-9a34264bf95f",
        "cursor": {
          "ref": "cacb9b6a-9f56-4648-bd6c-6fe64bef7a6d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9e0d8295-95e6-4c15-a71f-7d87b26a5b80"
        },
        "item": {
          "id": "e0939fe4-37d0-4900-899f-9a34264bf95f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "55de3110-82eb-471b-bf2d-756d3ee52df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf1d5a5-e356-46e9-9fb9-ca7acffdfe37",
        "cursor": {
          "ref": "d37da9f5-bef2-4a3f-b052-e06e87b65532",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c60f32fb-bf01-43ac-ac91-6eba1005d6c6"
        },
        "item": {
          "id": "baf1d5a5-e356-46e9-9fb9-ca7acffdfe37",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1adac663-9d7b-432e-9c45-b6145380a074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b61dfc8-fc89-4b63-8f63-edef83324587",
        "cursor": {
          "ref": "5cf6bf30-bcc9-41dc-9c84-111af4b660e8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "09233c65-90ec-42f9-971f-fd7ff4131ed8"
        },
        "item": {
          "id": "7b61dfc8-fc89-4b63-8f63-edef83324587",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a973dfda-c8a9-4281-902e-bb7955ec848f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd05039f-640b-467e-a44f-8b097628af8a",
        "cursor": {
          "ref": "3fdda702-ee97-4383-9638-60294a1fdc82",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f6a54118-cb1f-47c4-9a6b-d0aadb5c3aa1"
        },
        "item": {
          "id": "dd05039f-640b-467e-a44f-8b097628af8a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "16d6ac32-ab8f-42d2-9b54-9ca30532c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f68ecc5-abfa-4911-85e2-9d2b65795d9a",
        "cursor": {
          "ref": "a922bc90-a262-4d3e-b974-95b399dacfd6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cdf994ba-7267-46eb-8959-9f34c44c72e4"
        },
        "item": {
          "id": "2f68ecc5-abfa-4911-85e2-9d2b65795d9a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28cad369-d214-43af-a019-00c4ce3d9eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d4f7b0-21d7-4b76-9de5-edbda060191e",
        "cursor": {
          "ref": "d3eec5af-8f73-48f7-9bef-781576f97696",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3d4bea93-b0ca-4a44-a703-7d0aa396b606"
        },
        "item": {
          "id": "69d4f7b0-21d7-4b76-9de5-edbda060191e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7e9b657b-f0b3-4d30-8472-400b28837342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1b73e7-a492-46ec-b728-a955ac3ade0d",
        "cursor": {
          "ref": "d2f865ef-3a8e-48a6-8688-5871fd4bb35e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "edac3a9e-d8ff-452f-a88f-33683bb748c8"
        },
        "item": {
          "id": "be1b73e7-a492-46ec-b728-a955ac3ade0d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2fbe80f3-d1c8-483a-b203-c4c57976959b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55b053f-998f-4c81-9ccc-6311abff79a2",
        "cursor": {
          "ref": "aaf47950-3b17-47c8-9bf1-76d23f79a1d5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f59fc5a1-fe9e-41cf-a39b-58ce8059a96a"
        },
        "item": {
          "id": "d55b053f-998f-4c81-9ccc-6311abff79a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "feabce74-53dd-4376-997c-619916292b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8c9e8c-02c0-4b04-a7d3-9287ed95c0c3",
        "cursor": {
          "ref": "36153063-b802-4918-8e42-ed30b048a626",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d7789534-d1cd-40f2-8020-f043511f0024"
        },
        "item": {
          "id": "4f8c9e8c-02c0-4b04-a7d3-9287ed95c0c3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2e455722-c714-4e37-95fc-603a3fe5d437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7087421-ca72-4b23-9f65-68ca9ccec1c4",
        "cursor": {
          "ref": "60053722-0c8b-4963-8bd9-01e8f86706a1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d6956ffb-12a7-4054-91c5-8e9c87b12ac7"
        },
        "item": {
          "id": "d7087421-ca72-4b23-9f65-68ca9ccec1c4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4d348f61-b103-4d02-9686-b09343d885cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b9414a-5a5c-4db6-bcfe-4020aba5f41b",
        "cursor": {
          "ref": "71d6a4d0-0ed7-46be-991d-3668efd6892b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e5caa3f4-46f9-4afd-bdfc-ee600cea40d3"
        },
        "item": {
          "id": "c2b9414a-5a5c-4db6-bcfe-4020aba5f41b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14318dcf-48b9-4512-a8ce-bbba3bc7739d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46c8b1b-f3e2-4e55-91d7-de1bf55878c4",
        "cursor": {
          "ref": "439adcd4-f0b1-4f37-9dbb-ccfc6b01e23e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9859e3df-64fa-46b0-80d0-aba82c971ac8"
        },
        "item": {
          "id": "d46c8b1b-f3e2-4e55-91d7-de1bf55878c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "df4ed361-3166-4575-937f-424845040e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae26ff20-83e2-412f-ac13-877e8836507b",
        "cursor": {
          "ref": "a7ccff29-aad9-4dc8-9288-0335dfc62ef9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbe69f40-1082-4173-a5aa-08b48a8a41a0"
        },
        "item": {
          "id": "ae26ff20-83e2-412f-ac13-877e8836507b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b1fbc351-eecd-4cb2-a69c-84b1cc646cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27ae745-2fed-4bbe-994a-37906de311c0",
        "cursor": {
          "ref": "70a182a8-885b-4250-8dda-3a8ebdccc052",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9c1127ac-8160-421c-9f93-c471eb8b940b"
        },
        "item": {
          "id": "f27ae745-2fed-4bbe-994a-37906de311c0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "40656c11-9848-4661-aa34-c95e0e05b0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fc493b-0188-45eb-bcfa-10043acaabe2",
        "cursor": {
          "ref": "6b5e4f0a-143c-4c12-86a1-2601d479ebfa",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ea252dcd-45a4-4a21-a4f2-9bb8ff892d42"
        },
        "item": {
          "id": "e5fc493b-0188-45eb-bcfa-10043acaabe2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b04d9939-85b8-4d9a-b0da-41899c43c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0440b6-dd7c-4d08-b0ff-53d16aeedb24",
        "cursor": {
          "ref": "02f3d73c-9fdc-445d-bace-a2b52934bda0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "17f61a6e-dbe9-45dc-9c40-095b1a0a4af9"
        },
        "item": {
          "id": "2b0440b6-dd7c-4d08-b0ff-53d16aeedb24",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cc6944eb-3b0f-427a-b56f-020b1d71608b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b31bb9-a063-42d4-bdb4-58c3af658095",
        "cursor": {
          "ref": "e093e5c4-de62-46c9-944b-30ded9cb6b47",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f721e55-7430-4585-a51f-269108466c12"
        },
        "item": {
          "id": "83b31bb9-a063-42d4-bdb4-58c3af658095",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "81a45223-c0f6-4095-9df8-39595c7aec38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eb9482-d80c-4fc5-9cfc-82c69827c4b5",
        "cursor": {
          "ref": "fb1ee0a9-154a-4438-a3e5-bfbda6c2fb08",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1cf35d1a-3c23-4829-b4a9-f5dfc12010f4"
        },
        "item": {
          "id": "55eb9482-d80c-4fc5-9cfc-82c69827c4b5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7f1d7ab7-b23d-44e2-a8ed-2821b3c9286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb47ffc-884d-42c2-b868-d8d61b82f302",
        "cursor": {
          "ref": "28cad67e-6039-45b6-b72d-28712e384fc1",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "eb6a472b-fecc-4044-9a8b-87ae42088e61"
        },
        "item": {
          "id": "3bb47ffc-884d-42c2-b868-d8d61b82f302",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "92bcf994-98ee-4d0d-9c35-22e7bbc55635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd2b537-f92e-4b53-a9b6-19783a30a6fb",
        "cursor": {
          "ref": "d684bea4-6750-48a4-8a80-f71d06ce117d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b088e626-6b82-4965-8d8e-80cada2bcfbe"
        },
        "item": {
          "id": "5bd2b537-f92e-4b53-a9b6-19783a30a6fb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0cf5b0de-1a49-460f-9abd-b5c7ffd079b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd809ef-a067-41ac-8a2e-5430976b9c62",
        "cursor": {
          "ref": "7615b7a1-239e-4da9-9d5b-fd77caf595ea",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9fce1037-61a8-466c-bae0-3a192d7cb0b1"
        },
        "item": {
          "id": "fcd809ef-a067-41ac-8a2e-5430976b9c62",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "99903afb-aa96-4ccf-990f-3ec35f7e16bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3380d877-da6f-438e-aee4-c5915c2b7eac",
        "cursor": {
          "ref": "96a5c15a-ac68-4d54-95ea-684b8605cdbd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "57b18fae-3758-49f2-985e-f3e75762058d"
        },
        "item": {
          "id": "3380d877-da6f-438e-aee4-c5915c2b7eac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "562e8726-30f2-4d6e-b351-8307967664de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07845450-14a6-4402-a44e-76f24a8e3333",
        "cursor": {
          "ref": "8d6ca85c-ec74-4694-be64-f82f10f3ce5d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e44802db-4d67-402c-b9ce-db2ec28ede2c"
        },
        "item": {
          "id": "07845450-14a6-4402-a44e-76f24a8e3333",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc96add7-a09a-4c89-86e8-8e596e96c932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98482210-7279-48a0-9378-75f5cf69cec3",
        "cursor": {
          "ref": "2c2e4fc3-5995-4d95-b7b9-001982a71730",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ac5dcd24-762f-4c9f-8d3d-9ea285f47aaf"
        },
        "item": {
          "id": "98482210-7279-48a0-9378-75f5cf69cec3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b82bec60-8f39-4be6-bc73-f10e0149478b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e9e03-d50d-48d5-a2e4-03bad17bdd77",
        "cursor": {
          "ref": "a0c0d75f-83d7-4153-9366-d5c64237caf7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "aaa6c10b-c11c-4113-b353-e8baa98f38f5"
        },
        "item": {
          "id": "911e9e03-d50d-48d5-a2e4-03bad17bdd77",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "af3cac45-8b74-4e59-8257-a0c4a86e2337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882be17c-ce1d-45c1-b2ae-a7f787afc69c",
        "cursor": {
          "ref": "b91a3338-bee1-4cb5-a9d6-d2ed6dcf7343",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "defd3713-edad-4311-81aa-928c53207d07"
        },
        "item": {
          "id": "882be17c-ce1d-45c1-b2ae-a7f787afc69c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e3b857f9-03de-4167-9b1f-39c60e3e300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71ec50d-225c-46fb-af3f-b8163a99ee2e",
        "cursor": {
          "ref": "32f1274a-697f-424e-8e7e-760a2c276f0e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "99525875-d6cd-40b3-873b-ae8fe36026ec"
        },
        "item": {
          "id": "b71ec50d-225c-46fb-af3f-b8163a99ee2e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2c4a043-a13c-417c-85c9-dc6108e85841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd1c828-68b8-4984-9ab9-f592720cd1bc",
        "cursor": {
          "ref": "54b6d05c-dad5-4ef8-b15f-3a5886d016cc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ffc80490-e9e8-438d-9719-2839efe85f2a"
        },
        "item": {
          "id": "2dd1c828-68b8-4984-9ab9-f592720cd1bc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "997b9962-1029-49c6-b214-aa420bb4cb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0410ce-25f2-4ede-bdd6-c8d1a6f6cb26",
        "cursor": {
          "ref": "fbeea60e-7663-4436-b189-88eb6b7b68b3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34bb5cc2-df17-43ec-aec8-a1759efc43a4"
        },
        "item": {
          "id": "bd0410ce-25f2-4ede-bdd6-c8d1a6f6cb26",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ac60302a-8e35-4e65-ac5e-5ff2270f0e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2526f781-b88a-4334-8e6f-8438861fc215",
        "cursor": {
          "ref": "58873e7b-619c-4bc2-ba07-df3d5c82cc25",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "19c47be8-f4e5-4518-9d9e-a90cbddf3599"
        },
        "item": {
          "id": "2526f781-b88a-4334-8e6f-8438861fc215",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1d866b3-88e3-4970-b4bb-d933685b1b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87fd8d7-1d09-44df-bd82-e1c565bf1c3e",
        "cursor": {
          "ref": "8011b399-18f0-4bff-a857-582398f2f08c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "33856dab-b86a-45ea-9f63-c644121ec172"
        },
        "item": {
          "id": "e87fd8d7-1d09-44df-bd82-e1c565bf1c3e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d5760652-e5a0-46fa-81b9-1b0b8d63b945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f628b3c-6dc9-400b-948c-53ce99830f53",
        "cursor": {
          "ref": "b304905a-225d-4c95-aed6-f45a89e76252",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c15bb690-154b-4487-a441-d98cec93f78d"
        },
        "item": {
          "id": "7f628b3c-6dc9-400b-948c-53ce99830f53",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "61df5309-e9b8-4a2c-8708-fe92d17ef65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd56ed13-04cd-409c-a14f-760cda96c7a8",
        "cursor": {
          "ref": "094bb9f4-e72c-4467-92e4-51fff35b509a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "14ebaa61-3138-4408-9b12-921846fdc6cf"
        },
        "item": {
          "id": "fd56ed13-04cd-409c-a14f-760cda96c7a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "356a2ceb-149f-401b-9a7b-d2c5f4ab8a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3258d486-bea1-4b2a-b5f9-48c3723835b3",
        "cursor": {
          "ref": "eef17621-61c2-480c-b143-b6577a434081",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9ea58c7a-8815-4829-befe-cc7a06156cc0"
        },
        "item": {
          "id": "3258d486-bea1-4b2a-b5f9-48c3723835b3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "93cef7f9-3697-427a-b65b-9d4f6ba4eef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93eb545-5af9-4988-ae3b-56318e57552f",
        "cursor": {
          "ref": "521083ef-e2e8-4ac8-8c63-9a40bf584d33",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6487a7d2-84af-472d-81b5-a641dabe74e9"
        },
        "item": {
          "id": "b93eb545-5af9-4988-ae3b-56318e57552f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e92676bc-7de5-469a-8f1c-e4bab360d62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f5d3d8-97e4-4442-b302-f2447ed26636",
        "cursor": {
          "ref": "0dfb22dc-bf52-4910-a5f3-64af62e5e9b7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d899fe11-5f7b-42a4-9ceb-ca602d86907d"
        },
        "item": {
          "id": "e0f5d3d8-97e4-4442-b302-f2447ed26636",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "01dea79d-dffa-48fc-a71d-28ccbba566fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f253d062-bd52-4346-861d-acedf71d0127",
        "cursor": {
          "ref": "a1aa553a-9d29-44dd-bc9c-8bd5fab44102",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9872da15-8262-43a0-a715-ed7ebaf7d31e"
        },
        "item": {
          "id": "f253d062-bd52-4346-861d-acedf71d0127",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a594eb54-bd61-4f6a-87c8-698b674a332e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a00be06-e2ce-417f-9250-c3436bf370a0",
        "cursor": {
          "ref": "14f54f00-3055-4ef6-bdc3-7b4219c4a453",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9edbb64f-b08b-416b-9ac5-a88c6475838c"
        },
        "item": {
          "id": "7a00be06-e2ce-417f-9250-c3436bf370a0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "155e4570-1b35-4f32-8a30-c71afe85939d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff75ff2-d316-4544-9fbe-75d74f03b3d5",
        "cursor": {
          "ref": "f2ca617c-14f6-4f8b-8387-6045dd22eb49",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1ba5a4fe-4acd-4cd2-9ed6-b271a519a05c"
        },
        "item": {
          "id": "8ff75ff2-d316-4544-9fbe-75d74f03b3d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b85d7f55-ca8c-496a-b839-482c05ac06cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d41ac1-0d0f-4a48-a577-015be821d25d",
        "cursor": {
          "ref": "5f99a925-64da-4812-b1e8-eca02e2aa585",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9e687adb-6a90-4083-8f27-ce092ad2d6e1"
        },
        "item": {
          "id": "76d41ac1-0d0f-4a48-a577-015be821d25d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "226ff08d-5458-4c66-ac35-9740e06efd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166682c2-dbbe-4ffb-b8cb-2c62b734fdf4",
        "cursor": {
          "ref": "15c655b5-0cf3-473f-821c-3af5b4fa0f6d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3f1e5b8b-b5dc-4d43-abb0-09deaefe303c"
        },
        "item": {
          "id": "166682c2-dbbe-4ffb-b8cb-2c62b734fdf4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2cefeb0-dba6-427c-ab16-7e47b2805c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2219a69d-f349-40da-bb3d-77ff63005a13",
        "cursor": {
          "ref": "f6ec41f2-7176-41ca-87d4-d35252e1a875",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b39a6298-afdc-4097-bde0-22856c149a0f"
        },
        "item": {
          "id": "2219a69d-f349-40da-bb3d-77ff63005a13",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "680f4668-034f-4b2d-8894-6dd9dc4ddb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015fee3e-519c-47ef-bc0f-06bde65f94c8",
        "cursor": {
          "ref": "ab829feb-b055-4952-ace3-a5ffc3e47d3a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "066605af-f2b4-4d1a-9a15-cdfc0af2e771"
        },
        "item": {
          "id": "015fee3e-519c-47ef-bc0f-06bde65f94c8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2345835e-0659-4f0d-b3a9-cd7fc821218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e161d8b1-b504-47a0-a4d7-7005609304a0",
        "cursor": {
          "ref": "a47daa71-ad41-43c2-af87-df76c0b3098a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "906b7a75-37e3-45e5-acba-5f5ed5afe43e"
        },
        "item": {
          "id": "e161d8b1-b504-47a0-a4d7-7005609304a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "64b9a20c-ea87-42b8-b6e3-7dd01c5c8db6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ee21c1-034a-4ae1-98b8-83b50557179a",
        "cursor": {
          "ref": "7c9a1a9d-afa8-4e2c-b45c-f105f284171f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8ac3bb8c-cac0-4965-bf31-0ff6de0addf1"
        },
        "item": {
          "id": "38ee21c1-034a-4ae1-98b8-83b50557179a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7cc5bf32-f7b1-4507-8c33-a50f56499640",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "41988e0a-2e27-4756-9283-7dcfd5064faa",
        "cursor": {
          "ref": "d39c6c57-9f15-4100-b022-4bdfed6236bd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2775c676-0751-4c91-9b68-fd5540214c64"
        },
        "item": {
          "id": "41988e0a-2e27-4756-9283-7dcfd5064faa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "002e80bf-3bcc-4678-9a7c-fb13ae3500a5",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdbb533-b3ce-4054-991e-78b9bcb98769",
        "cursor": {
          "ref": "058bcd35-5cba-4084-b4be-d6ebcea63d3c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6c574642-6227-4f3c-91fb-9cbb7260367b"
        },
        "item": {
          "id": "fcdbb533-b3ce-4054-991e-78b9bcb98769",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "67888433-f66f-4928-86ba-e3114367190f",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a025a-47fe-4da7-8d84-95088741692f",
        "cursor": {
          "ref": "86f50755-0660-41bd-a59c-c2209bad2827",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "117cd4d6-82ca-411d-9125-1ce8534aa5aa"
        },
        "item": {
          "id": "2b9a025a-47fe-4da7-8d84-95088741692f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08717400-335c-42cf-bca7-059dc17a41aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9a025a-47fe-4da7-8d84-95088741692f",
        "cursor": {
          "ref": "86f50755-0660-41bd-a59c-c2209bad2827",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "117cd4d6-82ca-411d-9125-1ce8534aa5aa"
        },
        "item": {
          "id": "2b9a025a-47fe-4da7-8d84-95088741692f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08717400-335c-42cf-bca7-059dc17a41aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b856245-450a-4ca2-9e0e-f0c8240c1c26",
        "cursor": {
          "ref": "592e25cb-4f77-49f1-b2c9-f5fd798b4a25",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "922b5d09-6fe1-4f7a-888e-508c80a41d07"
        },
        "item": {
          "id": "4b856245-450a-4ca2-9e0e-f0c8240c1c26",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b3b9e6a9-e258-4264-a0e4-178211f6ce32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cc18ba-5aa4-4946-8f8d-020028406a13",
        "cursor": {
          "ref": "42c0b99e-c555-42f0-889d-8461820d64b1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d4800bbf-4665-4af3-8dd2-5e3f0d652315"
        },
        "item": {
          "id": "83cc18ba-5aa4-4946-8f8d-020028406a13",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ef89b499-751e-4f6a-9125-b24064e254af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}