{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2517a38a-840d-4f41-9ecc-83a642a5f46f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c63803e0-2707-4a4b-bdf9-5255852a7d99",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb12c5ac-c42d-4708-84e4-2f6f1e125b1a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f2ffb9e2-2f85-449b-8573-287021672655"
                }
              }
            ]
          },
          {
            "id": "a7b4efea-dd34-4acb-8447-c5d542470db1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01af933b-a56f-49e8-852a-7ec19ebcc934",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a0c091a8-708d-4beb-b843-3787c1129ae3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "74b2d0fd-7411-4832-bfed-9ee1db70a0c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5822f0bc-e5e1-4c16-9498-a98a757c079c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "77ed8cd2-8bbb-4017-96a8-7467d98860f3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dedc6ec-7a21-4571-b4fc-3d0315bb5a93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "656e44e6-e976-4d66-a8a4-4ef7fa14660e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "085dcc7b-d7ac-46a9-bfa8-151f7a86b626",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3c51708-d1ad-4103-a902-29d1c2d3fb8c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8c9ab12-bd4e-4483-8fc0-748ac535959d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a7c37c3-a001-49af-9e60-fbad22009180"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "804b3a78-c808-447a-8787-21547a2c0b89",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4067ebc8-e361-4641-8c21-f75d42189e5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e7f93e8-dafd-4fc0-97db-c25f3c322f8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2dfbd2b-4080-44bd-874b-db5c75854aa5"
            }
          }
        ]
      },
      {
        "id": "8ecbc946-e0ed-4f2c-bb78-359d157ae354",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "99c2b007-9d99-42b7-bc50-9c724843069e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b64012d7-6dab-483e-9389-e19ca1d8263a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "642322df-78c3-4fe2-9c0d-9d2c8e2d0732",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0a6945-eeed-4a70-b538-08989ef4e156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeb5911e-ddcc-4f77-9a65-a639ba68ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f370ca-3063-4205-b883-7ad2bcc29f4e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76a9931-a375-4149-b524-d605abd823d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c41f67e2-7114-456b-85d4-60a37e0d94ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46556ef-c48c-424c-922f-966cd16c7710",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612d7473-9c06-4f62-9ab1-92dce85c2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d37fc9b-b8ea-4ea1-aa56-08221ad1ef27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4b550ad-5c3e-48c9-a4a9-5ef741599975",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1f3ec5e-b87f-4255-8ba7-4c88e2ba3494",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ce7ada-5ef8-49b1-8a2b-757d504f177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cafef05-0525-43c4-84d5-4a722ee65581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a739ca5-7d1b-4142-bd4e-5fc48efcc8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2245db0d-ef51-43d3-9f28-5cf6c659206c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fe6532-8e27-400d-a5d6-b32022085233",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0666b4-9d03-4db8-b82c-ed8fc8b9c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acbb6755-4ada-499e-aee6-53c2b2e9fa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740c86bd-9913-48de-be1d-c35f45f1b372",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ff82ec90-6960-4f09-9cee-1c9adad2d25b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a11e3cd-789b-41bd-af28-d8ffa304931d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3920ec4b-fb72-43c4-96d3-f2a93b7e151c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5263510-f775-4b32-9e93-d6ea075d394e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0708685-8e75-408e-a012-84f57e438ee6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1420ec8e-6b2e-4c16-9222-dd8314f12503",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f5dcfbd5-bc9b-486a-8aab-2f10d3622c08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0ebd412-ddb0-426b-ba55-ab5955ca3207",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98355972-6188-4273-b1d5-865eacf9eb9d"
            }
          }
        ]
      },
      {
        "id": "33dc4a16-5a2e-4565-8d5c-425d981d48fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9215d9da-a73f-4c6b-9ea5-4b046afe3dd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38c2800a-9ef9-4c66-a260-a3499859800d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "63c8ff3e-4050-4dec-8a72-95dc164a9ffb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b87228-5919-4229-bfaa-ad8ba5aad7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eb4252-308d-4786-ac21-957e2c9c5a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9594d8-fa80-4113-9034-052e48da301e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef22e340-3eef-4b00-8a2c-adc381ee4e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63938dd8-f176-40d8-9b17-8e656da771e2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c9c18-8c7a-4ebb-bcaa-264bc1c7c55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edb8cb5-515a-4bf7-8cd9-92104778f6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1149407e-4af6-4673-8d4c-74325531736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98ffd93d-47a8-423e-8e91-0b53e89a2685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c987a25e-d03f-4aad-94e8-5829fc6f7341",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21da894-ea47-4499-b776-c7438149d071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aa2961-20bf-4893-bc6a-bc4e57ed9521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26d0f5-7524-448a-987d-ac885bb48730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6089cd9-5f6b-4dd9-ab5c-c1d542d84630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1f42f9-6506-4912-869c-c4f7356b9927",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa87ab2e-074e-4013-957e-ee8ce5ef7ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f0298-1719-439b-8171-230b07dcad05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a89629-45da-4e83-aa80-f73730479137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4129a1b-6c98-418b-a91a-7ec34857105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98db7cd5-7934-4114-a704-f38e6337fc4e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cec960-456c-4901-80c8-dee75c4b2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b9b0c8-8775-4f7b-a541-ed287dc4f4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d913584-86e3-4948-8894-579a1b7989cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eecaf17-5a1f-436e-b3c5-9d7bd6758de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262cd931-a266-4fdc-a817-420365cf6930",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357cbd31-e4e6-42ae-aa7c-43266581ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7c0750-8919-4177-8790-b961d1e639fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b432630b-d364-45e9-8afd-6bd96e0a6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c02b9f-1a57-43f2-b23e-a4ebc656877a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04128336-9f1a-4e9f-8f71-c2d28a9f3348",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf030d78-0248-4414-8d5a-e5740031432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eec3594-e8fb-4f93-ace6-3d9cedf8a23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451bdb65-beae-46f9-8514-b1e327b091ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "813bd208-0fca-44e0-bb97-d19c343d0b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f8276-2174-44ea-90b5-e11094df5760",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33e252-2a5d-4ad3-9e5e-e23935e32141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011409aa-1e45-4a80-ad41-db432abc3cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0e401f-86a3-4c04-afea-8121972ff220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b8833cf-c6a4-4a4b-b9b9-a39739d70244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb2a128-f80c-4e31-b186-255a08339af0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c98a06-01da-44e1-91ea-ca73a8ba46cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a44997-621d-4823-95b0-1630c04c2389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640fe26f-b79f-4f5b-bb39-0a377b05b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "551e191e-c22f-451a-a55a-945cc68a97b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ca1ee3-c2e6-4e0d-840f-b574a18831b6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28035518-1add-4812-8adb-8659b244e94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fb9757-457c-4c44-9c2c-763a7290f0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9832f8c9-c8eb-4614-9763-71e471ac24e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32bd5fbd-b8ec-4daa-9afb-5612f0b39e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df52667-d8da-4596-a38e-e7a2130ab172",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1e95c-b8d2-4112-aeee-fb93fb73624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5f817b-7c36-4a6c-bb65-380bb94f6531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21576c4d-4963-4014-9477-f0f57006f105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da18b667-3672-4349-9e37-a35f111e45a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feaaf85-b163-41b7-80cd-53693d0fcacd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a4e2c6-4c47-4984-8562-63ff405258d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7bfb0c-4d19-4db2-8490-7f6b9dbe0f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802a165f-b7d2-48d0-b402-0ef058cf9d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d268807b-a2d4-4300-9540-7e152240b661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79807e4a-1eb8-4842-8cc9-2e2a7bdf663d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40478f2-00f7-4636-aaa8-e601275805fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9f50d9-e609-4563-8dbc-f0a68242eaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26af2d89-8338-41b6-95db-6fb80c1acee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1194f1f5-64f5-445a-923a-7788d3934c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be208a4-c2b8-4e39-a972-5d8c6c51fa12",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08641f9-1f8d-4d66-8c7e-4d03d5ed9330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3598593-90b4-4b67-baa7-0c076465541c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9bee0a-da7d-4d59-9143-e23ffb00249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a660be-66d9-4156-8f99-191e896e326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c417fc3-1036-4221-bbfd-8d82f07b107c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1bc629-8f30-4ca6-a5bc-ca75bd6d8138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9100a4a-1408-4835-927f-f0663854c255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3e30ea-639e-44b6-8abb-d1728e57124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c21ddc-3173-4228-8331-4330ff693637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d9c096-e485-44da-9d87-df1e0b952a84",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36419415-849d-4630-bc62-0d9c7b5a2bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14503afb-e345-4e4a-b9a2-7afea63645b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c9026f-0f5a-4026-b9c1-96e1a09744d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6081a30-3c42-4ecb-a924-348becaca9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1301059-1853-43fd-94c3-e431708cfe5e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fda0d2-e9a1-4f2e-a75d-bc5c589c7b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1014999-4c58-4988-a223-8766de46593e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d4219a-5f3c-4020-98c5-a219e6ed4d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d90294c-69ca-4436-a650-4b1a4ee00557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4357356-3a7b-4762-b02b-f51e70711dd5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a585be14-2456-46aa-8722-9aba7375f452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1848fa0-a0d8-4b4a-bd3e-42e759e9ddae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ed92c1-c377-43fd-8f55-09f63ba5866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d100894-b3c0-4b3d-869a-4d1aa9bb1310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde5bb54-00e9-458b-b187-08905cfe194f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414a221-4e11-49f1-acf3-427a75fed659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bd58a4-4d80-49a7-b645-e6f589decdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5027f8-6338-425c-9605-307c5efbc444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cdd535-121a-4206-9489-24a32bcd5780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25815c67-b1ef-4979-a0ea-282143b9ef43",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf95c4fc-7407-4456-8960-e042eaaca8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095658de-6a3d-43e9-9fd1-f1a60c5f9233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec154dd-3820-4780-b617-0767bd699664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00090fbf-0575-4406-b160-1f10dec5c2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7c1a2d-f576-4237-a651-fefaf477c394",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61996aa9-2166-4f5c-ad82-c504b9f5c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cf34d7-060d-4eb5-9c83-000dcd1d676d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa75383-3881-424b-aba6-e0b7a1200eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1006af68-13ed-449a-a662-ca9b5565ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49b2919-9ce9-4d83-8161-4683485a2faa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f6bf4f-4348-40cd-802b-cb0e18bfca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cce7d7-4363-4ea4-95a3-d3bffa458cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f021bcc7-2f45-49f9-aaa8-997865e5b020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45941db-3aa0-42fb-b102-de8aa8a83ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0c8c5e-43ee-4776-bb4b-ba4f51981ccf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f0609a-7192-4d36-b506-72748fd79b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a55fb4-361c-458d-91ca-a018ea09ef60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0d7f6e-56b7-4c39-b79b-d5852b5d1bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d929df5e-b4da-4516-abb5-7fa9f010c8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc75223-46c0-4b09-8185-35cb46dad95f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9255a7-b4d5-4f48-a8ce-fd31117007b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbf1318-dbc5-43ef-bdb5-49891795494f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28734e6-1bb7-4660-becc-4481e36d177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "309c1d84-745c-44e4-b141-ebeb0b188f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf340c9-9cb0-4384-aa9d-8a9f9cc7b995",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d16a43c-c80f-4b57-956d-74d821b0203c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031c4477-0200-48e1-92c0-6e8ccbfbf0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559f6f7-93e8-4190-8463-3d2189a12c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63b57f8-0343-43c3-ba27-f6e24b05ecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfc8cca-3d0f-4be7-b655-f6a9f2c537ea",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513665a0-356c-4d61-8090-3cd3f243361f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02baa2cc-e781-4636-b69a-79ecac49cbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac54fa5-08e4-4a14-a431-0aef8fc8930d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20502fe-4401-479d-badf-60201edd16cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362828ed-273f-4156-a07b-126bc3a16e48",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4260858f-a067-4764-89be-aced03309ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ab2ad9-95e3-4713-a739-5f56f2121de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f7b733-a86b-4962-b841-dfe7afe6deed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41933630-4a15-4c49-b9a2-b869511204bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588b46eb-d2c4-47b2-ab3d-bff30310ceef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6658a67-0aa3-4efe-bedd-c00935adbcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2336fa2-c923-461e-a61c-9e02da90273b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31228d45-1286-4a41-8d4d-c930cc35c811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7484fef2-97d3-45d9-8974-019c2dfc8744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd0f85a-a1eb-4ca7-850f-4f68e3dd5760",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baed47a8-5b1d-4df0-8fdc-c4066a204459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89742027-7e41-4d1e-af19-9611436ddb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb9bfdc-3625-4c83-9040-379e1f41737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e2ac5c-5241-444a-ae8c-cdc4ddd15d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5350480a-557f-4c48-866b-1132f7dba4b4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806c9ccd-67e4-4124-830e-d50d4d96eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7777eb-ca82-441e-8973-a3b1895d1b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cbeeda-43fc-488a-8440-bb0a6165a97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "887b9991-6d54-4969-83e8-e1b786efd028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cbe494-0ed2-4bcb-924b-b1a648981d95",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fd3bcf-1e5a-40e5-b20b-4498d5f8dd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1508434c-209f-4317-a309-d1d8fb9137a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1cfe1a-5f5c-4c52-a170-0520452e33fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "913bf00e-cdbd-4905-a8f8-952bed6c4322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a7209-56e0-4113-9a01-31a0685c88f6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db2ade-5bb4-4647-9dd1-31cbb62fc922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dceff91-3510-41fb-8307-953de7e92693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd73a03-698d-4d89-aeb8-702019a754ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3124def-d3e8-4be7-b1f0-790774281760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b34ee33-3cbf-48c6-9885-2965c3436164",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fefc8-6a87-4bc3-bb82-35084c859cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ea5f5d-3236-434c-8cec-d6905d7b6ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979458d1-0838-46e2-864a-7cba160048c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c77251-5396-4c59-9d1a-41dac6c0d855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e2485-31db-4e7c-9351-d52fe8f61745",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80fe1e9-f4b6-4696-9233-fb3b318a8a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38b9972-8517-46fe-8107-ac998188b534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bfdb3a-f829-4451-8dcc-d1c7359570b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0c54d7-62a1-4982-9492-aee963ab7a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684d0c3-ce79-48d3-972b-a6d8564b1daf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838ef6d9-90bb-4ea0-a2e1-e36e8ae1fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4efb276-cf23-40b8-93ff-23eb91db41cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdff9cd-e801-4f42-97d7-7891e1c8b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f536fe9e-1687-4085-9995-e4ac98396164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78371089-b8ab-40a4-80c0-3c25ed61d560",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd156f7-3cce-4e80-aa9b-bea043ffbafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b9dc6d7-3386-4252-93bc-c33fc78ad8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b46cf0-5096-47a3-9cf2-40def2007ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30a71155-b9ba-4844-b256-b93f54884c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd9877b-de7b-482e-a5d9-4ae96f3908eb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e8caff-f70c-4fc2-ac6f-7c2a27140f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3ff0ee-85de-48cc-b18a-19e2a5a0197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b96789e-9b72-46df-98d0-be35fb9986c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0bf0b51-d208-47f3-9e35-d4c96a90b776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be2ddec-5559-4ea4-b591-4a25c3a78a29",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300aebd8-a196-43a2-aa07-39981e69deee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b3a346-8d2b-4459-ac20-b3fc41fda973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324812b6-d0ad-4580-a447-78792df21458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af6fb7d2-ad3a-4456-ac42-b31358b97be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e719f9e7-0abc-495b-9d14-1e64b15c0cce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beddd032-7442-464f-9a3c-d5425a2946ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d1fa35-888d-4cc5-a3a8-ebc40ed4edbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e41aa3-9b2a-4d13-8ab8-709c21db7d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e5ad7b-ca1d-41dd-98c2-2a54aeef1ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e625de46-7980-4fdc-8841-afe03d0ed7c7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defbddb9-7a76-4783-83ef-ea2c0a188387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1fbbb1-247a-4689-bfb2-acb1172afdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595b315-217f-4b92-829e-8570bfc137e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0558bdc-559b-4713-9bc9-76b730a94d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bab0baa-6879-4099-9874-1c4a35619a02",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308d94f-0ee6-43cf-ae06-f5814910aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3053a9ed-7c0a-40df-9756-e07966c87b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b348fdf5-6adb-4f05-80cc-0db3a28045e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d6bb5f-3bd2-48fe-9f02-8c35a7a1b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc834cf-92a0-4724-bcb6-3195de280a70",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7134c030-98d9-4a43-ad3b-0e3caf7979fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d56fe46-e7ca-49fa-ad7a-9238ded01382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ddaba4-ba32-4719-9dd4-20abdf2cbde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb554e7-8e9e-4bc6-b44d-32edb9347af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90718ee-5f09-4faa-8a99-6de43ed01e0e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e2ba68-bfb5-489d-ab95-fa26af197146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80acb884-d670-4613-bd81-8d7eb93bfb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cfc0c5-4a45-438f-83c2-9374cb0baf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c005825a-c235-4805-942f-10b35b381815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0a61a-4010-4355-9c1f-c393a19a78dd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b079d947-4288-4f75-9540-9c8911d29fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2b1bfa-1bbc-4a01-bbcf-4e489e25b647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab58a57-03b7-4884-8e76-cb7fed9fe98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "425d634a-33d9-4b9d-9253-521304afaff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c698a055-c912-45ac-b9da-cf8fe2bdbf09",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b69869-f0a4-4beb-93da-ebb0d4774d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd7951b-c5af-4980-8cb5-7e838acf7738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6471f5ed-6aed-4437-b7c9-479a47cb1927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b45807-cf75-4bac-a466-791e0225d67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba939bd4-53ee-4cb4-b93c-f03b5c05adf8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e98e3ed-1575-458d-bf37-d9d291863dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23202932-38ac-4f44-8b8b-e83deaaca59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e989b3b8-d9c8-45e1-b8cc-aa4f38d94432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f7ae78-5b14-4961-aa25-29dc58d9a875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd901216-e507-4d3b-b767-cd59a0b3a618",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30adbd3f-f49d-4cc4-8bcf-687a21984dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da166aa-a498-4cb9-9d31-3e0a4e5242e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d05f00-f8e2-437f-bf1e-1749222fcd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adff560b-f2b1-41c8-be66-15cb5972af7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a87b73-7625-432b-8843-10f8722e13f3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c219ce-e8d8-4118-a4f6-4b9c563e18c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fb22a7-c623-4493-8d84-a5e0bdfd68c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df853232-1316-4af9-bcbf-7753af5929e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a1086cd-82fc-43f1-8ebe-c89d966159ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6215044f-9e66-4249-84af-613e23c55473",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c66284-da9b-468e-af02-6374d52bb60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515a0169-2aa4-4ae6-b67e-7dbfac26de61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21b5f6a-dcea-480f-b516-72c90c579aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df05ac3d-35b1-43aa-8ad5-84cfc481c686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7f231c-2793-4181-88f5-49bd82ff8899",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36c8134-428f-4fd5-8308-77969a704d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf932d8-8a77-4ab6-979e-c0b70ea381d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada425fc-b290-4023-bf3c-66273cc6f3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "45f594b8-95a2-4812-ae0a-c7ed03fba95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aac0289-dd3c-4159-97b0-7f44379a62e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd3767f-95a5-47ff-b522-8384abe5d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a044df-28b2-48b7-9f6e-ec2ffadd5bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26641e6b-e923-4da8-ba04-59375fb2482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a15c3e56-a81b-4c3f-baca-7599f9190472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7963a5c-52fc-4971-8d71-1328e41de22e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40520d-b96b-415b-98df-0466fdbe9948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ae053e-d887-42a1-9a54-5ce9a1f71faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621b8e95-3329-48bd-bb27-bffd3e4584de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5788c4-9356-4761-b059-e50eedb46d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0242fde-cde8-4eac-b2f6-d4e2dafe0432",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b719f9-9801-41ef-ac60-fa486cf3fce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ff640f-dfdd-43bd-91e6-ced3bd9b92c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8aefdd-8cba-44b6-8851-a135a4ea23a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "111692d6-4fc5-44ea-9260-cfdd38741de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bf132b-46ae-491c-ac28-90e6c811f790",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ffc89a-e211-481b-bc00-09ae150ea463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0576f16-1cbe-48f2-b7e1-4be2b90b1d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac5f1b4-a66f-4357-9146-62f1739afc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e62f8d2-8b48-4d12-a17f-e3c61534be11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f75ed74-bffc-455a-a83d-c0b37d0603b8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364feca7-e2a1-4766-8e4a-cc5c5576d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b2ff9f-16e7-4d05-9054-c3c7d2e6b705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9bd602-11da-403f-a707-d794f8b3df2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c60b36a7-cb3f-438c-94c3-5ecf29d3cf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c92e6e0-389c-4e04-95f2-6ed093e570bf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4021d371-4a2a-4495-9a9d-e8dba2bf89ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f51cbe-28c7-406c-8d36-3919ab2fc9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e0c200-3d91-490c-9823-007286ab5cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6e3c68-2218-498e-9802-b94d97cc6b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a0053f-dcfc-4a56-9d8a-bf84b2c8c6b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d350f739-95e2-491d-b02d-616b5db0b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5f5885-5c26-457e-bf02-e96e440c2559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684ab8e7-68aa-43c6-91f9-21b50b7abd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17766a5b-1195-46f7-9733-2c1c20c1109a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bbfe31-bb12-412e-8948-c9e336f89c75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a002450c-a8e3-449d-99b0-81ca4306a29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f5f342-3e8a-49f8-a07a-22f42ce2bc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdb9155-b652-410c-8a8a-75a350b0cef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "030e7f2e-f5dc-40f8-8d15-8814f9c281b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6b8b4d-2a44-498f-8065-c5b602775001",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7921be46-ec13-42f7-b240-109e0bff8e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86ddd10-58f0-4ab7-8b45-b2b287344633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f9451a-21df-41a3-a6c7-174f307e71ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d40d8cfa-e68c-4740-aa53-137ada532483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca55aafe-3856-491a-9027-7ec089e7b92f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4946c2b4-df73-49db-bb64-af594eb13ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bbdd99-4517-4b69-8df0-e0b8689a401a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfd9481-b519-426b-ab89-06a9838b210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "628bfcb5-e79e-4102-8b08-df16382e9520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eef11b-8d50-496f-92d3-cfee28a23689",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f079ae27-7517-4ef9-a96d-a428f70d171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7b3578-01e8-48b4-b41c-f5284640180b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a42c87-0839-4ebb-baff-fe558ff8386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fa502d-d139-4e33-84ad-936d728dfce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eaddd8-92ca-4e1b-8531-ba81acae296d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf1f9ba-239f-48da-a492-22e6a48f847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2e8b77-f74c-43a3-a724-a2959293065a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ae4ab0-8558-4915-add3-a85a15cc8e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "985fe515-e1d5-40e2-a8e1-2e1152816a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1340571a-8701-40c1-a772-8c1386d4c65e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbc7e43-6cbf-4443-95da-57a8f0125616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6864ca4d-35fc-4a30-8cb9-38e79d7efa4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1de761-d1b0-4be2-baf8-287548e5b580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19cf267-8069-4f0d-ae69-fba180bc8f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19bdb1d-3cbb-41f3-8700-bde50d3d7e2a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1900542-bb34-43c0-a378-145c17b41cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac062ea2-1c70-4385-94d1-a7cd0b7b23a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84461083-1da0-4844-a2b9-301ccddd78ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bccaf29-adf1-49bf-9dca-41fde06c7c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a80792-30c2-41cd-9a70-73a24cb83b15",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa9aeb2-2023-4213-92bb-3f6796d45202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83f16dbd-d2ea-4373-84cb-b271ae25b9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186caedd-cf7b-4bc4-9a91-aa0074169457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d471c0e6-461e-4a66-8bd9-ff2aa0325f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e327039f-9c79-4488-bb79-a78b583f4e1c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb524d6-6b15-465a-b429-4c3c5779d6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b058f25b-6e37-483c-963b-81864d183ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3383d833-aab1-4ab4-aa2c-6e2dd3dc1570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd5db55-8687-4ae8-ba4d-532264382d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cf61a9-ec5d-464c-a925-b7fae917bfd8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb38d232-9b4d-4b4e-893a-221a725582ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555e6f76-5213-411b-abd9-1678e0df8851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c151d82b-5e80-4cfe-884a-121fb0869ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44b54aae-acde-4c81-b48c-62ffb6c5daaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2101b724-abdf-4589-ae0a-4f706627a1f9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9296329c-0eee-4bf2-a7b4-a62f96aec8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63d0f79-0b7d-464a-8162-4f1de55785b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71af9f0e-f87f-436e-880b-871a33131ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0028540-cebb-48d5-a9da-fd098b341fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1ed59d-581b-4c39-901a-e0d93190c7fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f31a955-ee4c-49d4-8d82-c5100008c74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c139dda8-d01f-4db5-a6ee-25054f04cb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4a4fe-7c08-44b9-8f1e-204d89caf3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01283765-5330-48d5-b0a8-aa9d3486e124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c8a4f3-208d-4460-998a-b5bb9330781f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f2bfc1-3654-4140-b03a-b3c1ce9e72d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58af8d3d-3702-4c52-91db-38f23adbd9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0361f6ed-8a1f-47eb-870f-21d58675c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d7d1407-8b21-4066-94f0-2313e4b03483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82b05fe-902d-49a7-a25b-5a8a64485ec4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287d964e-e9aa-45dd-a7c2-9771298a0383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e110d6b1-f3a2-4fa6-91d1-a7167bd13e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15111588-fa9e-4d68-b62d-bff9d3c4d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7157fd38-2fcf-4a6f-bcf0-429d671fc327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c067ed30-b9f9-4cb9-834f-ee0a45498b2e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db325cb3-9e37-4e93-bed6-019c5e0a51ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b675a3f5-5f44-486c-b0a4-2d067c38f99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d63db38-0e2f-4a42-bfae-85e219346d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb58aa2-d848-4ac2-9539-20aab7e28ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d651e44-942d-4f6d-af96-b2cfc9d92406",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde0eef3-549e-471b-9212-d3e59f6e6c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b70567-f81d-43ac-9d7c-618192294919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49169a2-74f6-455a-8c9b-f8cc1cd91425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a12cb0-e4d0-4265-b354-93d2752311d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b54f16-19e5-4f2b-8750-2f99a0b1ac67",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4d2184-6bc5-4960-9aeb-0f3fe1c82705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b0339e-000d-4573-b33b-1e162c3890fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e118673-949a-486f-84b4-cf2ce8ddbfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58700cae-79ed-4eee-8824-045c763679f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f88b2-98bc-4025-9715-b2fc308f182a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e77a41-4125-4da1-a8ff-04cf8394f5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f691d423-6e6f-423b-8cb2-a99c6c47c062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4078d909-d520-43cc-ac64-aaf2a5401646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f796022-3b34-4789-8853-67ba74bb4426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccec3f7-a460-4f67-afd0-7544a9d13a26",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6549fea0-132f-40f9-b4ff-4c11c6df2694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cee548-1be8-4459-96c9-a057cffa195b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba37bd72-e5a3-47a7-b6d1-cd7043fe2089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7032516f-90f3-48ab-9472-487f49b9442a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf0aecf-2d9c-4ba0-8d5d-88a9d9e6e9ff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea20071a-26d7-46c6-80ee-2033c3596e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187c3d2f-c69e-4de6-9f46-992e264d387f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e694d2-4091-4604-a603-08f0c0556109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3928e1d6-d7f9-4710-bd72-e1fd948e4cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d218e112-ea65-46d7-8264-75a50200c327",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6667f0b2-5b67-474c-aeb2-87d407316e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481887cf-90df-477d-b8f1-0682e0bbce30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893a7026-ccdf-490b-84c7-2377cc3a01a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a65bf3-5387-4583-80b7-31e2f8cb6a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043b2df3-cf51-4427-a40e-245579eeb413",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c7d7bd-3dcd-420d-9284-b4f5bd0cd9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493161c9-d490-41a0-888b-6504ced76367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67971050-b062-440f-b4d2-0a6c10442658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a18d11-9a37-4b44-8c80-e054cac9596e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd4df0-04d5-4e03-ae38-3118182f4874",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dec6cd6-f7c5-4f6d-ac3f-730888313211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae079379-8403-4122-9a86-575c9dfb6dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db7ec37-6c05-473e-ab1c-d0c9a15c9a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e34f0aa-7943-4337-bc45-7704319b7ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6438a9a-600b-4d8a-8d09-8c0c91b6c468",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa0a357-cd29-43c5-a141-f183ae3151f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b184f2b-569d-4329-842b-f28eb511ef28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b00cc6-e8a5-4339-a856-0fb1db7d2858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21c045f-488d-4f2d-802f-4a8ceda186e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcccad61-7023-49f2-8925-3d0c32be544b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c904b3c-573c-4359-af4e-09e60ec10d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c441d1-885d-4a39-8091-830a81954475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29245573-baf8-415a-9317-63e5a3f994bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d877b6-7e72-4311-b1b2-3d2da4b605ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33070e8d-273e-4cd4-998b-dd53b543faaf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a641966-a95c-431b-89e2-706ef5c50337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33259476-53cc-45e8-86de-9dcdc56be0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355a3725-e43e-4101-9b4e-44a4475f8375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3a7ba7-7442-439b-82a0-130dcd8339b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3b38d3-7792-44f7-8e56-84ca6a5acece",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead73908-98be-4b9a-99c8-0003c3457dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e831b1-d0fa-4efb-8a2f-5ab2c804e721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a610ea-b65e-401b-a47d-af1cbcc6c481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1be7b08d-8ab1-4afa-aafd-12583aab205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ad29dc-58bf-43d8-8d5f-1e496d04a4bf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c9ba0b-4cff-44ac-896d-7f53f7494c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5267ccd5-15d8-4e0c-8d07-46eb82727f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bec3ba1-4249-4b0d-a268-c126da785ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb48c2a3-3d38-49f5-908f-c335968540fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5732e1a2-5f7f-4f2a-bc77-e675eebe0e5d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e198ace3-5f6e-40cc-9b72-7f5b19425141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fa0371-5891-4a13-a81b-d0a7782b1671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4ee395-fbca-4156-9b2d-dff79c00e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13797b38-cbcd-4104-81d0-3cff378ce798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6e10fc-abe7-436f-9d7b-83344a550cbf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f484f5-a93c-4a4d-bf8e-da18caa59ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f776735-4a22-4b39-be5c-5d22b7347b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2a0ae9-c943-4040-a42c-0176640c658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67b87f8-aa4f-467f-802c-2531c2d90211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05344039-8837-4493-96f0-2a1f0923849f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b2421e-84e8-4a2c-a739-22b9bd2e7f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ff5a6f-8f57-4ee4-a44a-7d6eafec4b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d3c8f5-4cc2-4111-b02e-cbc3dfb9364b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "650dd010-facf-4afc-a9aa-291d3f2daff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e675fcd4-7bb1-4eb7-a143-fd567ea5214d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e876f2c8-51ae-4553-a34a-562726522c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98832d8b-0797-4a6e-84b6-53bdd2fb9f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cba93f-6d1c-43f1-ac35-901e95aef422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f72acb5-a9fa-4586-b624-78cbbba96ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03547df-7f1a-4b4c-bd43-7ef6f5bc45a9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f214f4cd-e79b-45b8-bea0-fb63150b0c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7abba1-0f65-4335-9543-fc06caffa365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd54392-73f7-4561-a78f-8eadd698c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71506d0a-7bf6-442d-afdb-5ba99cb18a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23e4693-a977-4c37-93c5-fd6356e59c58",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58594904-ce89-4838-8ba0-45a798de24cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ed0cfb-81d2-4e17-a5d7-57cb3ad407a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432f4dbb-1e6c-4338-87a7-a0521fd557da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4826bb16-976a-40d3-98ee-de4cf768323d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cc5c84-4bb8-4111-a0cf-98e81f41a4c5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c3c91-be44-4099-8ef1-23512e49d908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7cb7c7e-ff93-4d6d-9139-eab3024d934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeb537a-4478-4d0b-b45d-200cf88c11d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb9dcf8-2b0e-414c-af7d-b682d3910000"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff523402-aba3-40df-a6c7-d541cf32e5cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0cce8dcd-8c45-460b-934a-b9f5d8a15da8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658d1680-d3e2-4be7-a651-537ed017b822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a4a2eec-a476-49c7-bcd7-e3b135940944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e7706e-c2a2-473f-b5f4-7ef21642fe22",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61ae33e2-216c-4d97-8961-39e09697a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20987b4e-8897-4d8c-914b-23bf5e3dfd8d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc71534f-f1a8-49e8-bb20-a31bc4b88684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "513be858-68f8-4410-86bd-b8bb0f414f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5c9950-d5bf-4f5a-9c5e-0cc4290c5245",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a7f2d36-005c-4e3f-b56a-1e2db487a355"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c2c67ec-857b-4e43-833c-6b86a066439a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a7e4d7-91dd-4570-b7cf-89c4a544d751"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82e2ad95-d984-4432-bd96-d5df39354acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8f3e68f-7e63-49ad-a34f-648346713eeb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5169a7f4-cef2-4272-9f15-f8f97b434753",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "237cfe3a-de91-4e66-8e6e-3c488f518468"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80e73f3a-45ae-45ca-b420-9eda52d440e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f19a1a6c-3a6a-47d7-80d4-f6bcf50f2199"
                }
              }
            ]
          },
          {
            "id": "97d8b523-3213-4d51-8403-479fdcbfabe9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "186fac48-22bf-41bc-8266-6f642b777984",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "480e7c7c-6281-4c1a-91e5-ee46486255b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2c69600-6004-4478-8d70-d72befff54a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbe221ba-1479-4898-aecc-3d57ab7d62bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f5f9044-37da-46c9-8a06-ae8624cb480d"
                    }
                  }
                ]
              },
              {
                "id": "aec4dd92-f4ed-4bd9-b221-786a8ba8bb6e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22ff4c77-dd37-4a77-8ed3-17bb676ecfe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc87a2bf-b336-428b-91e1-a6444bb7c4e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "852c7a91-95b3-4aae-aa37-8da8773d54d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2af38349-cc81-4220-b84b-4e98ee3cee69"
                    }
                  }
                ]
              },
              {
                "id": "08f8b4cd-d090-4c9f-8fa8-8842cb73edb7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4b885bb-609c-42b0-9a8e-529ec35f9303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a1261f8-f7fa-4c52-9ba4-8b2fbc56a6ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d8c613-2b56-411e-9cd1-f65ff6e39e20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c690eb20-d2ff-41fd-9c84-00f4fda49fc9"
                    }
                  }
                ]
              },
              {
                "id": "b230a175-1913-4447-9b88-0d4138d39e0e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "700cc64f-92b6-4aa1-a7c1-6cc41cc0d912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "529fb0d4-8042-461a-985a-7113e05244aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75f488c6-bb9d-4e09-b6ac-44d0ce295897",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c6a22df-dd93-4a54-aed7-a4b5a40f18d0"
                    }
                  }
                ]
              },
              {
                "id": "84ee55b6-8b8a-4785-825e-3e6dcd1d7c36",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60546866-e0b0-4a5a-9ffa-c4c2951f935e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86413bb0-4ca1-487f-a6f4-727facda388a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "916122ce-f23f-4d37-b8ef-4e2d671f92a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "55674fb6-b56a-48f6-af12-f91d271b27d2"
                    }
                  }
                ]
              },
              {
                "id": "0dbae5e8-8f25-4acb-9b6d-e6f7151f6283",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdfe49eb-f810-4424-a48d-e822cd1c315f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80f82d5a-fde6-4a86-8793-ad4a64566b45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dd6a9ec-f042-45da-9e50-091916f78885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "912aa143-c11c-406a-8aa4-2279c006c03e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c38d1b1d-2f60-4653-a0b1-8891b4f9502e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f78830ab-04f6-434b-81ae-688676a8cc2f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "55ef1fa6-bf48-4eee-864b-c369873b11be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34751c5-4b2c-4d6f-8546-14872889a10a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8c9f395-117a-437a-bce4-4ac7f3e7854d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "486660f9-1529-4064-8127-719221d665f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f01a8bb7-6ecd-4e28-a447-647f47004b94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a70beb0-f209-42f9-b17e-94aace50c420"
            }
          }
        ]
      },
      {
        "id": "a8e9720f-f5be-4978-a5ef-b7aac8c57235",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "634026db-1df6-43b8-af75-d2ccabae5f0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e0bb3cb-3d3d-4e9b-bed3-e086f80e962b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "93002dd4-1705-4561-b489-feb4ac4c60cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad46244-19e5-415c-be7a-7d74f0fc3ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d903575-408c-47b2-8c13-27bbcd696e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900e6fd8-849a-4fce-88b5-a3c528ef5a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17de1d2c-d682-48a3-8c76-7175746e2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd002007-c5a7-4967-8f2f-1eb522cffc51",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8820c3-673e-4e01-9ccd-7e4bad4425f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbafd94-97b4-43eb-bcae-abd4ef4846f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5684950e-7431-44b0-a246-770c0d175e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d89b23f-16ec-4755-b50c-24cb4fa97602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d00b14d-8783-4822-8431-3d0b6df73b76",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8178f5ec-091d-4d4b-8ddd-8c8a6c08da5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897d09cf-4139-4738-9fc0-6b993c26a625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9e3d7a-a566-4dc4-91a1-0bd3ecfb72f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48924488-d0f6-47ed-9406-de57aeb9fc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5ecc65-eeff-4d3f-9521-4f6082026275",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a5dc78-6907-4200-9113-eff94589e331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e99861-ae81-41be-a072-a18dcb704cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932fe247-f456-4369-be41-9361aab66db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8faacac6-6ac0-42b8-92be-7d9a336816f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794d94af-4778-4283-97c7-e0f542d8efe7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b60b79-dfa9-408d-91ac-f3700b849765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f25f3d-5f53-4b33-8011-f860eea5dc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820b4a42-4c8a-4e6d-aa5f-907102c3852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5d5f00-d210-4506-a004-d337092c8825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79740d9-9a9d-47b8-b814-eec1322bdb57",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853deab2-16d6-4c35-896e-4c9f1130ccb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2af2fe-4986-40cc-8c6c-5128d7edcf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59c909b-ebef-4070-8a84-51834e995bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d1b1a9-6a43-4d86-8ebe-b9d3df3ee892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e39d4-43db-48ed-b42e-d5a3ebec4695",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15822836-5017-4ea7-a59e-84b5814d0525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd2bcde-40d2-47f9-802e-04a2cc4162b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5249c6b-5240-432d-951f-df15897c3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcaa1245-1d8a-4baf-ae95-1f7ce09f107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f17560-567c-448d-a275-21ebeb935c45",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d094d0a-0d8e-4c58-b18c-80a1b04f6365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9580cfac-844d-43a5-b019-e1f49697d122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669952db-cde0-475c-831b-3f32738d23a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35baaac-c667-4b2a-8a83-d02ac4bd38d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936b0cf2-808f-445b-86a0-952090275fc0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a39ac4-3961-4333-ac24-74ce32d135f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa58c29c-14a5-49c0-942e-c21ba99c56ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999276ba-ddd5-4f34-a5b5-4761d63a881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c5ac20-9ba7-46c2-bcbf-9f07214ac949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfcd746-3fee-4253-b841-c6f44d486a4c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93efc980-c4f3-4838-b96f-c7132cdcc7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39e58ef-1cff-42a4-ac7e-c1727e4fa0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b24a85-a669-45c9-8df2-2f363d9d2ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86731a5-d173-4c54-9629-35f14c805684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d050c3f3-773d-405c-b617-8dbda3f7d99f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b6e9c-a06d-4c9f-a146-2952b9ad0854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0052b59-5c08-4b1a-8230-d572fdb5407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9476f4-b789-48a8-894b-e8a6e9c2bdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fc89a3-7351-412f-a90e-dfc9c9ebf64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e652c2-356f-465b-bdc9-4e775835544a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82143df0-7962-42e4-ac6f-620e1ead7be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53febe23-32f1-4a81-811c-d48b2e6f6f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7b9a5a-b5bf-46c8-84cc-c98ebf2f9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "135aa25c-9758-435c-bc37-53f9a4c3c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec8be09-7e03-4479-83fa-aae22e587c26",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33cbf0d-4ffd-42e6-b536-712101219413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af47d49-6fe7-49c3-9758-a6e0ceed0d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3444c1-4811-404c-8b2f-5d6132f7ea90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3be5839-aad8-4d4b-93ad-f53459da7d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbaf4bc-b609-4de5-8ad2-c6d7749abcbb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7914ba-cb02-4a23-b971-3e99e827e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaf985b-0f28-4570-a1d4-57f43f2ba744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b3293d-a1f2-4379-b511-b7a38958e441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c9fa93-9e41-4348-933c-699dae0ef7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a655de9d-ab1d-41da-a76c-6e367bc8674c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ccfac9-89fc-417b-97b7-af2ea57cd87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435f5da5-4a8e-4149-b94e-aaf58a7ca851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5fcbd9-78fc-41f2-aee5-4474549ccb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f938d17c-8d8c-4ed0-b943-8ac534254ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58566cda-9676-4b85-bf53-c409489103ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b0686-85b5-44c4-b8e8-9fc1f74e75f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f033cd35-c671-43de-b5f9-dd66995a1c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd789730-3274-43d2-a55e-34af968f7801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6caa7ab-7e12-4869-aea9-ef9e79de3d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b337380-196b-4304-ba44-9ab5465e85b4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f63825-332d-42f3-9739-c93be9b17a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830392ad-d6f6-49e0-b3e1-6f12ffb41cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d5462a-0c1d-49a3-ad0f-444dfefd1f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0abdffcd-6aec-48c1-8e9b-dcf357576a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001d7e74-1311-4357-82e2-ba60837b3b8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0259b8fa-76d0-4549-9627-6ad9d7ea0a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace3e894-b06c-4f2f-b563-2280b92a2280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d49055-40e6-4ba8-850b-f53db305b834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f34422-37e2-43b8-a81f-6e78e415fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b5980a-9b52-465c-9439-1b1c45d1a4dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7728bf8b-fedb-4b21-b107-eae417785168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7e6e3a-c866-46a0-961d-c00fbd0bfc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ede03dd-4fc2-478b-897b-8542c514a607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9132a4-a2f0-4275-8121-9abbea8753b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9728487d-9a92-4e62-9899-21955d5a8a06",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e78cafc-007a-4057-9bcf-6fbb31d5bdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c3e460-f668-4760-a98c-a0f8ee887c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058ff0ae-d008-4b82-bfef-67ed76d881ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc66340-de6f-438c-866e-23d374322ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbcdf24-73a1-492a-82b0-f87545dec2f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d47d7d-8e44-490a-840c-2b8bbd84ff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ebd75e-ad3e-4748-9fb2-bbfed6feb8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b21224c-9e06-4bb8-b533-64f3292dcdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1fe1c8-3be7-4b0a-905c-c7dd4bb6d631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fe551b-fcb8-43da-9866-8dcb80f9eb23",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d509edb-3443-465b-aebb-937642d1d299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbebcc2-b6ed-475d-8531-8ca8458c1cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352eb11f-b877-4394-b915-463cfac76c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b25b4a-9b24-412d-b4f1-30d9a9ccb6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a8bc71-f3fa-42ad-a93a-0e0471c53038",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e48fc91-4fa6-4c56-8d56-86447330847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476fe01a-2e25-4f93-ba34-e8d06121fd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6af556-d48f-4d62-b190-ef73a5f03fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6763e0d-330c-418b-8fb3-47559d091019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4b6597-d3c9-45f9-a46b-428cf440cd6a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d9754e-0dc2-460b-95df-8960afe29dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7926fc-60b8-4490-b85e-0dc456bfadf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a898e3-a82f-40b2-9a78-db6f0fba048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba82afd4-207a-4fc2-9f20-519b82dfc579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57be57-5f77-4259-9d27-e0c7a76d03a3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f6cd50-8bc3-46b5-9943-92350b6738d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e2373-1737-41b7-872d-09d9bdf11180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e22ee0-64f3-4773-a49c-52ec486f0ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a522b9-9b22-4473-82a9-cb58ffaa8533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69f127d-3cda-4d83-8f18-ed6a9a1209a6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80896d18-b763-4c56-ae9e-44a5766b39a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b10122b-dfce-4c3b-ab43-50222e25178b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2046ee3-2805-4a4f-b7f0-125d7df6f513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17cf9438-ef94-45e9-91e0-e4396e660967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b0c68-d48f-46c8-a508-14ec736a5b68",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d48116-7b71-4a95-80b6-4389d9ca95fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5330ce1-9bf9-48de-8c01-9364f255782f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28e2767-242e-4323-8f55-0d3824298a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14e7a804-c915-423b-91f3-113acfecb0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845cf179-50c2-4160-8c38-a33f891b0e53",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f03d32-d39f-421f-b614-d67ca078f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8247a27-3118-4b5b-9429-26069a7cd093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85104c76-50ca-4e53-abac-85abe4bf6624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd25b0a9-b91b-469e-9382-2ed778a19343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef35b7e-482c-487a-ab28-a9ad9ea13355",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d51f9-66b9-473c-b730-5af2bf20df71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9950b7-8a72-4434-8e42-d05b66440acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3252221-987e-49f1-92b7-2c1d6c92e04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a39ef8a-923e-4c04-a65b-89ffd3220738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab2b226-9853-471e-b81c-67a39acc6d88",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f067a56-4a49-46ed-8bbf-27acb434e0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083b6cf3-2c3a-4efb-b653-7e92d8cdde34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbc067d-730a-411b-94a2-c81b700dd009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c21794e-a730-47c2-9f8f-c0e544fe8d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6d0e0b-1a58-4031-92d4-d5d66c597508",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fd567c-8c0d-4583-820c-b8f892f12402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f818bd-6b44-4490-b5fe-d6d10d6aabab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f517d2-0ba7-4a6c-b66a-82aa1b3adf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ed39c5-c119-4209-aa67-d8c3835f3965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece32056-e1f6-4104-9583-28334e542be9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837bb8e4-9556-49bd-b2c2-519b6b09a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc78820-85dc-4e21-af37-6932d56f2458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0aa323-8d7f-41dc-ba76-6cbf63143d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6f16e0-8caa-4477-b460-b00e29fec23f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c5d7ea8-fdc2-450d-8ee8-d744d6cbf065",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "444d8908-e2b2-4234-be06-b6f1b65ac535",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d555a5-01e0-4c41-973c-1f14dbdf84c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06cd8a6f-7ae5-4618-b4ac-00c70eae9178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02feb5ad-aedb-4c1e-b53c-3e7f02e424a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a5d3081-da35-4506-b003-30297bdef270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6786e62-3193-47c9-879b-7507e709a837",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaab3652-3874-4e47-9289-8d98f523f860",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34e81037-90ed-4b41-a9f3-85d40fc2be91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5992fe8-4959-406c-9c89-4ad47d5a5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3453f13-1cd0-45d1-b2fe-4c2b6c2b3755"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d1dae0b-302d-451a-bdf1-f2a9b9a5fac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edfc8ab6-2632-4b7a-8723-f92b975aeeae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b144ab3-8efb-43e6-915d-0adfd02111d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "106d0951-4117-4f1f-93b7-ee936489dcad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "395e1c7a-11eb-44ea-8b27-14b602cd4d57",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4c48657-f1b1-4af5-b4fe-0c698a2e6748"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aad87ee4-2edd-447b-8c9b-c0dc6e04c9e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6c48caf-1700-4343-82bb-8973df0b227b"
            }
          }
        ]
      },
      {
        "id": "51b3b59c-923f-4b45-9c96-9973b4ed84fe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c91851d5-b2c1-409a-abcc-87f8871f674d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0fe5300-33ce-4c8d-b403-2de3b9b598c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "573abdb4-0cf9-425e-a285-609fc03df07b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7907c530-2668-485c-a8bb-203b59dfd99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef297b8-c4b8-4792-bf31-425d5b7076b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dc3918-1d6d-4da0-94f0-8889998880a6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f746c98a-988d-4c2e-ba52-605e09444e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bdc8e7-e85e-4fb3-9bd6-339e0f3f6efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74f374d-3e87-44a8-978f-fd7d797b8bf4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104cf2b0-2151-4f9b-8f8c-907c38588c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8cedc3-99e7-4a7e-a96b-b90f340aee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a48883-8679-421e-aca4-e3ffa3e8c4eb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d4cd26-f9e4-402a-a286-cd8114c475be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3111388-1c1e-4751-8f6e-17a6d7b1b594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f825d5-0324-4c7a-8e5b-a1ed8e53f1bf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88cebd4-51fc-4049-82e2-fd4229394b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5055fde-0a9b-4e46-a98f-a65b9b795434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014538f1-2bcd-4751-9ff5-e86f58c501c0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f996a8e-4cdc-4c7c-a561-224d313a5b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46da5189-1c55-4618-af3e-5d289d40e26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b75d26e-a313-4cc3-9dd6-0d867a86b255",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7872f2-6363-4640-9a07-a6120c0a7e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a2356-92bd-4f4a-8be6-fd55a1080274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce41bb53-3b15-493d-a261-7b77526ed63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168a6548-979d-4395-8976-44449f254f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8bf98b-1098-47ff-a18f-79dbde91c83a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e6cdfc-806d-4d67-9dc0-bbb5b68b2979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a5772e-077a-48c1-b667-9e97558fc1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daea4eb-e0b6-4d45-9f53-357b071bb357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1219bc8f-8abf-403a-8a0f-e74e878f9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18349b9b-8012-4158-98ca-13ed6ae00fe6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a630eff-0d20-4b7c-a0b1-0a8dfa57c784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de46014-cbf7-4d6e-b90b-ab3c1ae08bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ff4795-6db2-4a52-b191-8b616c04c338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f13381b-26dd-43e0-9213-9b271f84b8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adce50d2-8d78-4a4b-af47-b9d383745466",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f90d2ba-a0d4-4e48-abd4-d2fa7889214a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f4a89a-ac04-4bc4-9cdc-2494b0d28658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fab8e3-2361-499c-9c8b-efaa969edf33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b565932-ba80-4b09-845c-a88a5d9fc9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3390635-be16-4375-b2e3-49212749e929",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b53957-9ede-49d8-aaf6-196f1bf8b457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae90588-f963-487b-a61e-e86ab42427e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a55231-bd2c-4125-a0aa-48d25c751c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2458690-62a7-4989-8b59-3d5a00656dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c607ee5-6684-40b5-be2e-57779659e9cc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6032b63-9c61-420a-9f89-a731020adcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4ab45e-6912-4532-8de4-46a600a81243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5180ed4e-38e6-4dde-9f72-d26fe0a00224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7b1948-618e-45f8-a070-2e3a00badba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20e14a8-64e7-41e4-9812-dbeb2a727685",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241d73ec-ff84-4cdf-a07c-d67348762b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05529b35-8e62-430c-bdb7-c60e5220df0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c2a813-2e07-4c72-bed7-f5ef53df8648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb157731-89c8-44ce-b416-3bca7865ca95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebafbfde-1fd3-4bbf-9233-d3a52f9bbb76",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d74ad4-1f88-4f43-a2a2-befa5f1006fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f8dd55-ee47-49c4-937e-24c4de60fdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fad0ce5-e551-4727-a5a6-788400977d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "570e8e8e-fd33-4ff2-8836-364bee2e18c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bbd1a8-ad06-4ed7-93eb-dc028bc7727a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f43a96-39be-45d7-ab14-debea3382803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f59e47-54e0-49c2-8dad-a3fefdeef128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bde43b8-21cc-49ad-a505-da8d98d81cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c2a250-fe4b-49c8-a27e-f10681f2b564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2e6521-7f26-4961-9c54-160ef4e439a6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34980dbd-83c5-4d94-a977-23d5a38388ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40dfae8-ec5a-458a-98b7-a3ec98d41d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046dc49d-a0ee-43ae-8cf0-b8c1dfc4fa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b49c21-c673-4f69-8c8a-f488fa16e6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e74c0a7-1c14-4b55-bdd2-d8b7e96362fe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd95dd33-8820-40e1-a03d-89a03c2a6b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ecf3b4-4846-4b78-841c-64aa08e1be54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395db471-291c-40cf-96b7-849505c5b5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7982768a-9acf-4615-97d4-81bb42e15251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea46c6ca-5521-4b6b-a4b8-3c428fefc1fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb576c-bb74-4c2c-ad86-d5c3583fc8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8015286c-7756-4e0d-9699-bc16d27f9b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33053eaa-a2cf-475d-874b-c9de7dae63e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26769709-7af2-4b36-89e5-3ba3257a16a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863b969-bb12-4ba7-bd02-37dc7bbd1dc5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b575d6-c405-4a48-89f1-bcd355e7b65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40cbde5-d6c6-4679-a64f-aa5c972d2c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d7d93a-cd82-441b-af60-80e91ba70aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914072c5-05de-4d12-918f-99a90ba40087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f15ed66-a1d2-4e6d-8300-491895bf99b3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb615d5-96ff-4202-9723-260b92ee175d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa58417-b2e4-4b53-961a-b3c3f21d56fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0c2074-30f1-4b05-9cfc-62661fa2857e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f91d46-201c-4eff-a145-9c41ccb217ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008484ea-f751-4a21-9ac6-ec72dd25b4e9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a74fcf8-7ec6-4713-ba7e-dcf8ebe024fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e8862b-1edd-4e95-b396-cd79dd3b0165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7286593e-73f4-4291-a3f3-1d8d8d1d0619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ec29a0-62ff-4b0a-a970-bf5896cd9250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b4405a-bcfa-45cf-aa0b-72d23f138cc3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e0b049-6eee-42da-81c3-5d67546418cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bde80f-92bd-4043-9611-cd0941146017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b679e7-bcd3-45fe-b1d4-2a17aeb9f44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92c3d5d-749a-4273-951c-b1806afce363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148c198b-cf56-4937-b8fe-be2d4c4af793",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f68cb-1c83-4765-b867-6f266cbb8618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f96ef0f-5dd8-41dd-99ce-7f1882ff1342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5183b13-1de4-4307-93ce-83f478aa1ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8db31e-32d4-4dcd-9ec7-9f26c036d14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee558506-4c1f-47ae-84ff-7008c5784436",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe19b06-2d39-48f4-bf4e-f22bf8e0ebb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02a9c03-681a-49b1-aff9-a2690d00ff0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dcbf3e-b766-4f15-a1a7-730f42e84bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15efd9c0-5655-4b11-a66e-7d2a02543510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47146a28-2ae5-4ecd-94f5-83d9c0798d8f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cc2ddd-6e22-4a90-9508-8ffdded9b45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e351ef2b-6912-468b-9e25-8c7e5df593e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b9a489-1b1d-4fa1-bb71-cea41cc148ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd9e147-e451-4ccf-a31a-877feab98754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6004e5c-43c6-4200-9ab0-c55ae1ee10b1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61fa505-dd8c-4c4e-91ce-aa3227366734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78233f8c-84a6-478d-b180-dafa1bd198c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67bd83d-58ca-4eae-aa5d-e31c96610e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1fb6fd-c1da-4d6a-b08a-13c7afe25acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f4cb9-0b96-482d-9d31-9426486a1281",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275cd071-6ccf-4aca-8b8a-5d58b3e3c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95c2d82-4835-487a-bc1f-b08ddbac4cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a58519-2656-4e52-9be2-3eaa77f80e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa73bb8-b587-4bee-bc60-850e852e3164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aa9452-bbce-4116-9f7a-f99a67532eb1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf2f290-3772-4842-a54a-8f0e780e0c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b0284f-4b0a-4a02-aa04-c4684d5d2110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ce4477-0a9a-4f83-92b9-d1faaa88a040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d549cc9a-bb90-40c3-b8fc-4d8bbc859755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe4df4f-3313-44c5-af86-ab9ce4b3188d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41592e5f-e8e3-4ca9-9926-d7f9f91ec00b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f9b9bc-5ce0-4de0-94f8-00dbcf9ec452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbba4f20-16e3-4701-a657-035fe84fa11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ba8ec3-12a3-463c-830e-a96922462620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd90e48-c661-449f-8486-a5a2bda4ffda",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f42699a-954f-4063-833c-7f6f3df3098f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6583fa-326a-4c9a-ab91-2d7ff31755e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104bc6c4-6dad-47bf-942f-4467f0725b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8bb924-3701-41b4-bb17-65adff217b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf556b-18db-4a34-9222-ef597e5580fb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f133c18-8b93-4c54-8cc7-77015ccc667d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d98fe4-b062-4cf6-8495-c6c7aece4c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cf57df-97d1-4653-8453-9ed5300047e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625a1df4-55c9-4647-86ae-fea207d482f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9972e6f0-7e4b-4f38-8a24-e1477b68aadb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fa88b1-5198-4afd-8f60-9b82e25cd32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ca3e1d-3393-4ed8-b878-9a57b30e6ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdacdc28-ae2f-48b0-bf09-fa52a3c9d87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baff4875-b6d0-425d-9c52-2c04da7f2b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668bc5ac-c76f-4f55-b0e1-c9335dac4657",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2706ab03-0a0b-48fd-9ee3-a5e650490ffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d337dce0-83ca-4943-ad73-c87ea283ec68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9157b4-75cb-4ac3-9a4d-2544c4f33610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a8cac0-dc5c-4712-a411-d533ee876cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfac9fe-d5d5-43f0-b23c-02a657dfce1f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c33d291-c6da-41d0-8fcd-d9e00ff3f53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e90921-efb5-4822-899b-12fd995a9785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72099050-6de3-41e1-82b1-24963e378d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495f4ec8-e3f6-4d46-a73e-eb17e5db9999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f61fca-d315-4dc8-89f3-139b650d7f74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371fa337-df7e-4489-81cb-c75a9248db1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6829f0-3fc7-4e9c-843c-cc74a598a30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ca360-558a-432f-bc61-87672bc53817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c565d808-c8a0-43a0-aa27-4a67feb0ede0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4cdcd0-0fa7-4e7f-96e6-8249a16d27bd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce8db58-2beb-42ed-9800-e5313ebce3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17759cb2-5a70-465a-8000-6319cb1c5f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eaca67-9f07-4833-a46d-4b72404587ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d430dec4-baff-4c7e-9cc0-6be297f9dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb6cf44-3e32-4751-a84d-efc1ade02123",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f5d4c2-b0b1-40aa-a229-a36b7bea8dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15eaa582-3e62-4eab-9497-3605c3c30464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc18e78-9539-49c1-a94d-73906cbfcef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8c7fea-bd2a-40b6-8fb5-f4fa4f7547b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe813c8-4337-401b-b871-8eaa95d64f15",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674d5a2d-99a2-449e-bbe2-b4a64ca0879f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7b44c5-8652-4da3-96c9-2e1d6fbd75d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d53b5f-c196-477d-b2b2-91589935cb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59934250-db12-4018-b6d3-1e8672b20964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361c0557-3546-4abf-b3ac-06321f7fab17",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71eb0f3-9d70-4f8e-b033-c327376fa685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d680b1d1-2ffc-469d-978e-7a569c6a7a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6211a530-1c0b-41cd-89f8-6b0c63cf1348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927df1eb-618f-4998-a9d9-843417259b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e221098d-f88f-4aa7-b98a-91a7d1f30335",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f864427c-3d67-4cee-a5c5-889097811be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e967ca-31c3-46a4-93ab-7b7ed3f9819e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d573ef1c-16da-4794-84ec-0901be10a00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ec5ee6-2528-4e3b-b486-6e177f049052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242d2725-c95c-45a6-94b7-ab7875f8634c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6419e23-465e-4410-9843-ce356e63395a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ad7444-d428-44bd-a18e-7ef7f90c1841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c20d7f0-60fd-4330-85ae-b44ea8d43c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149b4451-834d-40cf-a8be-5c385f005cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1d7fca-57c0-4d37-8987-fc98cf50a168",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9bad18-a51e-41ab-9085-cd73c9a6f066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99548450-4e2a-4cb2-b4c8-50111dcb17b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192233fe-8702-4b28-bf2d-635a7a8c2038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fd8a00-0d52-4bbf-8ae6-a453e86c14b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84389ce-813c-474a-85a5-2595a8a3bb7c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d10071f-b5af-47de-88d0-853e36ba3f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364ffd0e-962b-4f46-be9a-1ad6becf75ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc55ec3-d211-431e-aef7-62362ee01666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c743e0-7b72-46ba-81a3-0119e841dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a626e-2074-4349-a1af-6050c7482d04",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70c7a75-a9ee-44a8-abad-83eca6bb60c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2c3b36-0661-491b-bd19-b74eb893da10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0460cc-7ba3-4a8b-bb34-429ca0b7bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45640e0d-577e-493c-a274-01d8b7946699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b2216d-abd4-42b1-9890-a1e999b86d90",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf56bfe-8dbc-4d42-9ea9-6aabd7fc8499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5251bb3-4497-4690-80a5-cad6daac6f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3464236f-f8e8-4cc7-b280-e1d6a936f518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c992e6c5-222e-4e4f-95b7-a8cf28de3d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013eaa32-7d96-4a65-9b89-5e317928bfef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eed10bf-fc74-4242-b0d7-b01095b8f17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6181f44-8f20-4257-b1b7-a7b380b90a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9574ed-f706-47dc-87c5-b41be1f51a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c77ab0-4a60-4561-a8fe-a8f7fa3d8587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c540eaba-eed9-4fce-8e60-fdcbe75560b6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2562b77-2538-4ac8-85ec-32cbfb7716e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83e2412-d411-40fb-afc0-5e47c2a6bce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7165bb43-a68b-4b46-a2d6-f0dbfc2f2713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c550d19c-2e99-4c65-9c07-f1fa999c842d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fbdcb6-aecb-43e1-b746-8d2462b8c494",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602c81b4-dfe1-44f7-9591-bfadeca6daf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a749ae-61cf-479a-98e8-35745e33e3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307dac69-20ca-43b3-93ba-698e5986ddd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f632e1-6067-48be-b1f9-19d73ffbdd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec37439-0524-46ac-9a6b-1b62bd8faa98",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c037c87-c0e4-47e1-b652-5023fce8a67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0dbe437-f936-412e-abd3-71678b988dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d128ed-e1c3-4930-9d03-d4907b9b7b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbc375e-467a-4a02-8128-6448909ea1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0693d-fcf1-4275-b7e1-b79a91e4c47e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d6f43-4df8-4726-8157-b1d5a3849f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248ae4fd-f087-4f13-a7d6-11fe0b76e302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a3ffd-a5d1-4bb6-a86b-fa15c4cefe3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfcf2b1d-3fbf-4472-a8f6-ae107cb11661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f5b6a-d359-4227-800c-95f1c9ff8d6f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0067c3-a2ca-41aa-9e50-d3da6af5c74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8198f7ec-66d5-4b31-9547-900486bd99bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f2e5a-c404-4cf0-b650-bf89a1eb4792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fa4d15-66bf-432a-a232-b171b455ccec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132799ba-d4e3-48c5-b4cb-d126141ed823",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6937e9-7272-415e-9217-6caeb1be8fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779409ab-615c-49d0-83a0-beb5d02639d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf3af47-8014-4e23-90a7-5027aba1273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7662d65-46ff-4cc5-a1bb-f9a39cdadcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93190a8f-a787-4859-8efa-e62dedfd5a84",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75deeec8-2462-4d42-bd24-927a619b61a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7da2bf4-064e-4069-8c1d-60a9caaeca74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2651d84f-dd82-4c60-ace0-3fda4ce17597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13c42e1-db5f-490b-8ac3-da3f872e208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26825ccb-f080-4b5a-9884-27ee4ef84b05",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ddcf0a-318b-45e3-b221-93002ec19cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143334f6-ffe2-4f3a-9aa8-fa71686e5513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23ddcb6-4c5c-4e0d-a8eb-38080d7d4d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c944ce1b-13bb-45f5-bdef-21658aa7960e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad47e4ae-a80e-4bc9-b7c5-5f59355f8e1d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadfeb98-5096-497a-8629-a148f729926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d737ff90-2463-4c92-a500-50888f193bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992d76c5-ca3d-4cff-9ba2-723f74065415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af20fd34-8e49-4d1d-b443-b048032a7ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac92116-fa55-4a02-a255-a668b33493c8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6cc8e-a969-4f42-a043-70b9041ccc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078d0226-800e-4dec-9552-bed839846add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7f9222-b73f-4868-91f0-5b1f7906662a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3767c3da-4627-43de-acd6-90993cd83d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c55352-dd03-48c7-a0a8-54e2b29f06ac",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe09c94-58a8-4fc5-ab70-6b405816dc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be04df80-709b-4c5e-80a3-3caa13263953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d024478c-e38a-4619-bbcc-78c823739277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2e2995-f1c6-4ef7-965a-cd279deaaa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e145ad8-4135-4929-9d8e-2d8def411563",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30df5a19-48dc-4c0d-b0ba-220d3b965dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d21bea6-ac14-4128-beba-1345501b39e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bdd6bc-e1d5-4b69-ae60-1ff4e48d1d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66f9a1e-e0d8-4143-8a65-b836fe8e45c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948423d0-5dff-4899-883e-1de763c90cb3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08776e4-d837-47f6-81da-3e1702ef0b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7c9e3a-7938-4e50-b0bc-768c2e8442e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a358b974-f95b-4f31-90de-486adec9b016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79279029-8ee0-443c-98bc-08e33859d74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2a1293-5af2-49e7-b1c2-6ccd57e9b663",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd70724a-019e-47e2-ae47-fd327aa4f698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ae6e47-e544-49e9-a95d-0e2aab46ff48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cb38e0-acc7-4cbf-ba54-67c4f0837720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f307ea-bca2-4dc2-993a-910c7cb96c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b9873f-402b-4e55-88ba-08372d4c2f86",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f24df6d-eeb0-4957-b770-d45ab6acd0ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc65853-4d36-41bb-8066-de09f27e4b5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b592b2-ca1f-4a06-ac89-f4d075e452ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa8d87b-8ff0-47fe-8d03-b9c4c56af835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c370bbe0-5616-44c3-b624-fdf6dede2cc7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c42213f-0980-4066-8c34-4c4ffe1de641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc2825a-0bab-4f2f-850c-df8b51f0408a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71245e46-bf55-4913-8e2c-a378e4b93367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b00f3eb-9930-4b65-88f2-37110ac4a7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437cf38-cb98-4474-b57a-6de7096eda72",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859a52ff-369a-4f09-88eb-9f4e77176ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31352478-1c83-44f4-92c6-3f0a04626d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d84ac29-e116-496c-b23c-abb0702cdbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e0b3c8-d67c-4bb5-a09f-d710e23c8999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f386b75d-5708-40da-9fd8-be33de869774",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968ee0f7-1e09-4eba-864c-f6f1ec37a241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef20143d-7aaa-4024-b04e-186461718815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef41b824-01a9-439a-a26b-00f277cf810b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ebc645-41b2-49d6-b5e3-f1145cc45878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a4b3ce-e198-404e-a9b2-20475d87bf1a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dbbcc8-f6a9-4af0-9df3-7912ba2ec2b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f37c41-f498-45d9-9023-72d0d371bd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834c4633-3515-4421-8c22-6ae14af89fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fbfa77-8773-4ffb-a4b3-f50db3c7dbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea11f2dc-b122-4135-a4ec-0ef871774b74",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a70ce-144e-475b-99fe-4a583e60698a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f817d14-6039-49da-b90e-5ca41711c49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b686398-302e-4906-b4fd-8c5236d3be57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2937c331-85bf-446c-b1b0-db1a0989efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6528f4-075a-4b46-825b-fbdcc08f202d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcca291-21d8-4eea-8118-47e3c07eb1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e22f59-9815-4049-9582-d8f17bc9d807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c17a6b-13e0-46b9-9a18-55c32ccc47f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373bb3d7-17e5-41f1-a6bd-94239b793f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df202d8-49b7-43ee-92dc-8038f8c44e66",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0b0cd3-56a3-437b-82ef-bf55b2075608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5ec22c-daf3-4210-9ce7-8a9f7830f043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439d766-8198-4640-b7ed-c3d860a79e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697b316-f8e5-432c-abb9-59d8112debfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef3396c-7669-430a-bf8d-437e82fcaacc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6084ac-fe4d-4799-8448-031d703bd2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4893c00-c0bd-4222-9485-2476375884bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195156fb-3774-43af-8d4b-b0ff867c88ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aad0b15-cda7-4a30-af75-14c6dcf8824b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf600f8a-d84c-4349-98ce-c1fb95065b65",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bab31e-1e47-4dcd-9720-7596f7b36eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5193d3-eced-4bc9-9c18-87346d73cdde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42972a3-b7cb-49b5-904b-c67ea8569913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03101165-4bf8-4ec4-9dac-582e6189225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f69fdca-920b-4302-95de-989af3a3670c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c51c81-4c88-4d67-b488-e1f86d222b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2053ad13-52b5-4c7f-ad26-a0b4c0893586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c56527-f660-4cc0-aa2b-84dfc8cc93b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b178ad9-2830-4f1c-a2d7-b69faf7f9d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7bcbb5-e1be-48a6-adcd-61408b89f969",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3f0799-9aff-4db4-89ec-b232ee73792f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c5ea2b-9da5-43ee-b791-53ff8df0ae99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed29a367-8bcc-46b8-bfb5-016272863d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d5ac9e-3ab4-4aa9-82fe-3d84df473205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439ad9d0-3c69-43f3-9193-75957ebb7075",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a25e3a-3897-449c-a721-2a91ea0e0a60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542fdcc1-b51b-45e2-93a8-9a3d35a423b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8b0092-6f61-403a-b3d7-fc286545751b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffd0950-571a-41ae-acb5-00484828b421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7091c57-8658-49ca-b639-ddbaa069d54d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeb1a67-aeb9-43d2-a0be-bf5619f022f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f89772-1667-4a65-bb4c-0801b2a0bfc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea43f60-8846-4f71-9be1-0585cec68056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2b84eb-8755-4720-9689-cb513b4e2471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc9792c-64a0-4710-9709-b9dbd6ae3935",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a8318-c427-4bf5-8d3a-a7de7b22b9eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d70079-a1b3-464c-80b9-0d3ae91f1a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26030411-b81b-482e-8685-deeb1a1f012d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab139d2-b204-4c67-a902-7abb5d3165fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f58704-c500-4c69-96b1-3b1bbdf894db",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b763561-4b3c-4587-a390-ce0daee35655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48b52e3-dce3-4ccf-b26a-190618d63eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e68b75b-96f8-4463-8bad-26b694517446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd4992d-f55f-4077-80c6-6269562be121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619e9eb1-a293-486c-a3ce-e94cf3bf3aff",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec58ef-cff9-41e3-b495-97666187fad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64126edf-faee-4ece-a591-523ea5650c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23d1678-3f2a-42b0-848a-c6738e7f5964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9da96b-5f22-460e-8580-84918ce21d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a236b3a-f879-462a-a7c2-1b4aee246e71",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ea301-f1f8-4d4b-9bc7-ce49f80d8c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e29a80-240d-426c-9cbd-83b55584fd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de23e64-b84e-4334-bf57-96e417ce6b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f247585e-1044-4deb-8c9d-3e4de74c351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e6736c-960e-4678-a93c-e02ec55d4bb7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c7d6bc-0de3-446e-a012-552edf3173e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79e8fbf-8087-47d2-b020-2c63f8f23766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e40c25a-01f9-4244-8443-3d474f7eebce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0faf96-33ea-4dad-bad7-f772e3387949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b92157e-aa0d-449d-988b-d399606a6d44",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775e4ee6-3d08-4935-8183-cf668c6ebfe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9def3a-5436-40b0-9c75-1995f139ed9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13eb702-0094-4b18-b960-e43288a3f94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f4b27f-2cc0-4516-8cdb-a602c208588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab42f760-6e1e-46ab-adcc-a746fd055273",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b16bfc9-ad71-4277-869a-93027e918610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9af7d9f-3c1d-4086-ad00-5f9a666a4bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73744a3e-14e5-46ef-a616-58a659717b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dc65be-1281-443a-bc5a-f18f7eca99d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c18c99-d76e-49b0-8e03-4e6df13dd194",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88af56a-ba71-4fa5-bb2b-365053b5e442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061a9d94-96d1-41fd-b280-b127d5f5d51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36a1212-9684-4c68-b887-8f2502f994c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6e6437-98a8-44cf-a6e6-76ce5062004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f71e4-984e-4ad4-a4f6-1581ab2e8781",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfdf716-6261-4348-a38d-6e1bb301bfe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea48287-c36a-4f6d-b593-33990e3e1d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a42b8b-89bb-4bb6-a8bb-8dd983415d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9947c30c-fd57-4033-9654-1136548d2da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af753e5-91f2-47da-a6ce-177592bcc20b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4fb10d-4541-4151-a6bf-a7b8dec54797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb70b2d-e8ff-40ee-b62f-85a1c8ce30da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07382939-4667-49ef-83ed-ea6d3ba5a573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce22651-ebc0-42de-aa01-45b54d5b599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cdd200-9c58-4172-a78f-b32ac82cec7c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601eecf6-1f76-430d-9ddd-1460179b2be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49672f5-fe24-4f35-b4ee-09a0f89c053b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edc0482-85b2-43bc-b125-d6133809a348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913d7485-538c-48c1-9050-1a9118aeda1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb395532-09e3-4a05-b0eb-7e4f98d8ab3d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b7e8f3-f020-4987-b5cb-cfa155359a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a4f504-c6d2-4cfa-8652-92e1865e9d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dea075-fe08-4008-bb46-a4bf63a39cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ed627-a51c-415f-acc7-db91e3b97215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf0d53c-2c0f-474a-9a08-1d18d2f9de04",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcca94-b473-470c-bec9-d0bea69125d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d455ed-46e7-4fc6-ad62-5e45b053f131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d53dc88-4bd4-49a0-9087-c660f56ce8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd891ed-9375-4334-a7ff-0001d7e34000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e44379-2332-4a27-9795-0146daaada26",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bba1ddd-9344-4e25-a7cc-7c6780aa1968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8ff039-4add-449c-84f4-f741880f28bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324cb369-0b66-4187-ac15-9998d8e4de09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3fbf4a-fec5-43c3-bf67-71b484bfe670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b58c50-b48a-47d4-a57f-b638d5b675ef",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d066862d-8a63-4e74-85c9-46187de71852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4291423d-3bdb-4136-970e-351ffd7b84a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77068ca5-6688-4329-b4ae-47caad40380d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74509f5c-fc48-4837-b27e-11d6524627b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2616e6b-e2a4-4b61-a9d5-33bd15c5e271",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf091004-bd98-4f8d-8822-19caf1c23234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c5aaef-ac33-4ef0-bce6-c692dd90b68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e7867b-7bee-406e-86d0-93006eb35f3d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3072caea-720f-4361-b415-2bba706df014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b8961-6a25-4a75-99d7-a2d593f70231",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92afdf83-1804-4617-828e-2a664267cc08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3444bd2a-9f14-4f8c-a900-c1deaaf8bfd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a94018-5630-4192-a129-10c18e02b34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597b2c84-4664-460c-80c9-1e2cf7877acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb3119b-1cbd-4c4e-a9d7-68d1a3b8b27f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19c31bf-6bf9-4d42-adff-a5fabed58fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f408449-495b-4867-ab71-458dae29c521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f91717-3fb0-49b4-974c-c29b9ce5157e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374db21a-8d3a-4961-9f48-827daf05b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae352c-389a-4859-823c-2413d1bcc519",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eb378d-73b6-4fd6-9bf5-816431760e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13a2dcd-564a-42a1-b32d-4ce45e46ddca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ab572a-411f-46ec-947a-6d4cac6ba2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4728424a-ca0d-4dc7-b6c9-e8d2a56de5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0417384-76f9-41fe-add3-7936496b6d2f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0013f5e-3b29-4906-ae0c-1c9d4009e650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4097c5e6-5318-4e93-8b6d-451d10ad87fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20f1706-ed91-417c-a20b-eb877b5238e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a71ee1-0b42-4fdb-90de-6f570b0550be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a28903-8d92-4a7a-a074-9d0c21e40a48",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31548827-7f8d-40e0-a556-ed2b3f619d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c5d88e-7a10-476c-be66-5b37d31d9ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e93c5e6-40e6-410e-bbee-463f22469dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d6103e-3dd1-4b9c-96cf-8b21748f151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c4b56a-9c72-4de2-ad2e-704415b59703",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffb0159-6cb6-47ae-ae3f-55f46a0a8162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381eb19b-83a3-44bf-a148-384b05097c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9fc63-330d-47ec-ac9f-19ad662ff81f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f592f2d-0e45-40af-83b6-3023c2c4803e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a60c31-60e4-4e20-afdd-adc0c1442dd2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0ed095-c118-47da-90f0-9be1b425c759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9aa0c2-6e80-4c84-8d88-e7a4e9e9be61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61f731d-0e2c-4dd6-90fb-241f253b08ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ada7c26-9adc-428d-b9bd-806bacc223c8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "245e5d3b-aeda-41d9-a899-ef48e0f7440b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "387692be-48e9-421b-b1f8-723c6e96a302"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "030abb89-308f-40af-b0a2-6d59c62d25e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "106be75b-4568-4b31-b255-8977711977b9"
                    }
                  }
                ]
              },
              {
                "id": "6774802c-466e-43f7-9f07-fb215580fc02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edaa268a-5606-4d98-9279-49561170630c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fa0f97-8909-4520-844f-554cf8ed081c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a2d36414-ffd7-4618-8126-0f015b27c743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8903730-cdfe-42f5-b50d-b1c61a7dd9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "871fbe7d-4014-40da-81f4-1430825d979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449677d-e02d-483b-82cb-f6dd83d95fdb",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a3ac66-c2e7-4f58-90b1-8d2a2cc5d98d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44568217-3051-497c-a726-70571ba8bfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f93157-2d88-4363-99d0-b1c212113205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31fd0281-f0b4-4c31-81c3-1c62d05a62c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3597495-5ef1-40b6-9897-5589e5a6fa54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c9da58b-f7eb-4efb-9a55-1a1af29f37fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cfffd18-d5ba-4ab5-b61c-b7de01327671",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16b32cde-fbf9-4ea7-b954-889b10baf80b"
                    }
                  }
                ]
              },
              {
                "id": "37d287f0-ce9c-4afa-9eaa-32ff5d7f9b96",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "447ff843-2555-4c99-8d2f-f5c7ecd00076",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81bffb-e734-4213-b22d-b0a7c11e51d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef17187a-e1fc-439b-babb-43bbc7f43ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc3703e-6f77-4d97-ab8f-eb58a56d3867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d52d404-4eff-4267-9651-195068a27644"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e1984a6-9150-4f36-b458-7f12f0fd6893",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03b26757-75d8-49d0-a1dc-516587636e1a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f79ded4-ea91-4dc2-8863-cf767685b1fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "08769bc7-16ca-40d7-b855-1f7ae8172087"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "616a705a-76dc-4b96-8c06-b2239ba97e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcf02d89-c160-428a-9780-bcbdb960c2bb"
                    }
                  }
                ]
              },
              {
                "id": "7e473dec-e3fa-430d-abfb-7505ec5884eb",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97dd40b2-d37e-46e5-9bd0-6d84e0d62170",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b48891ac-70fc-4bf6-b6b0-f31ebd7e618e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79a520e0-e3b2-40de-8619-82da97f1bf39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28373cfa-d60a-4407-b084-057961b5f4fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a2594fb-94be-433d-9743-655e4ae7cf7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c3612dbf-5a48-450a-bb71-74600575c89c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9397dcb1-c0c7-4451-a5cc-b2eb48948e0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "740cd0be-9998-442d-8101-d22d02c25ad1"
            }
          }
        ]
      },
      {
        "id": "9466c228-9b40-4728-b873-0537a7562c25",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2b7fadc8-e722-47f9-9e26-ce9764da9908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "353e40d1-0e11-4eaf-a137-4f64858df157",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d07d0-3d5d-438f-884a-97eebe9645cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a75841b7-dc99-4030-99d6-c8f38413f6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3537051f-3ea7-4676-b440-f6450a70c9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0134726b-6ece-4d83-ae76-e65907cd4f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4074394-7ace-483d-a556-2d4063eab250",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76de7dcd-d40c-4465-90af-8b3fbac6c66f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7887a45-de97-4f40-a007-1b253bea830f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52341eee-2491-4646-8b57-4f33ca896ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f7ceb80-56ff-44f5-841e-61b4c63d55fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7d38fec-5739-4b0c-8ea1-839c29ce101d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38ed3c47-97e2-4e71-9627-66779a7894e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a09cf9a5-c51b-494d-b3a0-ef3fb6cf40db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5991a9c0-be61-436b-8b3e-ec947357ddb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cc9ec62-cd30-42b5-a4ad-3beeb0f9cde2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "de1b4345-fe3e-4020-8ff8-1986f794e7d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7968bd33-cc75-4d64-b201-4560082f6eba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4d2a159-b821-43ac-bf71-9b29f9387f75"
            }
          }
        ]
      },
      {
        "id": "51d99308-b2ac-4096-a913-644c7b671fd5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "70a02873-8b11-4dcd-ad5a-a00cfbdf8021",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f77480db-df70-4fb1-8ecc-f25a2d5f0b63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa9744b4-f1df-4a20-bccb-630025226ab2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c34ea0-f939-41b8-a6f4-bcd02fc5f982",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45bf60b2-4954-4630-8b52-ac026b43bad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bdc4b9-18a3-4256-9295-6103e01e03cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e162af6f-5e90-4483-aefd-6ba70f5fa6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6497490a-7fc4-42c0-aeb3-c07d86f7cf7d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10647b08-36db-435a-8bb1-a5e59fefea8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2fd123-eb00-440b-a8a5-bbe43023c13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e286ff0-487f-4861-bc35-0b8e630d81c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3b2bbff-52f3-4545-800e-903d43eaed81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a563c6ed-f99a-4460-94eb-189372bc7057",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b7091b5-949c-47e1-9404-cf48e2200bf0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e911941-b41d-42b4-a573-aa6a12468280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3daea6-b355-4e51-b2a8-0db6119db736"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d02b2586-de8e-4167-b0f8-46c6bde79b76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "735fc996-cc38-4d34-9927-05c99bcf117c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78e9a5a0-9cd7-4e7a-888f-e7ae4ab09239",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "017291c5-3a29-4332-9bd6-990d4662585f"
            }
          }
        ]
      },
      {
        "id": "94793cf9-be4b-469c-b35b-f637564148be",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1c3817c3-0677-48f2-aaf1-1eeeb5871870",
            "name": "Negative Testing",
            "item": [
              {
                "id": "330750d3-6730-4af3-b6a4-97eb2348ab94",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03fd5200-3f14-4ec3-8cca-6e5f92ff24aa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b759ad12-4ea2-46f9-aeeb-836caf62516a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc1683c1-974e-49aa-9838-74165d82138d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441771b6-0d3c-4093-b365-8f97d92e0085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "536889be-642d-4f40-abbc-1fdfa61f6456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fc0366-fe4f-44ca-934b-db54a7ced472",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134205a6-4e03-4777-a96a-1ecf70b90bd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22b35cdb-90b0-4e65-b3a7-50cd307d409b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bca0c9b-0073-4141-b4c9-9b7ba78c2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f854b58b-b324-45ce-89b3-dfd5f0438ace"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91bb7e36-eb8b-4cd7-829a-202d2775fd1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e4400d-ec2a-402d-9d5d-9fed3bba2dfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a306d39f-c375-4991-9761-bf905830fc06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c39a139e-3a14-4b46-82ef-e4c164fc5f46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61e403a3-0f79-437c-898f-9c3c9e8f4962",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03f21346-5e89-41ce-a760-8b2c94380fc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c36b96a-783c-4202-8e86-d7b1055fd572",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38e32d86-c194-4fdb-a47a-74503caddac5"
            }
          }
        ]
      },
      {
        "id": "d1059dd8-e6e8-42a3-99e6-7d0ae01122f4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16240dd6-e781-42ec-b808-fc272c603be2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbb5abbe-085a-4629-b84d-afb8d6e4d251",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "28ee4413-a036-4fe2-a278-a4fb0a8bed35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c590600-e25b-4422-b07e-2908c13d1476",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3deee1ea-8759-479d-9d0b-fa6883c31174",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.15,
      "responseMin": 15,
      "responseMax": 514,
      "responseSd": 44.563056016598104,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682383032907,
      "completed": 1682383055806
    },
    "executions": [
      {
        "id": "c63803e0-2707-4a4b-bdf9-5255852a7d99",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5ff75d51-c211-4b23-967c-1158de153999",
          "httpRequestId": "4be3183a-0dba-471b-9c39-4b8ff6bc3f9e"
        },
        "item": {
          "id": "c63803e0-2707-4a4b-bdf9-5255852a7d99",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cb886e07-1854-49cb-82cd-9fcb31e040c3",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "a7b4efea-dd34-4acb-8447-c5d542470db1",
        "cursor": {
          "ref": "5eba82f4-2ebc-45df-be3e-ad3696f93440",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "821f2cf0-1252-4dba-9a17-398de54b6fe2"
        },
        "item": {
          "id": "a7b4efea-dd34-4acb-8447-c5d542470db1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f9604b20-ab51-47e5-80eb-601bbf749006",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "77ed8cd2-8bbb-4017-96a8-7467d98860f3",
        "cursor": {
          "ref": "55b66569-f69d-4347-8288-b141e8a56eb4",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f83ae8d-cebe-4df8-901a-198dfab33b81"
        },
        "item": {
          "id": "77ed8cd2-8bbb-4017-96a8-7467d98860f3",
          "name": "did_json"
        },
        "response": {
          "id": "0b932609-67a9-4a75-98a9-51c79da890ea",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642322df-78c3-4fe2-9c0d-9d2c8e2d0732",
        "cursor": {
          "ref": "d3ec29e8-02d3-45cd-a868-79201baa5d09",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14f80b17-07f5-45df-81a2-affea29022f0"
        },
        "item": {
          "id": "642322df-78c3-4fe2-9c0d-9d2c8e2d0732",
          "name": "did:invalid"
        },
        "response": {
          "id": "452a8805-9488-4fa0-aba9-efe3b7a4d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642322df-78c3-4fe2-9c0d-9d2c8e2d0732",
        "cursor": {
          "ref": "d3ec29e8-02d3-45cd-a868-79201baa5d09",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "14f80b17-07f5-45df-81a2-affea29022f0"
        },
        "item": {
          "id": "642322df-78c3-4fe2-9c0d-9d2c8e2d0732",
          "name": "did:invalid"
        },
        "response": {
          "id": "452a8805-9488-4fa0-aba9-efe3b7a4d81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f370ca-3063-4205-b883-7ad2bcc29f4e",
        "cursor": {
          "ref": "345ae180-a01d-412e-adf3-1eaa0b084046",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e866b9f3-79e3-4b66-9168-99da9d07c1dd"
        },
        "item": {
          "id": "f3f370ca-3063-4205-b883-7ad2bcc29f4e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1f4b9a19-ff27-4f0e-ac93-8ce8d1a91038",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46556ef-c48c-424c-922f-966cd16c7710",
        "cursor": {
          "ref": "e36cd516-50e8-4a09-8dc3-78a7323e60dd",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d044c61-7dda-43ba-8c60-167c872d8150"
        },
        "item": {
          "id": "e46556ef-c48c-424c-922f-966cd16c7710",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "343b90af-41e0-4584-b3f7-99b276c2e7ac",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f3ec5e-b87f-4255-8ba7-4c88e2ba3494",
        "cursor": {
          "ref": "75a63165-17f5-4db2-a8fd-0a9c9c70afa9",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "34d43d89-5ea7-4c06-bdbd-6bf0cb0006b5"
        },
        "item": {
          "id": "a1f3ec5e-b87f-4255-8ba7-4c88e2ba3494",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1140ed4c-17ed-418c-b1be-6fa00da74ea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe6532-8e27-400d-a5d6-b32022085233",
        "cursor": {
          "ref": "ca2c6a00-56db-4ed1-8540-b9d41f29ee1e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a9e253cd-24cd-445e-8b50-63c3b8e18c28"
        },
        "item": {
          "id": "16fe6532-8e27-400d-a5d6-b32022085233",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "636d272e-50f7-4310-a132-ba60326c8a6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe6532-8e27-400d-a5d6-b32022085233",
        "cursor": {
          "ref": "ca2c6a00-56db-4ed1-8540-b9d41f29ee1e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a9e253cd-24cd-445e-8b50-63c3b8e18c28"
        },
        "item": {
          "id": "16fe6532-8e27-400d-a5d6-b32022085233",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "636d272e-50f7-4310-a132-ba60326c8a6d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920ec4b-fb72-43c4-96d3-f2a93b7e151c",
        "cursor": {
          "ref": "ac3dae2c-4843-4a8c-8178-28e201f90234",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3eab81d5-c15e-42a5-9cbf-73b5e392a1cf"
        },
        "item": {
          "id": "3920ec4b-fb72-43c4-96d3-f2a93b7e151c",
          "name": "identifiers"
        },
        "response": {
          "id": "e3f2b041-13d9-43d0-87a5-9eb4b0c8b169",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c8ff3e-4050-4dec-8a72-95dc164a9ffb",
        "cursor": {
          "ref": "1ed3bbb8-da24-4ba7-b5f1-c427423a9d11",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48eab3ee-24c9-44df-a278-41ba1e272477"
        },
        "item": {
          "id": "63c8ff3e-4050-4dec-8a72-95dc164a9ffb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "42cd563f-e42a-4ae5-9905-4108b1d61eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c8ff3e-4050-4dec-8a72-95dc164a9ffb",
        "cursor": {
          "ref": "1ed3bbb8-da24-4ba7-b5f1-c427423a9d11",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48eab3ee-24c9-44df-a278-41ba1e272477"
        },
        "item": {
          "id": "63c8ff3e-4050-4dec-8a72-95dc164a9ffb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "42cd563f-e42a-4ae5-9905-4108b1d61eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63938dd8-f176-40d8-9b17-8e656da771e2",
        "cursor": {
          "ref": "9c4c0726-b6a4-4939-8b50-ec21ec69197d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9208d5ca-ba07-4475-b032-e007999853c2"
        },
        "item": {
          "id": "63938dd8-f176-40d8-9b17-8e656da771e2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bd0ec1e8-6932-4191-865f-31c171e8344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c987a25e-d03f-4aad-94e8-5829fc6f7341",
        "cursor": {
          "ref": "58f5ca7c-4bd1-46e9-88e1-d545c1fec6c2",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "faecc4ae-b5ed-4e56-ae95-06257f3b1826"
        },
        "item": {
          "id": "c987a25e-d03f-4aad-94e8-5829fc6f7341",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "157355f5-bc62-4c29-89ac-f1722b9b7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1f42f9-6506-4912-869c-c4f7356b9927",
        "cursor": {
          "ref": "3214ad36-cdf1-4efe-b8fc-523dfe8a242b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "157c7db6-bd74-4f01-80f2-56acdb075e2e"
        },
        "item": {
          "id": "ab1f42f9-6506-4912-869c-c4f7356b9927",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9f2b083e-781a-48fe-bdd2-d9686588de94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98db7cd5-7934-4114-a704-f38e6337fc4e",
        "cursor": {
          "ref": "cec73a8c-19bb-4409-bccb-f81952bd309f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "81ea9836-7496-45c7-8472-b6b28f5eb1cd"
        },
        "item": {
          "id": "98db7cd5-7934-4114-a704-f38e6337fc4e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a4d9804f-a5e4-457a-a207-226b0622f082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262cd931-a266-4fdc-a817-420365cf6930",
        "cursor": {
          "ref": "a810e398-6a3b-4ea2-988b-195ac0ffb957",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c0a62693-ff83-4b76-a58b-323f2215591a"
        },
        "item": {
          "id": "262cd931-a266-4fdc-a817-420365cf6930",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a862ab21-4116-43c6-88cb-90e6fbb52955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04128336-9f1a-4e9f-8f71-c2d28a9f3348",
        "cursor": {
          "ref": "f421e9ec-b070-4c82-abc5-0d6319dcc95d",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4541c941-aea0-4e1e-bd8d-de22122193e2"
        },
        "item": {
          "id": "04128336-9f1a-4e9f-8f71-c2d28a9f3348",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d2672da1-ed42-414b-a675-707df50c926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f8276-2174-44ea-90b5-e11094df5760",
        "cursor": {
          "ref": "bb6375d6-64e2-430f-b165-01667de317db",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e6464cf4-f177-4fd4-8650-491d79e437a0"
        },
        "item": {
          "id": "8e7f8276-2174-44ea-90b5-e11094df5760",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "deb1e23f-a250-421b-a5c3-45509e268dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb2a128-f80c-4e31-b186-255a08339af0",
        "cursor": {
          "ref": "08f5a0c8-3d8f-414d-8267-b6c80490f701",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9e3fa574-c686-4d5a-8a99-df60e1612ea6"
        },
        "item": {
          "id": "3eb2a128-f80c-4e31-b186-255a08339af0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b1eb8237-13d7-4367-9f77-d18336dcbc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ca1ee3-c2e6-4e0d-840f-b574a18831b6",
        "cursor": {
          "ref": "0d6ab40b-33ee-420f-a453-9d125ef077a6",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9e6c5ba4-16fe-40c6-8861-56724fa924bc"
        },
        "item": {
          "id": "14ca1ee3-c2e6-4e0d-840f-b574a18831b6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6324b76c-e830-43cf-b85e-08a9b857a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df52667-d8da-4596-a38e-e7a2130ab172",
        "cursor": {
          "ref": "2fe0c625-44bc-4c08-a230-9fec0ccb4847",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cb1862a1-f9d6-4765-94c5-17f26a8db1d0"
        },
        "item": {
          "id": "5df52667-d8da-4596-a38e-e7a2130ab172",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f27f39b0-bf57-482b-903a-20310be5caa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feaaf85-b163-41b7-80cd-53693d0fcacd",
        "cursor": {
          "ref": "acd7b824-f1eb-4ac5-b7ad-dafa1c457ce5",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a55f9570-361a-4cee-9ecd-88ce001e6612"
        },
        "item": {
          "id": "6feaaf85-b163-41b7-80cd-53693d0fcacd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4b412729-49b3-475c-a1b8-00cd3ea56ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79807e4a-1eb8-4842-8cc9-2e2a7bdf663d",
        "cursor": {
          "ref": "4aaecc31-64e2-4e88-9515-e794dada45a6",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e685c4bf-59ab-4a5c-bd06-42fdfcbf60fc"
        },
        "item": {
          "id": "79807e4a-1eb8-4842-8cc9-2e2a7bdf663d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6db365c3-7a7d-4eca-b045-aad3d58259a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be208a4-c2b8-4e39-a972-5d8c6c51fa12",
        "cursor": {
          "ref": "f97f4965-6ba6-4df2-97c0-c7a219a12b4f",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e48f63a5-b65c-4402-b91d-4c0d665bd180"
        },
        "item": {
          "id": "8be208a4-c2b8-4e39-a972-5d8c6c51fa12",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ccbbe5a0-eb9f-4aaa-b372-4d40064ce3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c417fc3-1036-4221-bbfd-8d82f07b107c",
        "cursor": {
          "ref": "cb188a4e-aad8-4ec0-ad2b-3851d1d0435b",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9f413651-4fd3-45ec-ad46-037f804eb96a"
        },
        "item": {
          "id": "6c417fc3-1036-4221-bbfd-8d82f07b107c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "110dd9dc-596b-4017-8d8e-10a3d0eca8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9c096-e485-44da-9d87-df1e0b952a84",
        "cursor": {
          "ref": "6660d090-101b-43d2-96fc-9e8ed29c99ab",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5cbf0a2c-0d70-4bc5-803a-035d97bf7280"
        },
        "item": {
          "id": "00d9c096-e485-44da-9d87-df1e0b952a84",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d444e648-3add-44c9-a969-084e689ded39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1301059-1853-43fd-94c3-e431708cfe5e",
        "cursor": {
          "ref": "362b234b-e03c-4276-af08-0fd35894b476",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72c3c4e2-6aa7-4742-b78b-2ed1a020a698"
        },
        "item": {
          "id": "e1301059-1853-43fd-94c3-e431708cfe5e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c3d3e459-9f59-489a-ab77-69194be3f761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4357356-3a7b-4762-b02b-f51e70711dd5",
        "cursor": {
          "ref": "c7147773-f767-4fc0-99a8-d126e70e992a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "963fcddb-830c-4f1b-a19a-2872ac07b451"
        },
        "item": {
          "id": "e4357356-3a7b-4762-b02b-f51e70711dd5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8793b506-8f1c-40b3-9201-42e93f406469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde5bb54-00e9-458b-b187-08905cfe194f",
        "cursor": {
          "ref": "c34a5a39-209f-416c-9cf4-070d7a9b072f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "70ba5fc6-d122-4b10-b790-a2e7982c5c4e"
        },
        "item": {
          "id": "cde5bb54-00e9-458b-b187-08905cfe194f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2d781a2d-cdf2-4c6e-b360-a74b3dec79a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25815c67-b1ef-4979-a0ea-282143b9ef43",
        "cursor": {
          "ref": "4296dea3-baaa-4f75-b989-352ab70466e9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "39e1c174-6518-4acf-81dd-f8368b3c995d"
        },
        "item": {
          "id": "25815c67-b1ef-4979-a0ea-282143b9ef43",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1273fe3d-3673-4ed5-87ed-eb276cd5c843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7c1a2d-f576-4237-a651-fefaf477c394",
        "cursor": {
          "ref": "aeb6280e-ed8d-4e14-b997-e0904528ce1a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a02628cb-5e83-46d6-a186-927c9c83d8d7"
        },
        "item": {
          "id": "5e7c1a2d-f576-4237-a651-fefaf477c394",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e8d76e7d-6a6e-4245-a22b-6a2edd92c245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49b2919-9ce9-4d83-8161-4683485a2faa",
        "cursor": {
          "ref": "0e4f95cf-2300-4c66-854b-eb1a8b30bde5",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b5089198-a0d9-4236-9c86-f97e288306bd"
        },
        "item": {
          "id": "f49b2919-9ce9-4d83-8161-4683485a2faa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3f49c34f-587c-49a9-9930-04644f5ff33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0c8c5e-43ee-4776-bb4b-ba4f51981ccf",
        "cursor": {
          "ref": "6ec4384b-763e-4c58-9944-2bc7f36b7305",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fe819b7d-1d74-4338-9eff-b014a5c594c2"
        },
        "item": {
          "id": "6b0c8c5e-43ee-4776-bb4b-ba4f51981ccf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "99c75c50-d6bd-4166-80fd-7be47c88ca64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc75223-46c0-4b09-8185-35cb46dad95f",
        "cursor": {
          "ref": "4e285145-f31b-4808-b4ac-01cd31d0e076",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "69c8f744-1df5-41c0-bf17-bcc378796c1d"
        },
        "item": {
          "id": "6cc75223-46c0-4b09-8185-35cb46dad95f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "25eafc6d-eac4-46b6-95c2-b6d343a4caed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf340c9-9cb0-4384-aa9d-8a9f9cc7b995",
        "cursor": {
          "ref": "6b614ff5-d082-4f5d-aa54-3e0390593387",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f257d35-1d8d-42ef-ab1b-53101cb7f9d0"
        },
        "item": {
          "id": "cbf340c9-9cb0-4384-aa9d-8a9f9cc7b995",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5f0ff6b-4452-4601-812b-7fe25740ac73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfc8cca-3d0f-4be7-b655-f6a9f2c537ea",
        "cursor": {
          "ref": "99048f0a-3597-461d-a0b9-e2c143cc42d5",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "41da5d85-c374-4ca1-b410-60fa9fe3a637"
        },
        "item": {
          "id": "8bfc8cca-3d0f-4be7-b655-f6a9f2c537ea",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3542e61c-ad70-49b4-b9e0-34d866b88f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362828ed-273f-4156-a07b-126bc3a16e48",
        "cursor": {
          "ref": "1bd05344-3094-4230-b40c-28d67a57b287",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "64917134-3b66-46c3-8fb7-595fc2123fd0"
        },
        "item": {
          "id": "362828ed-273f-4156-a07b-126bc3a16e48",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0f26089c-ce26-4e54-a71e-4ef64c58747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588b46eb-d2c4-47b2-ab3d-bff30310ceef",
        "cursor": {
          "ref": "bce6fdd4-df70-4f96-8cf4-671700f0caf4",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2a4299e8-2d58-43a9-8b84-442c10c9d5fb"
        },
        "item": {
          "id": "588b46eb-d2c4-47b2-ab3d-bff30310ceef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "23c1b91f-6c54-4d87-b8dc-28cce46ce7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd0f85a-a1eb-4ca7-850f-4f68e3dd5760",
        "cursor": {
          "ref": "ecc92228-c2c2-4327-8868-c9b4f5e42a8c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b5ad927a-65ee-48ad-b7da-f95369ea4ab4"
        },
        "item": {
          "id": "cdd0f85a-a1eb-4ca7-850f-4f68e3dd5760",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "90e13a83-d91d-4fed-a96e-97b0205cea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5350480a-557f-4c48-866b-1132f7dba4b4",
        "cursor": {
          "ref": "036140f4-964c-4041-b076-6f84b67af025",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a1f7fa30-6396-4d27-9a66-c292bee7d31b"
        },
        "item": {
          "id": "5350480a-557f-4c48-866b-1132f7dba4b4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ff19bde-01e5-4fef-a931-a8f68ece5613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cbe494-0ed2-4bcb-924b-b1a648981d95",
        "cursor": {
          "ref": "39dc5e90-ed6e-4e09-9dea-b4da20f4a38c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "519eb857-6b2e-4400-83d6-904cb253129b"
        },
        "item": {
          "id": "88cbe494-0ed2-4bcb-924b-b1a648981d95",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d3ba6bb-0b63-4955-8116-a53af803e28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a7209-56e0-4113-9a01-31a0685c88f6",
        "cursor": {
          "ref": "a3a100ac-0924-41c6-94a2-eb650cae7169",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aa98fa39-63eb-4418-b66d-cd6618f20989"
        },
        "item": {
          "id": "373a7209-56e0-4113-9a01-31a0685c88f6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "310c3af2-3c26-418d-bcd0-a37d9225f23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b34ee33-3cbf-48c6-9885-2965c3436164",
        "cursor": {
          "ref": "835e7609-48c4-4e53-8dc7-3818ff4b1e01",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c7317980-5ef4-47e3-acac-b9ca52f767e4"
        },
        "item": {
          "id": "0b34ee33-3cbf-48c6-9885-2965c3436164",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ef50db84-227f-42e7-95cd-f002ade25235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e2485-31db-4e7c-9351-d52fe8f61745",
        "cursor": {
          "ref": "b6285e7f-083e-4f29-8ae1-ba810937b63f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "482cd52c-2b2f-42ff-9da7-25224205ebcc"
        },
        "item": {
          "id": "740e2485-31db-4e7c-9351-d52fe8f61745",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1d4c4a3c-ee5d-4e24-a277-8035dbdaa0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684d0c3-ce79-48d3-972b-a6d8564b1daf",
        "cursor": {
          "ref": "98f26e57-c937-4223-9a37-4c06349c61e4",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3ddcedc8-e67a-4efd-aeb4-2cbc94b4d9bf"
        },
        "item": {
          "id": "e684d0c3-ce79-48d3-972b-a6d8564b1daf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a88c64c6-3095-49ea-bea4-75589299b57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78371089-b8ab-40a4-80c0-3c25ed61d560",
        "cursor": {
          "ref": "82eb2003-dacc-49ba-8251-2057fd569eae",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "96b566c3-af9e-45d0-a62b-316389182232"
        },
        "item": {
          "id": "78371089-b8ab-40a4-80c0-3c25ed61d560",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a40e1f35-e8af-48f4-a2a0-fd3d068c9b61",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd9877b-de7b-482e-a5d9-4ae96f3908eb",
        "cursor": {
          "ref": "d86974cb-5693-46cb-b69d-d37442099268",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b6edbbf-f61a-4d29-9293-500e27d1daa9"
        },
        "item": {
          "id": "0dd9877b-de7b-482e-a5d9-4ae96f3908eb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ca47e634-075c-4464-97ad-a677b0cd34db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be2ddec-5559-4ea4-b591-4a25c3a78a29",
        "cursor": {
          "ref": "c42bf828-585b-4117-bab6-2729d9f5f8c6",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bc666f4a-ad38-42a4-8c15-ab9e53424fec"
        },
        "item": {
          "id": "1be2ddec-5559-4ea4-b591-4a25c3a78a29",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0ee1db72-d540-4a0c-9da7-c58fe2ead28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e719f9e7-0abc-495b-9d14-1e64b15c0cce",
        "cursor": {
          "ref": "165ba9bc-10ce-40d4-93bb-366b9df5b290",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "90aebfee-132a-426d-87ba-d5fdd91080a9"
        },
        "item": {
          "id": "e719f9e7-0abc-495b-9d14-1e64b15c0cce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "304fdc6c-bc53-4df3-8cd9-7ea3aa75b330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e625de46-7980-4fdc-8841-afe03d0ed7c7",
        "cursor": {
          "ref": "2d8a1540-abe7-4890-9709-5edb4f7617ea",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b1d52bc-7ec2-4d74-83e7-a58ba805d58d"
        },
        "item": {
          "id": "e625de46-7980-4fdc-8841-afe03d0ed7c7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "52660ef8-6514-4836-b5c2-231212b171d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bab0baa-6879-4099-9874-1c4a35619a02",
        "cursor": {
          "ref": "f026a468-9ab8-42b5-9cf0-26068e853eec",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eb07f10d-cd90-49f9-84d3-ff1995161618"
        },
        "item": {
          "id": "0bab0baa-6879-4099-9874-1c4a35619a02",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d09af7f-cb53-48b8-b504-0643f39904a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc834cf-92a0-4724-bcb6-3195de280a70",
        "cursor": {
          "ref": "a6ac3124-84ae-452e-a18c-3215744da526",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "705d324b-8571-4161-ac67-7e60c3ce5c57"
        },
        "item": {
          "id": "2dc834cf-92a0-4724-bcb6-3195de280a70",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "71316fc2-b849-486c-893d-6a9fc8bc596d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90718ee-5f09-4faa-8a99-6de43ed01e0e",
        "cursor": {
          "ref": "326ac710-a4a6-40b4-ab51-da73e89cd6f0",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9de67fbf-e0c5-4a8f-acb3-2ddc6e57ae48"
        },
        "item": {
          "id": "f90718ee-5f09-4faa-8a99-6de43ed01e0e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7b3b6562-adac-47f9-9bbf-d80e3bbf1c29",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0a61a-4010-4355-9c1f-c393a19a78dd",
        "cursor": {
          "ref": "3927ac94-c9b7-4867-9032-9f7632dc2836",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3ccdb512-3b35-49e5-831c-4d7bc323aeab"
        },
        "item": {
          "id": "15f0a61a-4010-4355-9c1f-c393a19a78dd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "291bb814-1a61-4187-97a6-718cf7cb7cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c698a055-c912-45ac-b9da-cf8fe2bdbf09",
        "cursor": {
          "ref": "a25fa243-2a74-45b4-bbf6-1ee06220f9f9",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "10b81c03-3c40-4536-a3e0-70dbc7fc5e1c"
        },
        "item": {
          "id": "c698a055-c912-45ac-b9da-cf8fe2bdbf09",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "05ddf86d-5d5c-4cf0-b68c-ac2653db78f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba939bd4-53ee-4cb4-b93c-f03b5c05adf8",
        "cursor": {
          "ref": "f30c58b9-0b69-4c85-bd7f-ff4c3e7cff5f",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76ec3abc-bf4f-4d17-ac7a-80adeacae626"
        },
        "item": {
          "id": "ba939bd4-53ee-4cb4-b93c-f03b5c05adf8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "57374b59-259d-4fa0-9ffd-e07d5767b9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd901216-e507-4d3b-b767-cd59a0b3a618",
        "cursor": {
          "ref": "5a4f2d6f-610b-481d-9075-a225d671b843",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b7fbf15-b62f-450f-ac96-1db2b6efdcd6"
        },
        "item": {
          "id": "bd901216-e507-4d3b-b767-cd59a0b3a618",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a09e44c3-fa3a-4beb-a916-719234bf0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a87b73-7625-432b-8843-10f8722e13f3",
        "cursor": {
          "ref": "02cad80f-11e5-4044-b9ca-cb594a5d0abe",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c7e76a0a-0db5-4c8f-838f-8c89875a675f"
        },
        "item": {
          "id": "61a87b73-7625-432b-8843-10f8722e13f3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "15fe4e3f-5fa9-4fc8-9575-7608d55d7e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6215044f-9e66-4249-84af-613e23c55473",
        "cursor": {
          "ref": "c25b5a49-6982-4eb0-95b7-bf840a8ef2b3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "faf340a1-8176-4018-8719-47c41f573f29"
        },
        "item": {
          "id": "6215044f-9e66-4249-84af-613e23c55473",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d66c3f11-aa73-4746-8c1d-5e6ff6476835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7f231c-2793-4181-88f5-49bd82ff8899",
        "cursor": {
          "ref": "6d4ece0b-82e5-4918-9e00-28004c849ab4",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32c6805d-cf41-4930-9762-d39b0da277f2"
        },
        "item": {
          "id": "9a7f231c-2793-4181-88f5-49bd82ff8899",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7e9fcf27-0011-4ce4-874e-0e2d9b8dee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aac0289-dd3c-4159-97b0-7f44379a62e3",
        "cursor": {
          "ref": "282d64c4-34d7-4cfb-9299-a7c32f4c013e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "55ad0d39-dd58-4a82-9bdd-201ca6a909e4"
        },
        "item": {
          "id": "3aac0289-dd3c-4159-97b0-7f44379a62e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "043ec282-99e9-4920-88f4-df8d9e05788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7963a5c-52fc-4971-8d71-1328e41de22e",
        "cursor": {
          "ref": "eb4d65f6-dd3c-4f05-837e-768abf53f847",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f092a518-a39e-4ab9-9ac7-56dc28dabb97"
        },
        "item": {
          "id": "a7963a5c-52fc-4971-8d71-1328e41de22e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e91d2f02-b078-47b5-b653-dbc2f05c6277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0242fde-cde8-4eac-b2f6-d4e2dafe0432",
        "cursor": {
          "ref": "c3f54c7a-52fb-4f18-9627-64c5bb1ce1ec",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0507631c-49cf-4893-a1da-e09bf897b855"
        },
        "item": {
          "id": "d0242fde-cde8-4eac-b2f6-d4e2dafe0432",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0f97bad3-8bc1-403a-aa7b-5ed06480a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bf132b-46ae-491c-ac28-90e6c811f790",
        "cursor": {
          "ref": "f5865ab8-20c7-4e4b-9f68-4f34b707e8f1",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6b63614c-fe5d-4794-a77f-41afc7f8f76d"
        },
        "item": {
          "id": "07bf132b-46ae-491c-ac28-90e6c811f790",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a452d3f-eb42-4fe8-b567-93f961e818da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f75ed74-bffc-455a-a83d-c0b37d0603b8",
        "cursor": {
          "ref": "d662a459-3aba-446a-93f0-731cb297b02f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a0ea50ed-14cf-431f-825d-da628e0924df"
        },
        "item": {
          "id": "2f75ed74-bffc-455a-a83d-c0b37d0603b8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f110e13d-78f1-4912-aae6-7599066ef80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c92e6e0-389c-4e04-95f2-6ed093e570bf",
        "cursor": {
          "ref": "b36b437d-28d5-4e41-a9df-fb08ac17ac58",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "48954059-02c0-44a3-82a1-6e40c3ec6199"
        },
        "item": {
          "id": "3c92e6e0-389c-4e04-95f2-6ed093e570bf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5df0df49-8904-4d57-bc51-06b1fa448376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a0053f-dcfc-4a56-9d8a-bf84b2c8c6b5",
        "cursor": {
          "ref": "6734fb3f-6007-41d0-b99f-12cb83bf1f18",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "41edd832-7e04-40e2-b252-6a86389da3d7"
        },
        "item": {
          "id": "87a0053f-dcfc-4a56-9d8a-bf84b2c8c6b5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26c6e517-dccc-4ed7-8fcb-07942a688a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bbfe31-bb12-412e-8948-c9e336f89c75",
        "cursor": {
          "ref": "3ef6433e-726c-4774-8187-83a7208edf9a",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e695c557-963e-4e3f-b45b-605b3697e9b6"
        },
        "item": {
          "id": "79bbfe31-bb12-412e-8948-c9e336f89c75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "de4b874c-f527-4f07-acdd-e42f4cfde1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6b8b4d-2a44-498f-8065-c5b602775001",
        "cursor": {
          "ref": "e882a964-a23e-4cc3-a736-e4131eb62315",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cf46f526-2e7f-4f9e-8cb5-74d81c5c811b"
        },
        "item": {
          "id": "fe6b8b4d-2a44-498f-8065-c5b602775001",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "924c5084-fe40-4e56-8052-3cb6e7442e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca55aafe-3856-491a-9027-7ec089e7b92f",
        "cursor": {
          "ref": "a184a5c1-4c90-468b-b788-e1f5f777bd8e",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "659319d7-c675-4e80-a5e9-ee153e04c4bb"
        },
        "item": {
          "id": "ca55aafe-3856-491a-9027-7ec089e7b92f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5f3b650a-3643-4707-86eb-598a779e9c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eef11b-8d50-496f-92d3-cfee28a23689",
        "cursor": {
          "ref": "53a756ff-189f-435e-b749-273c0ba82bbc",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "25056d52-69e2-4ffb-b606-b10759ad660a"
        },
        "item": {
          "id": "a0eef11b-8d50-496f-92d3-cfee28a23689",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "53125355-ed88-4001-b6d3-6fa42e1c8371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eaddd8-92ca-4e1b-8531-ba81acae296d",
        "cursor": {
          "ref": "1e865135-080b-44ca-bd96-9adccecfcddd",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "39e4f84d-c4d7-4191-9f21-5943130fa673"
        },
        "item": {
          "id": "07eaddd8-92ca-4e1b-8531-ba81acae296d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1a97da68-60c4-4be9-9a14-442e2761c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1340571a-8701-40c1-a772-8c1386d4c65e",
        "cursor": {
          "ref": "f96088d0-2ff8-4c92-a487-7725593d6747",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb4d858e-bc39-4093-ab63-f29d744c057b"
        },
        "item": {
          "id": "1340571a-8701-40c1-a772-8c1386d4c65e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cab4f618-afc4-4ac4-bce3-84ec0e835717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19bdb1d-3cbb-41f3-8700-bde50d3d7e2a",
        "cursor": {
          "ref": "4f9dda8b-2352-497b-b705-230c48bb08f9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7efe4ef8-82ce-494a-94e5-4341ed7707bd"
        },
        "item": {
          "id": "b19bdb1d-3cbb-41f3-8700-bde50d3d7e2a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dff88ce2-84aa-4622-ab2f-70dba4e3b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a80792-30c2-41cd-9a70-73a24cb83b15",
        "cursor": {
          "ref": "7e84ff4e-91ea-4db2-996e-44ac02b34a60",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96568944-6343-4873-90a7-4148537fe1ec"
        },
        "item": {
          "id": "20a80792-30c2-41cd-9a70-73a24cb83b15",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6884a03e-60b0-4927-84de-264ae52deaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e327039f-9c79-4488-bb79-a78b583f4e1c",
        "cursor": {
          "ref": "9d579b0a-5ddf-4f25-9920-0e073fac5c61",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0222b2c3-1e81-446a-8de6-a4f1793f2dd9"
        },
        "item": {
          "id": "e327039f-9c79-4488-bb79-a78b583f4e1c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ef2eb88b-52a9-4de3-a1b7-826a87651654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cf61a9-ec5d-464c-a925-b7fae917bfd8",
        "cursor": {
          "ref": "d9ad9dc5-c7f6-4dc8-b747-d70e8bb7080f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f40db61a-95a3-4984-95dc-c5e160359a22"
        },
        "item": {
          "id": "c2cf61a9-ec5d-464c-a925-b7fae917bfd8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fb9c095b-af6b-49c0-bc28-5b27f8c78514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2101b724-abdf-4589-ae0a-4f706627a1f9",
        "cursor": {
          "ref": "caea8fe0-ec34-4f12-b177-ddc459c719b3",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "519ad14d-d6ef-4899-a00d-36443d1fcdf5"
        },
        "item": {
          "id": "2101b724-abdf-4589-ae0a-4f706627a1f9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "111a6981-3575-4bc0-944d-81d7f62fc677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1ed59d-581b-4c39-901a-e0d93190c7fd",
        "cursor": {
          "ref": "37351922-18ad-4791-9919-d5aed98aabd7",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e32e0b9-3465-417c-9e23-747bb28bc6e0"
        },
        "item": {
          "id": "0c1ed59d-581b-4c39-901a-e0d93190c7fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9585d6a5-f1f2-4145-9625-89c537881551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c8a4f3-208d-4460-998a-b5bb9330781f",
        "cursor": {
          "ref": "a278b012-0a07-41a5-9087-81736e4b3090",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d538cb80-b4bb-48b1-b09d-b1d994db2f00"
        },
        "item": {
          "id": "84c8a4f3-208d-4460-998a-b5bb9330781f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "37b9e131-3601-41f0-ba3a-40faca861f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82b05fe-902d-49a7-a25b-5a8a64485ec4",
        "cursor": {
          "ref": "7a25d05f-1153-48ac-972a-5f7bc29c26dc",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "350fd99e-3244-4eeb-8a43-7ca580573a63"
        },
        "item": {
          "id": "b82b05fe-902d-49a7-a25b-5a8a64485ec4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "de6bcb37-88ca-4ded-bc0d-267d83e998b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c067ed30-b9f9-4cb9-834f-ee0a45498b2e",
        "cursor": {
          "ref": "14da5e33-24bd-472f-8927-78c8c8bda9f5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b39c0537-fb06-47c6-843a-da4249c94b57"
        },
        "item": {
          "id": "c067ed30-b9f9-4cb9-834f-ee0a45498b2e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1564b8d7-14bf-4089-8853-cf5ca61a31bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d651e44-942d-4f6d-af96-b2cfc9d92406",
        "cursor": {
          "ref": "a2798c21-dc45-4a17-8534-22ba84655032",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0341ab46-debc-4838-93f7-9bbf9d2ed82e"
        },
        "item": {
          "id": "6d651e44-942d-4f6d-af96-b2cfc9d92406",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "66f60089-74a1-44be-a2fa-6fb4764d616a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b54f16-19e5-4f2b-8750-2f99a0b1ac67",
        "cursor": {
          "ref": "f0809e3e-ca87-4c21-a982-67ef3658c339",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c1ef3133-c1df-48eb-8431-63e60080cf62"
        },
        "item": {
          "id": "f1b54f16-19e5-4f2b-8750-2f99a0b1ac67",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "451feeb7-d702-4a7d-bf49-71623adb8485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f88b2-98bc-4025-9715-b2fc308f182a",
        "cursor": {
          "ref": "b209ef23-3cb4-496b-bc8c-2b72c4ee39f3",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ee535c33-e7fd-4d71-9470-c85b59847186"
        },
        "item": {
          "id": "d00f88b2-98bc-4025-9715-b2fc308f182a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5fc14bab-c44d-403c-bcd8-e528c84ecb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccec3f7-a460-4f67-afd0-7544a9d13a26",
        "cursor": {
          "ref": "9745666f-2074-46cc-a5a6-f9967e32d667",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3bb6b40f-9b04-42e9-834d-3ac0ebcd6f74"
        },
        "item": {
          "id": "5ccec3f7-a460-4f67-afd0-7544a9d13a26",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "27d2def1-a74a-49ce-99c9-3d0c91fc3477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf0aecf-2d9c-4ba0-8d5d-88a9d9e6e9ff",
        "cursor": {
          "ref": "89156f53-30e8-4763-b829-af3ef92da190",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5594b17b-230c-436c-a607-bae6d951f655"
        },
        "item": {
          "id": "caf0aecf-2d9c-4ba0-8d5d-88a9d9e6e9ff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "584f4e18-cdef-4346-b2ca-79549cf2fd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d218e112-ea65-46d7-8264-75a50200c327",
        "cursor": {
          "ref": "2d60aba2-5fc2-4e33-b863-a13953d59d6f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "673dc4e9-f24a-45ee-9b69-133827beeede"
        },
        "item": {
          "id": "d218e112-ea65-46d7-8264-75a50200c327",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5b67f96d-57a6-474e-9069-97beb441299e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043b2df3-cf51-4427-a40e-245579eeb413",
        "cursor": {
          "ref": "53b7d4bb-84e9-4387-ab02-f8b0572abd38",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f9338bd5-9451-498c-945b-bc91cbb9cdca"
        },
        "item": {
          "id": "043b2df3-cf51-4427-a40e-245579eeb413",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "55735a24-9ac5-4d26-9a90-592c62ca1c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd4df0-04d5-4e03-ae38-3118182f4874",
        "cursor": {
          "ref": "f3b8f462-0763-469a-ae95-8277c536bce7",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34744cd4-fc61-486e-ba37-2dca154a48dc"
        },
        "item": {
          "id": "e2bd4df0-04d5-4e03-ae38-3118182f4874",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5206a244-1fe3-4e28-ab3e-a9d58a6c9d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6438a9a-600b-4d8a-8d09-8c0c91b6c468",
        "cursor": {
          "ref": "2f55e30e-262f-47fa-a065-1138e7be45eb",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "55a2e4bf-784b-4238-b522-aa0b32552347"
        },
        "item": {
          "id": "f6438a9a-600b-4d8a-8d09-8c0c91b6c468",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "453af531-a758-4765-a51d-97d316145c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcccad61-7023-49f2-8925-3d0c32be544b",
        "cursor": {
          "ref": "6d569d86-6aae-4fb1-946f-93d2452f166a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "616a9077-13d1-4765-b5fb-b0f2f3898b7b"
        },
        "item": {
          "id": "bcccad61-7023-49f2-8925-3d0c32be544b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "675876b5-3c8d-452b-b7f5-6dab6d5151d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33070e8d-273e-4cd4-998b-dd53b543faaf",
        "cursor": {
          "ref": "a678bee0-2cbe-40ce-81ba-78617fd76885",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ef219ab-d807-44aa-bdcb-fc7a3081e103"
        },
        "item": {
          "id": "33070e8d-273e-4cd4-998b-dd53b543faaf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e628702e-641c-4693-923d-730ae7b51dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3b38d3-7792-44f7-8e56-84ca6a5acece",
        "cursor": {
          "ref": "d6c0d522-4d53-4a34-a641-06ba4ff60fc7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "63dad8eb-2512-4c68-ab2b-01b37a242c32"
        },
        "item": {
          "id": "2b3b38d3-7792-44f7-8e56-84ca6a5acece",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6154fc4b-d77b-48a7-9e40-8a87a9273cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ad29dc-58bf-43d8-8d5f-1e496d04a4bf",
        "cursor": {
          "ref": "53ac56ed-6834-4e1c-b118-26da2ddccda1",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2068759d-bce4-439e-9957-bac1fa007240"
        },
        "item": {
          "id": "32ad29dc-58bf-43d8-8d5f-1e496d04a4bf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "df511c6b-5ff1-4591-b218-e266e2c2d52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5732e1a2-5f7f-4f2a-bc77-e675eebe0e5d",
        "cursor": {
          "ref": "bcd53258-cfb8-4c0d-ba08-1bc705f00ce6",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "64b0b890-1ad5-466d-8ca0-aa2bb350d2ca"
        },
        "item": {
          "id": "5732e1a2-5f7f-4f2a-bc77-e675eebe0e5d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "48fae5e4-3d5e-46a3-83c4-80b77779a46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6e10fc-abe7-436f-9d7b-83344a550cbf",
        "cursor": {
          "ref": "755e26ee-231f-4f0b-980f-b58e8ed277c0",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "000c0ea3-7d64-4a9f-9380-204f1439edbd"
        },
        "item": {
          "id": "4b6e10fc-abe7-436f-9d7b-83344a550cbf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d1b794cf-d78b-4be4-9234-8f7215579cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05344039-8837-4493-96f0-2a1f0923849f",
        "cursor": {
          "ref": "c279bccf-3e73-4671-9209-1ebc642f880e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c2a74f70-c0ae-4fcd-96d5-d2f5cc01d142"
        },
        "item": {
          "id": "05344039-8837-4493-96f0-2a1f0923849f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "607e343c-74f0-4b14-8327-41cbc2bb6781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e675fcd4-7bb1-4eb7-a143-fd567ea5214d",
        "cursor": {
          "ref": "51495fa3-3e8c-4e22-9494-dee1fe11883f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a9087d8b-706f-4891-815b-fece9cd3f2b4"
        },
        "item": {
          "id": "e675fcd4-7bb1-4eb7-a143-fd567ea5214d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a7b7dbf-4f69-425c-96bf-19aa50572467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03547df-7f1a-4b4c-bd43-7ef6f5bc45a9",
        "cursor": {
          "ref": "de30f8c2-0cfc-4862-b3e1-7b51441d411d",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8ad7a97c-54fa-44b8-a59a-86a132e05bd2"
        },
        "item": {
          "id": "d03547df-7f1a-4b4c-bd43-7ef6f5bc45a9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "00110cca-1f07-4ca9-8d02-ddc222d2f0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23e4693-a977-4c37-93c5-fd6356e59c58",
        "cursor": {
          "ref": "b139470b-757a-4bea-a670-8c9faf960b34",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4bfd7f26-d0ac-46ca-bd0f-c28f6622e284"
        },
        "item": {
          "id": "c23e4693-a977-4c37-93c5-fd6356e59c58",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "409dd0be-d90d-41cd-a707-43b70657dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cc5c84-4bb8-4111-a0cf-98e81f41a4c5",
        "cursor": {
          "ref": "2b58af77-9899-4c67-b703-871c67024d2a",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c3ac0803-2a11-4dc2-845a-17fb426a6640"
        },
        "item": {
          "id": "d7cc5c84-4bb8-4111-a0cf-98e81f41a4c5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "49f30262-c9eb-464b-a611-6062ba773abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce8dcd-8c45-460b-934a-b9f5d8a15da8",
        "cursor": {
          "ref": "674b4a8c-f80a-4939-a6d5-76831b214b5c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "15f36e89-732e-47f0-8ea1-22cf1f4cf335"
        },
        "item": {
          "id": "0cce8dcd-8c45-460b-934a-b9f5d8a15da8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c7935c5e-d9f6-4141-895f-9ac3fe94a6fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20987b4e-8897-4d8c-914b-23bf5e3dfd8d",
        "cursor": {
          "ref": "dfdee430-a67c-4a93-8284-52bc7ca932e0",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8865ef2d-bedc-46c2-b296-2e1c03f2648f"
        },
        "item": {
          "id": "20987b4e-8897-4d8c-914b-23bf5e3dfd8d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "78bd7c9f-1e22-4804-b6c1-58992a5bc021",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 98,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186fac48-22bf-41bc-8266-6f642b777984",
        "cursor": {
          "ref": "db8d4c6f-bad0-4a1b-9880-772ecfadf174",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "11be92c2-e8b9-4e49-8170-6745ebfe1df6"
        },
        "item": {
          "id": "186fac48-22bf-41bc-8266-6f642b777984",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7ea6874a-5466-4159-9be1-10ad1d109fe6",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec4dd92-f4ed-4bd9-b221-786a8ba8bb6e",
        "cursor": {
          "ref": "0085c0cc-3f78-4660-a007-6892ed3a8244",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1703bf5b-68d8-41fc-b0a2-f5b40563c377"
        },
        "item": {
          "id": "aec4dd92-f4ed-4bd9-b221-786a8ba8bb6e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3e487bd4-6e00-4fea-b91a-33acf00f7233",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f8b4cd-d090-4c9f-8fa8-8842cb73edb7",
        "cursor": {
          "ref": "26d41bdc-ff76-462c-a5e0-9e4a0f9b9cb7",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f9a77f86-a919-4934-b05e-4da8d6fb30ef"
        },
        "item": {
          "id": "08f8b4cd-d090-4c9f-8fa8-8842cb73edb7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8ef7544b-c846-444e-a76f-be7080cdf67b",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b230a175-1913-4447-9b88-0d4138d39e0e",
        "cursor": {
          "ref": "98998247-fba7-4e1d-bd3c-526ee9366326",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "58570a66-1ab8-47fc-9ff8-94ee5a7895c1"
        },
        "item": {
          "id": "b230a175-1913-4447-9b88-0d4138d39e0e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ff1fedf3-33eb-4bd9-b5d4-259a77444f25",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ee55b6-8b8a-4785-825e-3e6dcd1d7c36",
        "cursor": {
          "ref": "52a45eab-5549-4112-8fe6-2577578256ba",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2c87522e-c250-427d-b90a-4384b7883179"
        },
        "item": {
          "id": "84ee55b6-8b8a-4785-825e-3e6dcd1d7c36",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5d438da9-63da-4ab5-98e0-69e09312cd2e",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbae5e8-8f25-4acb-9b6d-e6f7151f6283",
        "cursor": {
          "ref": "783610f6-08fe-4682-8a5d-d68fd3b765e0",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6a04af25-215c-4cd3-a107-1ebd50c46256"
        },
        "item": {
          "id": "0dbae5e8-8f25-4acb-9b6d-e6f7151f6283",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb3e4553-5447-4fcc-bac6-19fe8c80a41e",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93002dd4-1705-4561-b489-feb4ac4c60cb",
        "cursor": {
          "ref": "c776b670-c5b3-4e32-831b-8e5c9bdd448b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e80b1b2-20f8-4646-ad37-e3675fbbbc44"
        },
        "item": {
          "id": "93002dd4-1705-4561-b489-feb4ac4c60cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd266006-4b9c-4223-87e3-925e422a866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93002dd4-1705-4561-b489-feb4ac4c60cb",
        "cursor": {
          "ref": "c776b670-c5b3-4e32-831b-8e5c9bdd448b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e80b1b2-20f8-4646-ad37-e3675fbbbc44"
        },
        "item": {
          "id": "93002dd4-1705-4561-b489-feb4ac4c60cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd266006-4b9c-4223-87e3-925e422a866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd002007-c5a7-4967-8f2f-1eb522cffc51",
        "cursor": {
          "ref": "2323701a-f102-417a-8bc5-ef18e99ec4a7",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e231f316-cc91-4d97-8676-70769339d05f"
        },
        "item": {
          "id": "fd002007-c5a7-4967-8f2f-1eb522cffc51",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7e4a8cb4-9805-4c6e-a8ec-8fc7797e54f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d00b14d-8783-4822-8431-3d0b6df73b76",
        "cursor": {
          "ref": "b23006f9-8ba0-40b1-bcde-22739d0ea06e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "81bd5874-b239-4ea2-8d90-fef9d6e5a2b0"
        },
        "item": {
          "id": "9d00b14d-8783-4822-8431-3d0b6df73b76",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3700686c-c2a6-4ebf-afe3-3be75d3a3244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5ecc65-eeff-4d3f-9521-4f6082026275",
        "cursor": {
          "ref": "530c541f-f4a6-4556-8448-7e61d0934b56",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6ae8ec82-98ea-41c1-a1e7-a95bad94577c"
        },
        "item": {
          "id": "9b5ecc65-eeff-4d3f-9521-4f6082026275",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "676f69cf-fbaa-4b64-a82f-6378f7ef1554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794d94af-4778-4283-97c7-e0f542d8efe7",
        "cursor": {
          "ref": "cb9e12df-20a6-4bb6-a66a-76deb025e6af",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3d8f72a2-7b7f-4baa-9d5f-0dc59243998a"
        },
        "item": {
          "id": "794d94af-4778-4283-97c7-e0f542d8efe7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "116e3418-460a-4641-a6ca-acb1ec4f26e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79740d9-9a9d-47b8-b814-eec1322bdb57",
        "cursor": {
          "ref": "7c9eb448-21a7-4f55-8d18-3a6ea5c58f4a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "05bf82f0-231a-444f-b5fe-bae6693fc76f"
        },
        "item": {
          "id": "e79740d9-9a9d-47b8-b814-eec1322bdb57",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e036129-5b95-492b-9ef8-eb49894e2a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e39d4-43db-48ed-b42e-d5a3ebec4695",
        "cursor": {
          "ref": "9f0892b2-fd74-419a-8566-3ea43a7147a7",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e6164c90-4b29-4bc6-864a-c25b7e763703"
        },
        "item": {
          "id": "0a6e39d4-43db-48ed-b42e-d5a3ebec4695",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0fc1f192-84dc-4973-a15d-89ce9963fa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f17560-567c-448d-a275-21ebeb935c45",
        "cursor": {
          "ref": "dfb60854-02d7-4651-941f-07c4e6ae7be0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "998efb8f-12cb-4920-a9e8-a1d5aa8f71a0"
        },
        "item": {
          "id": "56f17560-567c-448d-a275-21ebeb935c45",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ad531ed-f7af-431f-a672-a2124817d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936b0cf2-808f-445b-86a0-952090275fc0",
        "cursor": {
          "ref": "c8efc42d-1108-426f-9cfb-2062ee947b7b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ecd8885c-a66a-4ebb-93c3-90ab2da50b74"
        },
        "item": {
          "id": "936b0cf2-808f-445b-86a0-952090275fc0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5fd22efd-6238-4752-9543-e211556ec5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfcd746-3fee-4253-b841-c6f44d486a4c",
        "cursor": {
          "ref": "bf1ac990-787a-4c68-b391-e9e4ef129437",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1043157d-5a09-495d-941b-82f177abf50d"
        },
        "item": {
          "id": "dcfcd746-3fee-4253-b841-c6f44d486a4c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6c45ae08-b8c0-4184-ba0c-9900d840a3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d050c3f3-773d-405c-b617-8dbda3f7d99f",
        "cursor": {
          "ref": "70b61140-e178-4821-82d5-a18c8de01df5",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "068ff1a2-d5f8-4d94-9750-b3bee2c7042d"
        },
        "item": {
          "id": "d050c3f3-773d-405c-b617-8dbda3f7d99f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c369f065-63eb-4bb1-b116-f91ae9660de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e652c2-356f-465b-bdc9-4e775835544a",
        "cursor": {
          "ref": "d9dc2ba4-d35a-4fcf-9d6e-c089c084fffd",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "df16be81-bc45-4cb8-bdf7-4d0d0fe8f042"
        },
        "item": {
          "id": "95e652c2-356f-465b-bdc9-4e775835544a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8469e7db-2da6-4a85-af30-401a198437b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec8be09-7e03-4479-83fa-aae22e587c26",
        "cursor": {
          "ref": "19a3f7fd-9966-477a-8bb5-3e667b6387c9",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b2fda982-d0bc-4151-a3b9-cc76b4a8575d"
        },
        "item": {
          "id": "bec8be09-7e03-4479-83fa-aae22e587c26",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6532cf3d-4d85-4598-8f39-e40796eec6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbaf4bc-b609-4de5-8ad2-c6d7749abcbb",
        "cursor": {
          "ref": "46fe6dd4-5bde-470e-8713-adb9919d158f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e465ace-855d-4686-b23b-928b0bd9bc01"
        },
        "item": {
          "id": "5dbaf4bc-b609-4de5-8ad2-c6d7749abcbb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "57ad7ab2-af92-4e9b-b00e-beec5cb493ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a655de9d-ab1d-41da-a76c-6e367bc8674c",
        "cursor": {
          "ref": "e6ced1f0-84f2-4d4d-860d-5d34baeaed4b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d6e8fee7-a8d9-4da4-acc3-5305293497ce"
        },
        "item": {
          "id": "a655de9d-ab1d-41da-a76c-6e367bc8674c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c38132d5-a36b-4f2c-8e73-a3734db51053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58566cda-9676-4b85-bf53-c409489103ea",
        "cursor": {
          "ref": "f3e251ec-04ff-4e51-bc26-df7a7722d13e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a0cdb212-97dc-40c1-93bb-6b399a8974bd"
        },
        "item": {
          "id": "58566cda-9676-4b85-bf53-c409489103ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b3e424f4-8896-46a5-904f-bc1bc6d97e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b337380-196b-4304-ba44-9ab5465e85b4",
        "cursor": {
          "ref": "01e2c637-466f-446a-b746-78ce2c555c1d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e3fa8f10-6ed5-4531-acda-2c58629c3a5c"
        },
        "item": {
          "id": "3b337380-196b-4304-ba44-9ab5465e85b4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40d72c47-7cf4-49fd-85c2-d0c996c68f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001d7e74-1311-4357-82e2-ba60837b3b8d",
        "cursor": {
          "ref": "6d97593f-1a18-4aa1-b3a3-27bf02a42134",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4612ead1-d8f3-49da-86e5-b446be1a7387"
        },
        "item": {
          "id": "001d7e74-1311-4357-82e2-ba60837b3b8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4af7b360-f125-4e91-ad3f-ad96f412432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b5980a-9b52-465c-9439-1b1c45d1a4dc",
        "cursor": {
          "ref": "8c6f2712-d2ec-4e74-b3a8-ba29efdd85c9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a242279-bedc-49bf-9101-c4a9da80ab05"
        },
        "item": {
          "id": "d8b5980a-9b52-465c-9439-1b1c45d1a4dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9a042101-9d54-41cc-a3c8-f3e0aca8643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9728487d-9a92-4e62-9899-21955d5a8a06",
        "cursor": {
          "ref": "0129a19e-88da-4493-aad2-c8659f336118",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "95e3fb3d-6207-4b5c-956f-c299ff51d4cb"
        },
        "item": {
          "id": "9728487d-9a92-4e62-9899-21955d5a8a06",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0dcb6588-ad9b-4925-88e8-bd4dc357b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbcdf24-73a1-492a-82b0-f87545dec2f6",
        "cursor": {
          "ref": "a8a5e03d-af87-4992-a229-1b68b075928e",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "deb2a773-ea4f-4b96-a51b-6bb969a09f21"
        },
        "item": {
          "id": "adbcdf24-73a1-492a-82b0-f87545dec2f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "485293a6-9fcb-4e06-91a9-497ded5eff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fe551b-fcb8-43da-9866-8dcb80f9eb23",
        "cursor": {
          "ref": "b7b49ae1-6699-4d82-ae4e-202ac9e94ad3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b6beabb5-e883-4938-afea-2016706b65a9"
        },
        "item": {
          "id": "a6fe551b-fcb8-43da-9866-8dcb80f9eb23",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1947f44f-598d-4d21-b9c6-33075bcda20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a8bc71-f3fa-42ad-a93a-0e0471c53038",
        "cursor": {
          "ref": "7ad631e4-9854-4867-8303-5698d019cc00",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ad598932-ba39-4340-b98b-a691f322aede"
        },
        "item": {
          "id": "a0a8bc71-f3fa-42ad-a93a-0e0471c53038",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44b48437-4bed-491b-99e7-901a041a1b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4b6597-d3c9-45f9-a46b-428cf440cd6a",
        "cursor": {
          "ref": "35b815da-94b5-4808-84b7-b23f2a9b4bf1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2152b32c-81f9-4ee7-b527-1d06fb83fdf9"
        },
        "item": {
          "id": "be4b6597-d3c9-45f9-a46b-428cf440cd6a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6cede494-0f00-4e3f-9eb0-cec16a6d94ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57be57-5f77-4259-9d27-e0c7a76d03a3",
        "cursor": {
          "ref": "5f54589f-5c27-412e-a37b-0a2aa9445cd3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27126107-01c3-4934-88cc-cd568cf72171"
        },
        "item": {
          "id": "3f57be57-5f77-4259-9d27-e0c7a76d03a3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "342801cc-9eaf-42b1-a5e9-0687b5591f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69f127d-3cda-4d83-8f18-ed6a9a1209a6",
        "cursor": {
          "ref": "74a48ce4-c6c0-4e01-9271-394f7eaa8b58",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0e3998ac-f5a9-41e6-937d-f0a52f892727"
        },
        "item": {
          "id": "a69f127d-3cda-4d83-8f18-ed6a9a1209a6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4ac8bf6d-2d5f-4f58-baa7-84b710e71e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b0c68-d48f-46c8-a508-14ec736a5b68",
        "cursor": {
          "ref": "5bf1b17c-7455-4c1f-b317-0ee568fd4124",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b4c67f03-dfc5-4847-9894-24ed9407e235"
        },
        "item": {
          "id": "2b0b0c68-d48f-46c8-a508-14ec736a5b68",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "71973e16-b7cf-4e51-a7dc-ef33314ad79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845cf179-50c2-4160-8c38-a33f891b0e53",
        "cursor": {
          "ref": "6cb8c945-3b4e-48fc-9b9b-a0a19b772460",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0acccd24-4888-463f-9c2b-92373b1919de"
        },
        "item": {
          "id": "845cf179-50c2-4160-8c38-a33f891b0e53",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5772ecdd-9284-4c73-ae65-ee2069c07f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef35b7e-482c-487a-ab28-a9ad9ea13355",
        "cursor": {
          "ref": "a0ae9947-37a0-47fc-8cc5-ce27540b802d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "695bec4e-83f7-4b5f-bb15-4f9d4a133622"
        },
        "item": {
          "id": "5ef35b7e-482c-487a-ab28-a9ad9ea13355",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "64a46b7e-5516-4028-bccf-d92171f0010b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab2b226-9853-471e-b81c-67a39acc6d88",
        "cursor": {
          "ref": "b2aa2fb2-c076-447d-a11f-780f95fef7d0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1c96bf21-2659-49f2-b742-c1033bcfaec0"
        },
        "item": {
          "id": "cab2b226-9853-471e-b81c-67a39acc6d88",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ecb1b935-1910-4dff-a336-a7dcd4621efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6d0e0b-1a58-4031-92d4-d5d66c597508",
        "cursor": {
          "ref": "81453a35-6386-4c03-a292-db1ffddf67a0",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a98ae09f-3278-4a58-9c21-8893a326de65"
        },
        "item": {
          "id": "fa6d0e0b-1a58-4031-92d4-d5d66c597508",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9782ca49-d742-4228-8f95-61deef3d2ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece32056-e1f6-4104-9583-28334e542be9",
        "cursor": {
          "ref": "872f1f9b-2dfb-4581-b6f3-9168ebff4a5d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1fca2f8f-45a0-41cc-9f83-85eef02790ed"
        },
        "item": {
          "id": "ece32056-e1f6-4104-9583-28334e542be9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ca9b3e71-6f46-4cfb-b1ca-02e89ba5e758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444d8908-e2b2-4234-be06-b6f1b65ac535",
        "cursor": {
          "ref": "f95c62ed-ff99-490f-88d1-1a5f57b7fe5d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a6ee1be9-8713-4a13-a1eb-b491a9192ada"
        },
        "item": {
          "id": "444d8908-e2b2-4234-be06-b6f1b65ac535",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1b53dd2c-3acd-4155-ae78-b4590badfe4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6786e62-3193-47c9-879b-7507e709a837",
        "cursor": {
          "ref": "4bd0c9e3-02ad-45cb-b72e-94fb07116b90",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "64b1634a-b223-429f-9682-1bdefafa71dc"
        },
        "item": {
          "id": "e6786e62-3193-47c9-879b-7507e709a837",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "526f27af-fe13-43fd-be82-8f9d9b340f3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573abdb4-0cf9-425e-a285-609fc03df07b",
        "cursor": {
          "ref": "647a2ce3-ee1a-4296-aea9-178ecb75438b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b0c51db4-804e-4762-b6be-627c2f514cc8"
        },
        "item": {
          "id": "573abdb4-0cf9-425e-a285-609fc03df07b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "122e85e7-9f38-4699-aff1-158d5ef850f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573abdb4-0cf9-425e-a285-609fc03df07b",
        "cursor": {
          "ref": "647a2ce3-ee1a-4296-aea9-178ecb75438b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b0c51db4-804e-4762-b6be-627c2f514cc8"
        },
        "item": {
          "id": "573abdb4-0cf9-425e-a285-609fc03df07b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "122e85e7-9f38-4699-aff1-158d5ef850f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dc3918-1d6d-4da0-94f0-8889998880a6",
        "cursor": {
          "ref": "e7fa6954-3acd-4453-b686-9f5029c8cb0a",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e6dd7a48-360a-41cb-94b4-341731335844"
        },
        "item": {
          "id": "84dc3918-1d6d-4da0-94f0-8889998880a6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9402fc4b-9525-4e5f-9d52-e252116f4ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f374d-3e87-44a8-978f-fd7d797b8bf4",
        "cursor": {
          "ref": "9828d87f-56f2-4058-ab37-1dd3971d52c0",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0bad5745-c4ff-45b1-ae69-b29309927bd4"
        },
        "item": {
          "id": "b74f374d-3e87-44a8-978f-fd7d797b8bf4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "894b3d16-0095-4d5f-be98-ebf233830ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a48883-8679-421e-aca4-e3ffa3e8c4eb",
        "cursor": {
          "ref": "daa07ce0-b39b-427d-b985-c5452e4bd6ad",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3778c26a-8683-4e7c-b6ee-1d547946fc1c"
        },
        "item": {
          "id": "21a48883-8679-421e-aca4-e3ffa3e8c4eb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e4651d8e-33ae-4a76-be9b-9b4344d3a576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f825d5-0324-4c7a-8e5b-a1ed8e53f1bf",
        "cursor": {
          "ref": "b9d735a1-9c24-42af-ab6d-f1ad197a50e3",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e91bfe57-fda0-46c1-bd3c-193bbd344253"
        },
        "item": {
          "id": "12f825d5-0324-4c7a-8e5b-a1ed8e53f1bf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c09edb58-0266-43c3-8af0-3b92778039df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014538f1-2bcd-4751-9ff5-e86f58c501c0",
        "cursor": {
          "ref": "552af844-60c8-4a8e-85fe-bc311817c823",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c74ed83c-9855-42e3-885e-a00e9a53388d"
        },
        "item": {
          "id": "014538f1-2bcd-4751-9ff5-e86f58c501c0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e437a556-e2fa-4aa0-a0f7-d319ada5bf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b75d26e-a313-4cc3-9dd6-0d867a86b255",
        "cursor": {
          "ref": "f906e2eb-b783-4fcf-9a88-afc7997ec431",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef436f0c-c681-4715-bd9a-ce4b11967949"
        },
        "item": {
          "id": "5b75d26e-a313-4cc3-9dd6-0d867a86b255",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "84a47136-5631-4067-a3dc-bd39b48472d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8bf98b-1098-47ff-a18f-79dbde91c83a",
        "cursor": {
          "ref": "2d71fde1-4d08-4e3f-8c62-5b3886455c42",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5da8759-e1b0-413c-a643-10a0dcb2748d"
        },
        "item": {
          "id": "8e8bf98b-1098-47ff-a18f-79dbde91c83a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "288977e9-e669-4f4f-9d77-dae18b68fcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18349b9b-8012-4158-98ca-13ed6ae00fe6",
        "cursor": {
          "ref": "df245327-f662-445b-aa4e-03a3a3f6dbaa",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9c7816d3-9b42-4183-901b-5277c9830dd3"
        },
        "item": {
          "id": "18349b9b-8012-4158-98ca-13ed6ae00fe6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e833a114-c860-4581-9f84-3530d7188fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adce50d2-8d78-4a4b-af47-b9d383745466",
        "cursor": {
          "ref": "a5b430c6-e801-4c49-9204-407f24dcdfd3",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55264e6b-8eed-4130-ac6d-15553cf35c9b"
        },
        "item": {
          "id": "adce50d2-8d78-4a4b-af47-b9d383745466",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ca9c0366-56cb-4b25-be13-a73711911803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3390635-be16-4375-b2e3-49212749e929",
        "cursor": {
          "ref": "4ebac550-1094-42c1-917a-2b6941bd6cc1",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b8fdf856-333b-4b05-a8c9-c9b8611fb1fc"
        },
        "item": {
          "id": "c3390635-be16-4375-b2e3-49212749e929",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c6c147b8-9867-4a61-af65-fc886701c9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c607ee5-6684-40b5-be2e-57779659e9cc",
        "cursor": {
          "ref": "e3e394ff-cf14-4aba-96ea-4e884ea44ce9",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "264e50d5-bd95-42e7-a7ba-8f6533d81910"
        },
        "item": {
          "id": "5c607ee5-6684-40b5-be2e-57779659e9cc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "121e246b-a790-4146-8634-5b0c8a538f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20e14a8-64e7-41e4-9812-dbeb2a727685",
        "cursor": {
          "ref": "2f495d0c-5e01-4975-a643-9f2cacb80c89",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d6332c32-2f63-45ae-8845-3866e422887e"
        },
        "item": {
          "id": "b20e14a8-64e7-41e4-9812-dbeb2a727685",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2086f502-61a5-4b73-94a9-113824d3d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebafbfde-1fd3-4bbf-9233-d3a52f9bbb76",
        "cursor": {
          "ref": "0eb3bf3c-9fbb-4b0e-8674-2f77f436c2e0",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ea09603e-a280-431c-991a-b3558a7428f8"
        },
        "item": {
          "id": "ebafbfde-1fd3-4bbf-9233-d3a52f9bbb76",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7004b774-3634-45e4-a4dd-fde264defdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bbd1a8-ad06-4ed7-93eb-dc028bc7727a",
        "cursor": {
          "ref": "8180aad6-2817-44c6-9870-251504820e94",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a8ddd76e-031c-401b-9dc1-b06df83fe145"
        },
        "item": {
          "id": "02bbd1a8-ad06-4ed7-93eb-dc028bc7727a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9f8a19a9-68c1-4420-ada2-46274af9dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2e6521-7f26-4961-9c54-160ef4e439a6",
        "cursor": {
          "ref": "2a32619a-1e6c-4cc8-9746-d89870699513",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b73b224c-475e-45da-8411-bdc0aa23a71f"
        },
        "item": {
          "id": "5c2e6521-7f26-4961-9c54-160ef4e439a6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d119f809-af89-4313-94ca-e2dd3205b7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74c0a7-1c14-4b55-bdd2-d8b7e96362fe",
        "cursor": {
          "ref": "4c94afa9-431c-49a4-b44a-35eb0d5f9c2b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "040715c8-6878-498d-a3e0-c2e594c7632b"
        },
        "item": {
          "id": "6e74c0a7-1c14-4b55-bdd2-d8b7e96362fe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c2f8020b-9986-4040-ae73-64a6bc6af56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea46c6ca-5521-4b6b-a4b8-3c428fefc1fe",
        "cursor": {
          "ref": "9ec8bf53-5c21-4ca2-a1f1-98061f45a1d8",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7bdb3a60-8c8b-4f50-9f5b-91929ea36fdc"
        },
        "item": {
          "id": "ea46c6ca-5521-4b6b-a4b8-3c428fefc1fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3cd5bbea-7664-4d08-a2ec-a15102d37bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863b969-bb12-4ba7-bd02-37dc7bbd1dc5",
        "cursor": {
          "ref": "8737c075-1b68-4f08-84c2-d9cbc34d97aa",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "47097ca6-88db-479a-89a7-b3e2d362ac02"
        },
        "item": {
          "id": "c863b969-bb12-4ba7-bd02-37dc7bbd1dc5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4e0d3389-dda2-423b-879e-c0040965f3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f15ed66-a1d2-4e6d-8300-491895bf99b3",
        "cursor": {
          "ref": "6229aa84-2889-4cd1-8d5d-256934b1aead",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "256e7cc9-c152-4367-86c6-99b02e6829d4"
        },
        "item": {
          "id": "6f15ed66-a1d2-4e6d-8300-491895bf99b3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3b91f8c7-47c8-4aa0-b395-35611604a53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008484ea-f751-4a21-9ac6-ec72dd25b4e9",
        "cursor": {
          "ref": "bd5bd391-4d97-40ec-9553-f2c0b15e2439",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b9b550c8-93e6-483c-a773-728461df5aef"
        },
        "item": {
          "id": "008484ea-f751-4a21-9ac6-ec72dd25b4e9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "87ebc454-289b-4cc3-86d5-6cbfd2454996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b4405a-bcfa-45cf-aa0b-72d23f138cc3",
        "cursor": {
          "ref": "ebd1acf8-e590-42fa-babf-21ae52c241eb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f942393f-6757-48ce-ad0b-67a1941da7c3"
        },
        "item": {
          "id": "d6b4405a-bcfa-45cf-aa0b-72d23f138cc3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc754913-e219-4c45-9f9e-dba45e12ee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148c198b-cf56-4937-b8fe-be2d4c4af793",
        "cursor": {
          "ref": "bfb09e68-8909-42ad-9317-2cb90d93f6d6",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "92393b8b-7048-4064-943a-987468a82aae"
        },
        "item": {
          "id": "148c198b-cf56-4937-b8fe-be2d4c4af793",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "be117590-d030-49c1-bced-cc5900ddb72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee558506-4c1f-47ae-84ff-7008c5784436",
        "cursor": {
          "ref": "d44cbaf7-d8da-43e6-a8b6-38e6eb33ec21",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "564201bc-0272-4701-9ec2-45b74da46454"
        },
        "item": {
          "id": "ee558506-4c1f-47ae-84ff-7008c5784436",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2b0cbdff-70f5-44d5-a01f-3c00b39db3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47146a28-2ae5-4ecd-94f5-83d9c0798d8f",
        "cursor": {
          "ref": "b378afaf-d9c1-43ba-8d6f-3f8f458acbd0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "840feb8d-0fc7-4afc-a326-d9d20242920c"
        },
        "item": {
          "id": "47146a28-2ae5-4ecd-94f5-83d9c0798d8f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "841552ea-ebc6-4c66-9ec6-7e5b4c23e71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6004e5c-43c6-4200-9ab0-c55ae1ee10b1",
        "cursor": {
          "ref": "23037cf4-7f06-454d-b11d-6819cfb67e65",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2547f50-9118-48fe-b824-10f2a0622ce7"
        },
        "item": {
          "id": "e6004e5c-43c6-4200-9ab0-c55ae1ee10b1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d23da91c-9a34-48f5-b53f-5a25b17494ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f4cb9-0b96-482d-9d31-9426486a1281",
        "cursor": {
          "ref": "f8917a90-1765-4394-865d-f56e5d96bc14",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8f1b45f5-9261-4c34-88d3-8d3d778df1c1"
        },
        "item": {
          "id": "cd0f4cb9-0b96-482d-9d31-9426486a1281",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7ef9fc9a-d575-4217-abcb-c1c577dc0c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aa9452-bbce-4116-9f7a-f99a67532eb1",
        "cursor": {
          "ref": "8e7d95fc-e10a-4906-a7e0-51a9e70a0796",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af089563-f581-4be7-99ad-35a135720801"
        },
        "item": {
          "id": "44aa9452-bbce-4116-9f7a-f99a67532eb1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5be7419b-5db6-4fc8-b83e-87f95659529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe4df4f-3313-44c5-af86-ab9ce4b3188d",
        "cursor": {
          "ref": "e860eea9-8950-4096-8530-c0274600516e",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "369f294a-272c-44f1-ade0-24a3e33dc4b4"
        },
        "item": {
          "id": "ffe4df4f-3313-44c5-af86-ab9ce4b3188d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ccce9208-2c18-4296-b07b-afa0421d62f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd90e48-c661-449f-8486-a5a2bda4ffda",
        "cursor": {
          "ref": "1df98ead-5a15-4f3f-878b-e5f43a75cfaa",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a4e89773-15f2-4acc-9142-7a91dd21bbf9"
        },
        "item": {
          "id": "2fd90e48-c661-449f-8486-a5a2bda4ffda",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1cff9471-48fd-4791-8444-a71d818997a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf556b-18db-4a34-9222-ef597e5580fb",
        "cursor": {
          "ref": "4fd3c77c-ae43-4394-ab2b-ff0d9d914573",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e6d25e5d-3cc3-4671-a02e-57700a56bc0c"
        },
        "item": {
          "id": "4fbf556b-18db-4a34-9222-ef597e5580fb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "486ddd79-6693-403e-b76f-0ee839eb8a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9972e6f0-7e4b-4f38-8a24-e1477b68aadb",
        "cursor": {
          "ref": "92ab507f-405a-4f94-8254-c649852669e4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "97916e70-7201-45de-8c94-2c2d66ffe530"
        },
        "item": {
          "id": "9972e6f0-7e4b-4f38-8a24-e1477b68aadb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5bfd9266-522b-4ced-9206-1a1129775368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668bc5ac-c76f-4f55-b0e1-c9335dac4657",
        "cursor": {
          "ref": "9d19ab6b-1e0a-420c-aafc-64b998c1ae12",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9edfdab-2b1e-4b5e-86de-fa69370e1755"
        },
        "item": {
          "id": "668bc5ac-c76f-4f55-b0e1-c9335dac4657",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "284c8a93-f3a2-45df-99f1-8215698b091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfac9fe-d5d5-43f0-b23c-02a657dfce1f",
        "cursor": {
          "ref": "f3a8ac48-65dc-4dcc-8041-2fdaa7d53788",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0b2acb02-a579-4b21-b488-6e439168c778"
        },
        "item": {
          "id": "edfac9fe-d5d5-43f0-b23c-02a657dfce1f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e52af2e3-6f82-4600-af39-733255292eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f61fca-d315-4dc8-89f3-139b650d7f74",
        "cursor": {
          "ref": "b485b6bb-3d42-46ad-8cf5-e640d31a7838",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cd9edd0a-f76c-477f-8463-605bbe1edf58"
        },
        "item": {
          "id": "c2f61fca-d315-4dc8-89f3-139b650d7f74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fab38567-bc1e-48c6-ade1-1a8010f4289e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4cdcd0-0fa7-4e7f-96e6-8249a16d27bd",
        "cursor": {
          "ref": "9b8823c6-b151-48a7-8704-a90b62410ef1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b4cab60e-f97d-4296-871b-f3480e41842f"
        },
        "item": {
          "id": "3b4cdcd0-0fa7-4e7f-96e6-8249a16d27bd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eea8d7df-f1f0-4d55-91bf-19bbb48887a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb6cf44-3e32-4751-a84d-efc1ade02123",
        "cursor": {
          "ref": "2d2148d2-808b-427f-912b-ebbfb142effb",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ed2a2d57-6747-476c-9d72-238de3b91b49"
        },
        "item": {
          "id": "9eb6cf44-3e32-4751-a84d-efc1ade02123",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "db8d75a0-0449-40b8-bd3d-39a4ce31bbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe813c8-4337-401b-b871-8eaa95d64f15",
        "cursor": {
          "ref": "1448fd72-f9db-4879-a20b-8638baa63854",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9addf56-9384-4979-86e3-5494d7f8cb28"
        },
        "item": {
          "id": "bbe813c8-4337-401b-b871-8eaa95d64f15",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b952ac0f-c224-4181-b96f-31be449e18db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c0557-3546-4abf-b3ac-06321f7fab17",
        "cursor": {
          "ref": "4eefbf08-0de0-4c7b-98f4-3b1691d59a76",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8fa0cd66-6b90-46a3-8114-671df3b6b42d"
        },
        "item": {
          "id": "361c0557-3546-4abf-b3ac-06321f7fab17",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "21a76fca-6ca8-49d1-88a3-ace0e36fdcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e221098d-f88f-4aa7-b98a-91a7d1f30335",
        "cursor": {
          "ref": "705c2bf6-3721-4b21-9934-7c3f73cd5b0e",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1e87a494-bb30-43b8-a4f1-6a98edb06cd6"
        },
        "item": {
          "id": "e221098d-f88f-4aa7-b98a-91a7d1f30335",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7275faaf-4b4c-42b8-951f-07bb5d66ff62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242d2725-c95c-45a6-94b7-ab7875f8634c",
        "cursor": {
          "ref": "e41d84c7-3fc8-47d9-ad9a-396b41f4f594",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b7269d5-47bb-4e10-8462-1969cc95f0fe"
        },
        "item": {
          "id": "242d2725-c95c-45a6-94b7-ab7875f8634c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "237217c0-f07b-482a-b7b0-e8ce027a1204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1d7fca-57c0-4d37-8987-fc98cf50a168",
        "cursor": {
          "ref": "2f2d28db-bcbf-423a-a239-d98329a948ef",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3f1d941c-17d5-48c7-b36b-6994808e4a4e"
        },
        "item": {
          "id": "ae1d7fca-57c0-4d37-8987-fc98cf50a168",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f94d52c3-c5b9-4dd8-9964-62ec55eab05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84389ce-813c-474a-85a5-2595a8a3bb7c",
        "cursor": {
          "ref": "fa51d57a-d5c1-43c1-a0ac-3a3e8ac422eb",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "559f015c-6366-431f-b485-94c8e589769e"
        },
        "item": {
          "id": "f84389ce-813c-474a-85a5-2595a8a3bb7c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d644c83a-f111-4e2a-9585-a26384731889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a626e-2074-4349-a1af-6050c7482d04",
        "cursor": {
          "ref": "54ef85c7-095e-41c0-a95f-97cae61207df",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5e47f927-95dc-48bc-a36b-b6b520d0ef46"
        },
        "item": {
          "id": "b80a626e-2074-4349-a1af-6050c7482d04",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2777a4fd-b601-4b5a-b7a1-7b3310df5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b2216d-abd4-42b1-9890-a1e999b86d90",
        "cursor": {
          "ref": "ff11a9ab-1651-46f2-aae6-a82d9c18980a",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "76c743a2-0249-494f-90d8-317383225b4c"
        },
        "item": {
          "id": "f9b2216d-abd4-42b1-9890-a1e999b86d90",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ace50f9b-bd6b-45be-b381-1a3d3e2e8fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013eaa32-7d96-4a65-9b89-5e317928bfef",
        "cursor": {
          "ref": "8d4a86ae-fda9-4864-b426-8495dd512fb2",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "97df1725-fc23-4920-b85b-e7003be23b12"
        },
        "item": {
          "id": "013eaa32-7d96-4a65-9b89-5e317928bfef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "762b127a-6d44-4566-bd55-0ec7fafdec01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c540eaba-eed9-4fce-8e60-fdcbe75560b6",
        "cursor": {
          "ref": "20e1f7ed-60ad-489c-8ec0-abcbd4f7df64",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d66e117e-9f38-4798-80c5-fe9ca5f3c015"
        },
        "item": {
          "id": "c540eaba-eed9-4fce-8e60-fdcbe75560b6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "38c463a7-08f6-4967-bfbf-5a48c0de3508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbdcb6-aecb-43e1-b746-8d2462b8c494",
        "cursor": {
          "ref": "90782c38-2d5c-4614-bba3-027c8b6ccc53",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "072bb691-76c0-43d8-baa5-56a3b47c3565"
        },
        "item": {
          "id": "c4fbdcb6-aecb-43e1-b746-8d2462b8c494",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "570b3469-c993-4bd2-b256-4f4b2ae4650f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec37439-0524-46ac-9a6b-1b62bd8faa98",
        "cursor": {
          "ref": "4b73608f-b451-426d-bd17-1467703db290",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb33132b-baa1-4fee-9cd7-eebf57798254"
        },
        "item": {
          "id": "eec37439-0524-46ac-9a6b-1b62bd8faa98",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1222b89c-1967-4e9f-ab27-e031e1604dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0693d-fcf1-4275-b7e1-b79a91e4c47e",
        "cursor": {
          "ref": "f5d388e6-9481-4759-8e13-4874921d006d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d3a09bc7-d6f8-4e51-b556-16cc58bf1e1f"
        },
        "item": {
          "id": "d4d0693d-fcf1-4275-b7e1-b79a91e4c47e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3648c12a-0c3a-492a-8959-dcc51bf9a316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f5b6a-d359-4227-800c-95f1c9ff8d6f",
        "cursor": {
          "ref": "ffc049fb-c32e-4a53-86b7-7cb0c6c21917",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c615da66-f612-4283-9323-296d4c2ad2b9"
        },
        "item": {
          "id": "be9f5b6a-d359-4227-800c-95f1c9ff8d6f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "efcb1d38-bcbc-498a-bd15-d43af75d50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132799ba-d4e3-48c5-b4cb-d126141ed823",
        "cursor": {
          "ref": "8800da51-f635-4cb9-9826-ad4b66eefbe4",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "30968dc3-89a8-4e73-b35f-fd5614507325"
        },
        "item": {
          "id": "132799ba-d4e3-48c5-b4cb-d126141ed823",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4a3122a8-c87b-4371-a960-6012d2c7440b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93190a8f-a787-4859-8efa-e62dedfd5a84",
        "cursor": {
          "ref": "0c259774-6439-4c57-9971-3c381d876176",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1c0577f5-3bcb-4813-b306-38efd6383c5c"
        },
        "item": {
          "id": "93190a8f-a787-4859-8efa-e62dedfd5a84",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3e5a5f20-e19e-4162-9164-da2e14e8460b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26825ccb-f080-4b5a-9884-27ee4ef84b05",
        "cursor": {
          "ref": "1d90711b-a8bb-4576-bfdd-23e15ecc1dd6",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d1c31859-d2fe-44b9-8dfd-505f976bdec6"
        },
        "item": {
          "id": "26825ccb-f080-4b5a-9884-27ee4ef84b05",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c3c44820-aa39-4c15-82de-cc47ba08aa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad47e4ae-a80e-4bc9-b7c5-5f59355f8e1d",
        "cursor": {
          "ref": "decaaf16-4baf-4843-b64d-e5c72f5e14ec",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "258d6138-a1ca-4b33-88ab-b3e67e766c18"
        },
        "item": {
          "id": "ad47e4ae-a80e-4bc9-b7c5-5f59355f8e1d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1e3f3f9-d37a-4cc1-8f33-6ba7f406af7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac92116-fa55-4a02-a255-a668b33493c8",
        "cursor": {
          "ref": "99b810e3-deab-4f01-8fc1-7755f2333c26",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "47b83db0-70f4-4205-a8d6-440ecce528ae"
        },
        "item": {
          "id": "cac92116-fa55-4a02-a255-a668b33493c8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aee9c565-8e7f-415d-ae4f-0643c4ef7bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c55352-dd03-48c7-a0a8-54e2b29f06ac",
        "cursor": {
          "ref": "318cf455-6fba-4c93-a528-c9eebcfc6b91",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a1e425be-45c4-4dda-95d1-c8c4371c5aac"
        },
        "item": {
          "id": "26c55352-dd03-48c7-a0a8-54e2b29f06ac",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "37819aa0-ee58-4fa9-b4d0-aad03053586f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e145ad8-4135-4929-9d8e-2d8def411563",
        "cursor": {
          "ref": "b04f77de-5457-4304-bbc1-9128e5355c4e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5f540834-f846-4475-8a3d-9ac6ec0297f4"
        },
        "item": {
          "id": "0e145ad8-4135-4929-9d8e-2d8def411563",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a0177447-d634-464f-852e-0237ef1968fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948423d0-5dff-4899-883e-1de763c90cb3",
        "cursor": {
          "ref": "1ba70f62-c842-408c-b3da-5037b019cad7",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "480434c5-a258-469b-9a9e-8d830fe8636a"
        },
        "item": {
          "id": "948423d0-5dff-4899-883e-1de763c90cb3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "da4357b6-b552-4973-a91e-da2098f030e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2a1293-5af2-49e7-b1c2-6ccd57e9b663",
        "cursor": {
          "ref": "084d40fb-588c-4c22-a2c9-dc7f71dd2f2f",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a22c5da8-085c-4352-bc7a-565f78229e7a"
        },
        "item": {
          "id": "ff2a1293-5af2-49e7-b1c2-6ccd57e9b663",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "393dd1c5-3845-4f0e-9c48-653b73bc5191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b9873f-402b-4e55-88ba-08372d4c2f86",
        "cursor": {
          "ref": "2cfc70df-306f-48c9-a71b-a662046c3e7a",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c54beb2b-b86d-42ae-af2f-04d8555356a8"
        },
        "item": {
          "id": "e2b9873f-402b-4e55-88ba-08372d4c2f86",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d2542540-1fb8-43a4-ab72-b41a8e263f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c370bbe0-5616-44c3-b624-fdf6dede2cc7",
        "cursor": {
          "ref": "47118cfc-b870-4fce-a301-42cd8c5f6b1f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c1e60399-86af-4f77-8f97-08b0a9821acb"
        },
        "item": {
          "id": "c370bbe0-5616-44c3-b624-fdf6dede2cc7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb2a8de6-bb83-4642-b69a-63ebc66f90fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437cf38-cb98-4474-b57a-6de7096eda72",
        "cursor": {
          "ref": "9e4cdd1a-cec1-4c60-a7fb-eefdb8a98916",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f5b8f667-5290-42ff-bac2-1fe66e3b2f61"
        },
        "item": {
          "id": "4437cf38-cb98-4474-b57a-6de7096eda72",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "278c57b6-60bc-4f17-8182-89ae76e77a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f386b75d-5708-40da-9fd8-be33de869774",
        "cursor": {
          "ref": "79a3e427-296c-4dad-8062-c016a88b72ab",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dc08fbaf-b6d1-4b02-9a02-58cf6f4051ef"
        },
        "item": {
          "id": "f386b75d-5708-40da-9fd8-be33de869774",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e794785f-6d63-427a-85e0-7fab3483afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a4b3ce-e198-404e-a9b2-20475d87bf1a",
        "cursor": {
          "ref": "a9c68e90-5771-4aa1-9cef-f72961091e37",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5de6c4ad-99ef-4fae-87fc-1af14480a5e2"
        },
        "item": {
          "id": "d0a4b3ce-e198-404e-a9b2-20475d87bf1a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7656fad4-f784-48d2-afd2-ff5e27658315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11f2dc-b122-4135-a4ec-0ef871774b74",
        "cursor": {
          "ref": "44659acf-64b2-49ce-a20d-08f9f1920e94",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "71674ff2-1eba-46a5-855a-1b256f07658a"
        },
        "item": {
          "id": "ea11f2dc-b122-4135-a4ec-0ef871774b74",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "26c36498-30a8-4e39-bef3-385abd4ddc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6528f4-075a-4b46-825b-fbdcc08f202d",
        "cursor": {
          "ref": "fb72ca2e-a24e-488e-9a49-ec9d4565551b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6ef068f3-5db0-44f6-8c53-d09de79fcc70"
        },
        "item": {
          "id": "0c6528f4-075a-4b46-825b-fbdcc08f202d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "79abe96d-cd10-46b0-a38a-a2060e1ecb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df202d8-49b7-43ee-92dc-8038f8c44e66",
        "cursor": {
          "ref": "de51f481-4035-472c-8707-c2db1482290c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "be899e8b-6646-4d99-9511-33a7f87b45af"
        },
        "item": {
          "id": "4df202d8-49b7-43ee-92dc-8038f8c44e66",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a6d6de89-9965-4bda-b7e3-05571c56fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef3396c-7669-430a-bf8d-437e82fcaacc",
        "cursor": {
          "ref": "27e2a407-2e7c-4a69-98dc-badd29f428dc",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0eb5cd7c-77ec-48cd-a380-e1c52f1bec5b"
        },
        "item": {
          "id": "eef3396c-7669-430a-bf8d-437e82fcaacc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "11073c56-0ed6-403e-8f21-309ba9cec174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf600f8a-d84c-4349-98ce-c1fb95065b65",
        "cursor": {
          "ref": "576857c6-381b-4555-a968-3145acc2514c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d1209616-7165-4802-a43f-d9fa71e00a5b"
        },
        "item": {
          "id": "bf600f8a-d84c-4349-98ce-c1fb95065b65",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1fda7a48-8d93-414a-842c-484efe07798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f69fdca-920b-4302-95de-989af3a3670c",
        "cursor": {
          "ref": "c87dc56c-129d-45bb-8ef7-4bf4c4173626",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2cafee71-a331-4a5f-9358-1630299f3870"
        },
        "item": {
          "id": "1f69fdca-920b-4302-95de-989af3a3670c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fb1829c2-68d0-4d22-abf8-d54e58176b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7bcbb5-e1be-48a6-adcd-61408b89f969",
        "cursor": {
          "ref": "8deaf340-2598-4e8f-b873-6cdbdcfa76df",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e3184071-abbb-4de4-94ea-15ebd72f4547"
        },
        "item": {
          "id": "2c7bcbb5-e1be-48a6-adcd-61408b89f969",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a3a10caf-fb5d-4129-8366-058eecbe5519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439ad9d0-3c69-43f3-9193-75957ebb7075",
        "cursor": {
          "ref": "c7da7c89-a1d4-4eed-b95b-6f8be3878096",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cf28aa91-fd54-4522-872f-9a69c71a025c"
        },
        "item": {
          "id": "439ad9d0-3c69-43f3-9193-75957ebb7075",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "554e53a9-6ff9-4599-8013-3777f2e475de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7091c57-8658-49ca-b639-ddbaa069d54d",
        "cursor": {
          "ref": "d2283a7e-5a3a-44f3-8bbf-b6f3994bffbb",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8c55542b-8a6f-45d2-b16d-017c5e281cd8"
        },
        "item": {
          "id": "b7091c57-8658-49ca-b639-ddbaa069d54d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b385a827-a292-4300-9349-b7d4dc0e3449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc9792c-64a0-4710-9709-b9dbd6ae3935",
        "cursor": {
          "ref": "9569f2b0-729b-43c0-907a-d04eccbb42c2",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4d5ee441-6558-46d2-9c39-8aa0ce3b939b"
        },
        "item": {
          "id": "9dc9792c-64a0-4710-9709-b9dbd6ae3935",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2fe90109-9780-4ccb-a394-38633186f6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f58704-c500-4c69-96b1-3b1bbdf894db",
        "cursor": {
          "ref": "606f1c3c-0c04-4512-93a4-cd0500cdec39",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1da2b8f7-da40-4801-bb58-fe89d619736b"
        },
        "item": {
          "id": "67f58704-c500-4c69-96b1-3b1bbdf894db",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0d0f7d6b-6ff7-47d6-aa35-0d39569fb568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619e9eb1-a293-486c-a3ce-e94cf3bf3aff",
        "cursor": {
          "ref": "7f8e502f-84ab-4fd4-bbcf-db193c83035e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d3c42453-e6cc-4f58-ae46-60c3489a3c91"
        },
        "item": {
          "id": "619e9eb1-a293-486c-a3ce-e94cf3bf3aff",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2e5d9e4e-c20d-401d-97b1-822bc2292267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a236b3a-f879-462a-a7c2-1b4aee246e71",
        "cursor": {
          "ref": "8ca31f36-1634-4359-8052-f761439f2383",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf52c079-9055-413b-bfff-47b3a0a83a0f"
        },
        "item": {
          "id": "7a236b3a-f879-462a-a7c2-1b4aee246e71",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "628afe47-758c-4f86-b12e-8068f215ac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e6736c-960e-4678-a93c-e02ec55d4bb7",
        "cursor": {
          "ref": "dee4b43d-e429-426d-9dcc-5f7dcce803be",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "04dbc807-daf0-43fd-aaa8-b05a2397fa24"
        },
        "item": {
          "id": "e1e6736c-960e-4678-a93c-e02ec55d4bb7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8c4c049e-1663-4986-bd23-bf09f4fadb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b92157e-aa0d-449d-988b-d399606a6d44",
        "cursor": {
          "ref": "af6b3dfa-6467-4ef7-9948-09f4bf2e095f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "44297959-be55-4a65-8855-0b3d4ec2d262"
        },
        "item": {
          "id": "6b92157e-aa0d-449d-988b-d399606a6d44",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "973773c9-6f38-4527-99c9-a20709a186fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab42f760-6e1e-46ab-adcc-a746fd055273",
        "cursor": {
          "ref": "bf0e0c70-3ecb-4c85-b868-1a3c892637bb",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "527e5372-b992-4763-898e-1d55862af402"
        },
        "item": {
          "id": "ab42f760-6e1e-46ab-adcc-a746fd055273",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "587bb198-9a41-4a9d-b809-b38b596694c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c18c99-d76e-49b0-8e03-4e6df13dd194",
        "cursor": {
          "ref": "b5e20584-074a-4d8c-9d96-92f4c3de0fde",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f04ffe40-214f-48d1-a9ae-7b0770062e70"
        },
        "item": {
          "id": "a3c18c99-d76e-49b0-8e03-4e6df13dd194",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e143d170-bf7a-4666-9965-6e30a37fe7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f71e4-984e-4ad4-a4f6-1581ab2e8781",
        "cursor": {
          "ref": "d4e00308-0632-44b4-91e9-f06c2328621c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5806866b-3ab5-495e-85f1-bdd99c8b5cef"
        },
        "item": {
          "id": "d10f71e4-984e-4ad4-a4f6-1581ab2e8781",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2b66c54a-0931-4e09-8eed-bdc026cb57ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af753e5-91f2-47da-a6ce-177592bcc20b",
        "cursor": {
          "ref": "80541b54-a90e-4d7b-b7a8-061da68b899f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d364f28e-f735-4471-8335-c7da6ac5fbc4"
        },
        "item": {
          "id": "8af753e5-91f2-47da-a6ce-177592bcc20b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f501d45-30fc-42cd-80ea-ac1ecbe86630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cdd200-9c58-4172-a78f-b32ac82cec7c",
        "cursor": {
          "ref": "5df2d74c-ee33-49a2-9e55-132408e668ad",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8fc89e60-0007-432b-ae50-2ab4c89b8451"
        },
        "item": {
          "id": "c7cdd200-9c58-4172-a78f-b32ac82cec7c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b87e3fa7-797b-4ba6-8c4f-6f5ef77b0711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb395532-09e3-4a05-b0eb-7e4f98d8ab3d",
        "cursor": {
          "ref": "b2b2689e-4573-43a6-989f-edc6ca3bd389",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce990fa9-db30-441f-b8a7-4ded30f97b06"
        },
        "item": {
          "id": "fb395532-09e3-4a05-b0eb-7e4f98d8ab3d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ef4592f-e39d-4fff-8f08-bc3244972f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf0d53c-2c0f-474a-9a08-1d18d2f9de04",
        "cursor": {
          "ref": "11a315a0-42b1-48ae-a8b8-70997558770d",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "216a0f3a-5526-4f3e-8ad7-4cd39fdd0a4b"
        },
        "item": {
          "id": "3cf0d53c-2c0f-474a-9a08-1d18d2f9de04",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6e719b89-df16-4d93-abfa-137907f00e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e44379-2332-4a27-9795-0146daaada26",
        "cursor": {
          "ref": "85a9ca87-033b-4d1e-958b-16888adced1b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3a2a815-29b2-4aad-b91d-9702b06389b9"
        },
        "item": {
          "id": "42e44379-2332-4a27-9795-0146daaada26",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ad5d6cb7-b0b1-493c-865b-116b5aa478e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b58c50-b48a-47d4-a57f-b638d5b675ef",
        "cursor": {
          "ref": "4371ae37-afc2-4701-9daf-07ea2d9cfa64",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "84f73c95-bc1a-4c86-ba38-6cad6d260f14"
        },
        "item": {
          "id": "82b58c50-b48a-47d4-a57f-b638d5b675ef",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f5555c6d-dbce-4166-9c8e-0d5f21758d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2616e6b-e2a4-4b61-a9d5-33bd15c5e271",
        "cursor": {
          "ref": "49663a6e-336c-414b-942b-0f52b052b059",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "087abd78-4890-4bf3-9d37-72dfccf811bd"
        },
        "item": {
          "id": "d2616e6b-e2a4-4b61-a9d5-33bd15c5e271",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "45f91cbb-d21b-412f-b881-de660ea2e099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b8961-6a25-4a75-99d7-a2d593f70231",
        "cursor": {
          "ref": "10c60393-89fd-4d9f-968f-501c0fbda57a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c91fd6c5-30da-4da2-b0fd-22325e9e0ce5"
        },
        "item": {
          "id": "fa1b8961-6a25-4a75-99d7-a2d593f70231",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "19dc4530-cc47-45c5-952d-0ad0bd15735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb3119b-1cbd-4c4e-a9d7-68d1a3b8b27f",
        "cursor": {
          "ref": "150bb961-6c82-496d-905e-0702a133c29c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7e4a7df1-f1c2-41cb-ae78-5030ea8b3040"
        },
        "item": {
          "id": "cfb3119b-1cbd-4c4e-a9d7-68d1a3b8b27f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1789fe21-080f-417b-a092-21b9fee9256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae352c-389a-4859-823c-2413d1bcc519",
        "cursor": {
          "ref": "eec9f17a-148a-4799-9445-1c2510457ed3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "086d80a1-a703-4071-ac50-21e59c86f4ef"
        },
        "item": {
          "id": "13ae352c-389a-4859-823c-2413d1bcc519",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bc8356da-f4b7-4beb-8989-61db73315713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0417384-76f9-41fe-add3-7936496b6d2f",
        "cursor": {
          "ref": "18223f10-4e74-474a-b617-5cd83bf5036d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "143f9c38-b355-4f5c-9710-9460d48ce748"
        },
        "item": {
          "id": "f0417384-76f9-41fe-add3-7936496b6d2f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "aa239fba-fe9b-4a4d-82d1-2be2a1735cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a28903-8d92-4a7a-a074-9d0c21e40a48",
        "cursor": {
          "ref": "392f93c7-e615-43ad-b4f6-4a796ed24726",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7264a87c-92c2-4b46-a7b8-6c992683603e"
        },
        "item": {
          "id": "e8a28903-8d92-4a7a-a074-9d0c21e40a48",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8624d1a4-6d92-4ab7-81ac-4d7561683b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c4b56a-9c72-4de2-ad2e-704415b59703",
        "cursor": {
          "ref": "e7cf42d2-a95d-455d-a89d-ccb2eded0704",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9352212d-1790-46e5-8717-28de70dc1714"
        },
        "item": {
          "id": "86c4b56a-9c72-4de2-ad2e-704415b59703",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e906a518-7df4-4dc2-ad5b-f68c85d481eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a60c31-60e4-4e20-afdd-adc0c1442dd2",
        "cursor": {
          "ref": "c14d9359-ba7b-40a9-a21f-f43a3bbba3eb",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b91d4b5a-945a-43aa-8509-79e8f575e5f0"
        },
        "item": {
          "id": "84a60c31-60e4-4e20-afdd-adc0c1442dd2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "68fb410b-6b6f-434b-993f-91cca8e21537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaa268a-5606-4d98-9279-49561170630c",
        "cursor": {
          "ref": "9ed6cd26-2870-4d5f-8f31-d94fd6d67d0b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "34da7bd7-6c10-472a-96db-cfe51eff2a05"
        },
        "item": {
          "id": "edaa268a-5606-4d98-9279-49561170630c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "792ca895-0633-49fc-8d49-ed3bd4550bf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449677d-e02d-483b-82cb-f6dd83d95fdb",
        "cursor": {
          "ref": "5cdebc2f-d3e1-4e12-a036-ccc6d0a1c7db",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40a5cbd5-713b-40f9-9851-32671ee2b0ee"
        },
        "item": {
          "id": "7449677d-e02d-483b-82cb-f6dd83d95fdb",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d8655aac-596b-46d4-87c5-6d6b2118ee69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ff843-2555-4c99-8d2f-f5c7ecd00076",
        "cursor": {
          "ref": "735b706e-bdee-46dd-8687-578e2b3c54d6",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d8eb98a0-0012-4138-afdd-fda26a3cd6b6"
        },
        "item": {
          "id": "447ff843-2555-4c99-8d2f-f5c7ecd00076",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "80e30f1f-8614-4cd6-84f9-d2a45d5e156b",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b26757-75d8-49d0-a1dc-516587636e1a",
        "cursor": {
          "ref": "d3f7cbb4-5206-4a1b-8af1-e3db5ff10b48",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7f64375c-a072-4f7d-8288-b1920e41be3e"
        },
        "item": {
          "id": "03b26757-75d8-49d0-a1dc-516587636e1a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c45633da-7156-442e-9c34-1129f013c1c1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e473dec-e3fa-430d-abfb-7505ec5884eb",
        "cursor": {
          "ref": "cca00d81-3477-40ce-9590-c5ddbc05b8ae",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "426f0fd8-d499-4f93-8d4c-7389e9aa8db8"
        },
        "item": {
          "id": "7e473dec-e3fa-430d-abfb-7505ec5884eb",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "85fb6149-e6f3-4c5c-bdd7-011645a8627d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
        "cursor": {
          "ref": "45582edd-6303-4920-a477-bdfc9d1cd285",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a98fb919-958e-45ea-b493-6ba34be6bf37"
        },
        "item": {
          "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8f586b4-6ce1-478f-84aa-40e44d66cc31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
        "cursor": {
          "ref": "45582edd-6303-4920-a477-bdfc9d1cd285",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a98fb919-958e-45ea-b493-6ba34be6bf37"
        },
        "item": {
          "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8f586b4-6ce1-478f-84aa-40e44d66cc31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
        "cursor": {
          "ref": "45582edd-6303-4920-a477-bdfc9d1cd285",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a98fb919-958e-45ea-b493-6ba34be6bf37"
        },
        "item": {
          "id": "d0d15dfb-e2fe-421b-a930-83ec2741709b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d8f586b4-6ce1-478f-84aa-40e44d66cc31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4074394-7ace-483d-a556-2d4063eab250",
        "cursor": {
          "ref": "4b7fbb1e-8175-4b34-9176-4d797b0500b6",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "23c5afdb-84ce-4d21-a406-1a5c7696f430"
        },
        "item": {
          "id": "d4074394-7ace-483d-a556-2d4063eab250",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0cbab847-3686-426a-8acf-7e9cc0f26bba",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9744b4-f1df-4a20-bccb-630025226ab2",
        "cursor": {
          "ref": "f25d8dec-0203-48c9-a503-f76bb76c26e5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de677018-958a-4f5d-8969-b655f729c787"
        },
        "item": {
          "id": "fa9744b4-f1df-4a20-bccb-630025226ab2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "089ecb73-2fc1-4cdc-b0b8-647c0ca83916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9744b4-f1df-4a20-bccb-630025226ab2",
        "cursor": {
          "ref": "f25d8dec-0203-48c9-a503-f76bb76c26e5",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de677018-958a-4f5d-8969-b655f729c787"
        },
        "item": {
          "id": "fa9744b4-f1df-4a20-bccb-630025226ab2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "089ecb73-2fc1-4cdc-b0b8-647c0ca83916",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6497490a-7fc4-42c0-aeb3-c07d86f7cf7d",
        "cursor": {
          "ref": "fc07b5a8-438e-48aa-8828-5fe4f7889f52",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "46e01fbe-318f-47d0-82c1-45fe55aee776"
        },
        "item": {
          "id": "6497490a-7fc4-42c0-aeb3-c07d86f7cf7d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0ab5c973-b821-4067-bc1d-c65cda9a6ebc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd5200-3f14-4ec3-8cca-6e5f92ff24aa",
        "cursor": {
          "ref": "c2436485-7088-457a-ad38-6128053f63f2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "62950fe3-22d7-4f42-ae90-7a5762bf1df1"
        },
        "item": {
          "id": "03fd5200-3f14-4ec3-8cca-6e5f92ff24aa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d056eaea-2afe-4afb-abc4-ca96936d3030",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fd5200-3f14-4ec3-8cca-6e5f92ff24aa",
        "cursor": {
          "ref": "c2436485-7088-457a-ad38-6128053f63f2",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "62950fe3-22d7-4f42-ae90-7a5762bf1df1"
        },
        "item": {
          "id": "03fd5200-3f14-4ec3-8cca-6e5f92ff24aa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d056eaea-2afe-4afb-abc4-ca96936d3030",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc0366-fe4f-44ca-934b-db54a7ced472",
        "cursor": {
          "ref": "78b8ea96-6897-4df6-813a-6ce1b04f070f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7f3e92b3-8346-4c86-aed6-df03314e045f"
        },
        "item": {
          "id": "15fc0366-fe4f-44ca-934b-db54a7ced472",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "28fd3a0c-323f-4144-9b8d-12d6ec96cfa0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}