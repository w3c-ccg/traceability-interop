{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bb793382-a4cb-4ec1-80f9-25532dc182f4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bdfc9ae2-e533-4078-b346-82c4f0fb387c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92c26ee7-c32e-4543-9ba9-beb338d161df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bec714d-797f-424e-9d64-6f87157c35c0"
                }
              }
            ]
          },
          {
            "id": "a2b73521-6951-45d9-b5d3-9ccfa13d3583",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d5b76de-c04e-44f6-bccf-287afe9ce1d5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0851f41-77e4-423a-8096-80024c12c4bc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3dc6187b-9f18-4065-ac89-a06dbee44258",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "def38e88-de75-4593-8695-f221d818d316",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f15c84b-91d8-4493-b6fd-4362d5d3ee43",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7581029-9f95-4b66-bd0d-56f4a50dbadb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a3f1b06-ce52-4770-b04f-fe77e3b55737"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78796667-85a9-43bc-9922-4d7001146c3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f436cd5b-6ce0-44ce-8698-1c81475525a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c521688-b1f0-4a7f-abf6-682bafc51d8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "606df58a-743b-42f8-9f0d-0b7e2b4420fc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62f5dc4a-bcf0-447a-8e04-43af1b1129de",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b648115-0bfa-4a8b-81fb-dc2f440941b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1e28bef-8cb5-445a-ae48-721cba1cc87f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff7b9aa5-4a48-4a99-b3a5-2922b9577390"
            }
          }
        ]
      },
      {
        "id": "dc3548ae-40a7-47cd-8408-6b464f90aa6a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "138bdf73-87c2-46de-b37e-c1ab2d1c83fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbc53471-7652-4f4c-b729-34f46960580e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da2ada71-77a2-4180-b487-a2c4cd7a9cd4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e5a437-c644-4519-b751-af96d0c92d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b62181ed-0cf4-45e9-9606-76c26725b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25653dfb-c243-462b-bf20-5e10472db921",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a1746a-f81e-40c7-9410-71b061741764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db53195e-414d-4404-8bed-7f4c1f573c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af0bfbd-540a-4068-b1ad-95d7f0d327f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66760ae-a71f-4b9e-bbeb-749fb671a586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afdec256-e05d-47bd-a93d-81e077e9b2f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a293d44-8fae-4303-9028-937280f69576",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eac6234-6514-4261-878c-c66849ea7898",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879d514a-b9c4-456d-8366-5e9d55cc3cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0470b47d-de6d-481e-8473-41143bcdc4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61464846-eaf3-4d45-b3b0-ae02c552b83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c4c5d2-8110-49a7-a1ed-e1b45b86bfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decf2048-782f-4aa6-9127-66d20769ec26",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529e7ddb-4f49-4898-bd6c-5d9016c7bce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddbb375c-062b-40fa-8a46-3c99488288b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea47c37a-5142-412b-88df-6831a4bacb12",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "156055ef-25aa-4b54-bd31-729b360b32d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01d75d31-257a-4e65-b90b-f4a2b0de4356",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b65a56f0-3714-41d7-9a4f-2dfb6aff14d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "831c871d-33b3-4c91-aadb-04eec4a517a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "36744007-1a76-4f40-bc74-fb89e9f9abf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8988c216-39ab-4393-990c-2e7c9ab4162a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "56a80c75-9333-4a83-83aa-d41ff88607d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e85d99a8-0f21-4f3d-a4b4-53a3461c1455",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b48c23e-e857-4f01-a776-3a1778877883"
            }
          }
        ]
      },
      {
        "id": "deec1784-790a-48ef-91c5-98d33252cdc1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53f55f29-1fe0-446b-a8ab-baeb298569bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbddb21d-0797-408f-b828-e897a5c83cb3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9e7526ac-f668-4c3f-a236-1aaf0077876b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6617e378-2034-4e65-95b1-f4cfa96c4174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b06fa8-2ff0-4c44-8e90-69aa50766f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887d8977-50fc-40f5-96f8-e748d725b629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a720f2c-ab0a-495a-b489-e0482dfcf4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b42b293-437b-4f78-a63e-4f5b9887b384",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65634802-0539-4d99-b902-ef429e435b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c1a3fa-2780-4d5e-8eb9-cfe1fec63510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513654a-59c6-4479-9d82-5c6859eeb253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aeb230b1-fb03-487e-b553-e0c30325ed47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80e4272-795c-4b99-b799-e6f377e56e66",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ef891b-e8c2-4ecd-9d1e-a2c134081de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed28dc21-988e-4081-8399-82b780265111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529ab85-6f35-4ec3-aaf0-40159e1825f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b0cf16e-68a2-44e9-a032-763eaffcb4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e846b38-faa1-48ef-a75d-e245366c4720",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3665e2c-0df1-4a34-856d-4a53cac45646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cfc259-a957-408c-ae34-e379e1f0e406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a8e6c-eba9-4d04-ac1c-7c4a3b261066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c480d2-2c0a-4233-af3e-7d54618d82f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24ed5a0-1b0c-47d9-a9b9-755aa26afa7e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2de3e5a-541a-44aa-90a5-ef445d6b1fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef53d419-1bab-422f-942b-761ddaff1d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8bef6-9c5a-4f02-abe3-38b08f6c339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75ff001a-6420-4e00-acb6-6fba107caa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43d7b87-469d-494a-ad18-56a2f6bd9442",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b360006-a6e2-4b45-b165-feab9ad297d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8021056b-d695-44fa-b0cd-a15e9b637bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4fcb2f-a3ba-4207-9ae9-866dd2fdd0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2ebc92-b6e5-45a1-869d-e8cafa026a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d929f788-3817-4909-8c3c-5960df80ac31",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd81ec9-2617-498d-ae54-15916e84fc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e03815-d731-40b8-9a62-477e7d129c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd14e1b-1967-45f4-b433-1f897accb029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3805141a-abd3-4e30-81dc-96b4a6f80d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0053c84b-328e-4b6b-8a89-6a351e924977",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9482d-be6c-4ad9-b6a0-46451aef076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ca2a6b-f5dd-467c-89c4-ec45a7913b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e81d42-40d3-4c80-bc04-4ca8eb322240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4266ceb-c124-4fcd-9aae-dbe06c1ccfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b83065-a49e-49c6-8ec1-78873548cfd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b66ea-e3d7-4e51-b877-1ef749a05cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4b066f-5f41-4610-99b7-32bd72dae0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4bac60-a91a-4110-a87a-809e93615e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e69241a-9062-465b-9d31-f5929431e604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2fa94-8fa6-47e3-a6f7-858e090577e3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d6870b-e196-4f35-98be-e77f98183174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea157d6-876f-4947-a164-871059ae7ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec127b7a-3471-4cf0-99db-12733b63df99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfefbe87-6756-458c-bfeb-c37ea37f3cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ce7e01-dec3-4838-90ec-796bd0e93c68",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a7c70-5dcc-46d5-8eac-2fa4a7be3232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200eb7c6-66ac-42a9-b7f5-cd6783cdc424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80405176-4219-4230-8cef-b23dc9065a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d971358-7559-456c-a9b5-1f2feae3dcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d01c1-26f6-4f3e-bcd3-4be609080bdd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1267e2c-5b13-4a5d-aa37-0e508ba86841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087cc907-6dc6-4867-9fd7-80289e582e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa50881-d92c-4b3b-907e-bdb7048fb8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa98203e-73f2-4cc6-8858-d8225e54f314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb2bb9f-cf1f-40c4-967e-ceee41889fa8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8991c4e-e768-4401-8f69-d4b2ec3511cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddfec6d-38a1-4d42-bd8a-4b9311648579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdb01f2-8874-428c-8876-9ab7e5a645b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98902c55-5f67-402b-ad1f-6fa4d244d4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd6511a-b51d-4b29-8d16-d4e5d33516da",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107cfee1-25ce-4113-887f-1bd1e8fedfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2623e11c-df1b-413a-bc4f-778dab7f94bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c298e-29c3-410a-b47c-fb7761539f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9c37ee7-6747-4414-9396-eaa715ce2f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451260f1-35d8-4dd4-bddd-f230212cf8a3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335a2222-5d88-4fd0-9dc3-730be5f98d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46e8857-eaa8-408d-8987-41de66bb2a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7438c421-660b-4227-ba97-e306a35da666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "991b9390-daac-4140-ad8e-e7e09081bec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981495af-acf6-42e5-9317-5ee02fa3bd8a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7fbf9b-1ddf-4f2f-b454-1f5960f93939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c653d7-e21d-43a9-a290-58ee22379271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e196178a-786d-413b-bad8-44100c70b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c69e459-3660-4abb-a028-de2c69b5c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7937e8-2956-4f72-946c-b25b0397d4c4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf440d3-a73d-40e3-9080-d43e41b61266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7481e78a-916b-4435-95fd-16e4a2e83236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3163a1d2-4b09-4865-948e-8b2c1742b063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cd1394e-17ed-4c91-9665-0257465aaa7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90db002f-a026-4040-bc73-982660cf6ebf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310ecb01-9b5c-4175-a9c9-92049b07679f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d70315f-908d-4955-b764-bd30c9b2e1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768b9e89-2efb-41fe-af11-da227fdcbb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0f976e-2211-4b16-be4f-2a180f18310f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e59e3b-9ebb-4e6a-8cce-587a1090bf32",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3bfb8d-7c5b-47ec-b8fa-c4e19225689e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002c6567-5c8a-4a74-bbf9-a37bd5114ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f394aca-a421-4bbb-9c83-056b3aea768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94bca599-07bd-4c63-b3b9-9efc0ee99aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2459037-7d34-4f73-8d19-cd284d1755c9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb68fe4f-3e1d-447d-8741-0bfed017dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81791ac8-e3b7-495e-8d70-96ae82b6af95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8593a40d-7702-43dc-ab4a-bd4f382c0483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a893a3ee-3e31-4bf9-a623-3a745865b8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1a0edb-c36c-4322-a183-0af94c16f77f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61aa6fe-aadf-4736-9e52-48a841ec0d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4c8703-f658-4501-b3ae-6b15a7f02696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e60e2ba-7fdc-4322-bda3-df8760939d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "238a1e2a-397a-4e8a-8d74-1c17d7cbc924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82e32a-ad2c-45e2-8632-ed50145c8b4e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba358e2f-519f-48a0-8ac0-d3896d4821c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0476a676-ef62-4a37-8e9b-2691f86074cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be1638a-368d-41a9-b0c9-ffc605508133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86db154e-372c-456f-983c-fda8da649c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad244ea-ca77-4807-be18-8da7774659a3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0a430f-deec-40d6-935c-ccd29fa14c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31773ab8-af6d-47ce-b09b-ee05bf5e480c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc28854-cbbe-4a71-857d-328d9a1905fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b658d21-b0fd-4f86-b3d8-a6cb1af71eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ddf3b-a363-4c7a-aef1-b2800a207e0e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4c4987-9a31-4114-a989-3e615cdc0ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b4f219-cb26-46e7-ab23-cc0e32c7440e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24f535a-98a5-40bc-a62e-644c3e94bd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfff0142-c95e-4ee6-bc1f-97bff9999747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c274e87a-1eb0-4472-87d1-808598d87e63",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95344ff8-59c5-4510-aafd-d1b26c942adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015d99b8-af88-4897-9b0f-1b45a334ca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b86ee5-4335-47d5-82cf-c244df7be7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f9974b-a431-44bd-9f8d-f96ed83fb4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618c015d-8c98-43b3-ad8c-38308a559cab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdc2bfb-7eca-4d16-b2fa-b7c17996e36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44a1597-1c55-4d18-92d6-340f71731fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fbd869-6fb8-441a-8b91-88a060ed8f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1e84d1-89e3-433c-836e-f94caf27c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eae956-1378-41a4-bd8d-9606e1522625",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5865a60f-c57d-4371-a362-d8e1280a0c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e5c0a3-d683-40ab-a4eb-f0e4e1992b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722c12cf-a964-4222-a527-a7af39bb579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6310387-95cc-4755-98e3-9253b2dce2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553c4f4-5d7a-4512-a10d-5015055c3f3f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0438f1-ef48-4a75-947e-b8e349ea84cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6926154a-7fca-4d4f-8b4a-78a544901a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4a4dea-2f59-478d-a87e-a0a799cb6ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a93ad8-065e-4e7a-839f-5f6868b1c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f2479-7087-4b39-9038-060b020b1f33",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0286d1-fa80-4fb7-8f37-aa22f0deee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c21439-9859-43ae-b6b5-6d43f42584cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75af68-9cba-4080-998f-699dbb3cb22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d7d1bd-1549-48d3-ab6d-63700380d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191d7d52-10fe-4a50-9e24-dfa425d34d17",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6406839-b221-42a7-92a0-1b366c01cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37cb536-0bd8-46d0-b7af-ac517f320b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845ea333-e8ef-48a0-9a7a-9649cc38ed2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "418ce057-9d7f-4a7b-93dc-a544cb7efa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abf1504-d8b8-4c54-806b-d0ef48e169ee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6537bb4-9197-4ea4-90aa-93d3784bc49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98c8fbd-9b04-4cd6-b2f5-90f628df37a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47e8af6-ede8-49be-be28-accc71873658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb00f4c3-92cd-4e55-94ff-8e0c3b2e2749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf781173-e915-4797-9488-ceee74184c7e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa254fc-fb00-4322-99d3-70ede6b7cdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cc467e-6315-43fd-a9c9-7690baf29dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aad89be-5c95-40f6-8d9e-23681b704b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d660df6-13f4-4229-b7f4-8eab8e9a3405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489e3efa-f055-4e4c-ba1c-025774d6b773",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d857d-314f-4979-a109-659456358c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ad6cfb-098d-4ed9-ae51-425780ee97c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84caeba3-c15d-4e69-8fcf-286283cd4ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f77a15b2-a798-4314-9d7c-327fe4c919db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b42bd8d-0e28-48e3-8752-fff6aae1f93b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f23c7b-f096-43f2-a87a-767296563a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e989537-a0a2-4316-95b2-6c0be9820898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5ffeff-390b-49a5-bf40-7bfbfa6dfb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30faed0a-a1e2-414c-9fd4-8fd06d332cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5abb4b-d230-4af8-aef5-3ddd0e60b1bc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266577f3-13c9-4bee-8a17-b28ed716b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1181130f-7fac-4e2e-9d2a-fb8f398ec651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51d636f-9728-4762-9acc-37038e15e964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "271270e3-a8fb-4318-b8d3-65804a1de689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3cd0a9-ecf4-441e-af6b-39755a2f0dbe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d390037f-5312-4f4a-ac9f-43327f251ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf347b30-a180-4341-9e8c-cc4568e8af91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd075be-dae9-47dc-abfc-c4aa604238cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30e734c7-7dd1-4443-b13a-e2d747d3c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c9a475-1b8a-435f-8332-dbd3a13d1b4a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53738b3d-34dc-49c3-a45e-3703055df94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0eb870-760b-4029-8768-993c5cad73f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b07aaea-c2e6-4af6-96a1-67fa6bd08b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fadfaecc-27e4-4d33-9a01-8bc162f81ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3997374d-1484-4f24-bfa3-106c4e645951",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9e3f26-6fe6-44f9-96ef-ee4ca9c0ac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c82ea5-4b33-4bea-b801-d75717f970a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea520ee-58a7-417c-ac12-448959d24142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8755088b-d1c0-4b27-8f40-93ce26d519c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3587d9d9-50aa-482e-b58c-763dc4aae13c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0370e4f2-dad8-4a4f-ac79-4266f9cb809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a8a2c7-bf85-48b2-b157-0698c9a2b78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67c4548-25e1-4ba3-b1be-727f749dae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6561d569-9292-4ae1-9a04-b9afd91a033d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03814df7-0ab3-4bb0-8d3a-639d09a410fa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9a244a-e7e6-47d4-8791-ea3a6065c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4cb946-d07e-4911-a1c2-5954299d8254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7185878-de8b-4748-896f-7e635a0518ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f665baf-0b98-4d96-85bf-cea352c44c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259a2f3d-2e2a-4588-9651-771d428219db",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c637f55c-f67a-4fcb-bfb7-0e6e308a91f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e29974-fd13-49a7-b58c-16cf1d3ebf10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9ccf68-b566-493a-b7ab-b1d67fe13d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fded1111-c4e7-4ee6-893e-76ea616768f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a42dc-1ab7-48ec-a752-7f6f26426c75",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11758bc1-7857-47b4-9ff4-21d74174b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fad4dd7-e524-4c07-b3f9-adea375aff89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93626ace-dcea-42bd-a29e-45c0adae1d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b529e3c8-ac1a-479d-8e50-ecdea65be020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3744722b-8b78-4eb3-905e-5b09e68be90a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed8b2c6-440a-40da-a768-573a76028640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8b3b69-50ff-4e72-8b76-82ebd13e13a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d99f0-63e2-480c-b0fd-d2c7d0a28e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "490285ad-97c2-4249-a93d-8ba5afbb6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947c2a72-1491-4bd4-b551-43a16aa468e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce4db7-4b7a-4f3c-86e1-7e3d50d3bee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed52b97-2aff-4db9-bf7e-8654d12d2eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c37833-01eb-4dc4-8380-6ff245f6079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8537d6fe-d036-447e-ab43-169046c2818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552de93f-3830-465c-81c7-f40e7ce5b927",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66abf3bf-c92e-455d-8946-5bb91d862cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b56c01-b1f0-4fce-8f91-6133ac33a7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aae8f3-3ff2-41c5-b7bb-52c59ea4090b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8f05d7-6bf7-4e15-b44f-bd1ddfeb389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00712ea-9a42-4e5e-b1be-b34505c9470b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88e6ed-7b15-4f64-824f-93c32e6132a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f12f28-f590-4c4c-a2c3-11a9fa96244b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52357234-33b4-43f6-93ab-47bd3405296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f9154f-1924-4bdd-a70d-7f446d37079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf83aee-4803-41ed-9f0e-2395a9259a2f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa0eec5-4e71-4ea5-9aed-47f46487ea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3c18c5-5d80-427c-af3d-99dc530d3862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba2f79-1282-4e41-8e57-d5ceaf30e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22be7b4f-b40f-42a1-89c7-ebfa4be601f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08d71ac-f18e-47e2-8534-df3da57e67ef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204f673e-9363-4ebd-bfd5-f7da62d3d582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7aaa41-fcf6-4e10-b1be-bb31b2a0e8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7e1da1-790d-4536-9479-397c4ab56de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01316f71-f285-4dcb-bb97-124843ed028b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc1b2f2-2c91-498b-9258-4c978a055791",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a06cf9-e8a3-4037-a36e-d4ef5d05a836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65ba6a7-e870-45f3-99e4-055fe31aa5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98982115-c5c6-4061-910e-a15183611016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef2d163-0db4-4738-a74c-fbdbede921c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f235ef80-49c8-435c-888b-bc9a2bec4526",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff0a724-7176-4623-a041-7de7e1cf4a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07c6838-c5a0-4134-bd44-3da6ccd2d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3dd9c6-cfbc-4bd1-9148-2e24bb27f85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7601b30a-fa62-42d5-8d1f-6dda772b0001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c81e8f-c2c0-4fe9-864e-678210dcaf58",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f6a4c3-dc1a-4775-b4b5-6a6616f55471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8563e450-70fe-485e-9fe0-5f0098e0b2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cd4d6f-9408-485e-9616-b3b0f1880fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "261d160c-71c1-4c96-add7-c5f75e129b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1e4f69-d76e-48d3-8e37-e2fbb33aae72",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd81157-4e13-41e7-be36-e2bce22065ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c3d9c8-c2ec-41a2-a28b-7ea9222ce3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d550af-455c-44ba-9f06-a92a4607d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94511b6f-1e1e-4eb2-916b-4ea95302e717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7a113d-3038-49d3-a1fc-de80ad74306c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969f2311-3eca-4994-8d74-449570896f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60ccfcf-6f0a-4d3b-9e7d-87315d5213e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751add79-5ff4-4d33-839a-566920d3e177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5654d1-222a-431a-88a8-e3b4171ee908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de3b0b1-edbb-43a9-a313-c84eca4bbc08",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d9d1d5-9595-4345-beeb-1708940d6d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86baf79c-d38e-485b-ac32-a1ea844364a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad93771-d1a2-4866-b6a7-0d0b5c2051b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e44f1f22-1064-40f1-b517-2ebae6786f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c08b15b-265b-4b48-b116-964afd078466",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab1d71a-8a2c-4b8e-853f-94580cbf4cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a807d005-4ea5-4e85-a9b0-b31908860c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760d5df1-f983-4168-9c32-d84772b93f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd3e134-72dc-48bd-afbe-0017588373e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cf55c5-5fe2-4639-b477-058a52b399cf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64701527-69b8-49db-902b-512aec3000e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b63413f-f136-4e51-b4f8-8e5883249d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d874bef-8358-41f2-9cdd-b6e1c20a0cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ae628158-27fb-4f92-a026-ad5df5bbeaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cc4420-5cfd-442e-bcec-0cc221671248",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c107c-7ad4-43d3-b309-0ef8b2713c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ea9da1-98ef-4c61-87af-9d71573da059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f8a273-5619-4ccd-9c53-56fd35218e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7507649a-6367-499f-b8ab-0b1211576a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f702e7-7f65-48f3-886c-894a69673d3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad153ec-13cc-4ec8-96b4-d3281b8bb705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789a2b8a-2a81-4552-89fe-5d29abf1d948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4e1a4-87ad-49ad-b264-18a2ae720e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d407e940-0b4f-46d9-acef-4dbae5593311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab32e5e4-d1a3-48a9-80f1-38c699070be0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5024e4e6-5f5f-4190-8a04-d5b5a4c317b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f041df-34b0-4209-8db0-b1a522a42ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b46454-c8cf-4e3d-8563-dcb76a096b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cec1e65-3141-4633-8296-964f18472c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99921319-b698-40ef-a358-852e13081d72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85963add-c5e2-4dc6-827c-01312f8bbf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb697c08-d2a8-4dcd-8b1a-14208c339c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69f32cb-8a3e-440e-9c71-69e8485c44ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b58b4296-8ffa-4afe-92ea-8dda713780fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445daa12-fb56-452d-b32b-95f9d454488d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b19c35e-61c5-466d-89aa-ec9bbfe21cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4973d240-6824-425a-a7fb-e36e3ac0c887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbe8985-f1d9-4809-96a1-e268b277d93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04af4d9-8a46-4843-9dc7-ae57fb848652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fc42be-65d6-468b-9fa3-720351d9f627",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f25d49-d35a-4429-b348-961fc70a3c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71df8e73-62f2-4a02-9466-3426ac01e40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b6d161-4c11-4b3b-9c99-6316735a3221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2adab2-48bf-424f-a98e-06e06322e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e9b4ae-fe83-4706-9e7d-fc114b724f84",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63353452-2d27-4e1b-b631-00f2de198127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43e06ad-c77b-4d96-a24f-3f9b963bb470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9977bc23-329d-41fa-9b2d-f7fb9417702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9e3ee0-ee11-4cf4-b310-228e818eb926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a79c1c5-c5d8-4367-aaaa-bdf7326b5dd2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f1d057-1de9-4e41-acfe-dcb231e50189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681af848-097d-454e-b3a2-46f320a9223f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb283da-7708-4af6-84aa-031f60b8a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad6bdd2-55bf-4302-8e3e-875d8a0bdda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f97e7c-74f5-4684-bf88-1b5bfd177bc5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08671fad-5751-4eaa-8046-784233cd193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7ec5f2-518a-47af-98e0-eddaccc34d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0c2ba0-2ae3-4103-a8ca-e52fd07656b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8974e26-71b2-450b-b012-8f7a46bda145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa05a7-e013-44da-8305-6ad8c66d8402",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fabc0c-8cba-4eaf-90eb-b46b06124ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b22546d-6614-4af0-bb2e-6a3077faed69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fb2a04-372b-4494-bf0f-babd580f758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ce8af3-c62c-49d6-a120-8d4489583fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef8f5ba-4b09-4dec-9f3e-7f90d960f6ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e21e6c4-d6fb-481b-b98b-d4f89cd273cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb9dd5f-affd-43f2-ab2f-3351d0e9fafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814ad14-3636-456c-8f19-8c3e9ccb827a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "785ea1b5-70bb-4fda-b0e7-66cea559adf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ef3d33-abbe-4025-867e-7f80e0313f31",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c244e37-9cec-4cfb-88f5-2ad9b7b0c937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997f6cf9-0743-4b1b-9297-eedd6225bee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532dd46c-7a3d-44f3-ba0c-2ec34468fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28f6144f-f9b4-4661-9521-312456254d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06771284-3f6a-4293-820c-f559879b996a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f2219f-9232-41e9-8fad-481d2cc63c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1f40c1-b26f-4781-b0fd-6c3994fdd1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddef136b-4bb8-47ef-8610-f919eccdf06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "331b0d6f-9495-4556-a5c8-ab628b1c52fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9411792-3463-4382-823a-85e596cd9012",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f15aa8-6a11-41e2-bb05-7d5822e07eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a503a0-c6c4-460e-8de8-540992a03b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956665aa-620f-43a0-870b-a6682848f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b82ddc-d528-4406-85c1-bbcaee9908e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51cd01e-58a3-4c14-8932-d8e15ba85ef3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad99a55-08ba-4785-8152-07d4d3cdb44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba77606-bc90-4d86-8ecd-72a1d5e401f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdde628-22d9-42c2-aafa-42556e10d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aaaa56a-1d00-4825-ae05-5721f69d5b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10d7718-91bb-408b-8691-1ad437171d2a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02da6ef7-5db3-4143-821e-d0f1a3b13b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45afc96e-7910-46db-8bfc-70a23b7fbc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4042bf59-7516-4c03-b4e6-f0b96825a921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73deaffe-2fee-4cee-a113-3fac2ad3a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d289c99-2512-4b17-84bb-5c7c19d76e34",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baeb584b-2744-4341-80f5-3c4ba9779382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06544e4a-9c5c-40b5-be82-ba44dd50ccda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9554f831-c5ce-4e43-8a29-cc1057d8cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9efe91cd-4c2a-4c40-a8d2-53bfffe9c74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134c37e7-f1d1-44a7-b598-9184c6c1f35a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a97dc05-59bb-43c4-ad12-3788fd797594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b98c96-2ed0-4792-9416-38aa7f7f9ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8ea45-919d-4ef9-bbdb-1657f7e3b13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffaf5e7-2d0a-41ab-a0f3-083917751cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227b26d5-bd12-45a1-b7da-5dc2da775544",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45660109-4723-4641-ad6b-7d01064a3e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090c8420-6215-490a-b588-ee9262579ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e1671b-281f-46ff-9a6d-ec2b8eea7d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee11abb4-0e17-4b28-9dbe-236a44c94e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2c02ea-6a4a-4adf-9265-fe0ed6946c45",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207694b-4e98-4b6a-9533-6861ecb8e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f960a005-be6f-4851-9f2c-2f842df33090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0857f93-2f3f-4023-8569-23dd7f1ce52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e704ecd1-0c4d-49f1-a20e-67581a8a9610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a2810a-e27e-4780-a660-9429daf51412",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e16b7-587e-4e51-afaf-1b087a4fcefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41210f69-d78f-4cdd-9d6f-dbed178e3759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e9fede-4136-4acf-930c-62cf9b347015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "916e185a-ad19-40ad-8eaf-0e99f8971281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7923e1d-41c0-4da7-9b75-72b04d233e99",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d4302d-ca9e-4ed2-a7e7-aeab83ce245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e8ea76-d14f-49cf-8cb9-5402a24a325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5297d0a8-00b2-4430-bdde-3c4c52ff9b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e17b6eb-204c-424c-9739-bf8f678f8a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22d225f-49fa-42cf-b5d1-938de30ed580",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6304c1d-a650-45b6-ac31-b3920bd85c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac19c2e8-d3e1-4a68-9ed2-32f9550fa574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbde4036-01e4-4fd1-9a90-1a2d38c621e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "535ef96b-2030-4213-9217-2cd9ed04803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f59bab4-275a-4127-9d07-aa3c0cc4d663",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d08e75-babc-4fbd-a112-420b73adbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42048e41-e9ff-43bb-8d96-fb148d90f557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71f9449-15e9-4ab7-8b2d-98611ed919fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2282b0af-1453-465f-a23b-54a8de49ff41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72222cd0-65de-445f-b715-7a616cde7f85",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0388fad-1d13-4b65-b8b5-59c461fde881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742d1364-abd6-4ebb-adb7-41e7968268fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8653f4-41c1-43fa-891b-cbab47e6b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ba00aa-c520-4c1d-8dcc-5f7ba577e753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ae8008-301c-4f51-9eae-8cdeea1ef97a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a69b20-3f3f-4817-a4a8-fcc3da54c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869830f3-2155-4818-97b1-f2df70deda58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c26994-6354-4cc7-80b2-5efc443f63d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e39dde-1a62-4234-8e19-101fda3f4963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8f909a-103e-4272-a835-f672e418ba3d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8482878e-0f2a-4edc-8e47-4a6394eab4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5944ac86-733a-4e49-a578-439cbb55010f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef15b58-8487-4a4d-8785-0265b6b2e5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46097d15-54a8-490c-98c3-4651a3a06aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a552e-c21c-4d93-a079-bbfcfc56232f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cda78e-c6a7-456e-86e0-528201712283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73e01be-7d61-44d6-91da-b9acfda88af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e448e243-3ff6-491f-b3c7-dc21e694942b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "733e92f4-a350-431b-981b-3792e330368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a2c424-fad6-4340-8e08-352ef89a48a7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c03102-80b7-4356-b8e4-e9cdadc6bace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979aa9f7-1078-4a68-9b4b-cfe9797e7726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f2eb52-7621-41b5-9cac-6f12de586729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6ce0c0-5b72-4109-afe1-20744554971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c28ff6-3551-4a54-918b-e8d7547c48f1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc54067-16ea-4c3d-8af5-5e0ac98f493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fa81e6-b5e9-4dbd-b5f0-8037e6142b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae37a25-a661-43af-959b-08d809a1e7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "816c9367-13a3-436c-aa32-202512f7ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030c5287-ee32-44d7-9c6f-3d769d830514",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb2a3d6-7f23-4afb-b99b-a79e0981ad93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7269088f-c823-4d5a-a233-1819ed0fd779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a769dbc4-57dc-4f65-8a1e-150b99124aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e862abbb-08c0-4fce-a29e-af30175a6b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450368e-48e0-4ab4-bef4-a00b6fcbe724",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6508b2e1-af80-42bd-ae1c-44c2a7b70567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b95ec5d-d74b-412b-9c13-29b799c94131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874430f-71e4-4490-b845-b41d241ca78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ccc744-0848-4938-8fe7-349174eb4421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e05458-8f9b-4949-b6ba-7dadd433a83e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159034a-eaaf-4a65-8cd7-dcb5397cff62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66422447-0eec-4648-b8b8-283141b26a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135487c8-5a0c-4f29-84f8-33d614fb5949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cab1d39-bd04-4cc1-bec8-1a1673228b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd087ff-d1fe-43cd-ae87-b05954908dcf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dac21b-b4e1-41b3-995f-d6518acdc5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfee2c8-798a-4353-9fe6-dcc919ad9da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e758fe1-3851-447d-af63-7c5df586de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "34a71c49-8893-4812-8bb2-44ad0936067c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208063d5-1036-464f-ba7b-9bf39446ea69",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01db1678-af58-4d63-8541-cc7c95a01e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13358fb-a258-42ca-8915-17f158168809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855b178b-dab9-4263-ba07-c7c150f46130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10f63f6-eee0-483f-aeae-b49e2a300a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eacea7f-4c6a-4761-9e0f-57b2868a507c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5903962b-4437-421f-829c-41517cffdb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f47a99c9-5942-42f3-9e5f-467344329f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ef0082-5f97-41ae-aa7e-6a97b296b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2fb1db-049a-4189-84d3-c017f5d832b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a54bceac-a397-4b37-8296-b0446ada3b04",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1a9f613-bf30-4692-9113-68fc9705b9cd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d79552b-ea84-408f-98b5-36558c89db64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6a6ef54-aac7-4251-83ab-c212a24d9d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee48d77-ccc6-4423-906e-432ae2bc6762",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b263643d-f178-4761-b3eb-cd9499cb3393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92eddab0-63a6-4570-93ac-1424c6d76183",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6cce57-2bb3-49f5-b2ff-78fd6e6230fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a9b00f2-3254-4f8e-991e-2c528030b8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2827d6-102a-487a-bbf9-b1bb9115438e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e227855-acc3-4415-93e3-bb95c89c99e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "549f8d10-d68f-465f-ade1-fedd5148fad7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28ccc619-e885-43cc-a5d6-cfe100489bb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b25afa88-a7cf-4c21-9faa-0e852020f8ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85881fed-d293-468e-92ca-f66171f26c47"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d7a420b-6c1a-4b57-a38e-cdd5c74d5603",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cb0742d-66a5-4b4d-979d-95dd5507c058"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cbffec8-4318-4b44-a6e0-c6eec8a35442",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2e5318f-916b-4e52-9c9d-b385136d040b"
                }
              }
            ]
          },
          {
            "id": "5e55d460-176b-45ae-80e1-74359e78e3cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7f4b3d0-7484-4709-9377-dd31435eeb6e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f10d3992-7268-40f7-ae67-6ec7b1f88883",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "504407b0-0e09-42af-bb83-03afad6fb797"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f6327ae-d015-4e22-9bed-cce112f4a237",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4abb23c7-3a88-4f7b-85f2-42e1e6920770"
                    }
                  }
                ]
              },
              {
                "id": "1c4ba4bf-b751-4975-a60a-72820f459d75",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a6d0f28-7ef6-479b-a51d-25c3ad8e7989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "666cdf11-2607-4cdd-806d-0c55bf1e596c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4eb789a5-047d-4951-bf8f-cde338574ce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "740dd82b-42b9-4e07-ac49-5b3a5a8119ce"
                    }
                  }
                ]
              },
              {
                "id": "8a7eb644-acb2-4d81-ab35-efda251d6242",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d0e5aa6-23e8-4a77-a140-db4b90a72336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a63ed7d-1139-4cb1-aa41-032091f0cd66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71ae01ce-7477-4a4a-8c86-498843b44cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53e611ff-1afb-4d29-9915-95dbb5629c31"
                    }
                  }
                ]
              },
              {
                "id": "2f0e0248-82e7-4529-ab5b-e592a7781e43",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acaf70de-3cd3-4b9b-bf41-11717d0ef964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6aa1705-b8be-4504-b0b0-780262a84bb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec2474da-3915-4a7f-b727-1d681090f987",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "22ada9c5-e9c3-4306-b48a-7967576e9190"
                    }
                  }
                ]
              },
              {
                "id": "379c57ac-39c7-4d6a-b73f-075d2ad1cd93",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56fa3c85-e104-441b-af7e-3375a8a4ce40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c68a24a-0365-4556-9c50-b0b1d66a71a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cb6b853-15f3-4b59-8e09-8539b7dcf265",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2474035e-85a8-43b7-9760-c7af7283f299"
                    }
                  }
                ]
              },
              {
                "id": "058c521d-350e-4afc-9ad5-c2601f24a51c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efcdb9bb-2e6c-4207-8222-6ccf44d3f48d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d20c2ef1-c6b7-4231-9efd-d3f04a144993"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47acebf4-31ab-4dba-a440-af8d3d5e9cfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cd167b8-43a6-44f1-9b77-05d6f4e50c8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d9a07ef-9fe1-4407-95a6-d4787c405205",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b2d9f12-ca2a-4957-9dd1-fc837912dff7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73b49d0a-d6a3-4bc8-ac4e-005b473f35b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0858dbb3-0dbf-48db-9274-e7b1578f5410"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "300ad927-a8e8-451b-b947-12f520f6a732",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d9d26d52-f530-4192-a933-f4e755a0e0a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5349f575-ef64-4882-ade0-a6028cd0cff9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3037e59f-582e-4f6a-9c2c-eb4300121df9"
            }
          }
        ]
      },
      {
        "id": "cba813da-dd76-4ebb-aa92-58da15d73e73",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "42f7d01b-8375-459d-85e5-01bf57a95fa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd1097e9-3792-4444-a658-d739a1b3f2f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79c1fd73-a6fd-4f51-a044-4bc426b7b7cd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b277298d-fc26-4377-9e7f-97c992f41eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609a5a1b-2770-4613-ac55-d7915afb6ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f964e7-6326-489a-8bf3-4b465a293a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d840b0-28d7-4aab-89d6-fcb411489cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ebb29a-b7ee-4947-a5fd-9d729583eaf5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f65206e-9a0f-4700-95b4-deb86d315fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9165b1f7-f0af-409c-be19-f56fec7728a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e083af-a50f-45e2-b4e8-8356af18f326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1adcb22e-6e23-4ba3-b850-0bac68d08526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c2b29d-ad8e-4983-b652-fcd3d5b8bb11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06a1eb3-5a82-4347-b4c5-b5ebaa31f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbd00fb-4fec-410d-b7c0-f56be91fe1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8193e334-f395-45e9-9054-d205721d355a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "557f556d-4108-4775-8159-b8cdc756ce6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2744b88f-9f8a-44bb-bf1c-4df1d9cb0ac3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41add750-529a-4ba3-8e3a-0fb789cd42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d29a130-3a31-4097-9c8b-7cb75f4ba499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f0d68b-af39-4fbd-8312-42194316ceff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab247717-6605-440b-b0de-21f6c37438d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9603d6-8c5f-4ce3-a62a-925b1d501046",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fd54b3-3f98-4f7e-b2c1-ec1942e9ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dee86bb-d345-4d52-9de4-0b03774e8039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c0a0f-04ee-465e-a3e4-e39161d9626c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c7a5bb-3f8b-465f-b378-2fd0e48e197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87125458-c96c-45dd-9b0e-2f0edf3b75cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03d80eb-374d-4f3e-9abe-b0d9f02c7e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af81c241-8ed4-4fe7-989d-d2fea33f59b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bab37ad-7010-41dd-aa20-f886cca255f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7280db4b-f9b8-400c-95b2-a9ac7022580b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311619d2-3e03-4598-9181-da9421fe5d6e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162e0b50-6844-43c9-b0bd-8eb5c9d58319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60c874a-fceb-4824-bece-b2795e6fea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d677ea-8a39-4cb2-ae20-f20ff98c9297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "86acb944-98a1-4d6c-b82d-d7e017230d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898590b-d5b0-4d67-a51a-bfe7130e0d69",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f14ed82-9e9b-42a3-a278-11264b0581a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02da121-7438-40d5-b16e-5351d1288607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fa8510-eb70-4326-8800-2ac5691f04c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3107449e-62af-4e9c-a9e4-16450b102138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596e857-8c1f-400c-b66b-f83eb5917790",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d8df13-8921-4dca-bbea-4f573c3703c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad493e63-6678-4429-abfa-c25193eb2948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbbf013-89d0-4f4e-a6d6-ac98365a0194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ed647e-d730-48bc-9509-7958b95a9320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30095c6-b453-46d1-9540-6be35af65d0a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e5b7fa-1be6-4aed-bb0a-5233d51878f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b80483-0a0b-4ef0-a7a8-baf724c8022e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bbbcbd-d653-4674-af0b-4e4cfbeab088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2cf7f5-d1b8-409f-a200-58b8e7dfeffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea11b2c-1cc4-4bf4-9169-9bfc86772474",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40d1f5f-b512-486f-b1ed-243c38e19a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd256e37-6654-4ec1-aec4-942cf2c84f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b48169-b7c4-4a8d-ab55-d54051b58c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "83af6879-f5c0-410b-9ce2-07e780f86218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ed227-1f48-4279-b9b8-53644ebb466b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786041f1-cf13-48fa-8f18-f3f6ffbe91dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb89350-9fdb-4ba0-9d81-037bcb43af52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e8a87c-be10-4ee4-9a83-785410ed9c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b78493af-d93a-40b8-bf72-27c9c7840aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2761380e-9f18-4a56-bf5f-e09b2e3aaa6e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0a3c33-5b19-48ee-ace5-c31e45fba176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12475d1c-486b-4e26-beb0-40a574ddc7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f9be1b-4809-4881-9fae-236ccc3359f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "941ff8a7-9126-4722-8ef8-d9d8ec4a9e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7c0392-ac4c-4b2b-9db7-279c4814717d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6c185c-51a6-41d2-8f9e-cb12005d952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f5b346-fc47-45ca-a5bb-fc3e7382f4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9981e3-21b2-4ba7-baaa-40b3b0011495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9f8642-b237-4794-a0d2-0a95e1832e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc53a6dc-1cbf-4bb6-873c-005492dd8a52",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2ac7e4-dc38-4712-b230-dd8dd945a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153baaea-116a-4e3a-905d-fe243208db1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f813678f-3c2e-461f-98bf-e7860fa1e8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4edae97-4882-4bb4-9814-bb41847fee63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649e8ef5-1c72-44c4-afcf-d1ba03052138",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3b3d6-6bd8-4fcc-9683-3e66ba0bf628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a6dca9-9224-44c1-9b9f-a8be08973eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5de085-899f-4d51-b1ec-318ca4283a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d21f30-e9a1-43f4-987b-4ad5fd47b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a274b7e7-285e-4c7e-875f-44594dd89db2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59271d80-22fb-4975-b855-60af2195f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7671b1dd-9b7a-43b4-a26d-85d70475b678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7da1f4-33fe-4683-ab57-be599edaccf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df5ff25-d13a-4c1f-a237-6f41f0dff366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf340a6-bf99-4d2c-940e-495a7b96f30e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1028ca5-376f-41ba-a54c-38cc1730aca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e661338-7f3c-40e9-a18f-2dcecdccf42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35863ec-59dc-49ae-b45e-bd9eb743c42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "02dfe396-7ad4-4266-8790-0f87cb75fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98370db9-2fd4-41f7-add1-43b0fae0a967",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26a90d-2e0f-42fa-b80c-1ac0fd69a239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5308a5-1cee-4514-bb89-7021a444d431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f10a0e-8f63-4492-b99f-6263237e12ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6039c656-f5b2-45ec-b57e-fe1d5e13a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30551dc-9dd0-4dab-bb8b-31dca105ee05",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb9279-69bd-47b2-a770-ef3fef417f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c08f04f-69ae-4743-b481-521f114415b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808584d3-af08-4105-800b-05b1fb393d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1257a64a-f96d-4aa9-83fb-d67c5e416c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0444f8a8-eda2-4394-94a7-34d24724f280",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22a99e5-6827-4b67-ad85-4762f617d5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e495f475-51d6-480a-9231-b03c44f5859c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473e8857-e778-42aa-8816-a1ecdf84d9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "149cf350-e5a5-48c7-a102-57801a98ff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec8da5-0fce-4d92-a684-80383423fc18",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a43ccb-7361-4f76-a736-9eecdd84e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b807b-ba0c-4c0e-b394-5df1216c1afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838bb107-a220-4e0c-9be8-9084c047d75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5a45bf-82f6-40b5-bf1b-15093084e1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bf4479-bb11-4257-87a9-8f130d4f5a89",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72daf50-928d-4743-ae4c-82808fd24e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bb7090-c536-4a42-b1b1-635013282801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2853366c-9566-47c6-853e-e702fed0192d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a50827-a2ed-461a-888d-645a614aa02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb03463-f8c8-42d3-82af-06fe7a7eeecc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f40f9c-069e-462e-ae55-f7fa0587e4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfefe81-0a2c-4924-b84a-be0f64d8ea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea1e60d-b16f-4d29-acc2-39d91cc4633a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340feda2-5884-4ab1-b553-b43e02023b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0ab2f-74af-4acd-bc3e-2891f1f4d654",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebadba7-9f21-492b-818d-a3d52cfe9e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950b1989-5ef5-40b6-bf91-7b8f0fe1856e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3055d33d-a0e1-4e05-ad66-5dc31455c530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f362f0a-c5f7-4dcd-8f5d-7a7013e4d879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548ccd86-79fa-41ed-bb95-5a8bf1e8e836",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f939a94-e15d-40b1-9a80-cb179d88d679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3d5bd1-2ed3-455c-bdef-1a7492a8678c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b0f218-15cf-4dd4-9e85-e35414f34c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b5ab4b-5fcf-4936-9f6e-fc1c3a9c49f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12d76a0-8f9f-4470-a4e5-a428edf15f88",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe7bdff-8ece-4c48-b434-a45055ab5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de856c26-b5c0-4134-ac1d-3d60be2d64fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8972fe03-7b43-48fd-b91f-10f840f534ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd42c24f-df4f-4e98-8f82-b791ef016525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f83587c-052e-41e1-993b-99677087b0fb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c808e665-4cc8-4c74-bd03-96955fbff299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1054180-f54c-4e32-b18d-62a697837b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0305d0b-04c6-4257-bef6-1662dc5a4e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63219a6-10a7-48f4-bfae-d61dba6ca9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a1750c-8bfb-4449-b0ea-3c1f503a050e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436ec6dd-84f0-4dae-ba68-2e3f66c6bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47c131a-3c22-44a5-aa50-0268ea69f7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeea9d3f-b7f5-46b8-88d6-3cc1a6cdab37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf7d12e-997f-4627-a9a7-7a9f887ff50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0815e84e-ae40-46cb-8c0b-59d45fa80975",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daac6527-f972-4059-89f1-9f69ed4deb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cae58f3-52d2-4827-98a7-784bd5a3a280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d87eb7-65a0-4f41-a8e3-9cbe90299fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5774921-9e36-416d-b069-fbb7d0f27b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc32c5f-6998-4c50-9170-27a039008574",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0135f4-31ad-4e1f-8e88-5c9a8d2e4aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3476d8ff-8bf6-44a0-b665-ddd4d608266b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3288c7e-82ad-4755-a58f-ff5b7a2adfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974aabb8-9488-42f3-b93a-5aef03a3ae09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc035a63-88f5-46b0-a845-e0e7c34ad53e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af2a961-0841-44ca-b21f-c0e0bfa10eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11615766-34ec-4df0-a78d-340450aea26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eec63ae-24b9-485b-93fd-29a38c20ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe7c6be-05e2-433f-93f7-33cbe43ef9b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82370273-3f99-4bfb-ac85-d94335b15a48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55cf0efc-2463-4f2b-80c4-398a54ab8596",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acc9be9-14d8-4c89-91ca-507daf2ebfaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47eaaece-50e2-4a90-a7aa-92ec1c8d74ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8782276e-8773-48d8-98f5-d735a842a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9055541b-9cda-4e13-be55-19146e122acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6997a9-0f47-4885-88e2-8bf497debe82",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d208cfe-01e4-4382-920c-daaedd032f86",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd153411-2f30-4ba9-b5c1-3b850647942a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f886f0-2c37-4cf1-80b0-bad9b90835a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9959cf47-4877-483e-9bed-4b75dc3b9b8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b86e7688-b745-4baf-ab67-bee5e25df532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc455675-4f00-43ef-8674-6179ad140208"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df882aa4-9d4f-4519-9bda-63d70cfc6708",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c1d2c01-8ccb-48ff-a6d4-336ddabd66bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11f4a7b4-4f2a-4601-a3f3-b5891ae63c99",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cf99f6fb-f280-4f47-9cab-b440f4817906"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82b018b8-28fc-435d-a6ac-a3be9353d33d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39302913-67a5-4632-ae93-5bf3e31fec78"
            }
          }
        ]
      },
      {
        "id": "bd031e64-44fb-42e7-bc92-75ff101d2649",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f78d1557-2dfd-4639-84cc-cb404ccd856e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d73c343-2c52-415e-920e-87f9e30fb344",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "933f26f5-55e3-4a27-9776-cd4ffa123121",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e607dfe-f352-437b-8318-dc7b2a870da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e692f382-4f62-4e5b-80bd-a2d1139e2d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833438d0-b6b5-46f7-9211-1db0e20096a7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15436f-d989-4540-b092-ba463a959dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b11900b-49fe-4a28-ab69-a37fe5a91c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f112626-b913-4868-80c0-63173dbea3e4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0021ccdc-dfa3-41e8-9b73-4a800929086e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af7eeef-ae89-46d0-8189-7b2fe054ad3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ace461c-6afb-467d-843e-e47543a98107",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0482399a-d457-4c11-8f4a-15e687580dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bdfc1c-2dce-48ff-821e-da0e3bc3e34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f83fcff-bad2-46ac-8388-ddf7917e2af7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82322d6-5b47-4ba4-a9e5-09b22074862e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a85909-3705-4f2a-b522-53a2b32dedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfa545f-3e94-4393-bbf8-2aa867d94c1d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29445825-f1ec-4192-b7ba-a46fbb9df7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02930c4c-57a0-4aa4-add9-61f54c1d4291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c143f0-9612-45a3-a1a6-e31eed5d49fb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b9e3e-2228-41e3-b572-7e4b8c6b4117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a0789e-881f-49a3-9d5d-f76ad7b1dab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e1a6cf-6f25-4e13-aa71-55a506169f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8a75c6-b977-4ca4-b777-2b603168d5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11e807f-b18d-4235-8890-41118c77d1ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be65a3ec-723c-4574-be5b-3d387129a6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411a73fa-83ea-4bc6-a63c-1806dfed24aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116f79c1-0c74-4a14-b0fb-03d5d00082a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d9ee03-5f1d-46eb-a4bc-7b31745ce23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b799eb4-3544-4d5c-ad33-bb732bf2f5a9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54168d-d7dd-47c4-8a21-1d076eab8527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42413ee4-d179-4b65-a380-8852de28313c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992c0f77-776b-4b71-b0b7-b4d399816d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b1971f-59e0-414c-ba00-8ebbe520a60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8898c4-0a23-4d8e-8515-5d6ac5ef3138",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ff73de-7e82-4508-a5a9-722b8057339f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0f8d57-b6b6-4b2b-ac91-cfcb7a182420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d87e32-2268-4a41-8fa2-41ce0d5ecd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32442630-546c-420c-85d3-8a694e6303ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73190cdd-2eea-4d3b-8a1a-895833c7c4b2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55c1cfe-23c8-49d4-8146-099639bb29c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45668098-3811-4403-8789-f31dd4c9f0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3e5e56-271e-46be-a4e7-135a3ae408c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dff665a-a18e-4b5a-9aa2-991dec5b7db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1f159-d8b9-4b5b-8b0b-f94c900612dc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058944a5-64fa-4bf3-bc01-24233bb86e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448be666-f46c-4cca-9020-965fa159fc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472ea724-47ed-4b2b-a1e5-4430dc42556f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f816378f-eb09-4d63-bba9-741860b536bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82f3c20-e2c3-4551-bf51-3a304665f849",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df19e7b4-3725-423a-9ab1-a2fb4a86d322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f03685a-a421-431a-9db8-8dc8c5e6918d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb435fc7-6727-4ed9-8b0a-fa71edadf498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e7def8-2284-4a21-8eae-18a84bf5b2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de2241b-557a-4761-8aba-98d6f5c8da3e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a33d550-a7c0-4011-996d-341337dee1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c7bc0bd-a9e4-40f9-b5ed-dde3577dc7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19989cb8-399b-449b-b620-785014c910ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100cb74e-e9c9-4aa8-9080-9c90f7c2bd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447eac81-8557-419d-af18-2ff3dcdd667c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f5e8dd-3d55-488e-91ed-487533efad19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa104b4-f959-4dfd-8578-c745458f90e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f75282-8a07-4128-bdab-8db5cf1a7849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942a99df-6504-461d-a793-04777994b495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1000938-a199-4ad9-b614-b071dabd3d72",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2399c9bd-9940-42ff-89a9-e4339cd5b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3978587b-1749-402f-95fa-a04f74529ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f7bce2-4c19-4dc0-8520-a27b1980585f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636df4a0-4ad4-4b54-938e-dbb91c1bf991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6eba3-a888-4f19-8bc6-f4ed0e9373f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876a5ffc-0d18-4500-a3ed-6a3dcd543900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975c69ec-12b8-4227-8d56-cf03604357da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f12f46-109d-41d0-9b76-47c49c819eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3374ebd9-53ce-48e9-86b2-cb4a24b5aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed3d64-8d07-4a21-9e4c-b6bd34cb48dd",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd11008-73f7-4821-84ec-caec713aa57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f6cdaf-5989-4553-a356-8c1cebbf0628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0943f-94bf-4264-8052-ef15a71fb49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358f40c2-5949-4d47-8c3d-695a90591281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796e05e4-dccd-433a-bf85-4f8b364d74b6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90fa7a9-ac23-4b97-9fa2-3ab55a743661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325ceab3-aac4-4dc7-98a8-21f11e2bc058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19752053-b911-4f35-848c-ee6abaf625da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c185bce8-315e-4c96-a83c-c58a0cae4e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd0aa29-60df-4744-844d-cfc333204495",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb93959e-4e8e-4d3e-a632-8026d8e7cd88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd6ed44-5508-4bdd-b25e-7f98ea413703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57428a78-4861-4cee-b243-4e673365c81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ae2972-6d53-4139-b2a1-0895745071f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862394e6-d89a-4c04-942e-3db29c9c21f0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1dfe10-5e7e-4b71-ab1e-2331c47da6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4b2006-b06d-49c0-a1bd-3324510cc3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3a2032-1f68-4abc-b06c-10d1305670f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14226246-f1a9-4859-bf0b-972757990bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d58b1-24ec-4390-a448-68628d41eefe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a9ab18-582e-4cf6-b378-91fda77ba40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3ae690-1a12-4a7f-8aeb-eb39fcfda66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f009f2-ad4b-4822-bd6e-a85a9c00fc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0390cdd-3cc2-4c7c-b3fc-1a6fd77f81b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166b79bd-e235-4c1e-bdda-3efd12993831",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7ff902-e1a5-422a-9491-734b8fc69491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519129a2-6cea-4536-ab18-9b2112fed605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa8669b-d173-40ba-86f1-d79b10c2eb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5bfbae-0e61-46d3-8398-701d9f0a3cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec76f10-7269-4a4c-acd6-9113408e14bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6d8789-37c3-4e98-990a-450246ad9764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7463d5b5-9914-45a6-aee4-7c21701696e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2abdaa-e010-47db-aeb3-13bb4e4eb0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3f0c27-4fea-488c-b76e-e4c0f5a15dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0960f0aa-540c-4c88-827c-6e8751de7381",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd2df1b-ab7a-4d81-b767-96a44323ca6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a937da3-ab58-4ae1-833c-ceaa15a5e683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c41c43-ea5e-40d2-9143-704c6fd0b05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6ab19c-f665-4526-a43e-72b49f9e8475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b364587d-bf4c-4fc2-be2f-442c789130cb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8cb5b1-1bba-47cf-8e45-f085aa699776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7cbd74-f325-4e9c-b74c-e61f994a02b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d1e866-9adb-42e6-802c-7e5dbbd332f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373cca64-52c0-47cb-8dc7-28147632638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8673bb-248f-4c26-aeae-3d811e032dc9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a85d9a-e314-4379-94ab-9e59b82ee9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b709924-a50c-4a70-b44f-2471c47feac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f8dde-1a99-4c1e-9b47-32e2515d34a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ea499e-88d4-46c3-be39-c1292aa5a85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd7b593-1e92-41e5-b944-5b69e6530e17",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e998dfd4-122b-471b-b735-2cd7ed1f50b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304281f6-3bef-4160-b510-84f8c08a985e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa378b2-2939-4c96-8893-8c84530bcdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d33d0f-f3df-40ac-92b1-9c3371c21650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a495939c-8b7b-4a1f-ae86-bc7d90b4beeb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e633b2-75ee-4c0d-9f81-1a7b9044b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e27538-5a0e-4db2-8bef-3a512268c61e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ae1c64-6d81-4e09-bb69-81faf3504073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e82b7b2-6f97-4c7d-98c4-ed7d960cc41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07220489-121c-4325-a7ed-27f999f4a36f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945baf2c-fc26-40e4-b2b4-ef633e024aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af6993f-2e39-495a-a066-896def87db2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b5ddad-624c-4617-b176-f3ad5fe06263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6bc307-66e2-4995-84a0-e73cf5cf618d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ba18e-aadf-4bc6-bc51-a00927922ebd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877aa708-987f-45f4-88f4-b640e7ed81fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c194090-ac80-4270-a502-a1a0696f0f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d957e1eb-8673-45ca-b47d-3c9e37106721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cf1b0c-c786-4440-a7d1-1b827f345b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb2929-551c-40b0-b956-088f5375cb09",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ff9b1e-e9d4-4cb5-941e-3cc4201340a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fca0673-08dc-40e8-9eac-5909f991db22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a82e5c7-17fd-490b-b98c-cbdd8858b5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fdb06e-cbf3-4afd-950b-a43a9a6ba80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9073dc7-6d5f-4e24-a834-a302dba0a176",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ee8c3a-d875-4bf7-9c5a-4511efb02095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325f3da0-b639-4071-a673-d0024476ce17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d35e356-1e9e-4a4f-8e04-e91618bbb2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6977e0c-612d-48ea-bddb-e43d5ab68473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9e63e6-ed6e-4c03-8449-0b70d08b4629",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d16f69-4301-4074-a7e3-bb71273ff8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9565ae-d78e-4cdc-b9c4-2ff5768292ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c17dc-60fe-4dba-96b6-0e80cf40c5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29181633-0342-4b47-bbe1-fff2d1448a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a6087b-d2f7-42cc-9904-f447cf4ed305",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7c2196-fda7-4fed-bb13-ef2e398dcc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb89f8f7-9ba3-41f2-9db9-f1aa38a210f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412dfa9f-75b6-494b-a24e-b06c5c45c914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12fe4fa-0a47-4fb0-9fb1-242f1c9431b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd83c3f-f0e0-4437-b3e3-d0b56f50cb77",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f9d7df-9de1-44b8-be5a-ce5f6f90ef13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834d8659-57db-43d5-99cc-dcad20516c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6a2c3-3f46-44df-93bb-c9a8fa7662a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062c1ff1-a065-43ec-80b4-09fee9e79cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596839cf-4b3a-42c9-b481-d382c32c29f0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082430fd-d35d-474c-aca8-f4a217a0c0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ddac52-5bbc-4077-a41b-87ee88c6cb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e4a3d6-fe88-4841-92f2-e712e37c9f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380a03ec-1025-49e9-887e-ede07a43e2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec23acc1-126c-4af4-992c-33305974a173",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1221549-7b13-4802-aeac-f5100792222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d00e06-2001-49d8-b65d-4d44d3d912ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0268af11-6c5a-4248-add0-32bd590bf8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c140105e-89f8-4030-8f80-87078e5f97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54415ea4-f48a-45a6-b0d9-468814b7d221",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc2f48-ceed-4f09-b0ce-65153e56ee38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95695d42-26a7-440e-b63c-50c6a57f08a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1be84fc-3065-4276-9ef7-feea9cd49fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f7c43f-2d25-4b6a-a2b3-d7b0832e3c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8708080-107f-4e12-a140-b96fdc9e1fe1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ebd26e-7f96-4180-bc68-52ef597fdddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3ecea6-88a5-425c-ba4f-8b12b0149295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9595f32e-e2b0-4be6-b8e7-8af4b8e9bfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7f1c2b-0a9b-4e99-a8df-8a313d495090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5f5d53-a56a-42dd-a445-de2efc53ad7f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd6bf1-ab2c-4750-83c4-31c0dc52728d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9611eb-1664-4021-a738-ffdabb439a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "246283df-0592-4214-ad01-7cd94c43962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f272f0c9-d512-48b2-a875-2b5a4aec765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12d3ba-4d1a-4b34-a188-f1357d969e81",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f796b9f-3f94-4283-9166-ff2b3aca1030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9ce59f-b45d-4a5e-9f0c-78457b9b1805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c51907e-7b65-41e6-a714-9bbf92fb1041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782f4255-2a4c-423d-80e5-c2d32c4203b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2a867a-1517-4a20-9b5c-2c01b7df9fb0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3e74f4-bc4a-4252-886a-dc8ff73e8971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8139347e-991e-476d-aa25-48048ad70250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41892944-db5d-4462-9b7a-409445af3771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697c79f-3f20-4ca4-89ba-ba9a8efc1cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f755d0e-6fba-4c2f-9643-8f315f141b2f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6296c975-5b4a-41fc-a239-96e0711e5016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2487eae5-1588-4b1c-9e3d-1f4cc9d7cc19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e6c4a2-4f74-4d6c-8de1-2b5e7c31cd0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450cc877-711d-481f-84ee-f24d3b6d3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fc7895-d5d2-4c7f-b351-00e4141fe511",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f5104b-d41d-40b5-8494-83b33fb2b83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d5e131-d391-4ac1-891e-b91347938c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a879688e-b685-4d3c-9ff8-3c0e420941f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52ffcc2-a450-4c0d-acad-f6a0754c0baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdcdfbc-21b1-4246-9bc3-f3fbb7b9a71e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff01ec-8a3c-4a90-8b96-eff27e675b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73899c6e-1442-43b2-a197-f36f2662167f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a196452-f18d-4e50-9bb1-8ae6cc0601cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c35f73-c598-4d95-b4bf-8e8038f289c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f213532-856e-4ac9-b97d-15ec8ee60d5e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7be67d-a984-42ad-9598-a629df15b202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24738c4a-0a25-43e6-baa9-22687a366cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a52ca5e-8ec5-4348-a462-b8f5d9cf4084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8ed416-0fca-4507-b917-8a7c3a6c1c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ebefd9-55a3-4a0f-8270-992fbf0d8a8a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b4dbe-d00a-4fe6-a8b7-fe0811957657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a148109-bfa3-4843-b6d0-7fc3163ab9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc8c73a-82a0-40d0-8478-65a75d00f034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33984f26-480e-482c-9732-94921940c642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1481e4ff-efdc-4fde-bdcb-a4246c7c0d79",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e96f1ab-24f6-4cd4-a5ce-a8481b088ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8599b50-3a86-41e5-8f9a-0eaff914e5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b608e19d-fe33-4a60-9070-7a7406fb5fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ae27ef-a62c-454e-88a5-7ab0daf4477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdc063b-ba1e-40de-a47d-5b9d9d15b93f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac27c35-66a5-480d-b58e-65f04acabace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3f7f48-2e21-409f-9b60-babdc7b8a5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ce12b9-f618-40d1-b98b-2f81ffbf1f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37025fe-f188-430a-bb29-bd4a9cf725b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ae0558-2aad-4f2f-b785-9a1de949e36d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997f01a4-867b-4423-9c76-db0cfd3a7c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1c1e6f-6aa9-4dd6-a96f-a1e52ea3eb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9793f7bd-c834-416d-a9f7-3404323752ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ed8d36-cbea-4efd-8e61-584e78d72630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce3b17a-c547-4cb1-aed0-9b0486c62eca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0358ccb4-8fed-4962-9c5c-65c9e4bab186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc3fec6-56ec-4b8c-a535-80cfdee2cabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3816a3bb-e99a-409e-a856-453cc412e964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd31c95-680a-4a8e-ac03-c8133682d00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5677df3-77a9-4212-82a8-dc53a7471b8e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f80dee-e33f-4bf3-9782-a97ed0eeac81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66004599-defe-4d2b-8041-05d9e4b87a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8127619-4fc3-4943-9524-96a9753ad737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d504998-30eb-4ad3-8846-6ce77540d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e78bcb-4dcf-461f-934e-b18157332a4d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0ab6ed-03d3-42bf-b622-fb4c6291e04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3fdfcc-df92-4c71-a7b5-4e38180e26f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a0e6c-b8f0-48a8-aee4-f40768a86329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3ca7ce-82ed-4e74-9b25-eae9053bf6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62906b52-0c96-489c-9899-934e0f1c1a1a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6027077-bd92-42cc-962f-b39d483edff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69dd944-2939-4b52-8ae5-f6d38853f932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8e2ea7-a760-4d75-805f-1059696c9e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c67ca2-7fce-4191-87bf-9fcc5aff2c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a770c1-41e2-4250-aa39-3801f38c5fc6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8558a8e5-c8e8-4ea3-86c1-bb86e9c412e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764f207a-f576-4682-9b01-77a86c721e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acaba43-52f1-4181-8574-38409cd1e2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da33c617-ca5d-4cbd-9ccb-0918e8c2217d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66351cde-4ddd-468a-b189-9bf8752b1953",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f087bf1-7caf-4a62-abd8-531cdd09ce2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c03d9ad-55d4-45fa-bba7-8fd8e2acbb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d2991c-aa54-4e30-a1e8-03c3eb5a5851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31948740-6e6c-4534-8162-98e44ee4316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cc1e80-80cc-4240-a8f7-0fcc218199d2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902e6690-751a-4ec2-b36c-90d80809bc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f88a102-fbac-4cb3-b170-b44996a2bbbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e28121-d791-4323-8a2a-535f38b437b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e745ec1b-2738-4d92-927c-3cf25c082a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ed501c-c510-4a9d-8a02-64224da476e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f8c918-1b95-439c-adc4-8d7014f6000f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4922f25e-085d-4ea9-a447-4a9cc7e57fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b347991-4b11-41cb-af9c-0906b5ea6e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c650b487-d311-4aa8-bbf0-9f71aee87566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadedd1b-c534-4086-bb94-34bcd18843a3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f56a952-1bae-4f9e-93c9-d74a6fab42b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d7c99e-c250-48ac-8b65-773d14cd1518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43582d2b-aeba-40d9-b083-5e8e56006c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da95f05f-da12-4e8a-b486-5c8d82aeffef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d143f4bb-91cd-48b5-9e1c-81b14b262b79",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7fb684-b5db-4b3a-a0e6-b9768aaaa739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9cec8c-6c03-4a6e-9461-48b217c26c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d26f67-ea80-40e7-9f17-d59c178a7344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420315f4-96f2-4de3-bb5b-d8665b2c0e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf9286f-ae4c-415f-bd00-e7a7de88b1a3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5aed95-8f08-4878-b302-88768cbebb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d25ba0-fea4-4017-a652-11500d640038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d65ef7-5e25-4173-8497-0ac5b69f6bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e34394-31b3-4753-9120-80b6369e9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7951077-3431-489b-8982-8ecc08c14f20",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3301d6-2989-47d5-b025-3b009a39cb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6dec00e-dcda-4483-b6c7-eecb6d96de5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7afd62-3f0b-4d3e-8734-336cfd92992b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb465f6f-18e3-485f-af95-070a7ffec87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137673f8-e9c7-412d-8902-bc025ed2d032",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07cf555-ea6a-4fa0-8891-8a84cca3f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08a0a15-e794-4b69-92bf-cd6bdeac9025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aea3ef-006e-4e6b-b304-b0b202a55abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959dd1a6-6c9b-4340-b575-df905bf2bf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781bbe5d-43a1-46ff-aa9a-2e368db89502",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98548cc-0302-4861-90c6-b223839bdd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91e4241-8a7c-4643-988c-81388fd20082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5055bbe3-82a8-456a-9433-0753867bc71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebfae7a-cee3-47de-b8e3-3286126c6ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019795b0-4b4e-45fe-a4a1-978752c8c49e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f3ecf-3e7d-42c5-84fa-1592a9f4a642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08d424d-4aec-4bd1-a510-fd9c1e729c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b626db-5129-4622-a972-5a4b3df7c4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc595c4-7aea-48d5-a204-dc4ce2471193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0b6c79-2730-467a-8a0e-eb62dc4992b7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35e3bc-9d28-469b-bbd3-70d6d60106f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3de189e-3bcc-4595-acb4-268416f3fb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11370c1-72ff-43ba-9498-034a9efca74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8330ae5e-de14-45f4-b5ed-40c5f33ce124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15acf17e-587f-4d06-8ed3-f16d31c96e43",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2450f014-a225-4e14-82c1-c7acd0b4a712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614767f0-4939-479c-9fb8-ae25a387c08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aa6436-8297-41d9-832a-a661427ee872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8420ff2b-2064-4e0a-acf1-a2f0db239b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f0d9a8-3f5c-4e4f-9ea9-bae24d5bfb32",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555f7be-a0bc-492a-adb7-64bba1aa0ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86319cdc-6783-4a6d-a769-df40ebf92b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5197e5-3dca-4950-bbd9-87695e250d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861d1c4-fbd9-4382-9931-cded36d0c475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16623328-fea7-4970-ad58-2afcbdb7f68b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00412413-ce51-4b2c-9f16-97bec4e52f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f770109-2fb4-4253-805a-a4d6e4c234a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c6964-e005-4450-ae94-e623183ad03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a993b9-7a37-41f0-837c-78bf924010ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3bfa99-f943-459d-abcb-89fa9f08edf2",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9139cb-06d5-48f4-86bf-92786b09f10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d679b792-4995-4df0-89c3-f8e0d9c6c469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2b0889-383a-49be-87dc-a72d25bc9ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f048434e-e385-45f4-a78c-c0ab53fff4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c34ebca-a0af-4c93-a9dd-693fac4e525e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1159bca7-e775-479a-8cde-d805dbe1d788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c06d9f-39e4-462b-b983-492c623eb82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac770ef-0a51-4113-b0d9-2bc3f5a12cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3db5009-7baa-479d-b126-89e00ecc8dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d8e5c4-defb-4bf9-9c0b-dd5889debd20",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd1a2eb-8921-4448-bff0-031455806c5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85336036-806d-46fb-939f-2ec4b9e0cd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43231e9d-9b09-405c-9531-88e0653f5452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddd5552-9ae1-49c4-9d39-55d9b17ac532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39ee291-5315-4ac3-8eb0-77c20c778357",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6728d41d-307b-4e91-8b48-44cd91c60211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa49218-288e-42e8-b790-7ea2a31a63cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42affccf-7598-4deb-95e3-cee1d83e3a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0483b7f8-20ba-4e38-b96b-ece63cb2b685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba5682a-9372-4dd9-ad61-a0d93df60338",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef9b8b3-a47b-4b18-ae36-ccf8d15a9ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e2695d-d3df-4b00-bd27-4da2ee768e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92827ea2-320d-4c8d-b62e-0d11775a28d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a271000a-c58f-4462-8d32-910a98961091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b9849b-8448-4706-83b3-7522e28f60b6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0665d4d-e9e6-4a04-a80d-203dee40b7f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72554151-bb88-4ab2-b1ad-ceadcb3b3b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40594ea5-e6de-486d-94d0-6f51538c9b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5d5132-ed19-47e8-bff2-15b71b2801f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d7f738-495a-47d9-9114-b06b4950e575",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18625f50-e545-4753-b4b6-1020ea2ef962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37661cce-43ae-43be-938f-ec6010b92e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67b923d-4269-464a-b172-49e4664c991e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2377e7a7-223f-48f0-bc6f-05f7d4827f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db90db34-5cd4-4e37-a8aa-f4fe65562202",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac487182-8d60-4500-952c-5de8a987b058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef210be8-4202-42e4-ae62-f33a693e3d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba21afc-3eb4-4c13-aba3-2a8e4cc5f3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ae165-809f-499f-8855-25dd8a0fb00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9596b96b-f247-40a0-b77b-2043af7a0ea7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cefeaee-d56b-49f6-808b-a0ab6d916650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d0dd13-12f7-4bc6-b639-9a26ed442bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d29654-6008-4705-98f9-0bd14f5594e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da118e92-4983-4be1-9ff5-7a6551f55814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf544809-b0eb-4452-ada6-e43bf207cf40",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbcba2b-3d6c-41f2-adf1-59d9e019621f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8816693-632f-44a6-8ae1-5f415acee00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac30ead5-2a17-4dae-b26f-253fc66ac341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05d4ebb-277e-49f1-826a-842dd4bed1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef26287-76c1-4986-a355-e929901bd77b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a395255-86ab-43cc-96c8-4fde16393e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6130cb-a102-4cdc-9940-a1f1acbabb9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd66eb3f-a14d-45dd-bc76-933e1a61cc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb9bed5-08fa-482e-91ce-851b35c4c3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cdbf28-b852-4631-b443-879ae31c97d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c70536e-a752-4a37-932f-cf7467c2d56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac9f854-a4b6-4b1e-b614-e0d35f051b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca6a013-1fc9-4a22-b61a-df63afdcb87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820256cc-28da-48b1-a402-9e9edb577c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4fbb20-12c3-4271-be3a-4d91053a2ebf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb48a9fc-0d98-453d-8735-d28d0df65a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a8aca0-435d-480f-9697-383604816fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d726c756-5342-4d1b-a408-85b7c96bfaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586db1fb-817e-42eb-a1f4-f0cb069cb0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7fbfc5-d473-42b9-b621-0ab088f55697",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c92ede-f653-4321-a402-52caaa4dda40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7aabd3-ba49-4794-b376-39d0f6e691dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30573f3-3c47-439e-ac46-870401cd0a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b4b64d-3bc5-4ddc-8548-fb89154cbe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8edec72-4da1-4dd7-93f8-bc9f4bbc4ff8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d118d31-5dc0-4fb1-b81d-4fb293670966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28acfa25-31e9-4882-98d0-c1bcac9263f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d96b0f-e039-4864-9284-c4c741a75ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e27de0-02a2-413b-bf95-b93643c7f0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e065b1d-f2ce-4b79-9aa4-88f76f417ad7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bde764-fcc6-4dad-ac67-a962ca0cef8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598aa686-17df-42fb-83fe-0baf7c5c41cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333b7131-929b-483a-8fb1-36d79a3e1891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c26bb1d-2b89-444d-823a-e548574a2ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adffb72-59dc-451d-9759-7309b483dcf5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cdb993-2d0b-49e8-b562-ede60114c362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad1886c-ba2e-4098-ad68-092dd50d87ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d77849-14ff-40d4-8986-2ffc09f243d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908dc52a-ffb2-4b87-9a62-9062a61e30bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4603418-109b-415c-b828-4cfabf0fba4b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a351479-3717-47e8-ae82-24b06acd54fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a7bf67-2f63-49d9-b716-b545cf2f1fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb01e8e7-86a8-46f6-92b0-2eef848edd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f36b03-a060-4e24-9128-e7e44b4cb9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff477b3-3d87-4f68-93cb-b73074a7cb0b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1b7b26-00a1-4d98-98ac-c313d39ad08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9738c633-6acc-477c-ba9c-a9edc63767ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd82c041-be5c-4de1-affa-6601a7cd30ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c9e250-0887-4cd1-8bc4-6b90ef526d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf131fe-dee6-4ed2-9b66-a21f359c523c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306b31db-05aa-4a9d-a310-a3e5f28a06bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4123f1-dd2c-44ff-809c-1acd2c523d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36668020-b07d-4a8d-9f19-929d716c47a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d74fbc-791e-4fb9-8035-235983cd0c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2dee7d-95b5-438d-83c2-d18036a86ca4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edbe0e9-69b6-4839-a62e-e47a91e52d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e093d57-e703-462a-8b93-f5e20ef5e3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53234d4a-9fdd-4f5e-ac21-09e71c4f170b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e37631-a5bd-4fa3-8978-f9fc6dacebab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9ee799-5f45-4653-91e7-e5665e4d361f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d718b9-d3d6-4c45-962d-fecd57465694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96598ff6-3302-445a-a8c6-c82ea8913d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0223c14-2d86-4748-8f18-a5ef1f37540d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d16f74-a0b3-4bf9-9bc1-e89a0bc235b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c28d34-65ed-444f-baf9-a1354d3f744c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde406ed-50af-4680-9f73-fc1f544e0bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1beab884-ae14-4547-a01f-376a340d0622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f112f4-f86e-497b-ba7d-696ccdfdce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4ae044-7aa1-480f-9bf1-7445a415c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786ae7de-1561-4d8b-8de8-db0017cc2f21",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0964acab-8510-4364-9d70-e10394d7ae67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9abc55de-3b9f-4a1f-8e8c-0aabaee2a94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6828fd1-cb08-4592-9800-bb4a63b2fdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f80356-359d-4460-894f-29c47bfa3a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c06e5fd-9e5b-4c3c-88e6-8bb60817030f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60246b8-3c18-4e05-9d6a-ee36777ffbe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0035149-9478-4e63-a1e8-87d3af38aa19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9fc97b-9351-4c23-aaaa-ab9dc6cdd46a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bd6429-5338-4e13-a57c-1dfd247d5404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89457d1f-7c45-4497-8339-3594a10e1643",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d334530d-4f34-4b5e-9dd7-6abc1731b092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cdd4a0-036b-4d68-b958-aa8d04fdfe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654e0271-adfb-42a1-9384-8d55e628e57b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc34b32f-3a5e-4ec0-8de0-e3703f236010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de355894-a5a9-44bf-b563-eb9d06c3771c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73683334-c1ef-4b8d-bfc8-6a98d660ce17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d3f1a2-67bb-415a-8d5c-aa8d939bea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058f9ace-9c14-474b-8e01-ef69acd467ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d84b4df-9fe8-4944-a17e-d43b8869493b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a723ce89-2656-4a03-ab21-3b78b2d97f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "430889e3-129c-405a-b014-b782ba253f9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fffd25-a598-4e45-8857-1bcefb3946df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07fa51d2-df23-410c-b350-b40919a87a8e"
                    }
                  }
                ]
              },
              {
                "id": "77d214ce-763e-4d4f-821f-455239ade8c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7e2b094-5fcc-4092-87c0-bbe761d47827",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08383bc4-7d30-4c9d-8070-cba41c7d5e62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f3b6528-dedb-4c64-b166-2c337a9183b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5053c431-fee1-40fe-a3db-54b655507935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b11798f-ae9e-4dab-9012-22be64d93e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a994301-ad7d-42ac-aeb5-77506b7a0846",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57761cf9-5378-42bf-a3a9-ec1c50c0f68d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d708e3c-f2d5-45b3-81af-357043856448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f462c39-238e-4464-8d32-f22b89fa58a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "687fed4d-a36d-429a-84b5-fbef18bc2387"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c82d5efb-47bd-4ce0-bc93-050acad06175",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a71ad9b6-e88a-47c1-9676-4268c4e4ec37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1adcfc86-1d50-422a-8dd6-49e2216ef7cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c814bef-2188-40ec-9fef-2337c3e80e30"
                    }
                  }
                ]
              },
              {
                "id": "124437f2-b6f1-4ea3-8b04-e0f7c5cb8850",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2fc0ce0f-6f6a-40e9-86af-fbf6cda553ff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf93e86-0d7d-4184-950d-42352f679712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1505d2b-f252-40dd-b914-e80e5a784643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0d0481-1308-4735-ad74-17d357b27de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59239902-667f-4717-a494-3f9557b42ad2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6fa36f53-6c39-4008-9c75-cae67eca6eea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63c52b29-e1e1-4552-87c2-90c52232e89e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cb84400-b61a-4eba-9a90-0372eaa6b9cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3cdc8e9c-7ed9-4ae0-8399-79eb0c73c581"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89b92626-796a-4c39-99d4-662a96e87c0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "302ae2da-fb38-4275-b594-2adeb2b83ff9"
                    }
                  }
                ]
              },
              {
                "id": "3861b95d-9235-4740-8e2a-ae7aedd3898b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "142d1984-3bb4-43c2-8ef5-f5c30383ac8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6643e89e-d737-408d-bb75-60dca95e45f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049622eb-b399-423d-98f8-0ecbbc3c1051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e80421ec-050b-4e4e-90b8-6064f2088b8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c9c95d6-6045-41c6-a82b-f376cff5ae29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "63c1461e-9b21-48a3-a00d-22fea44fce41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d51812-2fcb-4432-a921-87180a492404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0997dfed-e38d-4e7a-9e9b-3b3394b3129a"
            }
          }
        ]
      },
      {
        "id": "9d3e3196-bfcf-4443-9fc7-945fe28cbdbc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "20a7f58c-373e-4370-893f-35ae4781b42f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97d86973-c484-4190-ae4b-8b3c53a89ed2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "977ed115-3e32-4812-853d-a3072661b10a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdc401f-d1ba-4d5b-9072-93edf59924a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d7230b26-fac0-4832-b3b3-fc30cbb870e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a681cedf-c2a4-4584-a655-b053dbcd445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "703beaa0-c3f6-4174-89f7-8cf226abc81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e67134-597f-4747-a87c-ca90d9667026",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d61157-e043-4fd5-95ba-05d5394e7335",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d715a1b-8c5a-439c-bcba-1c1bf14d4c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d0af20-8b15-4129-9f26-14e276ea551e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00055b7d-1eb5-43fb-881e-67a54fe05c1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a503006-fa78-45c3-8c3f-e0896e70727d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b9c3327-aa27-4ed3-b01a-dd3ad0d7b9ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34835711-cdde-4dfc-808f-004a43d42c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdb419e1-1cf9-4994-b3a9-883ce06f7f3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70c227c9-d275-4890-a702-d09c085d1012",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2e2d1c3d-80c5-4189-a9e3-90c9a630ca54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "257a343d-e15a-488e-8a40-ecbd472850bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71625a77-61db-460d-90cd-4226de760006"
            }
          }
        ]
      },
      {
        "id": "f358bd70-e0a6-428b-a125-439cc7765399",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "01369206-8bfc-43e0-8426-abd5528515ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f3b84a3-ee55-408e-8e0f-abc4b6ff164a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f371522d-55e5-4118-9743-d17d15fb0165",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5764830-4dbc-498b-ad95-c7713da966f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9097f771-156c-4497-959e-f444baadc18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d85c01b-5150-4fe8-831e-d47e9f0cccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6235c179-59e8-4cb8-9ded-5c02366e83c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5930356-bb14-43bc-871c-b37042786bd9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43a996c-5b45-42c1-9e47-ce28ccb7703d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdff22c-7b52-4320-a55b-31b7d4971086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d917f3-a04e-4d67-92ee-37291956bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4382fc17-5b3a-4e7d-a670-a1502da5bb0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05da33d3-cf67-444d-bed7-7c51e386dec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67666c5d-3d53-4b7d-8c82-e2748e2ee7d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3784af2-5de7-4ef0-b93a-8038e94e1a6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef84485b-38bc-4442-a523-fa03ed335479"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68ac1e9f-cf38-413b-bc83-c63d4ef3522e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1eb2312a-213c-4836-bad9-5570846289bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48005ef9-b4d9-4de0-97b9-c4ebe1302174",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff22aa93-828d-447b-95d5-be1f72e9558b"
            }
          }
        ]
      },
      {
        "id": "44ef9c92-bdec-48f1-9029-3812c6856aa2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "68f6fc10-0aec-440f-a266-4b2a702194e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f866b066-1fb4-4fbb-94c5-5936cecc6cdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccd31bdf-3404-44b9-af03-3c347e2b4855",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efb5e33-6b39-46aa-aae9-250d79fdc6d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef26c535-b014-449d-a890-fc72e5bd745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d07f8-3f7b-4b03-933a-9d519e464c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c87b780-11d7-4da6-bf13-a6998cd94ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bd3eaf-2aab-43e0-9c20-bf741a6a01f3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd9bc6-c9c9-4425-8cf9-4d9cef228dc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9d484153-5086-4efc-8d64-2b812aec6817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83072089-c0b0-4454-8ed7-1daa6870d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51a0aea4-9007-487e-8331-7fbe517908df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33871df9-beff-4bcf-b6fe-441a28d80189",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "082c027c-e660-4a52-b444-078b7620d825"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97cdb32e-81bb-4d47-aacb-a6f70a232796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2722ce2-623b-43ac-9ea5-f4d38f726031"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6694312-47de-4585-806f-53d708748acf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c5a98cb-c1aa-4975-a500-8fbe398cbc8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6a08665-afed-4a7a-bc1c-11026536e1ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2494d391-90a1-4a77-8f4d-dcde18bf8f64"
            }
          }
        ]
      },
      {
        "id": "4e2e16a2-eb1b-400a-9d99-57ffcb56c7c3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aaf7152-1963-45a2-b8ea-87593a8a11c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "034625c1-c971-4c42-941d-b0b48e842d05",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2516f5ab-3909-4a9a-b806-c5748cad638a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9344562-4677-4be9-a8c7-c9b52621ea79",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8cabf75-f006-45cd-af68-73d4f9ce769c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 869.0692307692306,
      "responseMin": 7,
      "responseMax": 7943,
      "responseSd": 1030.035363011027,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682383036318,
      "completed": 1682383276217
    },
    "executions": [
      {
        "id": "bdfc9ae2-e533-4078-b346-82c4f0fb387c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8178d9f1-a8a0-410e-97d4-b9f3f2a578a8",
          "httpRequestId": "b10d5cfb-6f37-4824-bb20-d432a1c90561"
        },
        "item": {
          "id": "bdfc9ae2-e533-4078-b346-82c4f0fb387c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eb4f2b12-c364-4b5f-a4f0-b5fa4d5e624a",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "a2b73521-6951-45d9-b5d3-9ccfa13d3583",
        "cursor": {
          "ref": "a0cf26b7-cce0-48a2-93f7-cbf807e591dc",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0cd58889-31f2-4f35-82c8-cba7e038adaa"
        },
        "item": {
          "id": "a2b73521-6951-45d9-b5d3-9ccfa13d3583",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "335b7a66-1371-4431-8432-eb3836a46817",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "2f15c84b-91d8-4493-b6fd-4362d5d3ee43",
        "cursor": {
          "ref": "78340e70-002c-456c-a77d-f4fce86950fa",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9f5bbfb8-ef0b-4f97-ae1d-c1f48e219fb6"
        },
        "item": {
          "id": "2f15c84b-91d8-4493-b6fd-4362d5d3ee43",
          "name": "did_json"
        },
        "response": {
          "id": "1fa6f2a5-75b2-4e53-9172-c27226c15b81",
          "status": "OK",
          "code": 200,
          "responseTime": 1195,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ada71-77a2-4180-b487-a2c4cd7a9cd4",
        "cursor": {
          "ref": "e7745051-76fa-46d7-b569-2222ab8200c0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f90f69a-fb29-4580-9779-29d23bd302c5"
        },
        "item": {
          "id": "da2ada71-77a2-4180-b487-a2c4cd7a9cd4",
          "name": "did:invalid"
        },
        "response": {
          "id": "7559827e-a7e8-4c7a-95de-6f34f0f191d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ada71-77a2-4180-b487-a2c4cd7a9cd4",
        "cursor": {
          "ref": "e7745051-76fa-46d7-b569-2222ab8200c0",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5f90f69a-fb29-4580-9779-29d23bd302c5"
        },
        "item": {
          "id": "da2ada71-77a2-4180-b487-a2c4cd7a9cd4",
          "name": "did:invalid"
        },
        "response": {
          "id": "7559827e-a7e8-4c7a-95de-6f34f0f191d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25653dfb-c243-462b-bf20-5e10472db921",
        "cursor": {
          "ref": "09d0ef02-291c-4726-a7a3-4fef28c64a4b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f4f8cef9-d9e7-4277-b01f-a8fcd78d5c93"
        },
        "item": {
          "id": "25653dfb-c243-462b-bf20-5e10472db921",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "824764c8-95d1-4ad9-9e43-ffc47fed7786",
          "status": "Not Found",
          "code": 404,
          "responseTime": 777,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af0bfbd-540a-4068-b1ad-95d7f0d327f1",
        "cursor": {
          "ref": "9f19f49f-a632-4397-b098-e91550e28c3f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d0bc42dd-1120-464d-bd83-204b0a40d524"
        },
        "item": {
          "id": "4af0bfbd-540a-4068-b1ad-95d7f0d327f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "37c2391c-47de-482a-963c-0885bd3bfee0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1004,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac6234-6514-4261-878c-c66849ea7898",
        "cursor": {
          "ref": "969b6797-38ff-49e0-a1f0-716b7c9e85a5",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f6d23edf-9623-4ccc-b9e7-03d1f711feed"
        },
        "item": {
          "id": "9eac6234-6514-4261-878c-c66849ea7898",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "108b1d50-09bb-454c-92ee-df85fa33e003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decf2048-782f-4aa6-9127-66d20769ec26",
        "cursor": {
          "ref": "c8054b0e-2805-44d9-997e-bf33d6d63492",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f986be5e-958c-4ecf-ae0f-95d483e1379e"
        },
        "item": {
          "id": "decf2048-782f-4aa6-9127-66d20769ec26",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "36badb0c-9e1d-4fb4-afc0-c35a7355feda",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 677,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decf2048-782f-4aa6-9127-66d20769ec26",
        "cursor": {
          "ref": "c8054b0e-2805-44d9-997e-bf33d6d63492",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f986be5e-958c-4ecf-ae0f-95d483e1379e"
        },
        "item": {
          "id": "decf2048-782f-4aa6-9127-66d20769ec26",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "36badb0c-9e1d-4fb4-afc0-c35a7355feda",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 677,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65a56f0-3714-41d7-9a4f-2dfb6aff14d2",
        "cursor": {
          "ref": "f8fe38ce-f412-4d5e-a579-18113d8edf4c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0eef788e-7365-4b93-bbaa-33ee1670ecb9"
        },
        "item": {
          "id": "b65a56f0-3714-41d7-9a4f-2dfb6aff14d2",
          "name": "identifiers"
        },
        "response": {
          "id": "3775c5d1-f02e-49d8-a6f8-14264d478034",
          "status": "OK",
          "code": 200,
          "responseTime": 1203,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7526ac-f668-4c3f-a236-1aaf0077876b",
        "cursor": {
          "ref": "b5325bed-ef2d-4949-8c0a-942df7cabed9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4767037-9ea7-4954-a401-5ad088cedb88"
        },
        "item": {
          "id": "9e7526ac-f668-4c3f-a236-1aaf0077876b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "80806ae5-61d8-4d92-b1d1-095280f26946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7526ac-f668-4c3f-a236-1aaf0077876b",
        "cursor": {
          "ref": "b5325bed-ef2d-4949-8c0a-942df7cabed9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4767037-9ea7-4954-a401-5ad088cedb88"
        },
        "item": {
          "id": "9e7526ac-f668-4c3f-a236-1aaf0077876b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "80806ae5-61d8-4d92-b1d1-095280f26946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b42b293-437b-4f78-a63e-4f5b9887b384",
        "cursor": {
          "ref": "49ef7c40-dfb5-40e2-aa0b-6ca482952a62",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c7952d79-66fc-4de0-bb56-d65d36d2d222"
        },
        "item": {
          "id": "6b42b293-437b-4f78-a63e-4f5b9887b384",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1772ba7-d63e-4718-ab37-9823ecd6730f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80e4272-795c-4b99-b799-e6f377e56e66",
        "cursor": {
          "ref": "55c000c1-b646-450f-be2e-c569398ae0b8",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5dd37b5b-d739-408e-ab77-d0d7aaa0e14d"
        },
        "item": {
          "id": "c80e4272-795c-4b99-b799-e6f377e56e66",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df99251a-598f-4bb5-b128-921a79eaa499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e846b38-faa1-48ef-a75d-e245366c4720",
        "cursor": {
          "ref": "b3962478-b2be-4a28-bfc4-3887be62dbac",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b593fb24-07e1-474b-94a1-66c627893b2d"
        },
        "item": {
          "id": "8e846b38-faa1-48ef-a75d-e245366c4720",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "859cc074-6f3e-4461-830a-96f06a13703a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24ed5a0-1b0c-47d9-a9b9-755aa26afa7e",
        "cursor": {
          "ref": "fef09484-faf8-437c-a46d-11b20aaba5a9",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "97ddd3cb-0a81-4e3c-8aa3-1a3d9bf6c91b"
        },
        "item": {
          "id": "e24ed5a0-1b0c-47d9-a9b9-755aa26afa7e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a7a2383d-ec41-4d79-a20f-5df361e48f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43d7b87-469d-494a-ad18-56a2f6bd9442",
        "cursor": {
          "ref": "4db35918-6330-431d-8a2e-9452a29f4912",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "712b1db3-7ed7-486e-8569-a33f7e530c17"
        },
        "item": {
          "id": "c43d7b87-469d-494a-ad18-56a2f6bd9442",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f036f323-4ced-471c-8337-023ac7ce2ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d929f788-3817-4909-8c3c-5960df80ac31",
        "cursor": {
          "ref": "78fae403-3822-4aa7-af7a-e2cadb8c1beb",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa6f1825-ccb2-4a3f-8743-b2f1c0f9e1c4"
        },
        "item": {
          "id": "d929f788-3817-4909-8c3c-5960df80ac31",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9b9150db-90a7-493e-848e-229a814e83e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0053c84b-328e-4b6b-8a89-6a351e924977",
        "cursor": {
          "ref": "9b13d0b8-e5a1-4dc8-92d1-505b8c6f1dc7",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1ab2e982-8fec-4227-a921-dcbba18eef5d"
        },
        "item": {
          "id": "0053c84b-328e-4b6b-8a89-6a351e924977",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "04bde764-7aef-4494-9b40-4004728b7b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b83065-a49e-49c6-8ec1-78873548cfd6",
        "cursor": {
          "ref": "749429dc-ae77-4bdf-848b-84548f2ba2ab",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f30b310c-0c20-412b-a39f-8ba9455b8831"
        },
        "item": {
          "id": "e6b83065-a49e-49c6-8ec1-78873548cfd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b415da14-ae6e-4d9e-bb16-695cf9eff4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2fa94-8fa6-47e3-a6f7-858e090577e3",
        "cursor": {
          "ref": "1bb8a1f3-fff3-420d-8769-a610d5b9ce5e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ac4d1f9-a170-4c95-902f-5d4db515744b"
        },
        "item": {
          "id": "5eb2fa94-8fa6-47e3-a6f7-858e090577e3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8ab4c49a-433e-4c7f-91c1-c4ab7749f13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ce7e01-dec3-4838-90ec-796bd0e93c68",
        "cursor": {
          "ref": "2c33452a-a688-4864-9830-55715bb3474d",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0794d9b0-1512-444a-8ccf-1d9a3001157e"
        },
        "item": {
          "id": "85ce7e01-dec3-4838-90ec-796bd0e93c68",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "04cbc8d2-8431-499d-a2cc-8e7c662bc345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d01c1-26f6-4f3e-bcd3-4be609080bdd",
        "cursor": {
          "ref": "02118790-4968-40b1-982b-3642fe889d38",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8c63ab5d-cd83-4420-97b4-ec361fcaa449"
        },
        "item": {
          "id": "fa1d01c1-26f6-4f3e-bcd3-4be609080bdd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "294372b9-f087-40a1-8e5f-efb41e1713ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb2bb9f-cf1f-40c4-967e-ceee41889fa8",
        "cursor": {
          "ref": "1c58e9a8-ff85-4a16-8781-efa37a6c0e3e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9082a356-c8fb-4bb0-a6a6-7ebacd19bf34"
        },
        "item": {
          "id": "8fb2bb9f-cf1f-40c4-967e-ceee41889fa8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "22183382-6081-4b5d-beef-30e0ab5efafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd6511a-b51d-4b29-8d16-d4e5d33516da",
        "cursor": {
          "ref": "b979bc99-3903-4fe3-babb-102c40b81b1e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3642e06c-55b8-479e-b10c-4a9d1504f30b"
        },
        "item": {
          "id": "5bd6511a-b51d-4b29-8d16-d4e5d33516da",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3a0c985e-d6bc-41e2-a05a-4d7e3a64458d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451260f1-35d8-4dd4-bddd-f230212cf8a3",
        "cursor": {
          "ref": "055b5e92-1dc2-4ffe-8c69-1e433f273411",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bfc5c704-e061-48ec-85ad-50fd92e9b62a"
        },
        "item": {
          "id": "451260f1-35d8-4dd4-bddd-f230212cf8a3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff813ea9-afce-45a1-a7a3-b6694afc47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981495af-acf6-42e5-9317-5ee02fa3bd8a",
        "cursor": {
          "ref": "4fd255ff-4022-43be-b977-e74e462e12f9",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "50a6a3ba-861b-4dc3-b95f-c27ffd42ee69"
        },
        "item": {
          "id": "981495af-acf6-42e5-9317-5ee02fa3bd8a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "641c582a-9002-431a-90c1-a2646194ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7937e8-2956-4f72-946c-b25b0397d4c4",
        "cursor": {
          "ref": "4ecbdb1e-43d3-4017-b133-6607021fa8db",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f93123f-b96a-4bc7-a01e-673f60852d7a"
        },
        "item": {
          "id": "2a7937e8-2956-4f72-946c-b25b0397d4c4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5428b11c-229b-44f9-9c48-07cff4134a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90db002f-a026-4040-bc73-982660cf6ebf",
        "cursor": {
          "ref": "f7557ae4-0df4-46d4-9b12-da9f44cc45c6",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5ddaed8e-2e29-42d7-a96e-cabc52bca7a3"
        },
        "item": {
          "id": "90db002f-a026-4040-bc73-982660cf6ebf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9771bd94-aaff-4cf5-b4c6-d3739bee463a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1225,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e59e3b-9ebb-4e6a-8cce-587a1090bf32",
        "cursor": {
          "ref": "ce0e642b-df02-4a53-b3eb-92f0828b8ead",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b28dc35f-847c-48f7-8094-b00d5f929092"
        },
        "item": {
          "id": "36e59e3b-9ebb-4e6a-8cce-587a1090bf32",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a91088ab-97d1-410c-9f33-0c9baeb6d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1295,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2459037-7d34-4f73-8d19-cd284d1755c9",
        "cursor": {
          "ref": "1ba4edf9-ca39-4489-afcb-e537800239d1",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "83effb35-3f38-4c1f-a17e-aa63a4825550"
        },
        "item": {
          "id": "a2459037-7d34-4f73-8d19-cd284d1755c9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9cc0b8a6-bb27-45d4-8cf0-6a8329530037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1131,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1a0edb-c36c-4322-a183-0af94c16f77f",
        "cursor": {
          "ref": "375ca902-8eda-4323-bcf4-73ddc935d737",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89572135-f25a-477e-848c-99e994eb7c30"
        },
        "item": {
          "id": "4b1a0edb-c36c-4322-a183-0af94c16f77f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f3bc7d6c-62e4-467a-97bf-73dfa8215d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82e32a-ad2c-45e2-8632-ed50145c8b4e",
        "cursor": {
          "ref": "0331506c-23f2-4bc4-a99a-9dc4d89781c2",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "65ded26f-b9ea-4b23-a9e1-a633e40d4b37"
        },
        "item": {
          "id": "dc82e32a-ad2c-45e2-8632-ed50145c8b4e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0dfaf0f8-b198-4085-bb50-cb8f72fcc126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad244ea-ca77-4807-be18-8da7774659a3",
        "cursor": {
          "ref": "22de33b8-7448-4ac0-90c5-d9f66eddc4a5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a4669280-dc2f-40e9-ae73-b37f8f87da7c"
        },
        "item": {
          "id": "3ad244ea-ca77-4807-be18-8da7774659a3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e2d5a69c-d2e6-4dc7-aaea-37a2033a0eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ddf3b-a363-4c7a-aef1-b2800a207e0e",
        "cursor": {
          "ref": "439bf551-3ca7-434d-b5e9-2a4f86879922",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2260e594-0cbc-4c66-8c1e-15288cf17d48"
        },
        "item": {
          "id": "4a7ddf3b-a363-4c7a-aef1-b2800a207e0e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2fc62d7b-bd01-4b10-9fed-d2bf183ed789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c274e87a-1eb0-4472-87d1-808598d87e63",
        "cursor": {
          "ref": "dcb52fb1-4ec8-4adc-8a31-b06a86ea46b9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b7e14bba-b2ca-4425-a3c8-d2466eec2b60"
        },
        "item": {
          "id": "c274e87a-1eb0-4472-87d1-808598d87e63",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7c4e04df-ddd7-4aef-a939-3b24acde4dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618c015d-8c98-43b3-ad8c-38308a559cab",
        "cursor": {
          "ref": "d618f0ed-a0da-402f-b086-4c8a00b6afc4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b1b65a0-a7ab-424d-baf2-ab5ef180b988"
        },
        "item": {
          "id": "618c015d-8c98-43b3-ad8c-38308a559cab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c1563297-ab70-4d80-897a-7cb27e0ff0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eae956-1378-41a4-bd8d-9606e1522625",
        "cursor": {
          "ref": "d39f63e4-16b2-4797-a640-7712d06babc4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3b2971ad-5e03-4049-8ac4-fbdabce72c3b"
        },
        "item": {
          "id": "08eae956-1378-41a4-bd8d-9606e1522625",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a8efeb31-1c99-47dc-800d-421ff2a8134d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553c4f4-5d7a-4512-a10d-5015055c3f3f",
        "cursor": {
          "ref": "38a5869f-6ba6-4ae7-a6d2-8f1e3e665314",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6792e56e-407c-4ad8-b4b7-015408642194"
        },
        "item": {
          "id": "4553c4f4-5d7a-4512-a10d-5015055c3f3f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ef682112-449a-4999-be83-b116d6e9575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f2479-7087-4b39-9038-060b020b1f33",
        "cursor": {
          "ref": "ed73474d-9cf7-49a4-a5ec-3a66b74203cd",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c918aa9-bbde-4f72-b14f-f9f2d30212c4"
        },
        "item": {
          "id": "d37f2479-7087-4b39-9038-060b020b1f33",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b13d1cb6-0ad1-40b9-940a-0b31b5e1100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191d7d52-10fe-4a50-9e24-dfa425d34d17",
        "cursor": {
          "ref": "2c7ac63d-2322-4eb2-921f-da8bda201a41",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1aee6c51-d19a-4f8a-aa4a-4de21a42e1f6"
        },
        "item": {
          "id": "191d7d52-10fe-4a50-9e24-dfa425d34d17",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ddf3eb80-e402-4264-8821-7162dc87e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abf1504-d8b8-4c54-806b-d0ef48e169ee",
        "cursor": {
          "ref": "85c19758-84c4-41ee-b8a7-b75008eb3f06",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a6f73d61-6fd2-4c60-859b-fe9f380c2d49"
        },
        "item": {
          "id": "6abf1504-d8b8-4c54-806b-d0ef48e169ee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1c78f815-3f92-41d5-bde4-6a3b8a409a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf781173-e915-4797-9488-ceee74184c7e",
        "cursor": {
          "ref": "b4a30029-22dc-4867-b287-f1bb86702744",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4e4a8fe6-0747-4d99-bc67-1f271e334201"
        },
        "item": {
          "id": "cf781173-e915-4797-9488-ceee74184c7e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a5812da3-581e-40cf-9ad4-15c66ed8d53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489e3efa-f055-4e4c-ba1c-025774d6b773",
        "cursor": {
          "ref": "828f5ce9-8504-4d33-a0ac-c8a7b8a788b4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "89455c13-5cba-4a55-a6f2-f7b9b5068b97"
        },
        "item": {
          "id": "489e3efa-f055-4e4c-ba1c-025774d6b773",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7642de17-7de5-4134-abc6-705663cee861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b42bd8d-0e28-48e3-8752-fff6aae1f93b",
        "cursor": {
          "ref": "cb6cef79-cb25-40a6-8d9d-0431f8740f59",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0db74934-f8f0-4255-a2a9-64b406b2b219"
        },
        "item": {
          "id": "5b42bd8d-0e28-48e3-8752-fff6aae1f93b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a16f3144-1ea3-4eb0-bae0-ad032e9548aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5abb4b-d230-4af8-aef5-3ddd0e60b1bc",
        "cursor": {
          "ref": "c4428596-e3f2-4b9b-8ef8-51fb490f66d7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "81717697-8c3e-45a7-9195-911abe94c9f6"
        },
        "item": {
          "id": "1d5abb4b-d230-4af8-aef5-3ddd0e60b1bc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0301762e-0263-4ed5-bc45-5618d306582e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3cd0a9-ecf4-441e-af6b-39755a2f0dbe",
        "cursor": {
          "ref": "9e336839-93f8-4d75-88c9-096477ba652f",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4b66e7ea-315b-467b-b301-a74d14cc041d"
        },
        "item": {
          "id": "8d3cd0a9-ecf4-441e-af6b-39755a2f0dbe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f815fa2f-8d10-4282-88dd-a1442e900bf0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 815,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c9a475-1b8a-435f-8332-dbd3a13d1b4a",
        "cursor": {
          "ref": "776527aa-49ea-463a-9dc0-d9b3705ee8e9",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "86495b0f-2a24-4d97-bff8-6f947eb269c1"
        },
        "item": {
          "id": "35c9a475-1b8a-435f-8332-dbd3a13d1b4a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f617f0d7-ad29-4a57-a199-0c821d31d1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3997374d-1484-4f24-bfa3-106c4e645951",
        "cursor": {
          "ref": "d4625b2a-9b0d-4173-9909-0378563fdbb7",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a3710c0-2d4b-44d4-88f5-a6e0d631f280"
        },
        "item": {
          "id": "3997374d-1484-4f24-bfa3-106c4e645951",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "de6282f4-1b75-4a46-a022-984048875e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3587d9d9-50aa-482e-b58c-763dc4aae13c",
        "cursor": {
          "ref": "6945428d-17eb-4c91-a756-7d8ae4939485",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0b1ce7f3-5769-4e89-8cba-cabcbbcc7796"
        },
        "item": {
          "id": "3587d9d9-50aa-482e-b58c-763dc4aae13c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "582312e6-25d2-42b0-90c1-b610c099fb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03814df7-0ab3-4bb0-8d3a-639d09a410fa",
        "cursor": {
          "ref": "c69c033e-e8c3-4bc2-8a83-1b516727e306",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0551d822-44da-4e24-8611-f38349aaf7b4"
        },
        "item": {
          "id": "03814df7-0ab3-4bb0-8d3a-639d09a410fa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d6a70774-e821-4490-a833-f5c1eafc0246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259a2f3d-2e2a-4588-9651-771d428219db",
        "cursor": {
          "ref": "d5ae5e01-e380-487a-9320-b6e7a88c6e69",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "506408f0-1c9e-4032-a10b-c469ebc1eda4"
        },
        "item": {
          "id": "259a2f3d-2e2a-4588-9651-771d428219db",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cde9ba12-51f7-4d25-809b-b6b5abd21f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a42dc-1ab7-48ec-a752-7f6f26426c75",
        "cursor": {
          "ref": "ac83f6ac-d618-44c8-854a-8d375d05535d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ab351d2e-0875-460c-8651-9f7e2d31f44a"
        },
        "item": {
          "id": "4b4a42dc-1ab7-48ec-a752-7f6f26426c75",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "601f35b2-d8f4-4b8d-a2f0-4569c3c9e324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1176,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744722b-8b78-4eb3-905e-5b09e68be90a",
        "cursor": {
          "ref": "72844366-1f05-4c86-bdab-68969b18b8ad",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2b825a24-2343-4abc-b4d4-4ad925e3dc8d"
        },
        "item": {
          "id": "3744722b-8b78-4eb3-905e-5b09e68be90a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5d1ca599-640c-4da6-9c09-5701fda7b138",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1485,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947c2a72-1491-4bd4-b551-43a16aa468e2",
        "cursor": {
          "ref": "23c6e9c4-2dd6-4948-b130-1f6a6a5c7496",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d7c135fa-8aaa-4db6-84fa-b641a337f9c1"
        },
        "item": {
          "id": "947c2a72-1491-4bd4-b551-43a16aa468e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "928aab66-664e-4405-9c7b-6c36f4a4278c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1485,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552de93f-3830-465c-81c7-f40e7ce5b927",
        "cursor": {
          "ref": "10d7cc03-a26a-4571-a452-d1fdd4a19969",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8a89c30f-a96e-4a3c-9cc6-5a4586792d28"
        },
        "item": {
          "id": "552de93f-3830-465c-81c7-f40e7ce5b927",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f0c9c9d9-761d-4cbb-bd8c-87d01fede3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1498,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00712ea-9a42-4e5e-b1be-b34505c9470b",
        "cursor": {
          "ref": "747177ba-b192-4d37-8398-37ef65be2240",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "59cc257a-4ee1-4b38-861a-7cb8f33c4fb7"
        },
        "item": {
          "id": "e00712ea-9a42-4e5e-b1be-b34505c9470b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f8500936-a253-41cc-b1eb-66534f0b0904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1326,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf83aee-4803-41ed-9f0e-2395a9259a2f",
        "cursor": {
          "ref": "a2175cf9-043b-4e04-8235-3e5df5eb013a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cf23e583-9cbe-4f4e-8b62-a9d50cfdec8f"
        },
        "item": {
          "id": "5bf83aee-4803-41ed-9f0e-2395a9259a2f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "60b7910f-4e11-4e1f-94c4-8aa84aaf5c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1216,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08d71ac-f18e-47e2-8534-df3da57e67ef",
        "cursor": {
          "ref": "f015f0cb-2d58-431e-af15-168cda013395",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2a8fe49f-4c60-4493-b6f9-35deaebac403"
        },
        "item": {
          "id": "b08d71ac-f18e-47e2-8534-df3da57e67ef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "29a7c62b-6d9d-4713-8289-015be13ae821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1239,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc1b2f2-2c91-498b-9258-4c978a055791",
        "cursor": {
          "ref": "5812536d-3d36-42ac-a32f-15311d046a24",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c544fbe4-8a64-4289-b0da-c6f628e2e060"
        },
        "item": {
          "id": "afc1b2f2-2c91-498b-9258-4c978a055791",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "37c5bbe5-3f32-4427-a25a-089a6a904591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1378,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235ef80-49c8-435c-888b-bc9a2bec4526",
        "cursor": {
          "ref": "e47f47fe-52bd-4ea9-a4af-9e8aba01dcc8",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7b15effa-ff28-4496-b05d-0c7423fd96f2"
        },
        "item": {
          "id": "f235ef80-49c8-435c-888b-bc9a2bec4526",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9f0b5d6c-e97d-4c78-887e-249d4be47e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1322,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c81e8f-c2c0-4fe9-864e-678210dcaf58",
        "cursor": {
          "ref": "ecd33a3a-13dd-4261-9bd8-96e7808d5317",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cafa86a3-353d-4054-a08e-23d4ea044dac"
        },
        "item": {
          "id": "14c81e8f-c2c0-4fe9-864e-678210dcaf58",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9a3538ef-8793-40e3-b25f-634f1a383e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1203,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1e4f69-d76e-48d3-8e37-e2fbb33aae72",
        "cursor": {
          "ref": "bb187d00-12b0-4c2a-a351-888c44c52f89",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3028f79-0448-41a9-a7e6-1e5d7e224cb9"
        },
        "item": {
          "id": "8e1e4f69-d76e-48d3-8e37-e2fbb33aae72",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2f843ca4-4137-470f-9dc8-fcaa43395748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1122,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7a113d-3038-49d3-a1fc-de80ad74306c",
        "cursor": {
          "ref": "a27544c0-843f-447b-b6b1-874e29ec4520",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "395280ce-bf90-4414-8816-9bc3d70bcc47"
        },
        "item": {
          "id": "1b7a113d-3038-49d3-a1fc-de80ad74306c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9b19e966-78af-4b20-9450-fcbe9b7cfc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de3b0b1-edbb-43a9-a313-c84eca4bbc08",
        "cursor": {
          "ref": "4b14d679-62ac-4c47-a422-91691ee5ee64",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d0614ab4-299d-42e6-b28d-6896ce310351"
        },
        "item": {
          "id": "8de3b0b1-edbb-43a9-a313-c84eca4bbc08",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b722f3c6-5328-49eb-b561-fb57a41ee6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c08b15b-265b-4b48-b116-964afd078466",
        "cursor": {
          "ref": "3265c9e2-3c6e-4872-b436-1a524c347157",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e560ce55-0307-459d-90c2-ef6b9d5381ee"
        },
        "item": {
          "id": "3c08b15b-265b-4b48-b116-964afd078466",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c224abfb-3211-4fe5-bdc1-d1f18108f9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cf55c5-5fe2-4639-b477-058a52b399cf",
        "cursor": {
          "ref": "20b7d331-1ad1-4bf6-aa63-3c6ed92ccdff",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ffd3ce8d-9acf-4bdb-ab4e-c147e40d1c5a"
        },
        "item": {
          "id": "a4cf55c5-5fe2-4639-b477-058a52b399cf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9e61fb85-5451-404d-b861-e8aacf13e045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc4420-5cfd-442e-bcec-0cc221671248",
        "cursor": {
          "ref": "8ff2bfd6-9769-4038-b4a9-7f2be1f14d13",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fc4b61a3-7e55-4884-a6e0-6cd3b5799470"
        },
        "item": {
          "id": "90cc4420-5cfd-442e-bcec-0cc221671248",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "61fd5f98-60b2-4652-a746-9ec6646b32cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f702e7-7f65-48f3-886c-894a69673d3c",
        "cursor": {
          "ref": "803b7ef8-e17e-4bcc-86a1-3923c2d0122b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "811fd492-0d00-46ba-ad6f-f6a0e0311a75"
        },
        "item": {
          "id": "24f702e7-7f65-48f3-886c-894a69673d3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a9bf86a0-8e2f-474a-8bc7-f2adf01c8bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab32e5e4-d1a3-48a9-80f1-38c699070be0",
        "cursor": {
          "ref": "85d75ef5-4915-4eb7-b1e6-7a231e71d4c7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2a5fa597-bf45-41ba-8360-ff92229e08a2"
        },
        "item": {
          "id": "ab32e5e4-d1a3-48a9-80f1-38c699070be0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "11a102d5-9f90-495f-a1a0-b46ac1d1bf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99921319-b698-40ef-a358-852e13081d72",
        "cursor": {
          "ref": "50a0b330-e8f7-4d72-a863-23801f5ef326",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dc4bb02c-b5bb-406c-a872-7e57c71808a3"
        },
        "item": {
          "id": "99921319-b698-40ef-a358-852e13081d72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f435fa50-dbd5-474f-9173-7c05702549c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445daa12-fb56-452d-b32b-95f9d454488d",
        "cursor": {
          "ref": "51c6ab2a-033a-4fbe-93cb-66e1cde4c605",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca700e9b-7bb7-44b7-aa58-c28a242b0e53"
        },
        "item": {
          "id": "445daa12-fb56-452d-b32b-95f9d454488d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c2924f6b-3a46-4fd0-8fab-de0af3a66197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fc42be-65d6-468b-9fa3-720351d9f627",
        "cursor": {
          "ref": "023d3304-3614-43f4-8e32-35d0ef747897",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f8a24a67-6eec-4806-b8de-287559fbc3c7"
        },
        "item": {
          "id": "11fc42be-65d6-468b-9fa3-720351d9f627",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af313714-d980-4192-a9f8-e59c5bafbea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e9b4ae-fe83-4706-9e7d-fc114b724f84",
        "cursor": {
          "ref": "41d3a4af-14b6-4047-b19c-53d63fe78df0",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cdec772f-afe9-47ae-b373-fbb9708c4d26"
        },
        "item": {
          "id": "65e9b4ae-fe83-4706-9e7d-fc114b724f84",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "363eab54-f2d3-41b2-8bbd-1c7729d3713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a79c1c5-c5d8-4367-aaaa-bdf7326b5dd2",
        "cursor": {
          "ref": "6de46119-79a5-441c-a69c-890ba08582bf",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "98eaac94-2702-48c0-be2a-0d2289be7bcc"
        },
        "item": {
          "id": "7a79c1c5-c5d8-4367-aaaa-bdf7326b5dd2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4e99745f-8df2-4d04-9de8-3c0e71df71ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f97e7c-74f5-4684-bf88-1b5bfd177bc5",
        "cursor": {
          "ref": "0118f96a-d492-4663-aa09-6d1d739f2231",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ce5c5ccc-260f-4560-acdb-fa278d4088b5"
        },
        "item": {
          "id": "e4f97e7c-74f5-4684-bf88-1b5bfd177bc5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3bdd41e1-a35b-441d-b649-c859dbd7360d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa05a7-e013-44da-8305-6ad8c66d8402",
        "cursor": {
          "ref": "78dc4e42-6e7e-46a6-a6d9-d9de69f87454",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "50a8ac0a-6964-4c49-b185-977089b137b0"
        },
        "item": {
          "id": "6eaa05a7-e013-44da-8305-6ad8c66d8402",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81afad40-fc8a-44b2-875e-1a859a687bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef8f5ba-4b09-4dec-9f3e-7f90d960f6ea",
        "cursor": {
          "ref": "b78f9de7-6cb5-4868-a605-1e07fa92375f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cbdd9a13-8f70-4635-a79c-cc92a31da873"
        },
        "item": {
          "id": "0ef8f5ba-4b09-4dec-9f3e-7f90d960f6ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8cdbe68c-c8fa-4372-aeed-97d7807aab26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ef3d33-abbe-4025-867e-7f80e0313f31",
        "cursor": {
          "ref": "271f11ad-3023-4d56-ac22-08c908590e56",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1bf194bf-df3d-43e2-a919-4261f8d25352"
        },
        "item": {
          "id": "f0ef3d33-abbe-4025-867e-7f80e0313f31",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "54169e86-7511-46be-a912-64eb404ddae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06771284-3f6a-4293-820c-f559879b996a",
        "cursor": {
          "ref": "151eeedd-ee66-40b2-ac4c-e573a426be36",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b3065a0-f16c-4638-b70e-8f408b571710"
        },
        "item": {
          "id": "06771284-3f6a-4293-820c-f559879b996a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c1241d5e-412f-4ff8-b69c-9e4b74291825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9411792-3463-4382-823a-85e596cd9012",
        "cursor": {
          "ref": "d4d8754d-c002-4ab4-86ef-764750368be6",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24ad97cd-2c94-4b59-89c0-c57f72587832"
        },
        "item": {
          "id": "a9411792-3463-4382-823a-85e596cd9012",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "be63e398-d32d-4a27-a9a7-3ac17225417a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51cd01e-58a3-4c14-8932-d8e15ba85ef3",
        "cursor": {
          "ref": "8ad6b14a-4914-4f86-b992-455d8e97f31d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d4991609-d895-48ef-af02-cdadd304f0bc"
        },
        "item": {
          "id": "a51cd01e-58a3-4c14-8932-d8e15ba85ef3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "aa14306e-c35c-4272-8788-0db8e828bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10d7718-91bb-408b-8691-1ad437171d2a",
        "cursor": {
          "ref": "1d7b7b45-97a7-4f49-a339-9c5752a120d2",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92ea609f-8422-4dec-af6b-29ed3ff92007"
        },
        "item": {
          "id": "b10d7718-91bb-408b-8691-1ad437171d2a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d7417a1-3bb7-4ee5-87ab-0f09b6543cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d289c99-2512-4b17-84bb-5c7c19d76e34",
        "cursor": {
          "ref": "4987d9b7-42ce-49bd-b543-8739474a464d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8ab97a8f-f8a9-47bf-8954-03a964d13ab1"
        },
        "item": {
          "id": "6d289c99-2512-4b17-84bb-5c7c19d76e34",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "821f584c-f6f4-40bc-9996-300504ed547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c37e7-f1d1-44a7-b598-9184c6c1f35a",
        "cursor": {
          "ref": "f925c4f7-f190-450b-9e53-ed2cf53cf50a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f3703838-caa1-43e2-a0ce-364d2566e79b"
        },
        "item": {
          "id": "134c37e7-f1d1-44a7-b598-9184c6c1f35a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "124d9535-ea63-4b41-ae33-63f55007427d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227b26d5-bd12-45a1-b7da-5dc2da775544",
        "cursor": {
          "ref": "6a418d7d-eea7-4431-8a99-9e0f82e7286e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c34510c3-e07b-45fa-981a-ac2d04b0ab97"
        },
        "item": {
          "id": "227b26d5-bd12-45a1-b7da-5dc2da775544",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2509e710-7955-4339-8286-2ae264fa458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2c02ea-6a4a-4adf-9265-fe0ed6946c45",
        "cursor": {
          "ref": "d731bb73-ae62-4df4-9f92-4ce399a9d83a",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c248e513-14b6-4d70-b135-258fb5fef9a7"
        },
        "item": {
          "id": "9f2c02ea-6a4a-4adf-9265-fe0ed6946c45",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40ed5bc4-2ca5-4e38-84bc-5cd186f55196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a2810a-e27e-4780-a660-9429daf51412",
        "cursor": {
          "ref": "9c853c42-6b0f-4a9f-a9ca-443966b9a93c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9edfeef3-46dd-43c0-a657-43106cf69ae4"
        },
        "item": {
          "id": "57a2810a-e27e-4780-a660-9429daf51412",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "56cbac5b-ace4-42bb-86d2-9c7e195dde1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7923e1d-41c0-4da7-9b75-72b04d233e99",
        "cursor": {
          "ref": "f4f1bd2a-cdb9-4a30-aab2-61723428dd23",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "66e15d9f-d026-4617-8525-f3022cc6b7e9"
        },
        "item": {
          "id": "c7923e1d-41c0-4da7-9b75-72b04d233e99",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9bbc5579-c522-49f5-9c41-f0a04aa3c09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22d225f-49fa-42cf-b5d1-938de30ed580",
        "cursor": {
          "ref": "3038b6ff-ba49-4361-95ce-d0cc868812bf",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "135b6f9f-e989-4ee0-9511-fcee253def7e"
        },
        "item": {
          "id": "f22d225f-49fa-42cf-b5d1-938de30ed580",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0282e864-c037-49d5-87c3-e93176a524e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f59bab4-275a-4127-9d07-aa3c0cc4d663",
        "cursor": {
          "ref": "cd2ca9f0-1cd7-49cd-81ac-fb426692ccbf",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e647028-d972-4840-bcb5-1cfbb74c95a9"
        },
        "item": {
          "id": "4f59bab4-275a-4127-9d07-aa3c0cc4d663",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fa10dd44-1efb-43c7-920d-6df9a3ff8a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72222cd0-65de-445f-b715-7a616cde7f85",
        "cursor": {
          "ref": "b9ea6cd0-08f5-4561-b37e-b2d265ee2d01",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72f2bfdd-6f9e-4cf9-88f5-2f64438a3bef"
        },
        "item": {
          "id": "72222cd0-65de-445f-b715-7a616cde7f85",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "70e41abd-93e3-4b8f-9650-4c0ebd5f1f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ae8008-301c-4f51-9eae-8cdeea1ef97a",
        "cursor": {
          "ref": "77171165-38c0-444d-9a91-c033a350738a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ac8af3e8-1bb4-44fa-b128-c8b7cd83786b"
        },
        "item": {
          "id": "24ae8008-301c-4f51-9eae-8cdeea1ef97a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e0af8e17-ab4c-4445-9ba2-edf1bae73f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8f909a-103e-4272-a835-f672e418ba3d",
        "cursor": {
          "ref": "897989ed-97b5-4e36-b2d8-a270830e5104",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f30d00f6-be44-4576-bd2c-961dc3f5028b"
        },
        "item": {
          "id": "7b8f909a-103e-4272-a835-f672e418ba3d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0831e4d1-fa9e-447a-ac8c-e6c465123d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a552e-c21c-4d93-a079-bbfcfc56232f",
        "cursor": {
          "ref": "bf591e99-4e01-480d-ac91-2f5b2387694e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "96614cd7-3dd8-4909-9aeb-a956b3fc58a2"
        },
        "item": {
          "id": "aa3a552e-c21c-4d93-a079-bbfcfc56232f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2caa0ed8-a4f9-4385-b56f-2df270fb4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a2c424-fad6-4340-8e08-352ef89a48a7",
        "cursor": {
          "ref": "45373f71-5997-47d0-85e2-a54ccfcbb8f3",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0facebf2-283f-47bd-a912-1b6a0c7dcea5"
        },
        "item": {
          "id": "16a2c424-fad6-4340-8e08-352ef89a48a7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ccb73230-a60a-4796-95d6-e770fd8fdf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c28ff6-3551-4a54-918b-e8d7547c48f1",
        "cursor": {
          "ref": "3a89b316-423e-4c06-a37d-af9457635f08",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7645bdce-6208-4f42-9213-0c4a143058d8"
        },
        "item": {
          "id": "00c28ff6-3551-4a54-918b-e8d7547c48f1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5bec760d-e319-4080-9c2e-621c9e6862ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030c5287-ee32-44d7-9c6f-3d769d830514",
        "cursor": {
          "ref": "d3ed7249-0fed-476b-95b8-5e21af6da07a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "063875cf-e040-4c4b-b8a6-0edb41f2a2fb"
        },
        "item": {
          "id": "030c5287-ee32-44d7-9c6f-3d769d830514",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "06963195-f3a6-44e5-879e-d9d3b279d9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450368e-48e0-4ab4-bef4-a00b6fcbe724",
        "cursor": {
          "ref": "447700ac-8398-451c-80e5-d985fb7dd931",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e249318d-7648-475f-ae05-a25af0eddba5"
        },
        "item": {
          "id": "0450368e-48e0-4ab4-bef4-a00b6fcbe724",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dcbbaf56-5d70-4592-b86d-5425481017b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e05458-8f9b-4949-b6ba-7dadd433a83e",
        "cursor": {
          "ref": "3d0e58d7-1c02-4629-87de-ccab94fc7d78",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "033759c1-6597-4da4-be49-f75079d0144f"
        },
        "item": {
          "id": "83e05458-8f9b-4949-b6ba-7dadd433a83e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ab55348b-55d9-4e7d-8782-db550e2dbee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd087ff-d1fe-43cd-ae87-b05954908dcf",
        "cursor": {
          "ref": "ebde04c2-4258-4b5b-8ca0-a587422c8399",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4f19d8b4-e4f3-4340-99bb-e1124a468323"
        },
        "item": {
          "id": "fcd087ff-d1fe-43cd-ae87-b05954908dcf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3cf3f388-111d-4b24-aa4e-820b2330b502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208063d5-1036-464f-ba7b-9bf39446ea69",
        "cursor": {
          "ref": "fa6c8f37-9a68-497e-ad31-abf5061561cc",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e9070993-a920-45cd-8711-bdd674ed34c3"
        },
        "item": {
          "id": "208063d5-1036-464f-ba7b-9bf39446ea69",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a3ac0d70-d12f-4f6b-8e8c-0d86fa6f97d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eacea7f-4c6a-4761-9e0f-57b2868a507c",
        "cursor": {
          "ref": "7b85c636-b188-4bca-b25b-8e4f62c1ab77",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3bfc8b1b-1933-4c98-9d33-20adb0c158ea"
        },
        "item": {
          "id": "9eacea7f-4c6a-4761-9e0f-57b2868a507c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f650669c-0283-482c-9ca7-3283db77ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a9f613-bf30-4692-9113-68fc9705b9cd",
        "cursor": {
          "ref": "8b140e6a-3e9a-43d3-8cd1-8dee22d7013c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b793b773-0036-41b2-a737-b8204f6ca5dd"
        },
        "item": {
          "id": "d1a9f613-bf30-4692-9113-68fc9705b9cd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "10aa410f-6473-47d8-90e9-b3ad9e7d5026",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92eddab0-63a6-4570-93ac-1424c6d76183",
        "cursor": {
          "ref": "2ce80723-2c75-42de-ae03-26fd2140e9d9",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "283eb553-7655-4029-ab11-b0f69b8d8e0d"
        },
        "item": {
          "id": "92eddab0-63a6-4570-93ac-1424c6d76183",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d9610671-3b10-42ed-bb69-8063cf1213f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 700,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f4b3d0-7484-4709-9377-dd31435eeb6e",
        "cursor": {
          "ref": "0e190d4f-3fd3-4ff9-82bf-d03b3e6b01f2",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc366686-a313-4f0e-a770-8d8bac9ce456"
        },
        "item": {
          "id": "a7f4b3d0-7484-4709-9377-dd31435eeb6e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa71d33b-d408-4734-80ac-9d356016d4e9",
          "status": "Created",
          "code": 201,
          "responseTime": 7856,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4ba4bf-b751-4975-a60a-72820f459d75",
        "cursor": {
          "ref": "3171262e-1032-4e18-b9fa-b0768be04893",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e90dd623-48bf-4042-b153-b454984ae70b"
        },
        "item": {
          "id": "1c4ba4bf-b751-4975-a60a-72820f459d75",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0f7a444e-09c7-4375-8b42-26af4908285c",
          "status": "Created",
          "code": 201,
          "responseTime": 6466,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7eb644-acb2-4d81-ab35-efda251d6242",
        "cursor": {
          "ref": "02b53cfa-46f0-468f-ba76-9866624185fd",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc8011c7-a9d8-4260-a319-d875251f1ac1"
        },
        "item": {
          "id": "8a7eb644-acb2-4d81-ab35-efda251d6242",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f61b8ff8-6503-4b58-be51-9d2898ff5357",
          "status": "Created",
          "code": 201,
          "responseTime": 5682,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0e0248-82e7-4529-ab5b-e592a7781e43",
        "cursor": {
          "ref": "88fa14a9-1253-44ea-a761-bfaaa7389b0c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fe52ff63-08ab-4698-8259-cd6c2afd953d"
        },
        "item": {
          "id": "2f0e0248-82e7-4529-ab5b-e592a7781e43",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "744fa861-395b-4fd6-9df2-40bcc3bfe116",
          "status": "Created",
          "code": 201,
          "responseTime": 7757,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "379c57ac-39c7-4d6a-b73f-075d2ad1cd93",
        "cursor": {
          "ref": "42ea47ea-5ca5-4f11-8b8f-04f05f2cf520",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d3d7920a-d401-481c-af24-c9f7373ac785"
        },
        "item": {
          "id": "379c57ac-39c7-4d6a-b73f-075d2ad1cd93",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "708f2148-4dc3-4911-b873-ff7bcaffb381",
          "status": "Created",
          "code": 201,
          "responseTime": 7943,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "058c521d-350e-4afc-9ad5-c2601f24a51c",
        "cursor": {
          "ref": "ed48fb3a-c110-4285-8aae-cfefec5b30a6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "992f9b7f-af40-4015-81cb-97d32f8c88f7"
        },
        "item": {
          "id": "058c521d-350e-4afc-9ad5-c2601f24a51c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f6a30491-2a44-4a62-853a-bd3d80d76592",
          "status": "Created",
          "code": 201,
          "responseTime": 7338,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1fd73-a6fd-4f51-a044-4bc426b7b7cd",
        "cursor": {
          "ref": "5d7ecdcc-6f20-4c84-93e7-3bb2223ebf32",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aaf96a8c-50a2-4eff-a218-253073c0e8dd"
        },
        "item": {
          "id": "79c1fd73-a6fd-4f51-a044-4bc426b7b7cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f5e654a-be04-42ae-8b8e-c9a19ae92e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1fd73-a6fd-4f51-a044-4bc426b7b7cd",
        "cursor": {
          "ref": "5d7ecdcc-6f20-4c84-93e7-3bb2223ebf32",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "aaf96a8c-50a2-4eff-a218-253073c0e8dd"
        },
        "item": {
          "id": "79c1fd73-a6fd-4f51-a044-4bc426b7b7cd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f5e654a-be04-42ae-8b8e-c9a19ae92e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ebb29a-b7ee-4947-a5fd-9d729583eaf5",
        "cursor": {
          "ref": "c3b187b0-cd14-466c-bff1-a509b593b519",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5de3e162-962d-4d76-8a45-ec1eb8d2d113"
        },
        "item": {
          "id": "15ebb29a-b7ee-4947-a5fd-9d729583eaf5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6f95e582-5c1f-4203-98d0-c03ea8af6c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 996,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c2b29d-ad8e-4983-b652-fcd3d5b8bb11",
        "cursor": {
          "ref": "4c3c7c60-7e72-4b63-9c2d-f1fd300bc838",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4f3ac23c-c5ed-4b83-ac21-8b3f7f097d17"
        },
        "item": {
          "id": "29c2b29d-ad8e-4983-b652-fcd3d5b8bb11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0b57f5f2-5cf2-412f-a13a-8c09cac8eb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2744b88f-9f8a-44bb-bf1c-4df1d9cb0ac3",
        "cursor": {
          "ref": "fda2602d-d18d-4e1b-ace9-bf1cbc63cc4f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ec73ca64-d27f-408d-9bfc-b06511e83cac"
        },
        "item": {
          "id": "2744b88f-9f8a-44bb-bf1c-4df1d9cb0ac3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c2e83fd9-468b-4bfe-986f-1a14e8389e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9603d6-8c5f-4ce3-a62a-925b1d501046",
        "cursor": {
          "ref": "56c2f0f4-9535-4063-819e-0e42f5d416b5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "62d46261-c616-4c39-896a-1fd08b023a32"
        },
        "item": {
          "id": "8d9603d6-8c5f-4ce3-a62a-925b1d501046",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "11ca4851-b369-43e2-8111-62e96ef05a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87125458-c96c-45dd-9b0e-2f0edf3b75cf",
        "cursor": {
          "ref": "f04e1ae5-b5aa-46eb-8063-d39597bc749a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1463ed6-69c6-4af3-a9dc-9f227b103548"
        },
        "item": {
          "id": "87125458-c96c-45dd-9b0e-2f0edf3b75cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f9491022-20a4-4750-b560-bd2d27fc5f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311619d2-3e03-4598-9181-da9421fe5d6e",
        "cursor": {
          "ref": "8ed00d15-089f-4f1b-aaa9-e5c0cb916816",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c075f671-dc54-46cb-8df0-afd9185975c4"
        },
        "item": {
          "id": "311619d2-3e03-4598-9181-da9421fe5d6e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d592d7e2-8e96-487f-be48-e79222ab90a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898590b-d5b0-4d67-a51a-bfe7130e0d69",
        "cursor": {
          "ref": "dd75a539-9aaa-4e65-8af7-00a00172ed97",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5875b5a8-a670-4222-af4c-383f11a90f35"
        },
        "item": {
          "id": "9898590b-d5b0-4d67-a51a-bfe7130e0d69",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4403fcd1-3cdf-4d5d-a9b1-a7d00bc8399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a596e857-8c1f-400c-b66b-f83eb5917790",
        "cursor": {
          "ref": "eeedae97-f900-4ac4-8627-d9d439632368",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "de6386f5-66fa-4ba6-81ab-fa666d457b57"
        },
        "item": {
          "id": "a596e857-8c1f-400c-b66b-f83eb5917790",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4975560e-fc98-4d6a-a1c2-e3747bb233c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30095c6-b453-46d1-9540-6be35af65d0a",
        "cursor": {
          "ref": "55f1cf41-4382-49c8-9b27-f8e6a3d67655",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "69c3af95-56c4-4f8e-b8da-9e3a8992e483"
        },
        "item": {
          "id": "b30095c6-b453-46d1-9540-6be35af65d0a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "220880c2-ad82-4de5-b0f3-6c3300366138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea11b2c-1cc4-4bf4-9169-9bfc86772474",
        "cursor": {
          "ref": "aab465b4-552a-4213-b4c0-3b93f403727d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b69c8bf3-09d1-4fb4-ba90-b562564a2925"
        },
        "item": {
          "id": "7ea11b2c-1cc4-4bf4-9169-9bfc86772474",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "028103aa-45c0-4cea-85d5-d00b4249862b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ed227-1f48-4279-b9b8-53644ebb466b",
        "cursor": {
          "ref": "306bc798-dddf-45ff-85de-52805d363c2f",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0b6967c9-8af6-4f50-82dd-a467bb12164f"
        },
        "item": {
          "id": "e04ed227-1f48-4279-b9b8-53644ebb466b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8ec0a92a-a312-4d1d-a70e-d3eb32a528ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2761380e-9f18-4a56-bf5f-e09b2e3aaa6e",
        "cursor": {
          "ref": "11be67bb-19c6-4c8a-8910-ffe2402286ab",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5eea1cbe-484a-4a2f-b5fb-88fdb9cfab78"
        },
        "item": {
          "id": "2761380e-9f18-4a56-bf5f-e09b2e3aaa6e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0111b31-f353-4132-be86-a2c05a4ac9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7c0392-ac4c-4b2b-9db7-279c4814717d",
        "cursor": {
          "ref": "42f2823a-7ac2-4c8a-8226-9e0d784d2ef2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fe18f502-78e4-4046-b9a4-f030c0c6ae2e"
        },
        "item": {
          "id": "8f7c0392-ac4c-4b2b-9db7-279c4814717d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "06f4f87f-3d3d-4da5-89e5-44d430243179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc53a6dc-1cbf-4bb6-873c-005492dd8a52",
        "cursor": {
          "ref": "2397a8c6-2369-4806-8b03-885a341ebe2e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8abb4ad7-1f46-4cd6-b139-e6d175436ce6"
        },
        "item": {
          "id": "fc53a6dc-1cbf-4bb6-873c-005492dd8a52",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d938309c-b8ce-4832-a49c-8c150342c1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649e8ef5-1c72-44c4-afcf-d1ba03052138",
        "cursor": {
          "ref": "941d40c4-dadb-4922-98e7-8ddc786dfa7f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "53d19f62-cbf5-408f-bef1-4f0762301460"
        },
        "item": {
          "id": "649e8ef5-1c72-44c4-afcf-d1ba03052138",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45f66cc0-6209-4708-8adf-a5ec56bb30b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a274b7e7-285e-4c7e-875f-44594dd89db2",
        "cursor": {
          "ref": "8c27e62b-d2da-43f3-9570-fdbabbb7a58c",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "34869816-eefd-4cd4-918f-a20d460986e1"
        },
        "item": {
          "id": "a274b7e7-285e-4c7e-875f-44594dd89db2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5083b70a-4809-40b4-a5ee-678799cd0a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf340a6-bf99-4d2c-940e-495a7b96f30e",
        "cursor": {
          "ref": "7ec4992e-6d49-4d39-90c5-226707a9520b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a0738e5a-681a-4f93-8644-8039ccefc22d"
        },
        "item": {
          "id": "fdf340a6-bf99-4d2c-940e-495a7b96f30e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f5a8b677-7b0c-4919-a097-96066ec83a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98370db9-2fd4-41f7-add1-43b0fae0a967",
        "cursor": {
          "ref": "27b515e6-0e25-4c73-a711-c5f81108c0ee",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5b293737-d99f-4bf7-9f15-19c2dce2ec60"
        },
        "item": {
          "id": "98370db9-2fd4-41f7-add1-43b0fae0a967",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "45bf636f-d5fd-4c2c-b4cf-3530a39431e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30551dc-9dd0-4dab-bb8b-31dca105ee05",
        "cursor": {
          "ref": "408b7928-9c3a-4227-ac4b-e4f99f582868",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb8c94c2-1dde-4bbb-a170-0010fda46285"
        },
        "item": {
          "id": "d30551dc-9dd0-4dab-bb8b-31dca105ee05",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0286be4-e7eb-4c4b-8932-ca57448108a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0444f8a8-eda2-4394-94a7-34d24724f280",
        "cursor": {
          "ref": "a0388cd1-7a38-42ee-863a-52b268464e9b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c83e13b7-5d69-4339-bc09-9d2bb933f6fc"
        },
        "item": {
          "id": "0444f8a8-eda2-4394-94a7-34d24724f280",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e477df12-20f5-46de-9e2b-4dee66734913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec8da5-0fce-4d92-a684-80383423fc18",
        "cursor": {
          "ref": "1e2390a1-b477-4ea7-ab4d-b2f7849bc07f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "48dd1f1c-8dc5-4fb7-ad7b-7fe68c04ee56"
        },
        "item": {
          "id": "b1ec8da5-0fce-4d92-a684-80383423fc18",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a53fc84d-1fe0-42d8-bdb9-78ea0b471650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bf4479-bb11-4257-87a9-8f130d4f5a89",
        "cursor": {
          "ref": "aa14eb6c-da5a-4fab-a054-23df83932ede",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c555f3fb-2e17-4cf0-904a-b12d042d8fdb"
        },
        "item": {
          "id": "99bf4479-bb11-4257-87a9-8f130d4f5a89",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27cffc4e-6277-46b0-abcd-86b219518c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb03463-f8c8-42d3-82af-06fe7a7eeecc",
        "cursor": {
          "ref": "dcede31d-2822-4b5f-9990-d66c337a30cb",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4f49baa4-253e-4560-a122-dbab48b14362"
        },
        "item": {
          "id": "9fb03463-f8c8-42d3-82af-06fe7a7eeecc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c0803560-6144-41eb-9536-bab7bd2996e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0ab2f-74af-4acd-bc3e-2891f1f4d654",
        "cursor": {
          "ref": "488be512-6e7f-4284-8f72-c3c79a9315ce",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "35c33da5-d6f7-425a-b1c2-791d03c5df07"
        },
        "item": {
          "id": "5de0ab2f-74af-4acd-bc3e-2891f1f4d654",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d2ce6ba-ecba-4a20-b01b-b5e3fcd33a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1287,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548ccd86-79fa-41ed-bb95-5a8bf1e8e836",
        "cursor": {
          "ref": "62f655d7-f93c-49e2-a39d-a37c3f5401d9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "85e44e13-4783-4b70-848b-54086393968c"
        },
        "item": {
          "id": "548ccd86-79fa-41ed-bb95-5a8bf1e8e836",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c39087cd-3059-4b15-8783-442c473bc10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12d76a0-8f9f-4470-a4e5-a428edf15f88",
        "cursor": {
          "ref": "911277b8-126a-4858-a93a-33bb71258abc",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "213d0368-bfa1-45fe-99e1-fa3d2a437ed9"
        },
        "item": {
          "id": "b12d76a0-8f9f-4470-a4e5-a428edf15f88",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5810e68a-8b9d-47e7-9417-be3147fefeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f83587c-052e-41e1-993b-99677087b0fb",
        "cursor": {
          "ref": "a54e454a-b807-46bc-867e-b6a113e86b79",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e0f30dac-c849-4d24-85c8-3b3f0c28c05b"
        },
        "item": {
          "id": "4f83587c-052e-41e1-993b-99677087b0fb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e25858b-bac4-463c-8f7a-d0ab17ad5c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a1750c-8bfb-4449-b0ea-3c1f503a050e",
        "cursor": {
          "ref": "6c2b5ab1-13ac-4be5-8d39-9921fedb3384",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3b73f06c-1562-4e79-99a8-69a534c08054"
        },
        "item": {
          "id": "c1a1750c-8bfb-4449-b0ea-3c1f503a050e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9899111-0d36-41ba-8422-2414903e3b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815e84e-ae40-46cb-8c0b-59d45fa80975",
        "cursor": {
          "ref": "c29e790b-cf7b-436c-977e-1497edd3bb29",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fb9505a6-146e-48ec-9f57-3d909c1bfe04"
        },
        "item": {
          "id": "0815e84e-ae40-46cb-8c0b-59d45fa80975",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fe97eeef-579d-4228-b5b0-6b5015d58d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc32c5f-6998-4c50-9170-27a039008574",
        "cursor": {
          "ref": "0398b80b-fe3c-4272-b495-d4c4ac415c3a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "77791541-d75a-4422-a873-a9305a6614e2"
        },
        "item": {
          "id": "cdc32c5f-6998-4c50-9170-27a039008574",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e663407f-4105-456a-8f86-778f1623a00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1226,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc035a63-88f5-46b0-a845-e0e7c34ad53e",
        "cursor": {
          "ref": "73980b9c-7a4f-4158-aa2d-2b112966e845",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "60567228-a133-4582-bb7c-4e1fff09ff70"
        },
        "item": {
          "id": "bc035a63-88f5-46b0-a845-e0e7c34ad53e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1b8b99c9-0fd6-4544-bd25-2e50655e4181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1393,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf0efc-2463-4f2b-80c4-398a54ab8596",
        "cursor": {
          "ref": "100ea4f2-af91-4dc8-a46d-9d92b6c3e1f1",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f0dd38e9-eefa-45f4-b11d-7addad94cb3c"
        },
        "item": {
          "id": "55cf0efc-2463-4f2b-80c4-398a54ab8596",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2de9614e-1ba0-4751-85e1-26b2cc4f2d35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6997a9-0f47-4885-88e2-8bf497debe82",
        "cursor": {
          "ref": "6d9a3b99-f537-4f51-a172-37e53d2f01e2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bac3a655-823a-456e-882a-4674460a6147"
        },
        "item": {
          "id": "4b6997a9-0f47-4885-88e2-8bf497debe82",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b5b684f7-b696-45d6-90f5-b7611c70f7bc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1205,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933f26f5-55e3-4a27-9776-cd4ffa123121",
        "cursor": {
          "ref": "09e6af7f-454b-400b-a7a6-aa65a417e2c9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6ef2f900-a10e-47d6-8950-de500bd96ce2"
        },
        "item": {
          "id": "933f26f5-55e3-4a27-9776-cd4ffa123121",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ecbd7164-8b17-44fa-b9a2-a671e3beef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933f26f5-55e3-4a27-9776-cd4ffa123121",
        "cursor": {
          "ref": "09e6af7f-454b-400b-a7a6-aa65a417e2c9",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6ef2f900-a10e-47d6-8950-de500bd96ce2"
        },
        "item": {
          "id": "933f26f5-55e3-4a27-9776-cd4ffa123121",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ecbd7164-8b17-44fa-b9a2-a671e3beef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833438d0-b6b5-46f7-9211-1db0e20096a7",
        "cursor": {
          "ref": "b640a6d3-73d4-4560-a73f-c61ba19a3163",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "427e8444-c39e-432b-a084-0087a9173281"
        },
        "item": {
          "id": "833438d0-b6b5-46f7-9211-1db0e20096a7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d655c909-84d9-415d-a6ec-8537dd3e4252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f112626-b913-4868-80c0-63173dbea3e4",
        "cursor": {
          "ref": "b402b080-7273-48fc-b931-8562b4428aca",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4c6e7a02-512f-4b10-a8f1-f5ac9acdaa26"
        },
        "item": {
          "id": "5f112626-b913-4868-80c0-63173dbea3e4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "06056faa-40b0-4c1c-98ec-c727ec823da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ace461c-6afb-467d-843e-e47543a98107",
        "cursor": {
          "ref": "a321056b-a5e4-45d0-88bd-91d5704ec07a",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "72e9d2c9-2beb-414a-b63a-a38fe5a9c37b"
        },
        "item": {
          "id": "7ace461c-6afb-467d-843e-e47543a98107",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4d03a156-d193-4adc-b847-312a4765f351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f83fcff-bad2-46ac-8388-ddf7917e2af7",
        "cursor": {
          "ref": "54ac8b69-3a79-4490-8595-710db28a2f37",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a406e3fa-4db8-438f-904c-9bd806b547e7"
        },
        "item": {
          "id": "9f83fcff-bad2-46ac-8388-ddf7917e2af7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "98fe5de2-746b-4726-8c20-4ee667331763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfa545f-3e94-4393-bbf8-2aa867d94c1d",
        "cursor": {
          "ref": "5f277ebb-6947-439f-8cec-aba57f0f2d23",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "866ade8a-8634-4c72-818a-bfa2f026275e"
        },
        "item": {
          "id": "9cfa545f-3e94-4393-bbf8-2aa867d94c1d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6bfd275e-1cc6-4279-90b4-3729be7f9f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c143f0-9612-45a3-a1a6-e31eed5d49fb",
        "cursor": {
          "ref": "15f833e7-75e4-45a5-a25d-6e3140f1e2d8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2700da9c-9703-4969-84ef-b9c3a6300c95"
        },
        "item": {
          "id": "00c143f0-9612-45a3-a1a6-e31eed5d49fb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2b7b80db-3425-4e53-9246-47a8ed9329c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11e807f-b18d-4235-8890-41118c77d1ee",
        "cursor": {
          "ref": "dd46f511-3ec9-4ab2-8cd6-9b4049928af8",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c26ae499-686f-437a-962b-22d758ce8626"
        },
        "item": {
          "id": "f11e807f-b18d-4235-8890-41118c77d1ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ffa13432-4d9c-4b24-84c7-0ee67371e22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b799eb4-3544-4d5c-ad33-bb732bf2f5a9",
        "cursor": {
          "ref": "f6f48b4d-0da0-4638-973a-0762b6b6cff5",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3c68593e-e79b-488f-ae11-fb319422ba99"
        },
        "item": {
          "id": "2b799eb4-3544-4d5c-ad33-bb732bf2f5a9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "523959bd-25f1-4847-993b-2d62ef446e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8898c4-0a23-4d8e-8515-5d6ac5ef3138",
        "cursor": {
          "ref": "ab8d426f-71aa-4125-9984-9b970fcd1b3f",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d7545b58-55d4-419d-bf1f-e0f94d9b40de"
        },
        "item": {
          "id": "dd8898c4-0a23-4d8e-8515-5d6ac5ef3138",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b9d9377f-a29c-4d66-85a1-0f14ce0fddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73190cdd-2eea-4d3b-8a1a-895833c7c4b2",
        "cursor": {
          "ref": "0ea55ce3-42c7-467d-a42e-3bf979d7bd46",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76fff848-d3e2-4fbe-9bf5-d64a53449f27"
        },
        "item": {
          "id": "73190cdd-2eea-4d3b-8a1a-895833c7c4b2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef0f0b2a-1242-4581-bac2-3f8438e31238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f1f159-d8b9-4b5b-8b0b-f94c900612dc",
        "cursor": {
          "ref": "3ec98e44-74b3-45de-bdbf-ae4bd77e6c6c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b5ca6122-0945-4eb2-9dc1-44800b409bd7"
        },
        "item": {
          "id": "a4f1f159-d8b9-4b5b-8b0b-f94c900612dc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3e69b6db-b01d-4b47-9485-5e3cfc287f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82f3c20-e2c3-4551-bf51-3a304665f849",
        "cursor": {
          "ref": "3adb9be0-0b54-4f9a-858c-f99f6b60fea3",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d40172ec-6090-4aec-9ef6-6e7a8ee10807"
        },
        "item": {
          "id": "d82f3c20-e2c3-4551-bf51-3a304665f849",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "93594e28-fccf-4a2f-9938-51b63689a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de2241b-557a-4761-8aba-98d6f5c8da3e",
        "cursor": {
          "ref": "f6282a8c-ac87-4ece-9ca4-897e0ea4dcec",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "da6c35ef-3110-4747-8ccf-18b68ca4af6c"
        },
        "item": {
          "id": "8de2241b-557a-4761-8aba-98d6f5c8da3e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1697795c-395b-4a8a-b5bc-d458a2cb510f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447eac81-8557-419d-af18-2ff3dcdd667c",
        "cursor": {
          "ref": "4217cd9f-cd00-4cf7-8bf0-3ade6e044c42",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b4dd26bd-b031-418c-b277-b88994692e6f"
        },
        "item": {
          "id": "447eac81-8557-419d-af18-2ff3dcdd667c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d4119c17-6d2a-46fb-8fd6-38ba58c1985f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1000938-a199-4ad9-b614-b071dabd3d72",
        "cursor": {
          "ref": "2a23fbd7-3f03-43bf-aba8-e9a5a10dfd16",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "777fbdd3-6101-48f8-b52b-d6aa266c57f8"
        },
        "item": {
          "id": "d1000938-a199-4ad9-b614-b071dabd3d72",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a41eb4c8-d451-4354-8fe0-3dcb859dc555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6eba3-a888-4f19-8bc6-f4ed0e9373f1",
        "cursor": {
          "ref": "6f053bd0-9901-4a5c-bb78-b96b6036ab84",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "32a29f11-03d7-4555-88f0-c78564733bb7"
        },
        "item": {
          "id": "63a6eba3-a888-4f19-8bc6-f4ed0e9373f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3aa8a428-9953-4f4d-bb9e-bec89dcb5ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed3d64-8d07-4a21-9e4c-b6bd34cb48dd",
        "cursor": {
          "ref": "97d8eb9d-fc5c-4883-b75f-bb9ca9f2c663",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "535322ca-89c2-4c26-b05c-343821b2ae1d"
        },
        "item": {
          "id": "12ed3d64-8d07-4a21-9e4c-b6bd34cb48dd",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dc17abb3-421f-4765-bde9-44a67543d1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796e05e4-dccd-433a-bf85-4f8b364d74b6",
        "cursor": {
          "ref": "4647b457-7ac4-4024-8c51-0a97bc585542",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6528dbdf-ce85-4bf1-b6c7-447579a535e9"
        },
        "item": {
          "id": "796e05e4-dccd-433a-bf85-4f8b364d74b6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "034c4c44-ffc8-417e-b99c-5977a1bae938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd0aa29-60df-4744-844d-cfc333204495",
        "cursor": {
          "ref": "5674fca8-b038-4d41-836f-9f99b1f5c8c7",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a03b1325-ee8e-44f8-a893-b7e8276adcbd"
        },
        "item": {
          "id": "afd0aa29-60df-4744-844d-cfc333204495",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dedd273c-0e59-4905-8dfa-d4ed1b5ceb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862394e6-d89a-4c04-942e-3db29c9c21f0",
        "cursor": {
          "ref": "c128a039-3c57-4342-97d3-945bb3ec7a9c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a81b40aa-b691-48eb-8efc-6703520432be"
        },
        "item": {
          "id": "862394e6-d89a-4c04-942e-3db29c9c21f0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "af31d424-de38-42b5-9fbc-06bbac7b14be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d58b1-24ec-4390-a448-68628d41eefe",
        "cursor": {
          "ref": "77dfa1f2-3603-47ff-8571-e495483f6a1e",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4405530-3c4b-4921-aea7-4e66c7459d41"
        },
        "item": {
          "id": "d06d58b1-24ec-4390-a448-68628d41eefe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d98a2d13-5b22-4022-9d9a-01bdbb9f93ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166b79bd-e235-4c1e-bdda-3efd12993831",
        "cursor": {
          "ref": "b83d7e7f-e1f3-445d-b55d-40c207b3328e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6aa4c378-ffac-49bf-88e3-436b81eb8123"
        },
        "item": {
          "id": "166b79bd-e235-4c1e-bdda-3efd12993831",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d9544dd-278b-4a58-a03e-df5a72fed25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec76f10-7269-4a4c-acd6-9113408e14bc",
        "cursor": {
          "ref": "f12d839a-4605-448f-9563-0087ec715894",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2fb4deff-c8c0-493f-b2a4-a8189314440a"
        },
        "item": {
          "id": "2ec76f10-7269-4a4c-acd6-9113408e14bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c3a41a98-69fe-4444-b174-cbaa9578257b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0960f0aa-540c-4c88-827c-6e8751de7381",
        "cursor": {
          "ref": "4cb38009-f2dd-411f-98e9-4eb722649174",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "309accac-4783-4186-b19f-173a421b65a6"
        },
        "item": {
          "id": "0960f0aa-540c-4c88-827c-6e8751de7381",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "56cbc29d-587a-4c6d-8dbb-67c08d1022e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b364587d-bf4c-4fc2-be2f-442c789130cb",
        "cursor": {
          "ref": "7ad08b1b-46b6-4d0b-a0f5-a468799ed511",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3bfd18e5-4d17-4af5-bad2-95a8e28ee99d"
        },
        "item": {
          "id": "b364587d-bf4c-4fc2-be2f-442c789130cb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "70c4e2ff-7cf2-4ec3-aecc-da9456b95788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8673bb-248f-4c26-aeae-3d811e032dc9",
        "cursor": {
          "ref": "19c81b33-a911-43f2-a6c8-a1c14e900faf",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "63bb47b4-73bf-4fb2-85e4-fb519c822773"
        },
        "item": {
          "id": "ac8673bb-248f-4c26-aeae-3d811e032dc9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a7c091d3-eeed-4447-a568-2e9d07407915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd7b593-1e92-41e5-b944-5b69e6530e17",
        "cursor": {
          "ref": "e0d42d2e-d967-41dc-9d62-9785211702af",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "51938087-1d11-474c-8cd8-294ca160ac45"
        },
        "item": {
          "id": "bdd7b593-1e92-41e5-b944-5b69e6530e17",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7d818bd1-6f34-4d8b-969f-81541975f23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a495939c-8b7b-4a1f-ae86-bc7d90b4beeb",
        "cursor": {
          "ref": "d0cb029d-d1e2-416c-ab53-ad3c2f9c2957",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a974c1b3-7183-4869-92ef-e6f97b02a410"
        },
        "item": {
          "id": "a495939c-8b7b-4a1f-ae86-bc7d90b4beeb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bdbf170f-78e3-431b-81a0-ef8a93113703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07220489-121c-4325-a7ed-27f999f4a36f",
        "cursor": {
          "ref": "4b0cf0e2-2360-4744-9776-02293853c9b6",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9163f3f9-73a5-4ca1-a404-4535fa755020"
        },
        "item": {
          "id": "07220489-121c-4325-a7ed-27f999f4a36f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69398f70-d314-40f4-b796-8ee99a982594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ba18e-aadf-4bc6-bc51-a00927922ebd",
        "cursor": {
          "ref": "d39cbf85-bbd1-41c5-8331-a83c912aee2a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8304f094-aae6-47d3-8ef5-f485f0b4eeb9"
        },
        "item": {
          "id": "e07ba18e-aadf-4bc6-bc51-a00927922ebd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5c229acb-73f9-4350-8a71-cf03571532b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb2929-551c-40b0-b956-088f5375cb09",
        "cursor": {
          "ref": "5b91b0fa-56e8-4aad-8f46-a66cdf9887b4",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6714cca2-3c45-460e-a855-48a6700a1472"
        },
        "item": {
          "id": "6eeb2929-551c-40b0-b956-088f5375cb09",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "27e5af52-cfd3-4ef4-84dc-80a713fedd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9073dc7-6d5f-4e24-a834-a302dba0a176",
        "cursor": {
          "ref": "d5f9d84e-6ca2-4238-9ce8-643c5962b3e0",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b2f714cb-3096-4432-baa4-89e324418b2d"
        },
        "item": {
          "id": "f9073dc7-6d5f-4e24-a834-a302dba0a176",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "03580ff1-5714-4fa4-a3c5-ea436f1e6c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e63e6-ed6e-4c03-8449-0b70d08b4629",
        "cursor": {
          "ref": "4a4687f7-5299-4d29-baa9-619dedef0024",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1b7e51b9-f96b-486c-861a-5c93a4039067"
        },
        "item": {
          "id": "3f9e63e6-ed6e-4c03-8449-0b70d08b4629",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "78ed39dd-7855-4bdc-a728-f015b1e55df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a6087b-d2f7-42cc-9904-f447cf4ed305",
        "cursor": {
          "ref": "b84076f5-a3da-43aa-9afe-146c18487b0c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d88d2c99-b068-4fba-afbf-db90a3b20eb5"
        },
        "item": {
          "id": "63a6087b-d2f7-42cc-9904-f447cf4ed305",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc214a2b-2f80-4eaf-81f8-29ea5470d878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd83c3f-f0e0-4437-b3e3-d0b56f50cb77",
        "cursor": {
          "ref": "076cda8e-8dfd-4c9a-8ce8-e3ca22c5c629",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e0400347-280f-46e9-8d7e-a7222add1da2"
        },
        "item": {
          "id": "ddd83c3f-f0e0-4437-b3e3-d0b56f50cb77",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5bf79a0c-6149-4eb3-a473-77d2f6424b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596839cf-4b3a-42c9-b481-d382c32c29f0",
        "cursor": {
          "ref": "a578b553-3512-4760-9211-9cc794a6b4bf",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a8f1c6c9-c66a-4e36-97c5-85a620f8e25f"
        },
        "item": {
          "id": "596839cf-4b3a-42c9-b481-d382c32c29f0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8b0f5b6e-3bab-48f2-90ff-f10811174112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec23acc1-126c-4af4-992c-33305974a173",
        "cursor": {
          "ref": "c6fc91ec-f687-4def-a214-9e592b4c7765",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1dd4f79f-513f-4f85-8a33-021a3706b076"
        },
        "item": {
          "id": "ec23acc1-126c-4af4-992c-33305974a173",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "410724fe-7486-45f6-ba31-63e33228c8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54415ea4-f48a-45a6-b0d9-468814b7d221",
        "cursor": {
          "ref": "836be570-572c-497a-8f7c-906a7b330856",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4efe5da7-b435-4598-95cf-1c7fb9fedf15"
        },
        "item": {
          "id": "54415ea4-f48a-45a6-b0d9-468814b7d221",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fb619bec-c407-4698-856e-22007b68344d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 968,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8708080-107f-4e12-a140-b96fdc9e1fe1",
        "cursor": {
          "ref": "2ed45ac3-d8c0-43e8-a9c6-489b152b386f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "17658094-8f38-4250-9599-3906312c7b62"
        },
        "item": {
          "id": "f8708080-107f-4e12-a140-b96fdc9e1fe1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7bba3d37-e151-4a55-b325-cb297a8ea24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5f5d53-a56a-42dd-a445-de2efc53ad7f",
        "cursor": {
          "ref": "8023e374-5de6-44b8-9222-d56737d34634",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f964bbc4-5ceb-4725-a6d4-eee293f5a933"
        },
        "item": {
          "id": "2e5f5d53-a56a-42dd-a445-de2efc53ad7f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "616ce3b0-2da0-426f-8ab6-ac3fbe3470c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12d3ba-4d1a-4b34-a188-f1357d969e81",
        "cursor": {
          "ref": "6b244112-6051-471b-b4eb-68ed6f3f22a0",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "05d24090-9ec9-441b-b8e3-0b9449b807bb"
        },
        "item": {
          "id": "5c12d3ba-4d1a-4b34-a188-f1357d969e81",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c7f528ef-e089-4197-8eac-a38cf02e35f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2a867a-1517-4a20-9b5c-2c01b7df9fb0",
        "cursor": {
          "ref": "81689092-13ee-493f-9c1c-f923d172074d",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa832734-89e3-4292-b932-a1a10daaf8aa"
        },
        "item": {
          "id": "cd2a867a-1517-4a20-9b5c-2c01b7df9fb0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7f868e71-98ae-4d04-97eb-1e394734e8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f755d0e-6fba-4c2f-9643-8f315f141b2f",
        "cursor": {
          "ref": "e9e3ce73-6a9b-4d6e-8bbb-f9ffc040a4dd",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "22a580e3-52f2-4e1c-892e-119b806e4963"
        },
        "item": {
          "id": "3f755d0e-6fba-4c2f-9643-8f315f141b2f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0bf108cd-6701-44eb-a2bf-74f1a2ace9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fc7895-d5d2-4c7f-b351-00e4141fe511",
        "cursor": {
          "ref": "d88763ab-da46-4eb3-94ab-593f3384738e",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1f899038-ebb5-4719-a62c-bfe9dc33f759"
        },
        "item": {
          "id": "f8fc7895-d5d2-4c7f-b351-00e4141fe511",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "81ee6662-5f90-48b6-80cc-d41e6c3240b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdcdfbc-21b1-4246-9bc3-f3fbb7b9a71e",
        "cursor": {
          "ref": "8234646a-51ff-498c-be11-98afbd9177ad",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e90ad08-bc08-4dff-94f5-251bb9a74915"
        },
        "item": {
          "id": "fcdcdfbc-21b1-4246-9bc3-f3fbb7b9a71e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1854f6fa-d51e-4d00-ad2a-d9b9150e8d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f213532-856e-4ac9-b97d-15ec8ee60d5e",
        "cursor": {
          "ref": "8b96a069-a714-4361-afdf-1918a5c19c01",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8f3315fd-490e-4a73-9a01-86a556a36a9f"
        },
        "item": {
          "id": "6f213532-856e-4ac9-b97d-15ec8ee60d5e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e4227722-5d17-4085-bcab-fc2d20bef995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ebefd9-55a3-4a0f-8270-992fbf0d8a8a",
        "cursor": {
          "ref": "f78a85fe-dd71-4dca-a126-ddab4a27c528",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c28bb9b8-a971-43bd-8c0f-497ea2e6b7af"
        },
        "item": {
          "id": "b6ebefd9-55a3-4a0f-8270-992fbf0d8a8a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bfa950b5-afbd-45da-b09a-6d6044b93848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1481e4ff-efdc-4fde-bdcb-a4246c7c0d79",
        "cursor": {
          "ref": "fea2d033-3249-4abf-a4d7-0ca7dec30a64",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "87a85c15-4ca2-4849-8067-715b19341f1c"
        },
        "item": {
          "id": "1481e4ff-efdc-4fde-bdcb-a4246c7c0d79",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "60a373c8-5663-4f2b-8da6-95791c9970d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdc063b-ba1e-40de-a47d-5b9d9d15b93f",
        "cursor": {
          "ref": "dac6917a-9e07-4130-a57d-7aba30281ec9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a83f735e-0b2b-4e76-af31-a54328676312"
        },
        "item": {
          "id": "2cdc063b-ba1e-40de-a47d-5b9d9d15b93f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9d903771-f7ab-46b8-8a03-8d11f0837a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ae0558-2aad-4f2f-b785-9a1de949e36d",
        "cursor": {
          "ref": "14ca93c4-53cb-4a6b-b468-6afd26dd5e06",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0fa4ab9a-56a3-41c4-a2b3-de7fdcd826c4"
        },
        "item": {
          "id": "79ae0558-2aad-4f2f-b785-9a1de949e36d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "592fb858-a0aa-4223-968b-ab371c6af899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce3b17a-c547-4cb1-aed0-9b0486c62eca",
        "cursor": {
          "ref": "f791cf85-50ed-44d7-94b0-0a3e1f5081a1",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f44d2eae-28d7-4fde-9b41-89a7040238eb"
        },
        "item": {
          "id": "9ce3b17a-c547-4cb1-aed0-9b0486c62eca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4915faed-5e67-4da9-bbbc-7b6b70f825e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5677df3-77a9-4212-82a8-dc53a7471b8e",
        "cursor": {
          "ref": "21fdc08d-3b78-4cd3-9e3e-fe87e55c0801",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e449378e-1667-42b4-8719-288cf1fe118c"
        },
        "item": {
          "id": "c5677df3-77a9-4212-82a8-dc53a7471b8e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e44e6525-0353-491e-9548-a1ee5768eaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e78bcb-4dcf-461f-934e-b18157332a4d",
        "cursor": {
          "ref": "769c04f6-bc43-484d-acf3-e7b0a68c1a90",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9115a8a7-2ac3-45f3-91cc-f8203a3f31bd"
        },
        "item": {
          "id": "c8e78bcb-4dcf-461f-934e-b18157332a4d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5119fa49-0108-4946-93e6-516d0801bbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62906b52-0c96-489c-9899-934e0f1c1a1a",
        "cursor": {
          "ref": "c1d9a7b5-334d-4259-ab50-b637241297a0",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "637584ec-a2f7-4970-a26e-0ebd4a591e5a"
        },
        "item": {
          "id": "62906b52-0c96-489c-9899-934e0f1c1a1a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5f7baffd-8902-4919-bd64-c0ad2524045a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a770c1-41e2-4250-aa39-3801f38c5fc6",
        "cursor": {
          "ref": "272aa07d-0d5a-4a22-917d-b6c655ef8a69",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3379d6e7-df0d-4549-815e-19c820487f00"
        },
        "item": {
          "id": "09a770c1-41e2-4250-aa39-3801f38c5fc6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8f90e25a-532c-4b86-bf0d-89af095b8511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66351cde-4ddd-468a-b189-9bf8752b1953",
        "cursor": {
          "ref": "9ef3d4e2-3483-4de0-9088-f09e5b72057e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4b3bfa76-5aa0-49ed-b0ac-7c6d3784ca46"
        },
        "item": {
          "id": "66351cde-4ddd-468a-b189-9bf8752b1953",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3cea2057-eca6-4cea-bdfa-87f487d00a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cc1e80-80cc-4240-a8f7-0fcc218199d2",
        "cursor": {
          "ref": "d4dc3f06-e7eb-44c9-b6ce-5a9dbb00f25e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aa9fb92a-81e9-4efb-839e-9106360f8985"
        },
        "item": {
          "id": "e4cc1e80-80cc-4240-a8f7-0fcc218199d2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a577d821-ac22-439d-b84f-5d8607146c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ed501c-c510-4a9d-8a02-64224da476e4",
        "cursor": {
          "ref": "f68fef7d-5836-447d-858d-3d252363339e",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c53b5860-71f3-48d2-91f3-15bdd2800cef"
        },
        "item": {
          "id": "f1ed501c-c510-4a9d-8a02-64224da476e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "db0b81a3-93ba-4f07-b7db-bb8aed1371f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadedd1b-c534-4086-bb94-34bcd18843a3",
        "cursor": {
          "ref": "d3fad508-bcef-4fda-b082-56225a5949df",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "553aa8fe-2d8b-4831-b367-6af8c9e1628c"
        },
        "item": {
          "id": "cadedd1b-c534-4086-bb94-34bcd18843a3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9c98176d-c7a3-48a6-a8ad-bc5e5b5d112e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d143f4bb-91cd-48b5-9e1c-81b14b262b79",
        "cursor": {
          "ref": "25b454df-9980-4507-bf8c-46ff53724945",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9ca4b07b-0524-49fd-a117-f1d2c0e499f4"
        },
        "item": {
          "id": "d143f4bb-91cd-48b5-9e1c-81b14b262b79",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fb504315-8869-4e35-90ff-356b991fe0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf9286f-ae4c-415f-bd00-e7a7de88b1a3",
        "cursor": {
          "ref": "fc8b7a30-5d2d-413c-8a22-3339a6a782dd",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e1f53dbb-2fba-42e6-bca5-57c147eeee2c"
        },
        "item": {
          "id": "eaf9286f-ae4c-415f-bd00-e7a7de88b1a3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "92157612-9fe3-4ba7-9c0c-7fd5a6390506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7951077-3431-489b-8982-8ecc08c14f20",
        "cursor": {
          "ref": "2a1e9456-883e-4075-8c23-be77e1feae72",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7e9160ec-2718-4f29-bffe-47d85d3d6d0a"
        },
        "item": {
          "id": "b7951077-3431-489b-8982-8ecc08c14f20",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2187506d-d780-44ed-8b9c-41fa9e5006ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137673f8-e9c7-412d-8902-bc025ed2d032",
        "cursor": {
          "ref": "09f7d3e7-4374-4715-a36b-eefc5ae71411",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1d200b2b-b0a5-4e0c-b495-299f9ba5087a"
        },
        "item": {
          "id": "137673f8-e9c7-412d-8902-bc025ed2d032",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a5a38a8d-6e2d-4d17-b109-329f5932412f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781bbe5d-43a1-46ff-aa9a-2e368db89502",
        "cursor": {
          "ref": "1833334e-8e0f-4578-8aa8-a18b6e375485",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "180e798c-9418-430d-a352-26ae4e58ffe4"
        },
        "item": {
          "id": "781bbe5d-43a1-46ff-aa9a-2e368db89502",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b10fd9d8-049c-4889-aa80-519aadbd1c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019795b0-4b4e-45fe-a4a1-978752c8c49e",
        "cursor": {
          "ref": "90648bf1-7ed5-49df-ad41-bfb6b47d7517",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0f8a1ef0-2274-4b12-b161-030bf07578b4"
        },
        "item": {
          "id": "019795b0-4b4e-45fe-a4a1-978752c8c49e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "76b11b27-de82-433a-8133-a2b53acda49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0b6c79-2730-467a-8a0e-eb62dc4992b7",
        "cursor": {
          "ref": "4cb52c21-5523-4267-a60e-6b12c07530f7",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d7b43988-6852-4dff-ba03-dc409b6f4022"
        },
        "item": {
          "id": "ac0b6c79-2730-467a-8a0e-eb62dc4992b7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c2989c5e-2373-4e93-9d2a-bf1d4293dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15acf17e-587f-4d06-8ed3-f16d31c96e43",
        "cursor": {
          "ref": "46e0755d-c682-41d2-a8b5-780c20e031da",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8dddb3e2-5e36-44c3-81ef-612e4ff49cc3"
        },
        "item": {
          "id": "15acf17e-587f-4d06-8ed3-f16d31c96e43",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "debcd48b-d2fd-4171-be49-0921a4fa99c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f0d9a8-3f5c-4e4f-9ea9-bae24d5bfb32",
        "cursor": {
          "ref": "bf985129-99ee-4d48-9bc6-65a70e05cb6a",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bbb9708e-ed88-4b23-a9db-1a842cf16a74"
        },
        "item": {
          "id": "a4f0d9a8-3f5c-4e4f-9ea9-bae24d5bfb32",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3bbd758e-a817-4c7b-8f0c-1cb5357450e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16623328-fea7-4970-ad58-2afcbdb7f68b",
        "cursor": {
          "ref": "2d1b921b-6f69-45c6-bcd2-1c73c6a5c31f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "63892879-c254-4b27-9dda-af1881e8b7b2"
        },
        "item": {
          "id": "16623328-fea7-4970-ad58-2afcbdb7f68b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5f72491e-c2f6-4b89-9951-94d188963fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3bfa99-f943-459d-abcb-89fa9f08edf2",
        "cursor": {
          "ref": "915d9c8a-7aba-495a-a0fd-6b5d1f00891d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f2ea520-c5ca-4cb1-b88e-4b4cf9752593"
        },
        "item": {
          "id": "ea3bfa99-f943-459d-abcb-89fa9f08edf2",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4f3be4c4-0fa3-4fac-a4bc-30dc5fd65697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c34ebca-a0af-4c93-a9dd-693fac4e525e",
        "cursor": {
          "ref": "be186de7-263b-44cb-848e-1330ad1724b7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f4410a7-0b2e-49c5-ae3c-12cbef28f302"
        },
        "item": {
          "id": "8c34ebca-a0af-4c93-a9dd-693fac4e525e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "792cde84-a76f-4977-8e39-097ff77693fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d8e5c4-defb-4bf9-9c0b-dd5889debd20",
        "cursor": {
          "ref": "3d82f7c3-fe36-42ef-8a55-c5b7d250f515",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2709612b-a291-49ac-9e59-18b8f92abd01"
        },
        "item": {
          "id": "19d8e5c4-defb-4bf9-9c0b-dd5889debd20",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "40c25e7d-20ec-4cc3-9985-9af5fe8f711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39ee291-5315-4ac3-8eb0-77c20c778357",
        "cursor": {
          "ref": "cb17407a-43f2-4c39-a21e-b45f7909048d",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ebccf1c2-60aa-4654-af62-4721a3fb8910"
        },
        "item": {
          "id": "a39ee291-5315-4ac3-8eb0-77c20c778357",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b137dc85-652d-4d4b-a386-df9a4c9ecf60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba5682a-9372-4dd9-ad61-a0d93df60338",
        "cursor": {
          "ref": "c3a46816-fb9c-4616-b323-a494e17367c9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8377c1a-75f6-458f-b168-c0a318ca0413"
        },
        "item": {
          "id": "8ba5682a-9372-4dd9-ad61-a0d93df60338",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30036146-16a5-4d77-b953-27fe52d1e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b9849b-8448-4706-83b3-7522e28f60b6",
        "cursor": {
          "ref": "08d2ae17-a52e-43a7-98bc-37fb940e240a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "14f34727-6975-46f3-8514-b0704fa225b5"
        },
        "item": {
          "id": "a1b9849b-8448-4706-83b3-7522e28f60b6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cb1e0e3f-7eb2-45c5-9e9b-0f7a16c8b82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d7f738-495a-47d9-9114-b06b4950e575",
        "cursor": {
          "ref": "b0b4a840-08ab-4e59-93ea-a9e9df5e74f0",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "58b3c51e-fb6f-426d-b59d-815fa0c75bab"
        },
        "item": {
          "id": "42d7f738-495a-47d9-9114-b06b4950e575",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a0040a8a-4a24-4f3f-8ff8-b96c305e2f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db90db34-5cd4-4e37-a8aa-f4fe65562202",
        "cursor": {
          "ref": "3063eb08-ed77-4a7b-9c0b-dd9238828d6c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "05e7e093-3f45-4096-8d35-2ffe800add75"
        },
        "item": {
          "id": "db90db34-5cd4-4e37-a8aa-f4fe65562202",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e75a01c8-4d02-4c2e-89ec-89d1a03ce842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9596b96b-f247-40a0-b77b-2043af7a0ea7",
        "cursor": {
          "ref": "b5c643ee-9930-43f7-be0c-ff43ae7880c3",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "14ff8187-c97c-443a-a131-5d3d5a03a44e"
        },
        "item": {
          "id": "9596b96b-f247-40a0-b77b-2043af7a0ea7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f5e85dda-7bb3-471a-bde6-fc9bc3f920e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf544809-b0eb-4452-ada6-e43bf207cf40",
        "cursor": {
          "ref": "c6e8c1f5-9079-4fbe-a710-409d1152ac44",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "22bb2f79-d147-4c80-bce8-4781f6d06481"
        },
        "item": {
          "id": "bf544809-b0eb-4452-ada6-e43bf207cf40",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a0b5f882-7a53-4e46-8abd-9ea78f8a2640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef26287-76c1-4986-a355-e929901bd77b",
        "cursor": {
          "ref": "e82e708f-20a1-4f57-9448-df91cd181e35",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9581c038-2ce1-481d-a8a0-9d90a3d57e12"
        },
        "item": {
          "id": "bef26287-76c1-4986-a355-e929901bd77b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fc54a273-716d-410f-9cad-8f80e35232d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cdbf28-b852-4631-b443-879ae31c97d7",
        "cursor": {
          "ref": "db162834-ff81-43cc-a1b1-e453992d0992",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d3a5eedd-414c-4ace-b10b-a7ca06c0bbc5"
        },
        "item": {
          "id": "22cdbf28-b852-4631-b443-879ae31c97d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4fea1588-3126-4afb-b01f-0e8498fd395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4fbb20-12c3-4271-be3a-4d91053a2ebf",
        "cursor": {
          "ref": "ee747322-0c89-4459-83a4-3733a4d62de9",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ebeea890-158b-4e90-849c-c02bed2f923c"
        },
        "item": {
          "id": "5e4fbb20-12c3-4271-be3a-4d91053a2ebf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b7db004e-deb6-40ce-859c-303989a62505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7fbfc5-d473-42b9-b621-0ab088f55697",
        "cursor": {
          "ref": "a3b0d8f1-ad19-495b-9f69-8fe74cbb81f8",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3e8cd25a-c49f-4d42-825d-bc9581827dc4"
        },
        "item": {
          "id": "4f7fbfc5-d473-42b9-b621-0ab088f55697",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "56a6c6d1-c494-4d06-8df8-8ad515fdf949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8edec72-4da1-4dd7-93f8-bc9f4bbc4ff8",
        "cursor": {
          "ref": "caae1cff-7bd2-44e7-9991-8802dc6f6111",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d852a31c-f693-4b70-8bfb-625318115a5b"
        },
        "item": {
          "id": "c8edec72-4da1-4dd7-93f8-bc9f4bbc4ff8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c0cb5ae2-fbec-464e-94aa-15ae72ee829b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e065b1d-f2ce-4b79-9aa4-88f76f417ad7",
        "cursor": {
          "ref": "2b757a40-ee5a-4555-beb5-4440aad166d1",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32c5577e-ce3c-484b-b4f0-5efe1dc29cba"
        },
        "item": {
          "id": "5e065b1d-f2ce-4b79-9aa4-88f76f417ad7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b3b4aa3f-1c05-4972-90a3-53f24083e547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adffb72-59dc-451d-9759-7309b483dcf5",
        "cursor": {
          "ref": "3dfbb76e-7056-4b16-9256-466125b62bfa",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7b160713-663e-4628-be30-c94f2673cca5"
        },
        "item": {
          "id": "1adffb72-59dc-451d-9759-7309b483dcf5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9525296e-7ab3-4a97-853c-9405b2e177f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4603418-109b-415c-b828-4cfabf0fba4b",
        "cursor": {
          "ref": "d67f3215-4dfa-49cf-b8dc-96afbd0345ec",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3407471e-8c36-4286-b944-234b3049ac86"
        },
        "item": {
          "id": "d4603418-109b-415c-b828-4cfabf0fba4b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f447c724-2bc2-4d04-b6ea-d711287b374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff477b3-3d87-4f68-93cb-b73074a7cb0b",
        "cursor": {
          "ref": "82b21661-79a8-4035-b321-17a0e56e56f4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ecb13ee2-f240-401f-b502-22ac50adc95e"
        },
        "item": {
          "id": "0ff477b3-3d87-4f68-93cb-b73074a7cb0b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aa6c18c7-bf47-4de7-86c2-0ed4c8c8a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf131fe-dee6-4ed2-9b66-a21f359c523c",
        "cursor": {
          "ref": "59641e19-79e0-44aa-b3af-4f66b4396d4b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8c175792-37a0-405e-9b1f-63477c9ec6e9"
        },
        "item": {
          "id": "acf131fe-dee6-4ed2-9b66-a21f359c523c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "35bad375-6072-4530-8808-382ea2e311bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2dee7d-95b5-438d-83c2-d18036a86ca4",
        "cursor": {
          "ref": "84756867-4dcf-4d88-9dc0-83a68b075f20",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef8f24b3-cf57-4b0b-ae57-5ac8f99d0128"
        },
        "item": {
          "id": "df2dee7d-95b5-438d-83c2-d18036a86ca4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97a6f971-dd04-4b71-8a85-cfd2c83eb37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9ee799-5f45-4653-91e7-e5665e4d361f",
        "cursor": {
          "ref": "116fa5e6-9b25-4e1d-b250-984b02b67f34",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f519649-ead5-407c-8733-61e44de5bb05"
        },
        "item": {
          "id": "5a9ee799-5f45-4653-91e7-e5665e4d361f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "13f9a821-c3d1-4045-b987-740add7f83fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c28d34-65ed-444f-baf9-a1354d3f744c",
        "cursor": {
          "ref": "31eabbf7-f9f9-47d4-a59c-0ffa231a17af",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f22a2d9c-d2ac-4daa-9c84-a0421a9b6229"
        },
        "item": {
          "id": "47c28d34-65ed-444f-baf9-a1354d3f744c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6b8f9172-1654-453b-812f-61a527487164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786ae7de-1561-4d8b-8de8-db0017cc2f21",
        "cursor": {
          "ref": "638503b4-0c5e-4a2e-a1dd-e7eb99888be3",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "11ce5b2d-abb4-4071-8e1a-e2af5f4be35a"
        },
        "item": {
          "id": "786ae7de-1561-4d8b-8de8-db0017cc2f21",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7170f6cf-4c19-4e31-9f5f-980036a8ac49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c06e5fd-9e5b-4c3c-88e6-8bb60817030f",
        "cursor": {
          "ref": "b316acb1-a6b6-4541-8e4a-978e60a03909",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "707cac04-caae-47e2-911a-c7ae8e252c1f"
        },
        "item": {
          "id": "8c06e5fd-9e5b-4c3c-88e6-8bb60817030f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "662d4c02-96f3-42ed-84db-ab8d1a6e6946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1104,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89457d1f-7c45-4497-8339-3594a10e1643",
        "cursor": {
          "ref": "8b686284-1043-4f3e-a102-a2f2f82ecf12",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cd4d153f-818a-4999-bfd5-e17fb9c91a38"
        },
        "item": {
          "id": "89457d1f-7c45-4497-8339-3594a10e1643",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "72d9fa6e-6442-43ca-98a6-f4e83e542d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de355894-a5a9-44bf-b563-eb9d06c3771c",
        "cursor": {
          "ref": "5b0e6961-ead2-40dd-a5a1-5230558cca13",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cbfae753-5313-450f-a2d5-92d90237562c"
        },
        "item": {
          "id": "de355894-a5a9-44bf-b563-eb9d06c3771c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "be116ed2-513c-4b95-b281-571d168a22a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e2b094-5fcc-4092-87c0-bbe761d47827",
        "cursor": {
          "ref": "7f3157b8-06ea-4f6f-b0fd-bc8ca35866de",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3202ce20-e4be-45ea-8b63-90285760a7ac"
        },
        "item": {
          "id": "e7e2b094-5fcc-4092-87c0-bbe761d47827",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dbe16014-f4fc-4f14-b713-773f662f55a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a994301-ad7d-42ac-aeb5-77506b7a0846",
        "cursor": {
          "ref": "890c560d-cd67-4c64-803f-8841368e172f",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2d4b9689-618c-455c-936b-528f5120202b"
        },
        "item": {
          "id": "7a994301-ad7d-42ac-aeb5-77506b7a0846",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ccb66218-3c61-428f-b80d-7ca11f86ce25",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc0ce0f-6f6a-40e9-86af-fbf6cda553ff",
        "cursor": {
          "ref": "0d8786c6-93f7-4706-a407-833142c4f0e5",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "05552b93-309e-4489-9396-ddb50e2144ea"
        },
        "item": {
          "id": "2fc0ce0f-6f6a-40e9-86af-fbf6cda553ff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4ddaeaa7-a8ed-4e5b-bb20-39b878eb7885",
          "status": "OK",
          "code": 200,
          "responseTime": 587,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c52b29-e1e1-4552-87c2-90c52232e89e",
        "cursor": {
          "ref": "d23f0278-4723-48d0-ba2d-d78f3c16628a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "61ce5671-c753-442e-b365-eff547528e4a"
        },
        "item": {
          "id": "63c52b29-e1e1-4552-87c2-90c52232e89e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c4f0b304-5db0-46a7-8ea9-2cfa5da00cde",
          "status": "OK",
          "code": 200,
          "responseTime": 2039,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3861b95d-9235-4740-8e2a-ae7aedd3898b",
        "cursor": {
          "ref": "87fce0b3-7d6f-4636-b130-e8284fcd92a2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b04155e-6947-4a95-b5fc-dedef39833a4"
        },
        "item": {
          "id": "3861b95d-9235-4740-8e2a-ae7aedd3898b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "49976f31-97ea-4eea-b47d-af385f2dfe57",
          "status": "OK",
          "code": 200,
          "responseTime": 1889,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ed115-3e32-4812-853d-a3072661b10a",
        "cursor": {
          "ref": "8dc66f55-b7f4-4360-80ac-e7ec7f6b5aed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e5b62248-673a-4b27-9fa4-569c4271267b"
        },
        "item": {
          "id": "977ed115-3e32-4812-853d-a3072661b10a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c23d2afe-5203-4f2a-b768-ac11d5c75f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ed115-3e32-4812-853d-a3072661b10a",
        "cursor": {
          "ref": "8dc66f55-b7f4-4360-80ac-e7ec7f6b5aed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e5b62248-673a-4b27-9fa4-569c4271267b"
        },
        "item": {
          "id": "977ed115-3e32-4812-853d-a3072661b10a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c23d2afe-5203-4f2a-b768-ac11d5c75f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977ed115-3e32-4812-853d-a3072661b10a",
        "cursor": {
          "ref": "8dc66f55-b7f4-4360-80ac-e7ec7f6b5aed",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e5b62248-673a-4b27-9fa4-569c4271267b"
        },
        "item": {
          "id": "977ed115-3e32-4812-853d-a3072661b10a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c23d2afe-5203-4f2a-b768-ac11d5c75f13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e67134-597f-4747-a87c-ca90d9667026",
        "cursor": {
          "ref": "c814c3ef-e1a6-467c-9b29-a1e1b7f4c55f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "83995c93-0ec6-4662-bd0c-ed33a5ff67b1"
        },
        "item": {
          "id": "c6e67134-597f-4747-a87c-ca90d9667026",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a00021a1-a944-4079-abbf-d2e068209ac5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2043,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f371522d-55e5-4118-9743-d17d15fb0165",
        "cursor": {
          "ref": "20678d3a-8e60-403f-b653-90286ac10ac2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44b0df41-f509-4316-adb2-4ed451769261"
        },
        "item": {
          "id": "f371522d-55e5-4118-9743-d17d15fb0165",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e975af4a-698e-4bd8-b906-e68540d47c40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f371522d-55e5-4118-9743-d17d15fb0165",
        "cursor": {
          "ref": "20678d3a-8e60-403f-b653-90286ac10ac2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44b0df41-f509-4316-adb2-4ed451769261"
        },
        "item": {
          "id": "f371522d-55e5-4118-9743-d17d15fb0165",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e975af4a-698e-4bd8-b906-e68540d47c40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5930356-bb14-43bc-871c-b37042786bd9",
        "cursor": {
          "ref": "56585d9d-cb87-4422-b55b-74d0e0dd7f22",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2c77f76e-3a2e-4d67-80be-0ab769cb9f92"
        },
        "item": {
          "id": "f5930356-bb14-43bc-871c-b37042786bd9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a5746567-df03-4488-86a4-0a48be2ebb87",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2298,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd31bdf-3404-44b9-af03-3c347e2b4855",
        "cursor": {
          "ref": "859af257-4ddb-4504-9020-1181d1f6ec4c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e764dc5-4f44-4659-b59e-e3998a9a9170"
        },
        "item": {
          "id": "ccd31bdf-3404-44b9-af03-3c347e2b4855",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b85a3a82-f872-4af3-a77d-625130fa5bd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd31bdf-3404-44b9-af03-3c347e2b4855",
        "cursor": {
          "ref": "859af257-4ddb-4504-9020-1181d1f6ec4c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e764dc5-4f44-4659-b59e-e3998a9a9170"
        },
        "item": {
          "id": "ccd31bdf-3404-44b9-af03-3c347e2b4855",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b85a3a82-f872-4af3-a77d-625130fa5bd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bd3eaf-2aab-43e0-9c20-bf741a6a01f3",
        "cursor": {
          "ref": "c500e7ae-bef8-4234-8e9b-2bcf87e0b0a5",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0018fa91-2265-43cf-b109-770bf1b6cd78"
        },
        "item": {
          "id": "11bd3eaf-2aab-43e0-9c20-bf741a6a01f3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b69e2414-8d56-47fc-8519-1c03073cf7f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1717,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}