{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1ab14c43-d309-414f-84cd-e8f3963550a3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7a7f4735-e047-4b56-939d-51017125ff81",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "709fb784-a0ba-490f-aebc-c3c1b03029e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f667653a-577f-4fa7-aadc-a6513e9132c2"
                }
              }
            ]
          },
          {
            "id": "6e612316-f21e-495c-97cb-56c24555316b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01f5d57a-6462-45e3-a1dd-f83c583a4652",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30ed7b4b-0502-443a-a135-ebecf87b289e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c08e755a-d6ed-4a3f-84df-4d0cc06c0a59",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b45b1ac8-0f64-4acb-a3e2-226c386d2c52",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4531cb4-67f1-4053-940a-c8f741f9724a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "571e42c4-d867-4ad9-ab5b-0202ba0251fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd8150d2-d791-4296-acb8-e60aa8eec341"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ad2b52ea-e37a-445e-8b00-8943ebd24de2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45069495-d3fa-46d0-ae3b-6beb791df8ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab4f5945-b973-414a-aadf-8b74aae3d5e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e056545-b763-4214-8e7a-98ffa676eb40"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff7dc0e-e6bf-47fc-9738-410d4208a93b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2d2b9fc7-876f-4d44-83a6-b8f07494a661"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebbeee8b-0a91-43eb-a949-ae71083ac0ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7038d8da-ebe0-4eaa-90cd-3bbe58aafc3a"
            }
          }
        ]
      },
      {
        "id": "59bee04b-f82f-44fc-ac8b-b5877e49defd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "57e2ca56-68aa-4a3f-b09c-151e66987fe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e78958b1-13b7-4947-b630-f86a5f4e9a85",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81e07a14-b0da-469c-b5e9-7395c3fdf0c2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f034f10-68b5-40a2-b191-034d2a1cbb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8186295e-818d-47fb-9fc2-baf8abb6add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5552f1-05d0-456b-ad63-ace869fad79e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ac320d-1a5d-45a7-88bd-eb6f19ceea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c561f5c-35f3-4a8a-a6d6-104a49c522b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75386c2a-530f-4795-83e0-c16e92e022b6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2925afa4-dfa7-46c8-82dd-26758c0c7daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "433fbb75-a53a-4104-b3b4-124b99d86dd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9c90723-a708-4537-b89f-e1e135345039",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7f4d432-6600-4b25-b848-3b101e88e8b1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16e866-3089-445f-8bda-668124795486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bda787b-dcac-4052-9b72-20f5fa8a4e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8551d557-2618-46a9-9c8d-563bfc438edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63f2850-95c0-447e-81e0-0ae5da532acd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "152073ff-255d-4327-8075-e18c031228c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "009acb2c-df88-4193-9c37-881c687ba079",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aedc7aa-0242-4254-b9db-28b2383007ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19bec1f3-0b00-4d79-89ee-0e723f0cb64d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d22f4f6-8f9f-465e-95cb-07d984dfee19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d17afe01-959e-47e6-86ee-7c12377f8768"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c34a4d89-e65d-41c9-a02c-b255d031b0de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0979280-3114-4c73-b510-2952053ab2a2"
            }
          }
        ]
      },
      {
        "id": "61c7abdc-f3ac-4330-8704-31d922413537",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3479cc3-d748-4d1a-9c0e-fb5344ce5cfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd827427-6e83-4935-a467-55ce13bb0ae0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6e77ac38-b7c3-4f27-89bf-b91a8936a288",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1295b307-fee9-47ed-8889-967fb824f7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e37c6d3-d493-4420-bdab-e850022120b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d74b08d-66f0-47d4-b112-59ef7460457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb507ff8-2689-45bb-ab1e-f89ab45d6a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70989e7-cebb-4546-b591-3a8828cf2200",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990886ef-8238-40dd-869d-ac5196ba6843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687eb11e-ae64-4bee-8da3-eb6513862d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9b77ef-c4fd-4992-8e51-29e8c7185e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b368f6b-0f35-4999-97d1-1274731e35cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e269bee0-919f-452f-9be6-e8f3f01a1b0e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708e31a-b12d-4866-87d0-791dd8ceb0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7accf0-2dcb-45d4-b0ba-e933782e477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e3b04c-1f8b-4aec-b370-431a44abd478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c705ef-f322-448d-a415-8cb4f507defa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96756f37-3339-4bf2-9a13-955805032c57",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e4929f-88e8-424e-adc5-31fcc978c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f05ea8-9e06-439b-ab43-e8c8761009b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137853fb-126e-4ed7-805e-42bce95d74b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04d8c0ca-fa2d-45d2-ac95-09b9609012ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7283d7-0aa6-4580-b7dc-8b5b1f8611bc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac181cf0-08fc-4b52-a18f-e17e923ff137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52440b6-4f96-4816-8c20-5da57a9cb8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731dd1ad-04d1-4459-b0ab-c135f697580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068829f7-388f-4282-a406-2c6eb4d2dfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9dbe5-b92c-4ef0-979f-83f5c80e9c42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f57e1-d980-4363-aeea-d35814cecd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11f7f0c-a68d-4dba-b9fd-3f2e3fe62b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b604a3fe-f054-45b1-973b-feb8ac08eb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e79db54-0200-4d38-a840-85bf1ea13b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288b7487-0b1a-44c4-be8b-6935527b0b35",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8ec611-849a-467a-9946-aa37d37d613a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84e8b31-cebc-4926-a41d-fe5a49c09089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ea22b-f450-40ac-8675-9b2e52618e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b9caf1-8e4a-412a-ba08-c12f692744b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd24c27-1da1-4ec3-b650-9bf81ffc4ac9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a19c7d9-ac8b-419a-8daa-cca3804095d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49db549b-06ee-4999-82f5-83f5765e08e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0752c8-f6c7-4d8f-afee-3a794b6245eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d5811f2-e48c-4aa1-abc3-76c6bf3a33c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c22381-1094-4ce8-8a28-72d135d40254",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e161ab-b409-4ea9-8515-954db5a0d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab2e4a3-8b4a-4dd9-90f7-58bf56cd06b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83f0b2c-9f99-48eb-bf4a-bdc34f02afa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8895126-a59f-49b2-993b-d8ddaa855996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7aec35-e45c-4862-a18b-15f23cb498e3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abc92f5-65bc-4810-bd8b-d244e01849c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b51c62-0d00-4247-b9ed-81f22573a0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19300d4-65e2-4f3c-8885-485457e86121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6005c275-e2ec-4193-9626-dce2152b8997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71805de-9b40-4fd8-b737-08a52478b7d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555db689-b4ae-4607-b370-7a1ec7951037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e793981d-7fdf-4c0c-a79d-b818b620f9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3216ea3-3a71-46d5-9332-7adde3309817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed32cb2d-4fe6-40b3-86ae-3a20bc606e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ba17f5-c95e-464a-80fc-99e36ef70d4b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bccc2d-21c7-44f5-a0e2-d18ab63d81d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e62e0f7-1584-40fa-a6c0-5cac477b1d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554568ba-fe19-4f1e-9f20-d6844f949223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4768820e-420f-4030-b687-33f37c84997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5afbb4-d132-4a0f-8a3d-b9d55f64934f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff1381a-e173-4be9-8f1f-d9f9ed74cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729086ea-5776-4e50-97c3-4f4ed45d38c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931a413a-1dc4-4d0a-aabb-747fc53c656c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2f1a09f-baaa-4dd5-986f-d7d13413b615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96a3901-25d3-42ca-8cda-017eca246a15",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a872d592-5ccc-458d-a07e-30e030e35db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44e8b03-728f-4e8e-b83b-8341d6090fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a695812e-36d8-4d8f-8cd9-8e99018d1fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3156166d-70db-4576-818a-21e66ac25ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0679edbe-bd2d-4e18-ba4c-91b37a6a7cac",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781be2b5-9603-4d26-b8a2-e6208f1c9e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574995b0-6f7d-4d98-ad0c-89c0784495fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b33194e-1013-478c-9584-cc7646a1ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "301d65bf-5aab-42e4-b250-f2e8dc01850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ceff3c2-8419-4129-a04e-c7699a346bed",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf51c761-5ba9-4e1d-a938-6dad667fbdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bff07b-2d48-4cef-95f8-4cba42fd82ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec5c588-1d81-4199-abf4-885ff76218ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa658f65-bac2-4d78-85f0-9b5a0c3b0d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7bd92c-5d17-4734-826a-48c3d528778b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301881a8-c115-4c1a-a14a-9bafe173a068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359559d3-037f-4fdd-8883-0eecf3696eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f4ef6b-8166-430f-8a22-63c64cf88442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afc58070-073f-4548-81b1-635ae6f443c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d062ef83-d7ae-45f0-b796-9c0d24a9be4d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da52f2c-04de-4fec-9fd5-4ff6ad0f8442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64072b5-387f-46d3-8bec-8240132cf627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb28f46-e7a2-454b-a3cb-d56ea9ca6a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a84376d3-7f4a-4068-9390-96c840271b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dc2d46-0d60-4844-b006-68a906264a55",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9131a4eb-1fa6-4fab-b6c3-502f8852f968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff01976-a452-4134-96e9-e6c3b5c2cf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2847aa0b-0a8a-4708-943e-3e5d4e220d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "467acdb6-d590-45b1-a95f-e72ab6864957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854244e-60b7-4dfa-b5f0-24edf33e2779",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce9135-8129-464a-9e3e-00e36e53c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d5c0fe-1254-4743-85e2-f1b0fc3051e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c3fa99-41c5-438a-b002-2c49901fb042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc71c51-9674-45b1-8210-3aca64a1c89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97a405e-92bc-4f20-b758-c9fd4fefe818",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f26984-f4ce-45fa-8914-6d8f800f3932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09d6349-ac5e-49a1-ba7a-673f458f3c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af342954-190e-4917-96f2-e2d626c06570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51a2591-8aa8-4e23-a3d6-9c7bf89df4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcd7f90-f270-448b-a3a0-19ef21d1d7e5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af5b6cb-08cd-4e07-ad98-88b596f06da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5b9760-441f-4a3b-a739-9d3cfe019b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d97e73d-1465-4576-8726-7914126bc3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db540013-93a3-40ec-be7a-8429bcb2d037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3619d2-e75b-4712-b647-d0da5fa89138",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd479495-334b-4450-8bbb-b192b92fc3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b7ccce-3ae3-490c-8bd7-837e87e51159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d562ac-9292-4a9f-aac9-d96fc4b286aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7947d19-c891-4740-b2c4-4a3117137349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c57e00-6a9a-4dc5-a767-768f2f9cfda5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10028711-8407-4723-931c-89ae4d312ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978b2d93-e24f-4e48-8ada-bc82fd249465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2198658-192a-4f77-8327-d3948d349f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "525ac0e7-0607-4ddc-93e0-abc5f8715b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3990e9d0-753d-4d46-a373-bdd1727ebe1e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1731308e-159c-43d1-ac8a-5b38e6fb1b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c447a3-ad1b-45f2-93b0-c286b74c4da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc5ef9-cbbd-464b-9050-c26ce8ff4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "162cccf9-5cf4-4d4a-9422-9061b1645c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd24319e-ea03-4efb-9ed9-e3f2e7c70a4d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6db61b1-e5d6-4396-9a59-ca00fb8b960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358e377-3bf7-464f-87f8-989c231cddf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fb121f-83df-46d3-a53b-beb571d08e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f024dd-d8cc-4acf-b9c2-ac4cb5da4a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee73518-d056-4768-b7c0-eef763f94e7b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74460543-b0c9-4e02-ab6a-e8333db5d56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af21a147-3819-47d7-a382-7648e08574c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9396d890-3b48-47cb-93ef-76953b0616f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff65616-10e9-4f5b-aec2-8344569037b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae44731e-4a3c-4608-accc-b18adf70cf61",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b182631b-8f7f-43db-ada3-db3ccf08066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b37a0b1-c693-4306-8f55-add46c14a3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9d4218-aa09-4d3c-b4b4-1a5f4e74cc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a201a1a8-39c6-468b-a690-de3549cfde2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4ba246-a7c6-43dd-a5af-435ac0226c00",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff96827-527a-4558-a177-03cb51922cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e361d7a0-6871-46fd-9ff1-d6009af4386b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85ba2b9-0f74-4698-9ec1-ecbaf0b724a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfceef74-60f0-4f00-8f88-5b854686635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c56e1-685e-4aac-8459-2967eb0bfd08",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b960c950-6e13-4848-89ea-cdbe880e1b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f653ab5-e2ee-42d1-ade4-560a6079092d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12668c5-ed27-4f58-a43b-6c07ee5c3cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "15de1e25-cebe-4e4f-a60a-fbad14400ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac3c07b-092b-4887-87e8-20e28a8846b9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905afd6d-ca27-411a-ae0e-6bdfe0d65fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735b7dfb-50e9-44cb-8333-326dbf2ba0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2533d-f51b-4688-9f8d-8dbdce9d52d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b994db-d4f0-41c1-960c-34d79992e311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9cd97-2a6d-4a4d-ae47-beb9459cb95d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0996783c-f398-42fe-a0c0-8b809d1abdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacae64d-bd5f-49f5-844e-1d064b2d3630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078f3d24-1420-4196-a292-47023bb49fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6acabc82-1d87-4c5f-a2c4-5440c7e13120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b474e1-8c6b-4a6e-a820-fd3e8295075c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21632de2-1881-484e-865d-24846ab71287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69664999-7edc-4878-8470-4d8ee89da447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bdb7d4-510c-48b0-b370-32263dd37fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade70ba3-e393-46a6-a2e1-d1f1a0c86276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360e11f0-7088-4e58-9213-ddb51fbb9519",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0eb393-8830-4c65-8b70-d535d2a27f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407be4bc-271f-4255-900f-1e8bd3a91bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5441887-3a07-4002-a31d-7e9b69071892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cee8c6f9-11db-43d8-abc2-e2462d78bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe18cb0-ed76-46c6-b622-123520289739",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df969c6a-5d1a-42b3-a067-887f4ab0bedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f9de2d-6965-4786-84f1-036704f3eab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8979c3-a935-4dee-9add-2b77c8a65ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc2da74-6a90-42d1-ac2d-5fc9004ee52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8181bd-8aba-4e51-934b-f4021594d668",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477b5c0-7179-44ce-b3b9-3881d741ca3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5244799-e6a9-4f90-b0f4-05d27fe5ae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9283eab-38f4-41a8-9b7b-5ab64c9cfb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7f3dac-cabf-42a7-8485-de4dcca4e66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9702e2-96fb-49f3-b739-56ed75efa7b7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2659731-e5f4-488b-a097-a94c31b22e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fe23b4-5dcf-4e9f-bb60-2f4fd941040b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff90f29-45f1-49a5-9d02-18222c9af149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e34c6ba0-6783-4b2e-bf04-91a86e2ecec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e22647-46a0-4efb-99fd-39f380dfccee",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8818e7ba-1808-4249-ad6a-b8e02e1325e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a64b722-88d2-4950-9cb7-be48c5bafe2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e817f96-e428-4cde-8e03-357b608a4b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb40bb2-d26b-42aa-bbf1-438f509af59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2644f61-f8fd-4706-896a-93a1d6aa4768",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7836487f-1519-4746-8d95-2bdca9bd7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85726b6-67ad-4bff-aa90-af68de8907d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf24505-ef42-410c-a290-582b9de7a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70af5405-46a2-441e-8bcf-f8c566adaa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b74475f-629e-4dce-8c78-f8bdab099e34",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d80975-7b7a-4321-bd8a-6f8200fecfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17ed0ac-b3f7-4bf1-84b5-d1fb2aa227bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf3d29b-cb2d-484f-90f9-c1fd1893217c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3395aa2a-4b4b-42d4-b0d6-6becd8cd4d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92693c33-1abb-4d08-9dcf-c8aa60af3443",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521d1b58-2a69-43dd-987b-ee69239b2427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b4a829-73d0-465f-92dc-c926c05fe7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72a572d-5334-4683-a119-070c242d7897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "191f556c-a096-4756-96d4-c9085b63dded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3694360-2a6e-4847-bc1a-0f1adfb34ef5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0a08f2-de9d-4584-8a61-323129ccab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755a5a27-dafb-4045-afa5-fcc1f682f728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb702785-dc27-44a7-bde5-c6a93b88a141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d37b74bc-6d6d-49c7-a912-91292dce4bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aac7d0-ca4a-4325-ad81-45ef6fe9e76c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aed69d-ddc2-49a3-a68c-bbdab6b62a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6943dd-a589-4d52-8f1a-0d8b0d94e2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bc2c3c-a1da-4686-bd63-cbd507dd0241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "faf456ea-eb6d-43dd-b0a7-d12187955a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9693e8a8-ed01-4094-9d93-ccd25e093be9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa500cc-4744-4288-9722-28eb6e3d6a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d78d00-7a50-4629-a31c-6eefcfcb62fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca228c0-9c9d-4e98-93f0-c9fec126b70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a064c5c-4e81-4079-af52-fe0292f7b475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af35c20-58af-4784-8056-d3a412303575",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a19e6b-bc6e-4c1a-b87f-9440e06d510c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f15477-102c-4c4d-9f40-bc826af766b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b08ad5-003a-48e1-b912-fff983eadc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38371e08-6dae-4499-a55e-f61cf07528c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed745ee-f77c-4143-b933-b56afbebd05e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17d5b6a-b032-49f9-899b-b7b1b3fb2ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e57a7c-fa98-4843-a3b7-9c06ff57fb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f562a9-28b5-4b94-aa91-25bf42121320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d565e8e-91af-42cc-9f18-47c1bc13ffb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a11de-5ea0-481e-a780-347c349f19f6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288c8787-e3a0-4c3b-9686-501a1d92de4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41f1c7e-a5a3-4f34-a4a0-8baa2927fbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbbb20a-6bda-441c-96a9-baae22e63479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "163108e1-f290-48a0-8b27-2492d0b4a2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef693759-d1f1-4013-a17e-d4740617b966",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9e1b69-bac4-47ee-aee0-db6ac353a01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d8d422-8d9b-4ecb-b57b-dd0d15c11a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e5c51-e299-4893-93af-b827d70dd12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "382b02c1-db33-4995-a985-67887dd51476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1042b1-8033-484c-bf6a-8be3e426e093",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8134098e-c0eb-41e4-a0a2-a672af5d6a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fd6fff-8756-4abc-9626-2df6fa80b8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbe8107-4907-4bd6-b77f-ba143f169a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4342b879-c2b5-4b62-8651-40a3ef6f9bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77fda1b-e30d-420a-8993-22ab4e9791f0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfbea80-cd94-4097-896f-21a7fa128767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea5a46a-c290-4edb-b0c8-d97e8fc4cc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fdb3e3-bebd-411f-9787-0990e4dc365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "750f2240-90a8-43ff-b650-fa67f73cce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427187f7-4823-4543-8ea1-1bd3088731db",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6890a4c2-343c-4b78-8cee-2a00c90d8148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c85ae5-cc13-4cf1-9be9-02e452108733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb293635-05df-4fb4-a1b1-bbaacb20cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c88cdb-e566-44e0-aa3c-f24fb7c39bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915f1ddc-12f0-4c3a-bbac-253525e566c5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8521acbe-e27e-4b32-b92d-5aefdfa4de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aa6518-2f51-4fce-b020-51b67654a81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabd7c66-77d6-42dc-af89-9d4f578e518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1593783-8fee-4796-b579-9a87fe45d6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43042f65-be76-430e-8044-2026d3dee498",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad862a3-efd7-4379-b4f3-0cd307a6fe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4846f9-a154-4972-96a5-7a9a492a27bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3571a1-aba1-4edd-b0d9-a3c3a6e17afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f3f962-5378-41dd-93c7-aeee912fbcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca8aa77-9038-4455-9975-742cb3687199",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cbdc1f-fff6-4e2b-ab17-f0e9bc7f8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84d66a5-fd30-493a-ac32-a15bdb9194d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed8bdcb-3645-4e79-909f-643eaf986370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c69d2c-7bc7-4798-8c86-2c72c407cafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a965c4-ae7a-4952-a141-f162f2b43e37",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5abd3e2-fd34-4522-85ca-2a9085e775e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8918ca-bd54-457a-b82f-48b59e12f762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb05c112-376a-48a6-b6ff-187b197f82c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10945342-098c-49d7-9559-1ba33885ab29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3824c48d-139f-4e3e-b110-3d79164aba46",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aa9939-72d9-4bd2-b623-a35dddf16036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d93a14a-b1b4-4699-ab18-ac152a11a30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da84fb71-2c31-4199-b6dd-c4cd9d39b43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "534a4134-3a8f-44a5-adc1-0723ec1e553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cdd854-832a-42cc-b9ce-e71f11dda1bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b0634-c5d5-4abd-a857-59ee8273dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2339fa-a392-4e29-bb86-f1d92ee069c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6429ef5e-702d-407d-9cba-895fdfa7c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb396c78-6e35-476d-9c66-11ace2473d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b42460-8e3c-47ac-8977-4860bb0a8f27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7379dba0-dfc8-4002-b98d-f0c8ca8a44e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c2236a-418d-42d3-a41d-ddf239a78ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6daf9cc-a5f6-4f06-8b2d-7a791cac8f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa658c9b-3091-4efb-9d4f-a8649e999f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1865ca5c-8bed-4804-a8fa-4d8e31f6c72c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15aebdd-407e-42db-9a94-180296fe4716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf377e0d-ac5a-4be5-b3dc-1abb09c85db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769e37d7-a239-4dbd-ac14-5b530bf85ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad52d24b-acb9-432e-8ead-ee82168ffa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40946cd1-587e-4191-b850-82fe7ba58a7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c25554d-dbff-49fc-a97e-39de538a39ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce582d4f-8597-4bba-a9a7-94beebdb19c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecff5ff4-cb1a-469d-aeb7-b7e49fe95e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d97a032-2aad-48e4-949d-04b883ed1b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee75d019-78cf-4919-9d88-a15b1c2cfc02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98735ce3-8132-44df-8d05-c72e7144b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d837eb5-b103-43a4-abbe-c5968331b760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8c8509-d8a6-405d-8397-80ff67e54343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f968e8d-c7a8-4355-b102-a709e22ce228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eec65f-d7ec-475b-8c81-373183943eb8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfa2396-d096-46ae-8eef-ee8e9994b4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aa7885-0bcc-46ca-b1e8-5b0cd9f70956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256b22dc-029e-49cf-8031-18fadc029e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93c9c4c-77a7-4e95-bbca-b5f71f6490f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb34a5d7-6a39-4ab0-a62a-3b14953ca4bd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd032b2-f463-443e-b94f-1244e06d73e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa465eea-d8cb-40fb-8232-683bbd3adff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e78d49-bb02-4af2-8362-c803df976b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6155c08-d9da-4e04-92b7-90dcb79fd557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b6e7e8-4944-430b-9764-5249a09925d0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6f5d6-08cf-47ff-8b2c-524f3efde2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa87b784-7934-4dcf-9e06-e9d807b0eb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6288c858-ab32-4c38-883a-b63078a826e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd68a774-0ef0-45ed-b9e4-e28f9c784209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932c5b8a-38bb-4d3a-bd30-9fe556703330",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5380b891-d355-4145-b4f9-68fb60edbcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03107ffe-3a79-44e5-bcf8-544f99b0a69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ce0040-b8c1-40dc-9b97-6c471e1b7a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb12d89d-8c8e-4426-80fa-ce0cdada7169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f800893-8f21-455a-8c90-7e17ba7d7278",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c912ff-d8a2-4370-8a59-1375276d9a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e315cdc6-c0a0-44d5-81aa-9f709e418739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9073850e-74d2-4ad1-8010-c490bb2c2c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6541ac54-3472-40aa-a352-b4cff0edde75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53cff35-101b-4bda-9220-0edce04ecae0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30512ea0-d389-4e7f-bc0e-176afc9c684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eb4d49-e4ca-41f5-a282-e459fa84ac4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b5143-a304-4098-b9f1-75126774fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e40cca-03dd-4f32-af5f-9e04be76cc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fb7a48-e332-4d08-a0b1-74ba38194e70",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea7ddb0-64e4-405b-9616-66d609f7a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c91cffb-adbd-4748-b803-82eda5ff2727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd7bed6-2e16-4006-8fba-2d53b504325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8898dbf-2478-44b1-be4d-109a66754b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9b5522-2662-4958-ac30-9e824781be96",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5144e9-39fa-4f68-bd4a-a450c0f4b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e09d5f-e41c-4011-9019-dd36c523d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3cc13a-5a78-4fed-b075-d825cd7fa859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85184f6e-7764-44fc-9ab5-bb02caf592a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c04808-3271-4fec-96fe-25fdbe836a49",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e410b-ad35-4f8c-905d-9d9c9628bc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed28df4f-d8c7-4f92-bef3-a06fd8653839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36cc746-4e7e-4477-a1b3-414026f66b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b416278-c9de-44c0-976f-1b2a57937e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d12b25-a25d-4fe1-8d5c-3d25d4fe284d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53713c37-e8d1-4895-b0e7-b3f02d744fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2bdb3b-d485-4f5d-b543-1886cdb82855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b50731-7f24-4fa9-a4ad-792161f7667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55485b6a-12e7-432c-9cc7-0b21ee7eeed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fef13e4-ada1-4154-95b2-94b016b2bd9c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8eb685-d6cd-4c58-9191-6cf87a893584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca557442-2174-42b4-96ac-a47fb4784250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc13e974-cf84-40c0-bf99-d6d896e341ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e10620-cbe9-43f4-8840-cb2fd9ae3314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d344becd-5e97-4bbf-8813-9a3b518297cd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce24139-9295-412e-8137-6927e4fe3d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a3f083-0393-406a-ab6a-28451b07fe61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c5f7cb-8032-470a-b8b4-555aab22c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd7dbf7-f54c-40a6-8c67-d51187887ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6539819c-b99c-4005-9981-d42dddb0c9c6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb4045b-3251-4fc4-912d-3f5ff3e03072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db40d222-fcad-4ea7-b11f-c848ab4c41c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548a7ad1-ecd0-49da-8df6-16b93fe1bf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2611696c-44a4-43b6-996f-742044651e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b36ea0-55be-4900-88f7-d9b738032ef5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a127b86b-f82c-4fd4-a995-85ebdb34e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18201122-a5ca-44e8-9442-c4c4145fa63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3fc0a7-54e5-45a8-b46a-e0c0cfaa82da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "176a8000-11e8-4c14-853e-5bd15432ce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddac6ff-26a9-4f11-b89b-e17460ade02d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26ab9fa-0dde-4a14-b6aa-87aabf2eada1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d2b3e6-0bf7-4160-924b-4d23d84fe54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fe6675-f637-467b-abf6-79eb44fb282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d222f4-4393-4794-90fe-a9b7bb38d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0000c4-5154-4e80-9a57-ae6d0ac440a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0012bcc3-f46a-4394-afce-85f5432ddb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc365dc6-d539-419c-9830-3b346aec571c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f6a89b-e694-49a1-999e-ddbc7d8a2e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e1a63a-d220-4d42-9bf0-2c5ce7513c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3402c-1706-4899-9ed3-6cede96e3d98",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9415d7-c829-4840-85cf-0cc695d540c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216cbfd4-270b-4c4d-bb65-6d08ccf1f8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbd87d1-69fd-489b-b332-468159e4eb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea4a65-426e-4273-bc89-fe8fbdcbd68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373cf12f-cd35-4957-a8f7-6857744402a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132b3465-639c-4ed4-8b21-d959368788fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fd14b3-7dca-45f2-be10-3e533bc4abaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ce191f-9f0a-4d4c-a64b-35ca11e5fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0149d49e-256c-4416-a28c-21569725640f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b36e3d-30f6-4f3b-9cc8-caebfe627483",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba3467b-8efa-4f45-9100-6b67f6491fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a47b54f-4b0c-46f0-ab31-48680e1f3f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3097c80-156c-47ab-b01d-5067fc0b9536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d410fbd-fb69-4f03-8e5f-a29add226745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eeb804b-d8b2-4b17-a1c7-158ef9894f9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9561a782-4f40-4078-b121-090e64300c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a702c345-fb49-412e-a691-9542ab311ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85bb77-4221-4ca4-a543-b1e00df0c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d350bc32-d234-4051-b484-11b55339f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e3b04a-f66a-4ac5-8433-2a6164631915",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89bf836-2acb-45ab-ad2b-fa904ed6a641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35fef41-db63-43ba-a7f0-2842805a5758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf919bf9-bba7-4af3-9e3a-74cd5b3359a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bdfebd-6473-4268-99ba-19232e6564e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d638bf6e-ac36-4af9-86f6-d27fadd2fc1c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcade374-45d4-425c-b59c-9ab541ab1c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c95fde-6748-4919-948c-134a2437f2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc57de0-31fb-451b-9d4b-d296500d5e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3427ec-d61a-499d-871f-bf91f174aa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d461021c-9ec5-40e7-8a80-a3a44fdeb66a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f969d75f-077e-4917-bf31-ccf94f407d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda91c4f-27d3-4f0b-ba6c-572627d56b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3d2a90-185d-4dba-a8b3-dc23b1dd0e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf83bbef-5098-4059-bdbb-e837f5c949e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57667a02-6ee1-44dc-aa7d-be0b12acc22e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d958fb-cc1e-4380-906d-3a02cf59b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9263864-e016-432d-b000-b7e5196112e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63676e8-d7b3-42bf-b7b4-add545c70db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21cdcc5d-f01b-46de-ad14-aeff2720508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd5d0cc-5344-453d-be42-6f8d132eb048",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66a2b79-db85-4e0b-aa0a-a1fed833d9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0210bafe-5cef-4850-b4be-649fb4ece759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631ab63b-e773-4fbf-83e7-baa3fc6cc07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "027dc77f-8c9f-4c49-b4f4-ce55e7877533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e0a860-42e3-4896-bbe0-2bdb5e0c0d85",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7390b98a-db42-443b-b83b-417e5f368df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f95cea-fa21-45e9-9465-d6e66fd35a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43849970-bdf8-4894-9bcb-dba6fec8acbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2788bd9c-f88c-45f4-aa39-ce43dc0d651c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99586af3-4706-48f5-aacc-f8d5e8e1a8a5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba56e7c-c272-460a-a660-ca74c1ae5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02780a19-032c-4798-897f-8ae4ade2ae9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8412d274-b88b-4ffd-8022-36d2a7f9bc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "360ca897-8397-45e6-a8e8-ec93bbb93906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7982884f-700c-4234-84a3-e32077e19dd1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f019a029-5da4-4b1e-afaf-8617b3db2968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb8ead0-db73-4de0-895b-d4d6329de8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b386bf7-a513-4d14-8484-89c7be8eb2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8829394-c376-49dd-adad-f1ac7d79ebe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72c72a6-9ac1-4efc-a9e9-37366a991776",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83486517-f2c9-4388-b1cb-fe1425e8b533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc9e8af-80f0-4aeb-86a5-7649f5f7135d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa9c2b-cdd7-4825-a307-add9e6986446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee06111-9d1d-4ac9-b826-f38dda7ac7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9c6075-524d-4488-aca1-738e4c6338e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6e73ab-2111-45dc-b80d-e6c9c45a6986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f25cd0-e291-4731-a442-ebd7d8ae479e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b2d600-3c06-4382-b34d-eeba70d5a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83498e3f-b44c-4ea1-a465-a42defdc99b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f1a09b-20e4-4dcc-9c74-a872697e4e2f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeffc703-c3aa-4f49-9fd5-8755f9232fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae6391fe-2b9e-4765-bc77-3a3ab316fc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f791917b-d237-4c6d-a26f-a73dbab436a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "239745fb-4ff3-414a-ad24-36d81eb1f7a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50ce2c18-0477-476d-ae71-8668db49cc89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a73ac8e-290b-4e84-b44c-08c2a79de071",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f964d5a-ee27-4632-8b8c-8f9d279e33ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f54a1403-8a63-4abb-b14e-4827e421811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01071ea8-862c-479e-ad94-959f1fd5815f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "366318e6-7c42-44b3-aace-9883c52bba41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24c71608-5f38-4e3b-84ee-9c0b4ecceac3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b0abb98-c623-4eb6-bbdf-15f46837677a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d5051a-b5e3-4bff-a660-da82553017b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abfeae3e-e4a8-4fee-8a27-221be859818a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1004d805-0748-485a-a52e-fb42b7090730",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9d294a7-e0e9-4a53-aab8-17b79f494ab1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "962a308c-f886-454b-a114-82934870b14c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4891d1ed-ca36-4127-9506-80f45b57ed3c"
                }
              }
            ]
          },
          {
            "id": "cd33c543-76c1-45a7-8823-1d49335c05d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9b47468-1f0d-452b-902c-c1ebf81f8a42",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d05e5f76-0aa9-4069-baf6-a78916751f03",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a33eaf-4b67-4be1-baa7-fcd34b30f90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "434e59fb-21b3-4813-a3b6-f35c8fff4c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792bc609-53f0-4203-9a98-1a561647447f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746198bd-e475-4120-a7da-2171159f8f66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9656f93c-c674-4a9e-a77e-e0d9b572a78f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "813f2ea6-8939-48c0-84ca-c3ab93e67550",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01930278-ccdc-424f-a706-171d56f40a36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "638383ce-685d-459b-ba3d-1abe460a5b7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8441c4d0-c48d-46c3-9563-fc185d821271"
                    }
                  }
                ]
              },
              {
                "id": "e0a87dab-6fb7-47b1-b1f0-b97004ba191c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6f4c156-82cf-4c68-9347-ea4197dbc620",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf594614-0a15-465f-99a0-5030f69acc2d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0adb682f-5728-4510-b310-39d9f1ad3507",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdf35183-f06e-485d-85aa-3a41471f587b"
                    }
                  }
                ]
              },
              {
                "id": "e6d8bb5b-b500-47ed-be37-9e277205953d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63a32886-23a7-45ec-b6e9-eee7c662478c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2df4bfd-e5c2-4d8b-b904-54655b7adec0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b12c8d70-c051-4ac2-8b05-cb669eb2f553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66229dfa-7576-4259-94ef-785aa2a6123e"
                    }
                  }
                ]
              },
              {
                "id": "6dc84482-6216-446d-b335-d633878ac2af",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c2180d3-cf1a-4c19-9f23-c5f983131259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21ee59c6-d947-4dbf-a895-e2ee3de057ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4c326fd-cb3b-4194-9269-2d7d66482e80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0bb074ae-82f5-4bc3-ac2c-76f900134537"
                    }
                  }
                ]
              },
              {
                "id": "827445af-2cc8-4c7f-a4ea-473fa7a37741",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b169587-a9bf-45b2-b072-6296058a5885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72d469c2-eade-4883-bceb-f588bf1e16bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a93f6e1-09a0-4a41-96b3-30c2f6af5067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "aa4bc762-cf76-47a6-b03c-28894b29b8f8"
                    }
                  }
                ]
              },
              {
                "id": "bac52eec-1da2-43c5-abb3-ab1560bc575f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "119d1700-71f1-48f7-a788-1c187931c50d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af6715cf-4818-48fd-a3e0-9b2b9f9b1d11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40913c03-10dd-4242-944f-33f43e5aaf1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01715323-b49d-48f1-8d58-7efee93ade1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e34ba39-eb0d-4cb7-8de0-b6faf2dc3bf2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "effefbd0-18c3-4723-8ee2-9746002ab118"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d7817eba-51a3-4c3f-b870-742c8fe31367",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5777053-7115-4b8e-9a76-8ef7cacbc4d9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c88aa7e4-0390-425c-bced-d6fb375521a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cba7a785-35ce-404d-8898-1dbebab24f37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "106a8d02-6870-491c-a5de-7cfe798bf8be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b68cc947-bb7c-4317-8783-3b5aeb97eeef"
            }
          }
        ]
      },
      {
        "id": "deb4efcc-607d-403d-8773-0620aff48319",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8670d3df-2c1e-454d-af5a-987d9cb48855",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2cebd34-0132-4252-9a44-a4f0a920b628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7770d594-1164-428d-b8aa-4db0486ecb58",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b9db20-dd5e-43b8-a636-33ba2cd2fffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415fe918-6c22-45d9-a379-4e07ef8fcd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63826c0f-23b3-4aa4-8b36-ea76b352607e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "601acf52-c336-4bd1-85ec-0c6d756b9aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2be09-2a97-4949-bc23-27b063aa41d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d62acba-aec2-4578-b6d9-a4a5107ee447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6311f53d-f219-44d1-af63-2d9bdfc68df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c739c7-6dd8-4180-9036-cdd403275dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f5ba99-235f-4c9f-be33-7da2cf3e4659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476fd074-eace-4f4f-ae91-b46c5520ac7f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948c83f8-b796-40a2-aba2-41c7dffca5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d76f549-a981-4577-b71f-49b6e49aa44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a70836-83b2-4b90-be94-18610eeded41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "993308bc-c175-493b-a4e5-4686f7a081f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811e8e70-d6b1-4ef5-8176-c58645cfa722",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c601dd9e-2be7-4324-b297-d9490bd22409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70157522-fab7-40b2-a101-6badbd5d9069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429f8c36-1995-4e2b-8957-f8ae06eaa91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f00b893-a39f-45fb-b674-2963fc3274ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525d8ce9-d018-490f-b158-6172060e7de5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9cb3f4-4c09-423d-8495-60b39f7b50ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2381b2-960a-4eaa-a67f-facb1063a202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7132e48-0ee7-4aef-b416-1ed08b2de125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8fee4d-ef6e-4da6-a859-7a49ddc13748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fc7ef4-2838-48ee-8e7c-f5a647c1298d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd16c92-c978-4ce9-9349-5bc9a3c51007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c5074-a72f-4ed4-a893-dc74033bfa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5078e3a-a1c5-4dc1-9709-b5d95efd40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "745d8aa1-dd6b-450b-b2d9-bd73a5508157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfd4859-2f4e-4c54-affb-c81ded624124",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f8798-bbe9-4cf0-b9da-1edddbe6996d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d748ab3-c9cf-4925-b8fc-0c4ae4bb2b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c137a-4102-4ffe-bc17-563b31515fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc129c7c-95dc-47b1-84ec-d9a067b058fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794a2711-d7eb-4133-b9b0-e6155fe10c5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518d86d8-1e23-498f-8b73-8b0c47db339e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698e3624-79c9-4076-a52f-40ce397348c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4cf2d4-af3e-405c-9ccf-895f5d3ee759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b86281de-aced-4291-99b2-e0125680fa06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388185e9-29b5-4cc0-952d-8781753b49ba",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e90bef-5bcc-480e-93f0-67c5c827af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86380a16-5219-463a-9f0b-51fbb47a9a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67b1279-3805-4332-af61-873f61260262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "549b112e-4d19-4945-8d0c-081c4c8fe3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02489ec-8150-416d-9e22-aaffc857c103",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7598c5-2769-4eb7-aeae-437af0f8229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212abf8f-f0ff-4016-9708-818feb7ab194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d526f7b-ca1e-475a-b49c-74d995528d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b5f48af-868b-419f-9d5d-f50d0bec0b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50136c5-14af-40a9-8154-9722468de314",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c55d6-a037-4ae1-86a5-2965b56f82f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06c43ae-9852-4ac2-bc86-a952a94757cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd688cf0-eb30-4d46-af3f-07ba31356294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7b93e4ed-4e44-450b-bc11-e4be51e9b4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f573d8ab-0a06-4896-ac3b-221e91425819",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde45ce5-b776-499d-a93d-617afb2121e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0972e126-1163-4656-9b50-617d70bd7830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597baba0-8f8d-418a-98c1-706b7c258d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64dc06df-940e-4555-8b85-0b0c6aa8f420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a81f90-93a3-43d0-8b2d-2e9282218992",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b34ea6-d06b-4147-a2b4-ced9c99d852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99ef09f-676a-44b1-9f77-9ab274a43e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d85da25-c6b3-4550-8277-8538428810a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eff407d-8b21-4b8c-9004-ae759d3fa6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de948c79-3e1d-4b63-bff1-6e6de70ebc57",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab309ba-a8b4-4d6e-aebd-97e7827f2593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe490eeb-9bea-4527-a710-e59b238ab71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9cb8d5-f93b-48aa-bb48-cc30a5758fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cba6137-ce31-4c54-a055-d0765dc64c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88addc59-3fee-49a3-b8cc-88c4eaf89051",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991a8459-4fab-4e03-92bf-de1a3d97dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af8b7c0-3b31-4d1a-b852-3c5009b31490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc53bdb-49bc-4446-a360-ce29e9dd1c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6ffac9-f30e-4ccc-9ff5-068b1e2f2fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1926972d-cb32-4970-b3f4-324f931a83c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5a33b-e539-4739-97b6-9f6a30a23267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d39df5-b232-4e2a-aeff-3f607c0944d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3049c80-aeb4-4c29-8df4-a167743fa9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e74f29d-78ae-47b6-8e3e-f75fc9555770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fa2231-0707-44b9-9762-e61387ee5570",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c94c76-7e70-45b6-8612-1909dc379239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0d089a-7cb4-4e74-9416-f3df0a19e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f05ec21-dfa1-4f1b-87c4-be8e66149ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7ac90b-3f8a-44d7-8566-2295c6330650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524479f3-e1cf-40bb-8e72-b9d9f1a0a0a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eebf2f-2802-4e2f-b175-5e2534c3e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5c11ec-d702-445f-873f-9d5a72af208c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e490e49-f650-4b59-8cb3-11977244dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e0f1b8-80af-478f-a2fa-9d2294bc606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02004a-a15e-433b-a99d-c74c2c6ca8ab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9011804-09c3-4ba4-b7fe-f4796421f250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f246e7-c758-470a-8ccc-3118ca0889f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6926517-a6a5-4a34-9735-02ce508bf251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd174e6-32dd-49a7-96e3-341d89a1c314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07199963-c5f3-4401-ad62-06ee19a3837e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82583cda-92d0-4d91-a72a-b5fdc546e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f6acdb-dfff-4160-b19f-5cae903b3712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e09ea5b-c7ad-475b-961f-3a237945ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb25c27f-1b1a-4ff7-8b83-504e36e51307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16903d2c-fdaa-47e2-a630-cfbee1bcfaf9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b04012c-ced0-4742-b7d9-0f94789c67e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d930f3d-c1b6-459c-8dd3-11caeea7ad5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02944b2e-fe1e-4224-8e9c-020ea6edca92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b161dc02-7e32-43c7-932d-feef59d2efdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f547ad-eae2-4a32-a30f-aaf2c6a33c21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f82d846-fd17-4e38-ac7e-4a9d2eaf2071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5eb70ab-72e4-4ec3-b814-79eea327ee54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d1da79-0157-4944-ba03-5e50cd6a368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2d3911-32c5-434d-869c-deb61ffd47fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c3729b-5dda-49ae-99a1-91e9fad94b8c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dd2270-e4bf-4440-b271-5c75ee50acf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0b1643-1b02-4e6c-96a0-ea5e968881b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38843cce-f348-4362-a2f2-9c70f12f0f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c19ba9-baf2-488c-88af-4e8bc0d39bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88925438-a6e6-4a2e-b4cb-e5ac85995c1b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967df4f6-002a-46f7-8906-44ef46aa6790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc049072-2199-4055-978c-f29c6a9bbfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaeac6ee-a46f-4f2c-8ada-658d8d117fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f9f155-5561-48a7-98cd-e28cb273d1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a518e4e6-cae0-4a56-be73-d2ab18767687",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9c6c1a-827d-471e-96b2-7bd6eeadddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8951ab2d-f83d-4b89-b09f-4dae88aff33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1080aa9-f5d0-4229-8d59-b63576f04d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd2a1a0-cc4e-479a-be42-27f4d33b20ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66544b3c-4379-4eec-b3f1-d106943a3e42",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcabb29-ffa7-4484-9fd7-071dd2f5510f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145da653-b571-43e8-bd2d-899aa7719f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f8373f-038d-4325-9be1-c92c003f2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07dbb3c9-677a-47b1-a883-065c55bc65f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b514ce-c6af-4d32-966a-8f3dd625b0a0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a710f439-a011-44d9-998b-69fb45fe28b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d1953c-cbf6-437b-a8b6-a53279d00162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7441f8f1-10a8-4629-a2f2-9d0065e4b229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7587152a-4799-46b1-9250-7cb2ce934326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e201d1a-5869-4b89-a9fa-2e0d0ecc7607",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c10ca8d-712b-4150-a8b0-580f9c8ca6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b1f6b0-2219-4ad1-855e-77f0ac685c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d411f57e-4e85-4433-b76a-a0338237fb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f166c14-8d21-4595-8ebf-1567dad68a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4618ca-5a04-43eb-9501-7452db4b08eb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540baa6e-3f93-4f82-b66e-cda4d8fb5085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d55de7-1e87-4a54-a81f-e9d2b283e36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3bf5ce-694d-482e-b637-63ed3328fce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd80eaf-06ec-46ed-b36b-4424bf0d6a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915099d7-bbcc-41da-84ab-44b35c45ed25",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6dfc2-64c2-49c5-997d-6ed48e01e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc2605e-3917-407d-842f-7890fc6ae4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3eea937-1d74-4c70-a141-8fb823efbf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd425b8c-73a5-4458-8109-80499cc651b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1043da8-11be-4b10-b49e-99438405b0a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccd7d4b-a891-464c-85a4-9fa52be6224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c91c4fc-14be-4414-8f2a-063f1391984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5146b0-9a7e-4f11-9b6b-0eccfaeec7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3680d75-b1b8-4422-82c6-7e7814289faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5483501f-b4c7-49b2-905a-fae9362a5b09",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17552411-0bcb-411b-ae5a-ccf828611515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46aa1f8a-6e6e-4d95-92db-cc23a8765566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d828e33-481c-4285-8f4e-4f749051e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa4faf0-c557-40cf-ab91-40a2526551ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fe2a04-7001-42b7-b26e-f25ee8bdaaef",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5f44f0-130e-49c3-822a-7b7f73202a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f716fdd-a687-4384-82ec-52ac59dcd58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc2a5a1-c1bc-4882-bcb8-59aeca336d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbb5456-1edd-450c-850e-1090fca0f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f189aaa-a4bb-42c8-815f-01aae613b3eb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3d91b-2dac-41dc-a28d-28bf55835bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff81a76e-7988-4b60-be24-0a5a82daec61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a338e974-dbab-4e19-8d6b-830e7f2afc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a541807-9abd-4d72-a75e-0c526a985f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac221e34-b9da-4d72-875d-f8e61b0d53b2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269c5795-149d-4dbc-a535-b086de32a32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d21f8c5-9103-4816-90fb-b1513a9e7a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01681f19-a5f4-4910-8e88-f1a9e7103f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "244d5dc8-7781-483e-959d-118556ac10da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba9c4a1-f816-4d2f-8276-8300e3bb90bf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120f12fd-f627-4d4b-bb7d-a48da6e3c801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662c7b25-916d-4e8c-bae1-198f72926764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4286f7-23e1-4d61-9a2d-a1197e282a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7417dbb0-0bb3-4dd2-8699-17a9e5ab97c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e248bd2-8ab2-454e-9f12-c574d1255c42",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600fbdff-79fd-43bb-b04b-b7c5f9a6d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126b9658-1cf8-4811-a5a9-200029220556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42b61d-114f-43ab-870c-528298ef55e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5a22d7-3145-4ebb-bf34-2644b6823c74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10144ae9-bc60-4328-8e47-8ea202651d2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de387e69-8d95-4e09-bc9d-2561489ba55c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfda29fa-b2b6-4b1f-a0b0-e931da904a1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5ddaf2-86a5-4381-8811-51b70386ea85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4727f7-117d-438f-b44e-3f2ea6375b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bd221e2-f13f-4dc0-814d-a8440874cc8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cad07985-e4c0-470e-9c34-da1a123deef8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67d5c92a-077b-44d3-9c7c-7bfd20cfff70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b04c18e7-3596-4fc4-a57a-b5f83581fcf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e95c85-3e6b-4208-8e13-4c5db5640435"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1334fcb-1988-4144-a80d-1b7e222f8d18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6051843-e533-4765-b27f-d55a1b92d5c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a957ed3-784b-43d2-829f-ca8854d9b84c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "348ed829-94c7-4be6-9e9f-adb7c51004a7"
            }
          }
        ]
      },
      {
        "id": "23ab72e7-36a2-4024-90fc-2688e960c023",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "04f9eab1-efcd-4316-adef-56f9da84a1f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dcf6399-0609-4fef-b066-ce85de07d3de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ac63323-dd0c-4dc8-89e5-a12baa20deb7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7ce353-520a-4000-ae3b-71a7e6023335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef8d558-4258-4014-b33b-281fabe01e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0408971d-d193-40f0-bfba-5d2046a3d673",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65b255d-6245-4742-b766-8f26ebe16ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3b569b-7efe-41dc-b89b-a91e41162dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b29f4b8-b93c-4e72-ad01-f2af4434ec25",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22afb2b6-abf5-41b4-8fc6-34b644e93f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a1ca77-3c63-417d-a7f1-89fa433b006b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febc9621-5295-44fb-849c-81bbcf96fbdc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4293a34-2a1e-4877-8778-2f5089ebc8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6ad86b-4c12-4025-bdbc-d0eb8cc88b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a125f51-468a-42b7-ba1b-8ed02e82a351",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69060595-b4bc-4034-bc9a-88a583d50234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf98b374-a353-4382-9d70-7d388e7e65c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9417781f-89b1-461b-80d0-3734d584edb8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb2561-7c4e-4b82-8c7e-e6e959bc26db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c478951-bccf-4bf5-a4a1-ac614149e1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df7a99c-7136-4e17-b5ab-18f984a546ed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f240b9-0540-42eb-a7e4-3397fea2c570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc5e7c9-ec69-4c15-af7c-94e26b7567c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f134c88-5294-4f17-8e9a-1754446324ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2f1cfe-442b-46ed-9da1-4efd8d5742a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825eaaeb-3dc9-4678-9301-58c3fcf64ff6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095a1ecb-5b5d-474a-9742-a07bac3cc6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203b5303-6a7f-4b24-9848-9a7b61b52d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae2f2cc-996b-42f6-b29e-317ff6f6ef4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db37ce3-4935-45c2-b896-2b1105e1fdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc390b2-8df3-43e7-b350-d45ea2a27e00",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b16f78c-227a-4f46-9889-3326c2fdbad3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c7c0bb-9766-41df-a902-0b7b1ebc6be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bf9805-2ac1-46af-bbb4-b561d46eed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b33032c-6ad3-4d7f-aea0-71f4c82ce3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00423fd8-83c4-4fc8-9727-ca9dab38a084",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a1d1a2-d67d-4d97-8688-220cc26df72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4f5b44-81c7-47b2-a19e-6b28a5e92b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd669295-f21f-413c-b5b8-3c39cbac283e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68799de8-8bcd-41df-80e7-82d940a88cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673f272f-50f9-4b46-81ea-d6c543da6322",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4770ef6b-6fa4-4110-8f8b-85be2d2b629e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fecbdd-f1eb-4984-9cdc-eedd8821523b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ddae8-8f9a-4cb5-8c4d-974e80468d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9890e59-2976-491f-b8c0-50f0c7748a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd5acd8-6628-4093-8850-ffd1eb3561fe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02937b4a-d349-4944-949b-7d798f56f2c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0ad7c9-a684-4d69-a125-79a143e28f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb8231-a2cf-40d0-946b-e696d126f83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e65369-4670-4a57-8a66-17cf8f70b52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8ddcea-1a7c-4e18-8244-93ce88f3907e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97f2bbc-748f-46b7-8011-fe1cefad5a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24a686c-d342-4844-a1fe-095fbab95c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bdcaf3-d148-42e9-bb13-65f12a16e00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65fea41-e27d-4f8a-922e-0adfdbb7ee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e22534-cacc-4088-ad86-d42676826911",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d7cb4b-51ea-4384-9e5b-379a21424150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb4f9bd-9831-4295-9d53-a1ae8056ea4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d919e5e7-2b66-4aab-9bed-7edc213af564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2817ebf6-4db8-4198-931b-08c227e0a29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e895a-f9a1-4ea2-bbd6-b98c6ede5112",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19179af-e380-46d1-bb7b-9b62dd12c308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aac73c3-2450-4e93-959a-889aed4a9b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f867541-6a19-4a4a-a64e-b62ba5e9bac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6901bd7-412d-4d5a-8b5d-b1b31b92cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88abe9e-99d7-4552-9251-b8d479bf9485",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38206595-efb2-4731-9b55-3d35ec6ad3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a10f1c-e8bc-4def-9e6c-04bdc60c98fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c571fbc-61e7-4f70-9f87-0557d3b159ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e30d5fb-05aa-43f4-a299-4e65e6a2f5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297347cd-1948-4d37-9566-0d01fd66c713",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1e359-440e-4c62-afdb-c053ed804a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5d7c16-76d9-48f7-9f0f-8575aeee1c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4b476e-c229-43f4-992b-d27969e54ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b10c90a-9252-4b3e-bf75-0a9a55a79363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe26d2-2d12-4c91-9888-7cdcef49000f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4408e3a0-8a10-4725-98aa-fcc85e213285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51764e89-c142-49c8-9713-6a5195709c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd310a03-153e-468f-b572-2e81ca549aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14d0d93-9f08-4d98-a49a-c0f74a4522d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60706b8-c0e8-4edc-bd04-d2501d26e2ac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab4d047-9cf3-4b09-9a4f-95f6892446c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b0f25e-07a9-4199-bf69-78d4ef866e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a0c815-4429-4e3a-bfe8-12980c6f2b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffada42a-8f3a-43e6-8663-3fc8f20e1f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586af870-c8ef-4734-b985-7b36cf0fef9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e51ebf-0dbc-42b8-a8ce-9170a6ce9aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c13e26-59e8-43c1-8cb4-dd537618bc3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a86d974-493e-4148-aa0a-e818b532725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b3a8c7-6e36-4bef-acc1-9e35b3a95797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb43143b-17da-4e51-ad21-6aeb7aaafbd0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691cd4b9-1286-4888-8648-666403030b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284bcf19-df76-4343-bbd6-8d30a27c336d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d0568e-8ff7-418f-822b-9ccf98e87494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89b7b85-8a26-44a0-9250-e8ae68e6c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5268eb8b-0dc7-41cb-bb0a-790a8265f96a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd6fdea-3700-4ad3-be94-17e12d13a178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a07f0a-c036-4840-93a2-bfe1263998f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c898f97-dabc-442c-9b7f-e7a8fe2d63bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd75a4c-a2c7-4a19-b7b0-6049c213533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a9328e-3be3-4183-b1de-9b146f13371d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27417af3-79af-4116-9b1d-8e1d29444d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f4bbcf-08b6-4535-98e6-abfc27eba070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b8d318-a332-4bf5-92f1-64663ca03dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fea6ded-c026-478b-8197-ff11d6039f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c2a2bb-7d19-4dfe-81e1-3b9a6ba6ad1a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70933ee7-0db0-48a2-b34b-084c0e8dd3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5348b90b-05ca-4a7f-9e71-1a4ba11394a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f1a147-0a19-4be0-8619-a3884669f5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b9c099-365e-412b-9a18-f78e6fc3b8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4335d3b5-e09d-4b83-81d1-9211ba3059eb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34930496-5ca4-4a19-8e4b-f6e0ff958f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b1df9e-103b-4197-8067-3f5ae482d814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7affc2-2da5-4426-bd7c-9dea01458c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f175cd-6dea-4360-a9f7-66b3c96216ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0c722c-fe27-48fb-a5ea-15131b34db40",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f7c77e-899b-4682-8fa7-6005d490a9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a8fafb-a309-4e5b-b882-cb23e6fed563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6acad61-7a1f-4c1a-bee2-720985d4e673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec054d9-e1d8-4b36-a4b7-43a253e0be22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf63e2f-6daf-4b59-9a86-4956d38092c6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367ba619-879d-4070-a75b-0769c861047b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccd950b3-46a6-43a9-9588-a1b506f4c8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a82ab7-9e3f-4262-9e48-6df0a4582dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169db6c6-35c2-45b6-bc6d-bedaee648bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890a9fea-48eb-4b54-8213-959302cdb2cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8f4fc5-4635-4eee-aa24-cf3a9877dcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af68748-68e7-4597-8075-b09fd8a6efe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cec97a4-d5b2-44cd-a099-50d437ad09d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2a8658-b521-46ff-b308-09acc7f2c041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b595853-cbcd-4fb0-86cb-a52af25d8687",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d715efe-8f81-4e11-83a9-78236f2e241f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddce67dd-b073-4bcc-bf31-6896b61ec57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1420ea-e5ec-45c7-87c0-6d88e1e47005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6af017-8ff4-4202-bd8b-4aea56bb73e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeb54d8-43a1-4b97-b412-057da602403c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6152db34-0ac0-48dd-895d-952a537958a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeb8b2e1-b684-4a64-9853-3c2307f50a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bee5dd0-9787-4dbb-af74-968ad33865f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3b81ca-26af-49fd-8257-3fd069c74887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a334b25a-29f9-4ec0-bac1-c5b15f0ae390",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23661d92-98fe-47b3-8ca9-84a33f9586be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a3e55d6-4acc-4524-b4be-048a43dc1ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f454580-fc4d-42a5-a8ba-3a0965129638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689f5ceb-0569-4e02-a37a-55091b352ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3740c328-7860-4294-97f7-01cea5c04b6c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85dd634-4d75-40fc-bb43-74fd868cf029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60342dd-ed8f-426a-a721-17ea394a452c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3633d-d25d-40ae-bce4-59bf296c8987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d12daf-32d6-409a-b183-e1c4b75f5004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13274942-2681-4f85-87d4-7b99d1eebc32",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e65d12b-62cb-494d-997f-4e711c24a80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0435e97-9795-4479-8217-6de58a7af307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c119ea8-ac0e-4417-a00e-4c2ceee94f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736b9dac-2df5-402d-bb75-88ff5394287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11463e4a-0f41-4571-b189-ba8d38472b3c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a9a02-1e47-4fb3-833f-5fee0efe31f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae082671-c1a2-4c26-8871-3358b9f4ff93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b60d0b-8d06-423e-ac0c-726da29d7a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a913bd-a24b-4797-afb3-fd4fa73028d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb2215c-639e-49f1-bcd6-933b5d5a0897",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655df6cd-cb72-421a-b74d-fc6677969c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f44dc9-6c1f-46af-b206-754b399e7b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b85ecd0-ff0a-4921-82d6-fab25d64c390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db254030-78a9-4f41-8ecb-9ad1b273bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e16cf4-9bb0-453e-8d4d-4fcbd8bc0c0f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad59bc5-e3bd-405f-ad33-58287e64e47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53367a15-94f6-4f21-9ac7-e40e8ae9a4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3ba0bd-346e-4102-aa1b-f2cba2537d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8719c0-0769-4526-88df-297454c84d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a321e0-b9df-47c2-a234-008e7f58005d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bafc8c-2642-44d8-aff1-f5c3f2906091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a858caab-4e0a-4dc9-84cc-7a7759614a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a414504b-a010-4f1e-ba86-0ee644705292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698ad7a9-379b-434f-ace3-e75a6dfd1a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af90a1c9-a818-4259-b873-00a1e15bc2bb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393dbd5d-eb67-4e7b-a038-250d76e53249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c16b20-3d13-41ae-bd4d-d8441f62621f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d579b1dc-d7d0-46f2-8f39-83673ef3fd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b69388-7c68-4363-b2e1-5339af6b09ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658db0fc-ec33-4e15-afca-21f80f8ff4c6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f5939d-5813-45fd-8283-c2eee23f289f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccd8568-5b16-4b0e-88f7-e33cfe500674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b1db7-374d-4b97-bd7f-3ed5524e539e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85da4929-221d-45e4-bd4c-b8b1ec753433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b248df39-4537-475f-8033-8c0693375e26",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7329f5-a0cc-4cf5-8a7f-c95282ef89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67bde2f-4adb-4346-b12f-d737abf74005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96040e90-e726-4a75-9926-25781bce3b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf213b4a-92d6-4dca-b8b8-6b745b212bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d424ed-b1da-433f-a23f-86af6222de4b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff41add-14aa-4aae-a765-66030aa1e2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f64795-e13b-4a4c-8646-b03d52f0d0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f2ccd7-a37a-4b97-976d-87d10638221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973b6b2c-f87b-44fc-8d29-7259faf7e139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11416acb-273d-44ae-b219-2ee2e401675e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98e4e53-8d01-47c7-bd5b-9edbbc4d014d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea55c22-abda-4394-b679-8d3a72ad08bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b8764-89ef-4fd9-a08f-18472ad63553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02160ea9-67d0-46d1-adea-2ed75aee247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ae1690-b5a7-4ad0-979e-fdd443aa7b8e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a319ade3-abe4-4fd5-82d6-d168289ce499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5836174c-5347-404f-9999-c459bc87f2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cf7616-50a4-4832-a01a-4cfa717e7fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6f6eff-00a4-4281-a50d-41f62a00c733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88fc44b-6b82-461a-9c52-d971a0b380c5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459d2c1a-6d7c-4ec4-aaa1-0708f1b0bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab98c1a-83cd-4804-b7dc-12ee4a9c7301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f902e6a-dbf3-4ecc-8adf-0d3851d3e305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2b8e40-cb73-4b0d-8995-86839016921d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992cf108-be99-4e7c-b0d8-40883f4b4fd7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed30f2f-890b-4450-9a02-18ee94d795b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e002d39-17a8-4071-a568-0fb347b64a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ecdae6-e989-4341-aac1-37cdecb4dd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919f32f5-f23b-443b-8fd5-00bc93de9513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29c4202-a806-4bfa-850e-43f1b144e691",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda87ef-c69d-450a-8bdf-b452522cae4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54da85ca-7ba0-4985-97e4-b444811b398d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe077c-3f69-4782-a4a6-4b092658134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678e246c-9134-43e3-9f3e-8fe340524930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ff9c79-749b-43a6-a092-9bb149e65697",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb91ef6-9915-484d-b0fa-66d1496bc509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e12e2c-a385-498e-a377-04f54588c541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d9b4e0-a327-46b5-90fa-eccefaacbdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92127595-fae4-48fa-be4c-0b97207066e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e823fe-59c4-4f40-9c61-38abbbc2b51b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bf0374-6aaf-4f90-ba9f-c933f01319a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a823f565-d436-4bd3-bdbd-2f5ee56532dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96d737e-ac1e-4eeb-bf42-b2a4a1c6ef07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547ebc35-8c75-478a-afe3-99a36d7ec676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a11dab-8767-4b54-a735-10bc6e89271d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b431470d-a78d-4620-81d1-ac25051d9c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a16ab2-0e76-45ee-920c-a3809c05f6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733ba51b-2543-47ca-bfd5-fda1c87b6936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7f6038-4729-43a0-b524-3a9bc99dd956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9aab07-cd20-40c2-b23e-34b525942da0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec1e04f-0ed2-458b-9fda-40ddd73d5586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6f2a7c-c2e7-4566-8f93-205fe97bc864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e8bde1-2aa4-49f2-aef1-25ae9a71cc95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab996d2-dd9f-4d38-980c-ff18869cdff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29f976b-ab20-405d-841c-9e45e0b6f1c0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1b8242-a941-45d9-8f2f-c4ebc4ef0b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a38dc63-3470-44c4-90bb-35d0c9c6a7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c9b3ff-9e3b-439f-bf23-ab6efbfd47e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536032ea-4f63-4b0b-82ed-e80397a83025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad57040-4066-475f-a34e-296254e2583e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683af504-bdc7-4b75-aa8d-fa4523040911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9004ed3-a077-446e-a484-0c22e9b55d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7735bb25-f01d-42e1-a3b0-deac38d05c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b9a9b-fa8f-417f-861c-fb0030103bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e45b481-ea08-4624-8d17-5fd743f906af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a287557-0888-44f4-9093-ea86add160ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b634e0c-32d8-45c7-9126-0315db5b1fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64311ae-3dce-40e8-b511-112b8ceafef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e7477a-53b5-4ecc-bcb7-81b48f79ce2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3418e84-3e54-4909-ad4d-ea01a570ba98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0b58fe-1517-4437-a4bf-7b139a12da13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1086b1f2-5185-49bb-924f-60e00e6c9e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28405995-d196-4ed6-8aca-5fef00837ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f784b778-cb67-43ad-a090-e7a66773f7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d853dc-bbab-4a2d-a80b-c86bad71639b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659988f-f2e6-404b-b3bd-1944c4b78c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56141a27-6f07-4209-a587-f532433d9f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a659c0-2059-4c54-8b0f-feeb50637244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efa8657-ca0d-49ba-92a1-9595b4bc4fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df2b13b-eb58-4e0e-bf32-f630af34b891",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d893d86e-a51b-43b2-ae3d-0802fc754535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7fd3c8-4c28-4bc6-bbca-b982f2b5ab32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa11ce90-9369-4e61-b086-0be66f7b4476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025d5aa-bd58-46ed-a388-e7a3ad637ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eab99f-cf28-444a-81fd-6e4747f852d9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97192b4-5d55-4e95-9b06-4a796c3c53a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00149e22-c81f-4855-8123-28e5133db577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c28624c-5b7b-44dc-a578-27be58039b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3712d5-abd7-434b-bd16-f48c21bfb7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993da319-4e89-4b4a-ad63-bed129e85dbe",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c59725e-fc4f-44b8-b11d-98445b031e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9760034-ed36-4bbd-a0f9-c1d0776f34ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9726a6-e5bc-4e10-ae70-0baf2aa47575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b1168a-b5a0-4571-92a0-17db46107706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31480c7-0012-4a51-a823-183e819a22cd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b188f3-00bf-4499-9e2d-af6c0edd6d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c5623-d692-4807-b4e8-d085a88cf7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b41354-67de-4c6e-8758-877f4d7e4232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a186d7db-6fbc-48ed-91d7-8ceae9af0b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fb9293-6446-43ba-a61f-09d511aa3695",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfce1017-5eb1-4897-90e6-a01ccd0174d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4eabf3c-f531-477d-8ddc-821b74582e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a465b0-ff41-4e0f-9ee6-13c9990957ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccfad67-9659-4852-8941-ec4cdd8d842b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1eecc4-794c-43b2-a365-ea55f9efccb8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeb95e4-5577-41fb-82ae-dbab80560045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5185e2de-31b1-4d5c-b2ce-a14ec022b8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2cef49-7123-4be0-add8-2dc0cd609141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f046d997-f0f4-472a-8285-739533d0c940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a212ff1-c9d5-4ee2-b1fa-f91877ebb7ac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd196ef-9ed3-44f7-b01c-2bc3d7412256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2223e44-e97c-4125-b2d0-f450f942e8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf3427b-56a5-4fc8-8faa-43f93bea958b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74abac9d-5e57-4f23-ae12-dd3f343ce64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d1a6f9-0cfa-4a4c-b9cc-3fad42f115c4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b8ea12-df09-4c1a-9782-b75449653863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1129cb1-c37c-4a58-9f28-01dfa8a965be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b871d-f5d1-488a-85a1-843324263f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ba89a7-c20f-447b-8013-d6e1a716f827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73abd273-a94f-4f88-81ee-9c4b4a46446a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4607f390-1168-496a-9d0f-90a40c3df87f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f2d125-b08d-4f42-b2eb-8b48bbe2b0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72962f63-cd53-4aa4-a39c-76ab8dc02447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28967f1-9826-437a-a183-ed482cac6e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b0baa8-21c7-499c-928f-2ccf36fd3a0e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e50de5-a674-4e84-87e6-4e2c4bfad798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa438e3-37fb-4aa1-8bb7-f94bf9ebc8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a383af-35d7-41f2-af14-e4edb92ae05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf4d304-2df1-4560-8dfb-1964345371f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d13082e-4a40-494f-8c87-dd64c743fa1c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f409c033-73c6-4b70-b88a-54496402306b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df8e035-f597-4d9d-871f-7bcd7d109d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea1d67c-0c48-4f6b-9f81-242491e3a1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cf45f4-fd55-4d4e-adb7-e0144317463b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b9ea06-876e-4727-9985-caa2c82da476",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bafddc1-61fe-4d91-a674-ce65be831071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6a066a-b5b0-496a-b14b-f6de38cefda3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47404a-9e0b-40a6-ad65-fab8789fb01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228afe3b-c29a-4eab-9af1-25f0692fc87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed85c687-36cc-4e6b-8b75-a26ccac1b779",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76331dd0-d172-4501-8828-6dfc8a1f80ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4e448d-6c1d-42bf-ba28-7d5dac51fac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91496e3-3c1c-4858-a895-bbb2039bc0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c96916f-ed9e-45c2-ad73-03a9cc23e456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea27ba5-7713-4bd1-82da-9b1e499bb6cf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0fcfd9-4d89-4d1c-86a7-fb00f1ed4f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8ec9c3-3bcc-4f86-a8ea-0acf9e2f9106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba39419-3adb-43c7-b715-18da3b39449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77914fa6-d27b-4b3e-8474-49ba9a3f49e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f457ad8f-ff21-4835-b0af-6d23aac97641",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b1573-24f4-4d7d-82cb-a5c656b693dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10dd9035-f7a4-44fd-a27c-d3818f238950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b5ad06-374c-45ea-8783-870d1f78c6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056ed921-979f-4b4e-8530-b883d92eb8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64dfa6ff-dd90-4cd0-9df9-60f59c07bb29",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b989e03-7c3d-4ad2-97c0-c411c4a0ed9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e37cce-73c6-4db5-98fb-f8c40a2549d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99eb0a08-9a6d-419d-89ff-6b379263eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929c205-c9ae-42dc-827c-af61558f3b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4058cb9-e45e-4d26-b2a6-966b4fdd7768",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a532ffba-0179-4477-8f88-dc3a68f7b2a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "677f167e-ba76-4767-b45c-2ddae2f5ead9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80440d9a-8a8d-4df2-be0b-a282b033fc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2d62b4-39d9-4301-ba0f-56dbfee43f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c46bd-96a3-4e1c-98c3-4a4ec3c8190e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0272b44-1eec-49ee-9a32-98167a675261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aa1bda6-40cd-4b2e-b27e-1e7e03396c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2bc873-5f32-442b-b3fc-b266cd9498d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacb9933-6ae8-4660-b708-b56334ebbc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da044113-f905-4302-953c-8abc2a10dc6a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b99e4a6-27ff-49c0-b147-ba7306394b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84cac9e-cb9c-4bdd-86d5-dc6d6e358d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea484e-25d0-430f-8ba9-3d72da7db60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee7bb25-469e-49de-b5e0-e2de5225f3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f023059d-5a6b-4966-9001-695b06b09039",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b9d43-270f-4e44-8d69-0647b34fc847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18af0a1d-ec89-408f-808e-652eada39977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ab2977-2415-48a7-a47d-a6ec0411ceda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f3ed50-07c9-42bd-add6-1e65c4649bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8040660-2479-4bb6-8326-00792880ad1c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6b51d5-dd38-455c-9388-a8569db5053d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468570c1-abeb-4a84-a4e1-b72a98f9f4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935c3aa1-0dc1-4e82-9e21-8cff55902b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1fc667-a554-4354-adb1-c6b2c20dd6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ffeb17-bb75-4c89-ae01-94499cfcb1c4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae03a7f-f952-47fc-9ccc-9f007cf7f351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583db993-af40-4103-9cf3-ea206b75d53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a18925a-17c3-48a2-8eee-ef571166af11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf14cb0-75c9-4bdd-b84f-cdde6bcaf3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507e985e-4eb6-4689-9b5d-87be44ca54c4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012e51f1-1758-4f05-aff0-a6f5a8e6c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8aa53ab-44d6-444e-9169-4b21e8257bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7df9dfc-8aa2-4e49-ac7e-b5950cc7b4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2170b7ca-1a11-4aa2-aa74-297e25ccb8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dbe3fa-b158-4cba-8267-51553c8324c3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d32d741-7cd3-4d4d-8d0f-972a16f83fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99644063-4e21-4e8c-a975-daf21f51a9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8305e83-4670-440b-b328-410b284a39ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfa7029-4320-40e6-a87b-07bdf6394ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31e26ea-e778-4f51-af0e-48a325b7612a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0882263b-d224-4739-8bcc-b2aa1abbbc53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5424d9d-77ee-44a2-b29a-7c54d649f892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077f7a6-34f6-4bbe-a7c5-73bbad697eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d10354-2f9c-40b1-a375-ca5aefee481e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e02d7d1-1be1-4446-90f6-114d593a5cde",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c0dbf9-8990-4801-a358-c5be70effb1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4956676a-07f9-4e4c-bfab-1e841378f26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb4db7c-b7be-42fa-ab37-543cbba8bf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f033ab-fd88-4c1b-adda-08ada23cc882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff39cfa-08bf-42bc-895a-57f8832d6c08",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d294d794-fbed-4848-b675-841a2678585e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dae9d5-9cfa-4c8b-bc26-863934266128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9499a89e-0025-4db2-be1b-80b8c7e17c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2079ff-e580-4d2c-ab30-e63e33afc083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8338ab-3fcd-40f5-a299-098e87e3e9bc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4046f3e-aba8-4b32-9ad7-e7e224f0ad6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077c4153-6101-4e8a-8278-4e332577d68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ce766c-6ab7-47b2-902f-63bd6d2980e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd40c05-be35-430a-9c4e-68e50a429538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c91cb1-1258-41ca-81b0-cae7e9e2bb03",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b27954-c4c7-4271-9dfa-a5405f1ee344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470f03ee-30d7-4371-95d8-001a2a8125aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3ef5c1-8cb6-405e-864d-c97e67a056c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc88ab7-74c9-4ec7-9040-ac76155c09d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0832fc1-da5c-46db-95f9-45f4039622b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764d5383-45e4-4dd9-8b91-db616cc28183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bca3073-1bf3-4891-9dcf-201e32fa2f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454b1a1b-826c-4720-a6e8-8c45422e9e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be0b723-455e-4a2b-9b66-57b9e56229ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ff8200-4425-49cd-bf9c-fc3d4ac93e96",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ae8016-4600-4c76-8890-77ce097f1afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7562618f-6e21-4bbd-87a5-680c7c2cfd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fa4d98-9ae2-45c5-89a1-4879144f7f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51753d63-3b3f-48c2-83ea-8a6091972f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae878e1-2923-4d58-b077-fa830d76ab12",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f9e3b4-99e7-4309-b134-20dcf63b2d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98b304e-67ea-4f53-9359-deb82f151c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254e076f-5e38-49ea-9a2c-fca9be313c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98899e1b-a0c7-49af-ae5e-7d5107fd8dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaefa37-c42c-47d6-bc03-e413d6e5313f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d19df7-f761-4d14-9c08-85779f272421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1592568c-35f4-4c24-b062-97af7cef554c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd77ca-5102-4b69-9952-efd19ae2cbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1626d000-5596-4a89-93f1-b6eb32788b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f693ef08-9801-4bcd-be8e-7b060288469c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c374d-eeec-4096-9217-005f63817a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1d8833-4a08-4890-a16a-e19a62ce9c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eab779-5c23-43cc-989f-677a03e2967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94489bc6-82b3-40b7-bc4d-e4b5875754a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0051e5c6-8dba-4106-ae09-bec1815ef23b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3718a4b3-04e3-4fed-92b8-7bbee47fd62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1bca7f-1ed4-471e-8680-05e128ad37e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891c8238-0e9e-426c-bd39-710b4fe431e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb65007-dacf-4956-9b1d-ac425a4d77f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707e37d-2f24-4be3-b1b8-3c776f0c5e57",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f03f3ba-ff69-46cb-867c-2b37f9a3676d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58862214-85fa-45f4-b285-ad0cefdb2a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b719f3-3d79-4a78-bb7b-6a9c7e355f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfa5c35-0d05-4216-b811-f206427fbde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1725b8a8-9633-431a-a2b7-078b321bbd4a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed8f1de-1dc4-4c41-955e-f8183005ae4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d881d6b-7ddf-4df8-ab1a-b4d43b84d3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce05337-c507-4b29-b7c1-69038252b560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b78bc0c-96a6-43c4-a1d1-ad20a98c6e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61edd755-b01d-49d1-8f59-140f57d284ec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0cf05d-36e0-46be-9592-baf57f8b4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f962c160-7950-4d99-b2ba-f4c993bdc99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3c473a-ea23-46bc-8989-3cd412d1ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3cedf0-dff5-4aaa-9eff-2a5e830d67f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3797f7f-49a8-4ff7-a91d-85ea78b20fc6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba15c81-7b22-48a2-8b5c-a573f5e91855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66e136b-cbf4-4ef1-9e02-94f53f816605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38d35bf-8ad7-4ef1-a376-5571c3677398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d521581e-f8f3-4870-9d0a-ab8bbf7ac531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10d18e5-9cce-4a32-83cc-ae29176b5999",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458040e9-3616-40a8-9915-e1ce622ea3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e922c0-6d5a-4998-9f39-635c86bfae29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e9e8ab-77da-49db-9849-30a550119183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128a3dde-6ad5-43c9-b29b-b535f21a1624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d48a3a-37eb-4fd1-b67c-38493e38877c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d9445d-e057-439d-9516-62d339a730e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fc15940-222e-4381-98fa-ad7f255ee824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4fa26-0cc3-4e2f-bb5c-cb5f64bbbbb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e09259-064a-4eaa-be1b-b6430e3da084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbaa97c-4474-424a-9c93-6328d4e7aa93",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3c8418-5420-428d-8b8d-153f67833c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04249455-4b77-44d5-b943-4c7b29a5f85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eea759-93de-4219-97f4-0932aded5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cbace2-d1f0-4aa7-9891-208daf69c80c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18fe3860-98ef-4ac6-9265-3d44828c9190",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee826dc7-8cd4-49fb-919d-622f95d5b0b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1e2ccbf-a85b-4c24-ab24-2a33f72a387d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca59461c-e3fb-48b7-b92a-1a336312c740"
                    }
                  }
                ]
              },
              {
                "id": "072478e8-c1e0-4cc8-b2a7-fd06738476b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa1a7205-3ed1-4634-820c-22468bd15cc7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eec8d33-7481-47fd-9b6b-9742b37d46cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c54fc4a-42fa-4d9a-96e5-ec8f2c75b713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52b2d49-0dd1-4640-bcc5-344b40b22aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a31fa810-d310-4c56-8de6-244812b40605"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6135d83-3e73-4bae-958b-637e4172426e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0078e75-b3a8-4bf8-aba4-2e84d67cb2d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3839d77-8e5f-49b3-b87b-ee8e659ef645",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e669e9-068a-4224-b0e9-bc689991ab33"
                    }
                  }
                ]
              },
              {
                "id": "1ae3f68b-c1af-437b-9976-7b978f821aa8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "319f24e6-c111-4bc7-9fd0-c158adaa852e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb057f-7e90-48b1-aa08-a0893a3517e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "28a99632-0189-44f0-acd9-61643e4af072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d552bf-858d-4f41-b376-f00fae070a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fff0f4c-f142-45ad-8e46-7aee22824caf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f1523d48-e9f6-42ca-ad2a-e6eeba905b51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d89276cf-d21b-464f-ad99-44fde4fb4830",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05dae279-5529-4763-9e0c-c369d81925f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "88527a6c-c7b0-4e6c-9d74-9d827a580cb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d032b8d6-d200-4ba2-bab7-666de20e168d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd198eb-ecf1-41ad-801d-dfe1a5ef6e4f"
                    }
                  }
                ]
              },
              {
                "id": "fd7f9588-f14e-4a42-a868-b51cbcc20590",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dec75ab-4875-4141-a777-2c1b954b0fca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "955ed609-0f1d-4c85-bfe0-2503c4f00815"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fd0d3c1-e67b-4c20-98c4-33e32e853253",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "366331cc-1efa-4e17-bf92-8f7ed8059821"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18ef393e-3f05-4e88-beb3-073498823e26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fd6de000-9ed9-4843-a863-d29f4dcb4e05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92365434-0196-4ceb-9d56-c59e6bdeaa00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bab96204-3f82-41ab-b4cd-1cad209e91f8"
            }
          }
        ]
      },
      {
        "id": "cfd6dd5c-d09c-4e1a-8471-bf4fcc1154c1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5dab3d34-f907-4d83-9864-1429b02beefd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16b607c9-96c9-4a43-ace3-174717e9b0dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1994595-f722-4386-916e-2ed5d9489137",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16413140-bab6-4f9f-9512-7c3e0c5ac622",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06673c47-340e-4eef-b489-936397c326d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a4f80b-c124-4582-8e55-fd517d5110d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6724aa1-ed7e-44c9-897b-45513e25f13c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6259f2e-dc0a-4d42-a9ad-eb24f10e13ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dc2a660-be46-4fb2-a2ff-0eb88d119da7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "575fc35b-7aaa-41f9-8988-a06b42b51ecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc61fd0c-c78a-4fff-9376-12942e2f51d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36dc09b1-1575-450e-bdc5-371f788a22eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e709b454-e367-45a0-abad-d219116c122c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91a086b6-f32e-4e7b-a3f7-49b7d0097724",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4705ae4b-f116-4744-bde8-280ae836a0f8"
            }
          }
        ]
      },
      {
        "id": "68b44f8c-ade0-47e5-83f2-bfb9813cf545",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "006643af-128e-4322-9ef7-deb64d965f0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e4f6c2a-7e50-47cc-a783-fa8a6a9e571b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fecd8fd-4df8-4af6-819a-6d7e77c80a91",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de7c863-95e3-41d8-9967-a406effd07b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d902e60-b9af-4caa-9281-3d57b6a0991a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd9147-f5d2-4920-88ac-bcae0e726bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87a6c655-a12d-4ef7-bad5-624b80008edc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37fde49b-385b-4caf-b0ca-771d2443a36b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5028b1c-7b4d-44d4-ba5b-ab3e3e8f5766"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc9812b-53f0-4db4-b548-c8defa9fd870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b1c30ca-0d15-4e08-ac1f-3ab1155ecf8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f68cf812-8e91-46ec-a10c-5ff30ae20924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7f2a34a-344d-478e-a718-ec5fc44cc5f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "688dacdc-14bf-4616-8d56-cb8eb57bcc70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e013ea1-f0bb-4382-927f-0437acaf8bb8"
            }
          }
        ]
      },
      {
        "id": "49af9ffb-6232-4026-8b47-6ddd39ef480f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "134111ce-21ca-4c3e-b044-db04550d020b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5eeb3cc-f58a-4af3-a906-2c067f7754b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4045ec22-1fbd-4404-96d9-da31f5944000",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dda8f1-933b-4103-94c7-69a9421dee05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8823945-3881-4492-b2d0-12ae10a7826e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a395bbf8-81d4-4ae1-8e2c-9fd7d1492674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233b6a7f-6fde-4259-b7ea-02d27dd5297b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f30ebb2c-f658-40e1-b63a-fda90ecbbf91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff238625-2f7c-4ed9-899c-9609408d713a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b99be1b-9586-4442-a7b4-44ea6f5ca320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a26b85e-f15c-49e6-909b-d2fb34744bf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98bd5098-d9e7-42f0-9cc5-b015f4cd266d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50ba2060-96e6-446c-bfa2-6f3312bc212b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99d2087a-2690-4a3b-a20e-3fc780eaa86b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12054219-6946-4760-8b22-296a1caf853c"
            }
          }
        ]
      },
      {
        "id": "fa721953-49e4-4b86-b0c5-0d1479a9d1d8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07e9fab3-f5af-4e86-b888-de5aaa81c924",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb33674d-a75c-44ee-8a43-47c83b592186",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "070b83bf-2c59-457b-ae01-1f8345e49ec8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67cac816-e866-4323-8123-7591a6efc0e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2583feaf-fdd2-4b14-9004-b138d427fbc4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 148.936507936508,
      "responseMin": 20,
      "responseMax": 9672,
      "responseSd": 672.3057074149572,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713227680110,
      "completed": 1713227725882
    },
    "executions": [
      {
        "id": "7a7f4735-e047-4b56-939d-51017125ff81",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "46737d3c-e4de-45da-910b-feb466819eef",
          "httpRequestId": "4026bda9-d2a3-4ad9-9f41-48d5932d3e8f"
        },
        "item": {
          "id": "7a7f4735-e047-4b56-939d-51017125ff81",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8fd78a12-ddc6-4c91-ada5-fc1ba7c6f4b6",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "6e612316-f21e-495c-97cb-56c24555316b",
        "cursor": {
          "ref": "bcb4898e-6460-4560-bc25-c2999dd63774",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ece0fd9-603e-4a8b-99f2-fbec3a4b86eb"
        },
        "item": {
          "id": "6e612316-f21e-495c-97cb-56c24555316b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "96853475-eadd-4989-92cc-fcd126a2216e",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "e4531cb4-67f1-4053-940a-c8f741f9724a",
        "cursor": {
          "ref": "0f21c0d0-2b8a-47cb-93f5-36f85645d1bb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "107c727a-d559-4a2f-8385-c98cf9650b5d"
        },
        "item": {
          "id": "e4531cb4-67f1-4053-940a-c8f741f9724a",
          "name": "did_json"
        },
        "response": {
          "id": "78a85847-ed1b-4bb5-9ee4-0d8984d55fed",
          "status": "OK",
          "code": 200,
          "responseTime": 460,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e07a14-b0da-469c-b5e9-7395c3fdf0c2",
        "cursor": {
          "ref": "b9131483-b8b4-44d6-ac4d-e951788d8d31",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f190d8e5-0d53-4700-8b58-f9af0b644743"
        },
        "item": {
          "id": "81e07a14-b0da-469c-b5e9-7395c3fdf0c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "b8c7b079-8de3-444e-a20f-bda550895688",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2155,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e07a14-b0da-469c-b5e9-7395c3fdf0c2",
        "cursor": {
          "ref": "b9131483-b8b4-44d6-ac4d-e951788d8d31",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f190d8e5-0d53-4700-8b58-f9af0b644743"
        },
        "item": {
          "id": "81e07a14-b0da-469c-b5e9-7395c3fdf0c2",
          "name": "did:invalid"
        },
        "response": {
          "id": "b8c7b079-8de3-444e-a20f-bda550895688",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2155,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5552f1-05d0-456b-ad63-ace869fad79e",
        "cursor": {
          "ref": "a8db8825-b6d6-4bc6-a423-60a4bbfe0afc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "636ef1be-6606-47d1-a8dd-68e72b9da21b"
        },
        "item": {
          "id": "cf5552f1-05d0-456b-ad63-ace869fad79e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b0c57b10-9915-4837-9a68-57befafe8a71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75386c2a-530f-4795-83e0-c16e92e022b6",
        "cursor": {
          "ref": "66ae622c-45e4-48b3-8c44-755278fe6cde",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3104b8bb-2e0a-49f2-b8ec-3bf0a382136e"
        },
        "item": {
          "id": "75386c2a-530f-4795-83e0-c16e92e022b6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21905479-97a7-4d14-bf0d-b95ba3eda52a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f4d432-6600-4b25-b848-3b101e88e8b1",
        "cursor": {
          "ref": "cb472400-9111-4c3d-919b-0f1acfd6b78e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bf502e61-17b8-4096-8815-0b1ba9190e6c"
        },
        "item": {
          "id": "f7f4d432-6600-4b25-b848-3b101e88e8b1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f87b67a7-8b4c-4a77-a676-90bb3e3dc101",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009acb2c-df88-4193-9c37-881c687ba079",
        "cursor": {
          "ref": "796579ce-9813-4678-8294-a8a3a2eac2f4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebdc0cf1-e78f-4f71-aa07-bd8121dc0d5d"
        },
        "item": {
          "id": "009acb2c-df88-4193-9c37-881c687ba079",
          "name": "identifiers"
        },
        "response": {
          "id": "b1493957-97e2-430d-be7f-e0dda826211e",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e77ac38-b7c3-4f27-89bf-b91a8936a288",
        "cursor": {
          "ref": "d45cfc31-fd8c-42a2-82cf-94bbc72d98d1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "af377fb8-3c82-4c68-88f2-815a63d7da20"
        },
        "item": {
          "id": "6e77ac38-b7c3-4f27-89bf-b91a8936a288",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3fd6ee42-71d9-42d6-a023-239760174010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70989e7-cebb-4546-b591-3a8828cf2200",
        "cursor": {
          "ref": "29d01f94-d3fb-4e6f-9d39-c1060992d9b8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4900dd6d-ce18-4a49-bf24-418d73be09ff"
        },
        "item": {
          "id": "e70989e7-cebb-4546-b591-3a8828cf2200",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "911e90e8-ffb2-4bff-8a8d-1c534a8beeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e269bee0-919f-452f-9be6-e8f3f01a1b0e",
        "cursor": {
          "ref": "d7093965-73df-477d-821e-cca09701ccd0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "326edf95-4e16-401d-b6a9-da5a06f10655"
        },
        "item": {
          "id": "e269bee0-919f-452f-9be6-e8f3f01a1b0e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e54c6b45-ee78-431e-ad38-d7d6b3f49c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96756f37-3339-4bf2-9a13-955805032c57",
        "cursor": {
          "ref": "232ccdab-8b90-4f16-825a-68c2bfcb59d5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dff37a97-8104-479e-800b-36b601692326"
        },
        "item": {
          "id": "96756f37-3339-4bf2-9a13-955805032c57",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "44a67efa-6dd8-4fe7-9f2f-0c507049399c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7283d7-0aa6-4580-b7dc-8b5b1f8611bc",
        "cursor": {
          "ref": "82449f90-e71d-4738-a699-ccb73ab6da16",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "eb26c519-f85a-436f-a3f2-fed2dcbaaf6f"
        },
        "item": {
          "id": "4f7283d7-0aa6-4580-b7dc-8b5b1f8611bc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c11a6389-e182-473e-8eef-cb19a34f9748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9dbe5-b92c-4ef0-979f-83f5c80e9c42",
        "cursor": {
          "ref": "7a4828c9-8602-4313-ab01-1c3fffeffd6b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8c007152-5720-4f6b-b527-46fed8df6787"
        },
        "item": {
          "id": "64d9dbe5-b92c-4ef0-979f-83f5c80e9c42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8fd96b22-12d3-488a-b69d-cee6339e2430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288b7487-0b1a-44c4-be8b-6935527b0b35",
        "cursor": {
          "ref": "7c275b0a-8eb7-4e87-9c93-a66dd933dab4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d6ff4b6-a564-4ca8-adb6-0b593396818a"
        },
        "item": {
          "id": "288b7487-0b1a-44c4-be8b-6935527b0b35",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e145251-fcca-48c2-8452-3d631fd93d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd24c27-1da1-4ec3-b650-9bf81ffc4ac9",
        "cursor": {
          "ref": "516a1deb-3424-48fe-b378-dab0697d020d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "08be96d6-e360-4c33-8432-afda17e20405"
        },
        "item": {
          "id": "cfd24c27-1da1-4ec3-b650-9bf81ffc4ac9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "18662401-9053-446c-b460-35d71b0b19f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c22381-1094-4ce8-8a28-72d135d40254",
        "cursor": {
          "ref": "3bc8996c-fd1f-466a-9114-ef23cdbc1f92",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41f64525-337e-4425-aa84-92d061b70679"
        },
        "item": {
          "id": "b7c22381-1094-4ce8-8a28-72d135d40254",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33efef41-208f-4959-a864-0bd4dac33df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7aec35-e45c-4862-a18b-15f23cb498e3",
        "cursor": {
          "ref": "66c6d634-aed8-46c5-9bab-086038801f53",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "47707414-d494-4c55-96ee-39235e521efb"
        },
        "item": {
          "id": "ab7aec35-e45c-4862-a18b-15f23cb498e3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b18beb64-7352-45f8-b341-f3f451cf975e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71805de-9b40-4fd8-b737-08a52478b7d9",
        "cursor": {
          "ref": "7316d195-2b91-40b9-b11c-b9f6e6865808",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "20a530ad-1591-48a2-b771-acb232c55460"
        },
        "item": {
          "id": "e71805de-9b40-4fd8-b737-08a52478b7d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0c042a1b-209e-45c7-b543-b664b5d78c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba17f5-c95e-464a-80fc-99e36ef70d4b",
        "cursor": {
          "ref": "23bbf7be-d010-4577-b358-dcd849a3dd56",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fdc075d6-8781-4fc2-8fdd-5b918e4a8cc1"
        },
        "item": {
          "id": "d4ba17f5-c95e-464a-80fc-99e36ef70d4b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a7d9b30c-991f-4cb4-8f7f-34f9e9f9ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5afbb4-d132-4a0f-8a3d-b9d55f64934f",
        "cursor": {
          "ref": "5f93b946-4d8f-49d5-a187-fb1ad3ee412c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af39f1d8-4c94-414d-8a01-ab056127e10b"
        },
        "item": {
          "id": "6c5afbb4-d132-4a0f-8a3d-b9d55f64934f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "30b0a61d-0908-4b4b-bb45-9b46197ea96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a3901-25d3-42ca-8cda-017eca246a15",
        "cursor": {
          "ref": "c2cb8b0f-27ad-42aa-9e67-3d456adb11a1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "59de2a07-0537-4466-a449-381f684760ed"
        },
        "item": {
          "id": "a96a3901-25d3-42ca-8cda-017eca246a15",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7afd4692-5fae-43b2-b821-507787347439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0679edbe-bd2d-4e18-ba4c-91b37a6a7cac",
        "cursor": {
          "ref": "1641d524-7bac-4e9d-b5fc-08faf1b9b270",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2b9403b7-1c2f-4c9a-84b9-8f18e565ebce"
        },
        "item": {
          "id": "0679edbe-bd2d-4e18-ba4c-91b37a6a7cac",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cad9005d-3175-40cf-8cb6-c294fd05c631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ceff3c2-8419-4129-a04e-c7699a346bed",
        "cursor": {
          "ref": "6c0ffaf9-8be8-49fd-918d-ac425c4a1936",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e44c5995-64a0-4a86-95a9-8aa34d9da639"
        },
        "item": {
          "id": "2ceff3c2-8419-4129-a04e-c7699a346bed",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "94052954-463f-4452-a6c1-034a839b7909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7bd92c-5d17-4734-826a-48c3d528778b",
        "cursor": {
          "ref": "3dd3d07d-7e9c-42d9-a3b8-57d0e7666930",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6373b379-a209-458c-b27d-5e910c3833be"
        },
        "item": {
          "id": "5b7bd92c-5d17-4734-826a-48c3d528778b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fd0236c6-203e-47d6-a7bc-379f50d62d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d062ef83-d7ae-45f0-b796-9c0d24a9be4d",
        "cursor": {
          "ref": "28221640-2a6f-41b6-aff4-4dda77ea8b53",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b76d88a3-4474-4744-8068-aebb4c2e3748"
        },
        "item": {
          "id": "d062ef83-d7ae-45f0-b796-9c0d24a9be4d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4fe75e50-c498-4b1c-8784-a8c191f91fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dc2d46-0d60-4844-b006-68a906264a55",
        "cursor": {
          "ref": "fdcd3ef8-4946-4b51-8a1c-350c8f17d203",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6123352c-b80e-4e9f-a4dd-d1fdd864c4ff"
        },
        "item": {
          "id": "19dc2d46-0d60-4844-b006-68a906264a55",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "08074913-c5c4-4378-a188-460fb60e198c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854244e-60b7-4dfa-b5f0-24edf33e2779",
        "cursor": {
          "ref": "7e6d9e0c-16db-4437-ac93-5ca5d56c4186",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bcdb812b-c966-47af-b1a0-102f51630da5"
        },
        "item": {
          "id": "4854244e-60b7-4dfa-b5f0-24edf33e2779",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "709629da-aeba-4cfb-8135-392b9115aad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97a405e-92bc-4f20-b758-c9fd4fefe818",
        "cursor": {
          "ref": "2cad14ce-42d8-4926-983b-8ee740389279",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a72a7d82-4f22-49fe-bdae-b67014cbde64"
        },
        "item": {
          "id": "f97a405e-92bc-4f20-b758-c9fd4fefe818",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e45946d9-1b48-45e6-9991-4e40281180b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcd7f90-f270-448b-a3a0-19ef21d1d7e5",
        "cursor": {
          "ref": "19f5c497-fd78-403d-8cdf-33ede35034d0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "50769db0-8ebf-4926-8ad9-95096b3c9673"
        },
        "item": {
          "id": "7fcd7f90-f270-448b-a3a0-19ef21d1d7e5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "301c84b1-fb3d-4912-b9d2-e38ef24d1bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3619d2-e75b-4712-b647-d0da5fa89138",
        "cursor": {
          "ref": "8d2457c4-12e6-4f7a-9f13-bdc7ab4017a1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a09a9cdd-d34a-404b-98e8-229e1e4ed167"
        },
        "item": {
          "id": "6c3619d2-e75b-4712-b647-d0da5fa89138",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ae38d9b9-fb4d-47fe-ab35-4259bbb24d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c57e00-6a9a-4dc5-a767-768f2f9cfda5",
        "cursor": {
          "ref": "95e3d489-2f3f-43b4-bde8-a04eefabd795",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "57951d69-dbee-4a28-a0f0-9cfca2366edd"
        },
        "item": {
          "id": "98c57e00-6a9a-4dc5-a767-768f2f9cfda5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cddc629c-c4a0-41e0-915f-36a02f9a40a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3990e9d0-753d-4d46-a373-bdd1727ebe1e",
        "cursor": {
          "ref": "4c2feee9-de5e-4efd-a840-1bb5a1c1a275",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4ded29a2-c623-4033-a02f-aa629245b44e"
        },
        "item": {
          "id": "3990e9d0-753d-4d46-a373-bdd1727ebe1e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "09cca079-ac8a-48c8-acaf-155d63589acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd24319e-ea03-4efb-9ed9-e3f2e7c70a4d",
        "cursor": {
          "ref": "b6bdea82-d1d5-4974-ac80-ff85b302cbdb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5bf5dac6-b16b-4c0d-88c9-f7869091e946"
        },
        "item": {
          "id": "bd24319e-ea03-4efb-9ed9-e3f2e7c70a4d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aea06793-4773-4f3a-b835-48d996f0a3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee73518-d056-4768-b7c0-eef763f94e7b",
        "cursor": {
          "ref": "3b5f04ae-ce4a-4305-960b-33f5eead2116",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a9ec8ed-7540-4ee2-af30-ccefea8f7a07"
        },
        "item": {
          "id": "9ee73518-d056-4768-b7c0-eef763f94e7b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "90eaf530-2321-47fc-af75-a279e150217b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae44731e-4a3c-4608-accc-b18adf70cf61",
        "cursor": {
          "ref": "bcabfe4e-773e-4e94-8dd7-fd0d79376e63",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f31162bd-1889-4299-ae57-b9ef51c00314"
        },
        "item": {
          "id": "ae44731e-4a3c-4608-accc-b18adf70cf61",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "603c24ff-4014-4916-ac7e-4271ab4408ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4ba246-a7c6-43dd-a5af-435ac0226c00",
        "cursor": {
          "ref": "d02f90d9-b41b-4413-8686-2cde0fc48361",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5230b794-e2b8-4979-9901-96fd0319543e"
        },
        "item": {
          "id": "1a4ba246-a7c6-43dd-a5af-435ac0226c00",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c15407c1-a4b7-4173-9a19-47d80b3bd7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c56e1-685e-4aac-8459-2967eb0bfd08",
        "cursor": {
          "ref": "84390317-02ad-4b76-9003-3b63f7a90567",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0a0a7c93-0747-4728-a95d-f94f3613c4c0"
        },
        "item": {
          "id": "3a7c56e1-685e-4aac-8459-2967eb0bfd08",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ea25ccae-87c0-49da-9169-9f2d882e98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac3c07b-092b-4887-87e8-20e28a8846b9",
        "cursor": {
          "ref": "983bff65-c194-40b5-9e87-668e98fb97cf",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "43e41bbc-2894-47a3-8c8c-ca140e5c9bfa"
        },
        "item": {
          "id": "6ac3c07b-092b-4887-87e8-20e28a8846b9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "de5f6f1a-39c0-4f53-9d79-dd104ebf590b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9cd97-2a6d-4a4d-ae47-beb9459cb95d",
        "cursor": {
          "ref": "81c51eb3-3c18-4d68-b377-24e33ec90503",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c3f75c7-6685-4403-a84c-8a1e40e9af56"
        },
        "item": {
          "id": "2fc9cd97-2a6d-4a4d-ae47-beb9459cb95d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "475aa916-b680-4566-accc-e7f843d2fe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b474e1-8c6b-4a6e-a820-fd3e8295075c",
        "cursor": {
          "ref": "9ffb4542-55d3-42f4-ad3d-a23903986608",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0793501d-6aa3-4968-9069-9ad431f90d1a"
        },
        "item": {
          "id": "59b474e1-8c6b-4a6e-a820-fd3e8295075c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2f6eb7cf-4c19-472a-a4fa-a3b44a45372f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360e11f0-7088-4e58-9213-ddb51fbb9519",
        "cursor": {
          "ref": "1a214e8e-7995-4854-8831-2d0d9ee76bc1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7bc220e4-1815-40ba-9be7-932cc9f5141e"
        },
        "item": {
          "id": "360e11f0-7088-4e58-9213-ddb51fbb9519",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "db775283-3443-45cc-af4e-09e15f93ec0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe18cb0-ed76-46c6-b622-123520289739",
        "cursor": {
          "ref": "da553902-d071-4386-8f56-e9c2f21d8eb8",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e805f84f-24a3-4dbd-979d-78013700fc64"
        },
        "item": {
          "id": "3fe18cb0-ed76-46c6-b622-123520289739",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "89db954d-f083-4c5e-b368-969f2f7cf2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8181bd-8aba-4e51-934b-f4021594d668",
        "cursor": {
          "ref": "6745287f-5e2b-4525-bdcb-df433eb70671",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8781adc5-79c7-45a5-95bf-90f1f49c9eef"
        },
        "item": {
          "id": "0d8181bd-8aba-4e51-934b-f4021594d668",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b8cd88a0-1c62-4047-80f2-6178f58fa229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9702e2-96fb-49f3-b739-56ed75efa7b7",
        "cursor": {
          "ref": "cad2dfa5-862d-4244-bae9-8bcc06f3bb61",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "126a9c7b-3ca3-4fe7-a9f9-4dbe693ef5ce"
        },
        "item": {
          "id": "8d9702e2-96fb-49f3-b739-56ed75efa7b7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d2382271-37f1-44b7-923d-aa6b0d3688bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e22647-46a0-4efb-99fd-39f380dfccee",
        "cursor": {
          "ref": "39ae975b-162a-4e2e-a218-ab261d0f6472",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e062aa9-82de-4eba-a839-4e33fa4e9092"
        },
        "item": {
          "id": "96e22647-46a0-4efb-99fd-39f380dfccee",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2c54c3d3-46de-42b6-bed4-978727403f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2644f61-f8fd-4706-896a-93a1d6aa4768",
        "cursor": {
          "ref": "3b578df6-f27a-4edf-87e6-f53fc4da07f7",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "14063b8b-362b-4cc6-a152-b30ec14858a0"
        },
        "item": {
          "id": "f2644f61-f8fd-4706-896a-93a1d6aa4768",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9aa8faa7-a1e7-4af8-a851-f410a511606e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b74475f-629e-4dce-8c78-f8bdab099e34",
        "cursor": {
          "ref": "ef012433-958a-432f-b6c7-c387e5bd3488",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a70629d7-10d4-4c68-b82d-3ed7702642c5"
        },
        "item": {
          "id": "3b74475f-629e-4dce-8c78-f8bdab099e34",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8466cba1-df8f-4566-a96a-230a4a66362c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92693c33-1abb-4d08-9dcf-c8aa60af3443",
        "cursor": {
          "ref": "68afc44b-1648-48d7-b916-bf1ffe10315d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "249dc095-6608-49f3-ab52-1c7a9dc4acd0"
        },
        "item": {
          "id": "92693c33-1abb-4d08-9dcf-c8aa60af3443",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6f2779e6-bc8c-4379-a871-524ad75b5276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3694360-2a6e-4847-bc1a-0f1adfb34ef5",
        "cursor": {
          "ref": "6a8e4923-9097-4207-a4fa-801ad2955ce2",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "49211efa-ec06-4fe8-beca-c1d7c30971ba"
        },
        "item": {
          "id": "a3694360-2a6e-4847-bc1a-0f1adfb34ef5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "106857d3-2ead-4f71-80c0-52be62c06577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aac7d0-ca4a-4325-ad81-45ef6fe9e76c",
        "cursor": {
          "ref": "18a16580-6683-4f77-a172-110f186c60d0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fe59d4a9-92c7-45a3-b8cd-3dacbf135c4c"
        },
        "item": {
          "id": "83aac7d0-ca4a-4325-ad81-45ef6fe9e76c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "37070cee-dc95-4402-98aa-158fc4acf95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9693e8a8-ed01-4094-9d93-ccd25e093be9",
        "cursor": {
          "ref": "56837ef8-531d-452b-9875-8828520ee154",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc05a3c6-6221-4c76-b511-4d3a6e31efb7"
        },
        "item": {
          "id": "9693e8a8-ed01-4094-9d93-ccd25e093be9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7da58f3a-7e4d-438f-9cec-7039d84f32d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af35c20-58af-4784-8056-d3a412303575",
        "cursor": {
          "ref": "774946c8-204b-401a-8159-23176143468e",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e279b9f8-cf81-42ec-a2da-782df207beba"
        },
        "item": {
          "id": "2af35c20-58af-4784-8056-d3a412303575",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d6c7e3a9-1613-4daf-b95b-dcb456073972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed745ee-f77c-4143-b933-b56afbebd05e",
        "cursor": {
          "ref": "bc5ec04c-a774-44c5-b117-52b33896816e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7017325-7273-4f4b-962f-ddca6a65dad3"
        },
        "item": {
          "id": "1ed745ee-f77c-4143-b933-b56afbebd05e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7025e3d5-e68b-4f09-845a-c85bc775b54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a11de-5ea0-481e-a780-347c349f19f6",
        "cursor": {
          "ref": "3475cf78-85ab-4a4d-af94-f12a5fda905a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "44d5127e-3ed4-4335-845a-def211c15f03"
        },
        "item": {
          "id": "641a11de-5ea0-481e-a780-347c349f19f6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4679ba54-ce5e-4aa0-bab0-d8a16b18e9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef693759-d1f1-4013-a17e-d4740617b966",
        "cursor": {
          "ref": "3a79cafe-9e8a-4019-b5ca-89c9870478e7",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "33478e2b-d1ce-4138-ab80-6b11db7ae17e"
        },
        "item": {
          "id": "ef693759-d1f1-4013-a17e-d4740617b966",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b9669d89-16f4-4860-a45b-3e37d1335cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1042b1-8033-484c-bf6a-8be3e426e093",
        "cursor": {
          "ref": "3d6dbe67-373a-4f73-aa97-040b9db3a371",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4d9ee9d7-13b4-4deb-ae9b-e8c3206999b2"
        },
        "item": {
          "id": "9a1042b1-8033-484c-bf6a-8be3e426e093",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a4b079b-311e-4912-9efe-752e369783fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77fda1b-e30d-420a-8993-22ab4e9791f0",
        "cursor": {
          "ref": "19a6560f-92ad-48f9-8e4a-339196265adf",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ab07ea2b-cb19-43ad-b286-17e59b57e438"
        },
        "item": {
          "id": "b77fda1b-e30d-420a-8993-22ab4e9791f0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8f5bd01b-009b-4aaa-9c36-b339176c0c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427187f7-4823-4543-8ea1-1bd3088731db",
        "cursor": {
          "ref": "1db659a3-11aa-4dea-a75e-33e7c253c0c6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0723c2d2-c2a5-42ef-8503-7c3b11e9b398"
        },
        "item": {
          "id": "427187f7-4823-4543-8ea1-1bd3088731db",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c31260a3-3c5f-4b70-a504-b90dc1812a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915f1ddc-12f0-4c3a-bbac-253525e566c5",
        "cursor": {
          "ref": "de48514e-dee6-4744-810d-517d1ca8bfc5",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "42ec5e12-bace-41f4-826b-3bd90cc1962e"
        },
        "item": {
          "id": "915f1ddc-12f0-4c3a-bbac-253525e566c5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a5127402-374c-4dd1-a2bd-296c3489ae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43042f65-be76-430e-8044-2026d3dee498",
        "cursor": {
          "ref": "b221786e-e50d-4311-a38d-df3f9d81bd8f",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1d872dd2-ce09-458d-928c-138d8f23b588"
        },
        "item": {
          "id": "43042f65-be76-430e-8044-2026d3dee498",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9a364f98-06d1-4b82-8186-934ce6f1034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca8aa77-9038-4455-9975-742cb3687199",
        "cursor": {
          "ref": "57cdd773-a644-43a5-aac8-996563a4bd4f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2aa50040-7d6c-458a-b7e7-8c0c71eed9b7"
        },
        "item": {
          "id": "7ca8aa77-9038-4455-9975-742cb3687199",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8b89fe93-23fb-41d0-8f0d-0b5a921b8559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a965c4-ae7a-4952-a141-f162f2b43e37",
        "cursor": {
          "ref": "11a9bfb5-93c8-420a-91fa-8356aa066668",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b9b1c863-2719-4081-9d62-4b8b386e4daf"
        },
        "item": {
          "id": "97a965c4-ae7a-4952-a141-f162f2b43e37",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4861ca41-e938-48eb-964e-e8b9494f7c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3824c48d-139f-4e3e-b110-3d79164aba46",
        "cursor": {
          "ref": "6231cbe8-7be7-4d01-8fc1-c3723f1445de",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f03678b3-d20e-439f-ac94-00bcacf28a86"
        },
        "item": {
          "id": "3824c48d-139f-4e3e-b110-3d79164aba46",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0ff36afd-20a1-4a54-be24-5f43bc219a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cdd854-832a-42cc-b9ce-e71f11dda1bb",
        "cursor": {
          "ref": "afe1ba60-0d89-46d0-a163-62a3468d7540",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7a4428d7-fb1a-4a10-8afd-caa4ab1bddf3"
        },
        "item": {
          "id": "f9cdd854-832a-42cc-b9ce-e71f11dda1bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c867b247-0703-4ab2-a159-f95eb8a38a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b42460-8e3c-47ac-8977-4860bb0a8f27",
        "cursor": {
          "ref": "db0041da-70fb-4e02-8ee1-6b6c388dc247",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "30ada1ad-cb96-4c8b-8985-b4eb52db5c86"
        },
        "item": {
          "id": "f6b42460-8e3c-47ac-8977-4860bb0a8f27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2f850451-4dd0-47c3-b00a-a6a74a7f65d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1865ca5c-8bed-4804-a8fa-4d8e31f6c72c",
        "cursor": {
          "ref": "c4af870f-235c-4340-b6e7-86f09d9fead5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6b0b7486-c32c-4671-854f-c91fba14e1d5"
        },
        "item": {
          "id": "1865ca5c-8bed-4804-a8fa-4d8e31f6c72c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d77be4de-ed94-4c9d-abda-f6034a72337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40946cd1-587e-4191-b850-82fe7ba58a7f",
        "cursor": {
          "ref": "3ea61ce3-0bed-4b54-ad0a-58aede5a9c82",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d310ef07-f187-4f6a-a504-59e1b0cb3db0"
        },
        "item": {
          "id": "40946cd1-587e-4191-b850-82fe7ba58a7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "609363af-5373-4923-a690-e94db39009e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee75d019-78cf-4919-9d88-a15b1c2cfc02",
        "cursor": {
          "ref": "b1d3ff47-fe77-4d87-b1bf-e45920391e35",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "defa92f7-1841-42af-b73b-fe6401e14702"
        },
        "item": {
          "id": "ee75d019-78cf-4919-9d88-a15b1c2cfc02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aa41ff25-89ad-4d50-b044-4e425c5a1fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eec65f-d7ec-475b-8c81-373183943eb8",
        "cursor": {
          "ref": "5dc091cf-dc16-4d4d-a8ed-3145f8b354be",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "90b20326-b68f-48a8-82e9-c0c81a593655"
        },
        "item": {
          "id": "06eec65f-d7ec-475b-8c81-373183943eb8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9c846d1-3a2d-442a-82af-8175729c3765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb34a5d7-6a39-4ab0-a62a-3b14953ca4bd",
        "cursor": {
          "ref": "f70b8c06-fcbe-47b7-a865-2b8b3aaef07c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cc9d34fe-03c9-4158-b89f-6e5cbb07eba1"
        },
        "item": {
          "id": "cb34a5d7-6a39-4ab0-a62a-3b14953ca4bd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06c1141d-ba55-4d13-91e1-89c2fa0b5114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b6e7e8-4944-430b-9764-5249a09925d0",
        "cursor": {
          "ref": "73218bd0-fb3b-48a4-abac-b7825890e648",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d7babfb-c940-433e-a6f3-cbd8e6f3da18"
        },
        "item": {
          "id": "80b6e7e8-4944-430b-9764-5249a09925d0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f7d4cc1d-5e7d-498f-92a5-d2357ed7e2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932c5b8a-38bb-4d3a-bd30-9fe556703330",
        "cursor": {
          "ref": "7e434574-d931-4f88-9243-a0f0eaf281b1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3543f541-62b1-4ec0-ac25-f6dafce84ac4"
        },
        "item": {
          "id": "932c5b8a-38bb-4d3a-bd30-9fe556703330",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a1191dbc-5dcb-43d0-a6df-e5210cf1c916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f800893-8f21-455a-8c90-7e17ba7d7278",
        "cursor": {
          "ref": "56a75416-35b7-4c8d-b2c6-ce1dadeaf0aa",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c38ff121-b667-4c31-82ef-a86baa514f20"
        },
        "item": {
          "id": "3f800893-8f21-455a-8c90-7e17ba7d7278",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5f011684-0dac-4d31-bb41-aea4c773f793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53cff35-101b-4bda-9220-0edce04ecae0",
        "cursor": {
          "ref": "43653e74-a388-4c17-bbd6-32e4a451fd25",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95f57cdb-5779-4637-bb04-4a540f53d446"
        },
        "item": {
          "id": "e53cff35-101b-4bda-9220-0edce04ecae0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "749a1793-eac8-4816-8810-68b5907b0141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fb7a48-e332-4d08-a0b1-74ba38194e70",
        "cursor": {
          "ref": "87a2eaf8-6d51-4282-89ca-928456cb9a26",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b5f70593-f759-4572-ae58-8dc8c6f5857e"
        },
        "item": {
          "id": "55fb7a48-e332-4d08-a0b1-74ba38194e70",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f5698077-9abc-42f1-a54c-60e24f8b50ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9b5522-2662-4958-ac30-9e824781be96",
        "cursor": {
          "ref": "cc2ca989-6520-4e8a-9199-80a6eec249be",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c5ee8cc2-7cac-4ff7-be4c-22973896329f"
        },
        "item": {
          "id": "8b9b5522-2662-4958-ac30-9e824781be96",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6f9939c8-e921-49db-9f4d-fdb0f9db852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c04808-3271-4fec-96fe-25fdbe836a49",
        "cursor": {
          "ref": "6da1e49d-52c4-4cb8-901e-56651030e8a6",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "99b60796-5500-4471-9a04-51e0fdd8bf18"
        },
        "item": {
          "id": "82c04808-3271-4fec-96fe-25fdbe836a49",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "95b981da-2b03-4fbd-9314-a84b131c251c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d12b25-a25d-4fe1-8d5c-3d25d4fe284d",
        "cursor": {
          "ref": "a8c04052-6cd8-470a-b0bd-f4e1bc798e34",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6529e20f-cf49-41e1-8374-bc0d8fc2331d"
        },
        "item": {
          "id": "27d12b25-a25d-4fe1-8d5c-3d25d4fe284d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "40b3d4da-206c-46d6-8620-3c40679a3e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fef13e4-ada1-4154-95b2-94b016b2bd9c",
        "cursor": {
          "ref": "e9d2b8f3-ff5d-4d5a-9bd9-7d97c5f81d26",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "20efb0df-4864-4f3b-95c5-a1fcf0c139b2"
        },
        "item": {
          "id": "0fef13e4-ada1-4154-95b2-94b016b2bd9c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d2f3332f-9510-45c5-98dd-410a574d93a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d344becd-5e97-4bbf-8813-9a3b518297cd",
        "cursor": {
          "ref": "2a641371-e823-40da-9e21-3054f21cef78",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "070d35a9-4eb6-4b10-803e-6189df50c79f"
        },
        "item": {
          "id": "d344becd-5e97-4bbf-8813-9a3b518297cd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e5bb197f-db06-40e4-ac10-027803350105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6539819c-b99c-4005-9981-d42dddb0c9c6",
        "cursor": {
          "ref": "eb0a7755-eace-43b6-9ff8-6841b05ce8bf",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5cc0a68a-c5c2-4e75-b4da-16f02bee1857"
        },
        "item": {
          "id": "6539819c-b99c-4005-9981-d42dddb0c9c6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e517c28c-43ff-415f-93c3-f4d7f4e7f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b36ea0-55be-4900-88f7-d9b738032ef5",
        "cursor": {
          "ref": "6cefa7d9-f884-44ea-a235-dafa196e24eb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a6ac2ed4-2d3e-4351-a3be-528f249d6ab1"
        },
        "item": {
          "id": "b4b36ea0-55be-4900-88f7-d9b738032ef5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a1d2e7e6-bddb-4ba0-b377-ce237f0932a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddac6ff-26a9-4f11-b89b-e17460ade02d",
        "cursor": {
          "ref": "a1c4dc28-5120-4032-b023-6108302138c0",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "459a2f7a-8f5f-4b6d-9fff-cad22b07d86a"
        },
        "item": {
          "id": "2ddac6ff-26a9-4f11-b89b-e17460ade02d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fac476e1-ff84-4ad5-b55f-c928fff4375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0000c4-5154-4e80-9a57-ae6d0ac440a6",
        "cursor": {
          "ref": "3e3cefad-62cf-4281-963c-af49a8b43bbc",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3c873156-7541-47b9-927e-e389c2d5e93f"
        },
        "item": {
          "id": "0b0000c4-5154-4e80-9a57-ae6d0ac440a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "271fb3c8-f9d0-466f-a34d-f990f2d2757f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3402c-1706-4899-9ed3-6cede96e3d98",
        "cursor": {
          "ref": "03d90788-77ba-4400-be57-202604d2ee6b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cf296c10-cec4-4456-a549-b4a4f654271e"
        },
        "item": {
          "id": "08e3402c-1706-4899-9ed3-6cede96e3d98",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3d561bcb-3342-443d-8132-7faa48a14a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373cf12f-cd35-4957-a8f7-6857744402a1",
        "cursor": {
          "ref": "3a4f24de-32a5-4541-8a83-77d7db06a74b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e1790ce3-4ffd-4109-b4ed-5d598227e11c"
        },
        "item": {
          "id": "373cf12f-cd35-4957-a8f7-6857744402a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e640b7d4-619b-42c4-913b-e51862364bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b36e3d-30f6-4f3b-9cc8-caebfe627483",
        "cursor": {
          "ref": "8d848829-d7ba-409c-be03-d456bc948997",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b30edb73-6f1f-4e1e-a269-5a5501d486b5"
        },
        "item": {
          "id": "23b36e3d-30f6-4f3b-9cc8-caebfe627483",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "37ec6ad9-1fa4-4ea8-8292-07c5b258be9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eeb804b-d8b2-4b17-a1c7-158ef9894f9d",
        "cursor": {
          "ref": "52e8d9c0-84a5-4923-b27b-8094571274e1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "05af2779-a5ad-42d7-8254-40f590b5b110"
        },
        "item": {
          "id": "2eeb804b-d8b2-4b17-a1c7-158ef9894f9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a567d8c3-78d9-4b51-ac76-229231690826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e3b04a-f66a-4ac5-8433-2a6164631915",
        "cursor": {
          "ref": "b7a20452-ada0-4504-8ff3-33e8b8c87cab",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7397376e-3967-44e8-9c62-0d30fc058fdf"
        },
        "item": {
          "id": "84e3b04a-f66a-4ac5-8433-2a6164631915",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8479f292-b598-4dc2-9fda-761b03320cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d638bf6e-ac36-4af9-86f6-d27fadd2fc1c",
        "cursor": {
          "ref": "01433feb-a06a-488f-bb36-c3f29cf320fc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c272f26d-2158-4da9-90ba-e0a18cba22bc"
        },
        "item": {
          "id": "d638bf6e-ac36-4af9-86f6-d27fadd2fc1c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e71de3d-0cc5-4cd9-a3e6-434e40c79472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d461021c-9ec5-40e7-8a80-a3a44fdeb66a",
        "cursor": {
          "ref": "1ed5e9a3-ba2a-4707-bb51-4c87b8e547f2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bdd9601a-b853-4b6d-97fd-1aca5526efe2"
        },
        "item": {
          "id": "d461021c-9ec5-40e7-8a80-a3a44fdeb66a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "95eecf83-10ff-46de-b6d1-fce0fafcefc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57667a02-6ee1-44dc-aa7d-be0b12acc22e",
        "cursor": {
          "ref": "e9990c8f-f12b-42ae-8e56-d6981481426c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "11808f27-b057-4d98-8922-f2f9bb70abe8"
        },
        "item": {
          "id": "57667a02-6ee1-44dc-aa7d-be0b12acc22e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "93a21b43-c2ae-470c-bfad-eda61568eba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd5d0cc-5344-453d-be42-6f8d132eb048",
        "cursor": {
          "ref": "09c33df8-bd4f-4fb4-a6ca-abd50d80e3ac",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "db085fb0-7e27-48aa-9808-0c157b6cd3bb"
        },
        "item": {
          "id": "1cd5d0cc-5344-453d-be42-6f8d132eb048",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0e540f0d-31c5-4a66-982d-3964be2fbec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e0a860-42e3-4896-bbe0-2bdb5e0c0d85",
        "cursor": {
          "ref": "6da4686e-0383-478f-9810-dbb0830cd61c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5d36e1f-c0a2-4c52-94bf-38abad2efc40"
        },
        "item": {
          "id": "e3e0a860-42e3-4896-bbe0-2bdb5e0c0d85",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fa53901e-de07-4e01-a449-d4a644a580f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99586af3-4706-48f5-aacc-f8d5e8e1a8a5",
        "cursor": {
          "ref": "716719c7-5f56-43cc-b7bb-51b86f18a03a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f244a6d1-bb35-4fba-8c0a-4af425cb9f82"
        },
        "item": {
          "id": "99586af3-4706-48f5-aacc-f8d5e8e1a8a5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ec8eadf-9ff8-4278-ba1f-8ba9522c468b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7982884f-700c-4234-84a3-e32077e19dd1",
        "cursor": {
          "ref": "41fdc9dc-be8c-46af-ba8e-56471dd48c88",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b165673-4ec4-46a8-8747-0cdc958221f1"
        },
        "item": {
          "id": "7982884f-700c-4234-84a3-e32077e19dd1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "04904dad-32f8-48d6-aa7d-8592b39945f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72c72a6-9ac1-4efc-a9e9-37366a991776",
        "cursor": {
          "ref": "e862c968-f870-47aa-a796-e850d181275e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7e6294be-eff2-40c7-b52d-eb115435ec90"
        },
        "item": {
          "id": "b72c72a6-9ac1-4efc-a9e9-37366a991776",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "daff1fce-cbe4-47e7-bbb9-ebd56d82f2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9c6075-524d-4488-aca1-738e4c6338e4",
        "cursor": {
          "ref": "96deb68f-0ae3-4ba9-b173-12bfa953be33",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3a9fcc9d-3663-46b1-ab6b-ec9f2bc6c456"
        },
        "item": {
          "id": "3b9c6075-524d-4488-aca1-738e4c6338e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84bba315-5e91-48c0-99d7-bf10005e9d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f1a09b-20e4-4dcc-9c74-a872697e4e2f",
        "cursor": {
          "ref": "e37539a2-edf2-447f-bed6-5cae50db34a2",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e866fe7-c566-444d-9569-1743563072c9"
        },
        "item": {
          "id": "97f1a09b-20e4-4dcc-9c74-a872697e4e2f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "05f889af-daca-4b77-9ec2-b0873a07790f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a73ac8e-290b-4e84-b44c-08c2a79de071",
        "cursor": {
          "ref": "8c6620d4-cd18-4e6e-a3c1-e3c77e89c290",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "059f677f-2535-46d0-88b2-d7314a6061ab"
        },
        "item": {
          "id": "4a73ac8e-290b-4e84-b44c-08c2a79de071",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fc234834-51ba-4b20-ba64-a0708b890be1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05e5f76-0aa9-4069-baf6-a78916751f03",
        "cursor": {
          "ref": "c35738af-2d1e-416c-8ec1-c55a3bd5f5a8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8fd7c4a-317e-4a2f-a0ef-c1cc11c942ff"
        },
        "item": {
          "id": "d05e5f76-0aa9-4069-baf6-a78916751f03",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e87c3271-1b5b-4a18-ae00-5d5b75638af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9656f93c-c674-4a9e-a77e-e0d9b572a78f",
        "cursor": {
          "ref": "5f8c75ca-cbea-4b18-bd22-d732e7550970",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dc83761f-6fc7-4602-9e41-1bc91686b760"
        },
        "item": {
          "id": "9656f93c-c674-4a9e-a77e-e0d9b572a78f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a469783e-e668-4f9a-9dcc-ce4cf5b801b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e0a87dab-6fb7-47b1-b1f0-b97004ba191c",
        "cursor": {
          "ref": "5b95f8ce-a5c9-4177-bb31-d8f265b75833",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a0e9bb2a-f6f5-4bb0-a827-0f29d5052742"
        },
        "item": {
          "id": "e0a87dab-6fb7-47b1-b1f0-b97004ba191c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8b5ddb16-0460-47fd-8d60-570b0e05eb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e6d8bb5b-b500-47ed-be37-9e277205953d",
        "cursor": {
          "ref": "dba5c237-c9ca-4d6c-bfa0-cebdded3182c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d36bf378-b046-4f07-b692-29bbb61a8edc"
        },
        "item": {
          "id": "e6d8bb5b-b500-47ed-be37-9e277205953d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0c61fa9e-ac79-4997-8542-ae0b5783ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6dc84482-6216-446d-b335-d633878ac2af",
        "cursor": {
          "ref": "62a73a6e-7745-45bb-853d-c42026230b10",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b0b4d54a-d601-4915-ba8f-1ed46ed30030"
        },
        "item": {
          "id": "6dc84482-6216-446d-b335-d633878ac2af",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ccddc49d-96db-4359-b47b-c9279911fc35",
          "status": "Created",
          "code": 201,
          "responseTime": 9672,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "827445af-2cc8-4c7f-a4ea-473fa7a37741",
        "cursor": {
          "ref": "50356cc9-2897-46c7-8d03-dfdfbc8ffae2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "681a88ad-8efb-4dbc-b72e-6bbebb191671"
        },
        "item": {
          "id": "827445af-2cc8-4c7f-a4ea-473fa7a37741",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c2d16bf7-6686-43ac-b0c8-6d6372471c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bac52eec-1da2-43c5-abb3-ab1560bc575f",
        "cursor": {
          "ref": "33dae6b8-4572-408c-a5b6-a6e7c91de5ea",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "87d3a17d-d1ca-4634-adb3-1615abf1daf3"
        },
        "item": {
          "id": "bac52eec-1da2-43c5-abb3-ab1560bc575f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5950eaaa-1b34-4eb7-95e6-69704ea70699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7770d594-1164-428d-b8aa-4db0486ecb58",
        "cursor": {
          "ref": "16e1afad-71ad-4b47-bbd6-d9c0aaedef4f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cac257d1-432b-4ede-8230-3aae3d813f60"
        },
        "item": {
          "id": "7770d594-1164-428d-b8aa-4db0486ecb58",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60765058-a0f7-46b9-b748-b461d5a987f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2be09-2a97-4949-bc23-27b063aa41d7",
        "cursor": {
          "ref": "66f0f150-886c-40e2-9aa5-d602bf7be055",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66cc3f31-d635-4d7e-b14a-2ec72f1fc77a"
        },
        "item": {
          "id": "68b2be09-2a97-4949-bc23-27b063aa41d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "51966791-e52c-4f38-aa01-cb0989500032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476fd074-eace-4f4f-ae91-b46c5520ac7f",
        "cursor": {
          "ref": "2f200358-4cd9-4850-ac30-9a0592ecbdf4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07e5abdd-f4d8-4f61-ab65-cb53ff41f337"
        },
        "item": {
          "id": "476fd074-eace-4f4f-ae91-b46c5520ac7f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "68e24759-92db-4c06-b0f5-f08e9f1d3fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811e8e70-d6b1-4ef5-8176-c58645cfa722",
        "cursor": {
          "ref": "288d492d-807b-4a66-b3d6-dee8fefcc317",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "137cdf6b-061f-4eec-aa88-724cbfe48cb2"
        },
        "item": {
          "id": "811e8e70-d6b1-4ef5-8176-c58645cfa722",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "50ca06e9-c508-4361-bc67-fec458582346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525d8ce9-d018-490f-b158-6172060e7de5",
        "cursor": {
          "ref": "5c287e96-5d41-4c1d-8aca-9096d64dd1f9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95be2772-9ba0-4e91-bfd4-75553d6ecc35"
        },
        "item": {
          "id": "525d8ce9-d018-490f-b158-6172060e7de5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aad88bab-f765-4cd2-b520-c9ba513a4f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fc7ef4-2838-48ee-8e7c-f5a647c1298d",
        "cursor": {
          "ref": "95c2138a-afe0-4d7b-a4b4-fff342315a7c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d71207f2-01bc-41db-8802-130bb7305af9"
        },
        "item": {
          "id": "66fc7ef4-2838-48ee-8e7c-f5a647c1298d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "80d1a542-8073-4a2d-b7e7-653c1d365713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfd4859-2f4e-4c54-affb-c81ded624124",
        "cursor": {
          "ref": "1097bbe4-bce8-4508-a232-06103f72ebf4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "27882117-72a2-4582-8895-58f1c733f92e"
        },
        "item": {
          "id": "0cfd4859-2f4e-4c54-affb-c81ded624124",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fde07b51-35cb-4d0f-a46b-bbe9736d7534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794a2711-d7eb-4133-b9b0-e6155fe10c5e",
        "cursor": {
          "ref": "d595a9c2-0efb-4300-8661-a63bb346ef5f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "62d00171-295f-454b-b172-74b057dd2bf9"
        },
        "item": {
          "id": "794a2711-d7eb-4133-b9b0-e6155fe10c5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b88858c-bd9f-4911-b0d5-e4d26d38fe75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388185e9-29b5-4cc0-952d-8781753b49ba",
        "cursor": {
          "ref": "94220a71-0d1f-4c51-bec2-67c0f226a034",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2332150d-71b1-43b2-84b0-16d5f8d846f2"
        },
        "item": {
          "id": "388185e9-29b5-4cc0-952d-8781753b49ba",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c952127b-8bb0-4741-ac99-3eda0064037e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02489ec-8150-416d-9e22-aaffc857c103",
        "cursor": {
          "ref": "e02f2ed7-cde8-4958-9f45-75de571a543c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "90e5c5f4-50c5-4548-a756-1b6aa5f63544"
        },
        "item": {
          "id": "b02489ec-8150-416d-9e22-aaffc857c103",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "38f7191a-19ed-4d84-affe-eb6c440ca45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50136c5-14af-40a9-8154-9722468de314",
        "cursor": {
          "ref": "ac0b2032-3229-4b0d-a2cf-51eafea9e1c0",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7f915e34-a566-46bf-93f7-14c16ce7404a"
        },
        "item": {
          "id": "e50136c5-14af-40a9-8154-9722468de314",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "14d3b2ad-6d3c-426f-b97d-0888077c7d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573d8ab-0a06-4896-ac3b-221e91425819",
        "cursor": {
          "ref": "1350f50d-a88a-473c-bae9-dfee117fdedb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "533faf52-b5d2-4702-b1b7-ddde0ffeef8e"
        },
        "item": {
          "id": "f573d8ab-0a06-4896-ac3b-221e91425819",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f08ddeb-08df-4b84-91a6-c11f2a4aa70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a81f90-93a3-43d0-8b2d-2e9282218992",
        "cursor": {
          "ref": "f82d9311-bef4-4612-9927-e2e274fb95d4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b4cdc748-3f14-4900-a4f7-e64a7c634438"
        },
        "item": {
          "id": "65a81f90-93a3-43d0-8b2d-2e9282218992",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "074d5259-3fb1-4050-bb50-c0f9c097782d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de948c79-3e1d-4b63-bff1-6e6de70ebc57",
        "cursor": {
          "ref": "b8ad2aa4-2ad6-4ab9-8fa1-b290a0ffcaa0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1cb2ee0e-5197-4817-9174-10cc4d057e67"
        },
        "item": {
          "id": "de948c79-3e1d-4b63-bff1-6e6de70ebc57",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e86957de-2bac-4e53-a1a8-3055e0a5c730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88addc59-3fee-49a3-b8cc-88c4eaf89051",
        "cursor": {
          "ref": "0b06c8f1-8dfa-4904-8365-b30779785c06",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "86ec9861-af14-4f4b-adf8-8d4626db25a3"
        },
        "item": {
          "id": "88addc59-3fee-49a3-b8cc-88c4eaf89051",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8139327e-c2aa-4a1d-b1bc-b3ddf0a7dca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1926972d-cb32-4970-b3f4-324f931a83c2",
        "cursor": {
          "ref": "5bb57b63-e181-46d2-a3fa-d511ed5d6720",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e9b06bdf-e892-4cb9-a80d-1fe1c9f007f1"
        },
        "item": {
          "id": "1926972d-cb32-4970-b3f4-324f931a83c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2167e38a-d944-407d-976f-ad0c45df45cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fa2231-0707-44b9-9762-e61387ee5570",
        "cursor": {
          "ref": "da43671d-9705-498b-b228-93d2c2b8b6f1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "320ca3e2-9bc9-4bae-9691-8e6f9a874988"
        },
        "item": {
          "id": "a1fa2231-0707-44b9-9762-e61387ee5570",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "403d0eaf-0f87-433e-a823-cc3b516c06b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "524479f3-e1cf-40bb-8e72-b9d9f1a0a0a4",
        "cursor": {
          "ref": "e262a492-91a1-4d26-a6b7-57672785a0e6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "33ec92af-1ec0-4efb-aaae-d032df5979ab"
        },
        "item": {
          "id": "524479f3-e1cf-40bb-8e72-b9d9f1a0a0a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bc4209dd-a6ac-4bb3-94fc-6d3e8d258b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02004a-a15e-433b-a99d-c74c2c6ca8ab",
        "cursor": {
          "ref": "7bad6d57-70c0-42db-ac9d-694a86e189d5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5c816a5-db8b-481f-8fac-a800520acea6"
        },
        "item": {
          "id": "db02004a-a15e-433b-a99d-c74c2c6ca8ab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75401126-0a76-47a1-b80c-3341efe05489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07199963-c5f3-4401-ad62-06ee19a3837e",
        "cursor": {
          "ref": "63f5ce61-317f-4848-9360-e13f89f7e840",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4d137936-db13-410c-9fb5-46f080d928cb"
        },
        "item": {
          "id": "07199963-c5f3-4401-ad62-06ee19a3837e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f24ebb3-8487-47bb-8bb7-62f7a4f7fc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16903d2c-fdaa-47e2-a630-cfbee1bcfaf9",
        "cursor": {
          "ref": "45eeddcd-6faa-463b-a87c-aa4506fbf828",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d35e6f2a-cecf-4db8-a1ac-0d6125ef6c2e"
        },
        "item": {
          "id": "16903d2c-fdaa-47e2-a630-cfbee1bcfaf9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e9a2d3a-dd56-4762-a53c-bfe791cf0e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f547ad-eae2-4a32-a30f-aaf2c6a33c21",
        "cursor": {
          "ref": "767a01a1-a7d5-4c61-9c84-4ddb282d956e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "810b8641-b256-429a-9667-b8aba5be3343"
        },
        "item": {
          "id": "e5f547ad-eae2-4a32-a30f-aaf2c6a33c21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abee10b2-852d-4da1-96d5-fa934197b54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c3729b-5dda-49ae-99a1-91e9fad94b8c",
        "cursor": {
          "ref": "9ab64083-8e98-45de-9ddd-2695fc2a618e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83cbebc9-37b5-40c1-ba62-71c640b37bf0"
        },
        "item": {
          "id": "c6c3729b-5dda-49ae-99a1-91e9fad94b8c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04123df9-b408-4b41-8cee-10c86fecd9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88925438-a6e6-4a2e-b4cb-e5ac85995c1b",
        "cursor": {
          "ref": "5eebab6c-13c2-4909-b3e7-bdcb4350b465",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b153c99a-4fa2-4953-bf02-3e175231302e"
        },
        "item": {
          "id": "88925438-a6e6-4a2e-b4cb-e5ac85995c1b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4fa3d098-122f-4c3f-b012-275af40b5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a518e4e6-cae0-4a56-be73-d2ab18767687",
        "cursor": {
          "ref": "881f63b7-a90c-46c3-aae2-addade006fed",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a895873a-d92e-4e52-b855-cf36e9f2415f"
        },
        "item": {
          "id": "a518e4e6-cae0-4a56-be73-d2ab18767687",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48b25741-0ae5-456b-bc88-92b740caaaef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "66544b3c-4379-4eec-b3f1-d106943a3e42",
        "cursor": {
          "ref": "a741055d-762a-48db-bb29-d67c9d62170b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5754973a-dc52-4b84-9769-49eaf3046c5e"
        },
        "item": {
          "id": "66544b3c-4379-4eec-b3f1-d106943a3e42",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fec6c25b-1fdc-4671-aa62-018217446c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b514ce-c6af-4d32-966a-8f3dd625b0a0",
        "cursor": {
          "ref": "21211713-dce3-4e3f-8f12-bb93c6d291b8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e6c9b273-deb6-49ee-af56-d523b59f181d"
        },
        "item": {
          "id": "59b514ce-c6af-4d32-966a-8f3dd625b0a0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6a494f28-f483-4c31-80d2-adcca1b290ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e201d1a-5869-4b89-a9fa-2e0d0ecc7607",
        "cursor": {
          "ref": "936bb6b8-1f51-41aa-a214-e60b31db1d2d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0495f6d0-f19e-4e5d-87c8-25fe7c72e457"
        },
        "item": {
          "id": "2e201d1a-5869-4b89-a9fa-2e0d0ecc7607",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "28dcb107-c66c-431d-a011-429ceca2f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4618ca-5a04-43eb-9501-7452db4b08eb",
        "cursor": {
          "ref": "0cc5f420-a8a4-43e9-8f01-56be8c329de8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "61c77bb1-f58c-452a-b3bb-2082c9642674"
        },
        "item": {
          "id": "8c4618ca-5a04-43eb-9501-7452db4b08eb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "41fba3b2-e2a2-41af-9299-3486f675c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915099d7-bbcc-41da-84ab-44b35c45ed25",
        "cursor": {
          "ref": "d3920cc1-31b7-4758-9d2b-a232ad048f47",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dae726d7-9838-4d9e-a723-0a40968f7e23"
        },
        "item": {
          "id": "915099d7-bbcc-41da-84ab-44b35c45ed25",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c1b62de1-968b-40c8-b850-453e939a766e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1043da8-11be-4b10-b49e-99438405b0a9",
        "cursor": {
          "ref": "f7b52ea6-ed3d-4d92-9245-fca45ca60d5d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b2ae0ec6-7bcb-4a91-9588-c70873523938"
        },
        "item": {
          "id": "a1043da8-11be-4b10-b49e-99438405b0a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0529fe71-5dfb-4137-9ba2-ddca5f31191d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5483501f-b4c7-49b2-905a-fae9362a5b09",
        "cursor": {
          "ref": "0e6ae3fe-0876-4b27-89ea-efc74ee0f46a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dd7d8fb1-8796-4bad-af63-8c3843473294"
        },
        "item": {
          "id": "5483501f-b4c7-49b2-905a-fae9362a5b09",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9020827d-61ba-4c49-a7e7-0e75e3084fd4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "09fe2a04-7001-42b7-b26e-f25ee8bdaaef",
        "cursor": {
          "ref": "4122aa17-eb59-46ba-a4be-4ef1ab44bf83",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "921c0ba8-d87b-44e7-9111-a3b12292b3e1"
        },
        "item": {
          "id": "09fe2a04-7001-42b7-b26e-f25ee8bdaaef",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d4c82c2e-9b6e-4b0d-a2a7-4738321f3e47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "9f189aaa-a4bb-42c8-815f-01aae613b3eb",
        "cursor": {
          "ref": "3559cd49-3a8b-4a7e-85b4-0c64d25724ea",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ac7de62e-55e3-44c8-82c9-924cb9f96516"
        },
        "item": {
          "id": "9f189aaa-a4bb-42c8-815f-01aae613b3eb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9fd9e6d9-f8b2-4a20-8ac5-00f73ad9a89c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "ac221e34-b9da-4d72-875d-f8e61b0d53b2",
        "cursor": {
          "ref": "e8d8bb95-d050-458e-b890-2af2a0eb896c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3a284a1d-1596-4872-8e36-9c92ab465a69"
        },
        "item": {
          "id": "ac221e34-b9da-4d72-875d-f8e61b0d53b2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "267755ca-dd06-47b2-8f89-685c27e8aba8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7ba9c4a1-f816-4d2f-8276-8300e3bb90bf",
        "cursor": {
          "ref": "e2900958-1e9e-45cc-848c-baa2e5bec9a0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "173d413a-9719-411c-bf0f-768a495d1186"
        },
        "item": {
          "id": "7ba9c4a1-f816-4d2f-8276-8300e3bb90bf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ce1dd610-5b74-4318-a9ce-cdb524381fc2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "2e248bd2-8ab2-454e-9f12-c574d1255c42",
        "cursor": {
          "ref": "9a8eebf5-c52c-48de-9e5d-8cd81ce48695",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "aebde969-ef52-4157-a8d8-daed26979fa4"
        },
        "item": {
          "id": "2e248bd2-8ab2-454e-9f12-c574d1255c42",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5f1550ef-a787-4734-89da-c7679f6e69ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "de387e69-8d95-4e09-bc9d-2561489ba55c",
        "cursor": {
          "ref": "7b675ca3-8bc4-4606-a479-2b428879a109",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fd004620-e691-4d4a-a534-6cdd4f6effd0"
        },
        "item": {
          "id": "de387e69-8d95-4e09-bc9d-2561489ba55c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89f048ff-3f93-44b5-8755-853602d7e174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac63323-dd0c-4dc8-89e5-a12baa20deb7",
        "cursor": {
          "ref": "5fa05952-55a9-48e1-a007-6204a66a01f2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ecea9848-06cc-4d34-a193-e622a2fdc207"
        },
        "item": {
          "id": "2ac63323-dd0c-4dc8-89e5-a12baa20deb7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "08c11887-c1f3-4bdf-a818-6c24aacc8a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0408971d-d193-40f0-bfba-5d2046a3d673",
        "cursor": {
          "ref": "ea5791ca-04d8-4280-8141-bf4319344619",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "668988c5-0bea-4ff2-9f6e-e20213f0bb29"
        },
        "item": {
          "id": "0408971d-d193-40f0-bfba-5d2046a3d673",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87c93f62-7c15-4359-974f-906f68253a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b29f4b8-b93c-4e72-ad01-f2af4434ec25",
        "cursor": {
          "ref": "54f03f5a-1b9d-48c9-872d-dd2e8cf4d38c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dadbc23d-ff5d-4522-bac6-cd64505580a8"
        },
        "item": {
          "id": "8b29f4b8-b93c-4e72-ad01-f2af4434ec25",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "87d92a58-5708-49c8-94c9-279ae7b87234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febc9621-5295-44fb-849c-81bbcf96fbdc",
        "cursor": {
          "ref": "c81878ff-a3e1-4a5e-b292-2c609f84f8b7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff790902-6429-4bf7-9c51-91b97bf22cc0"
        },
        "item": {
          "id": "febc9621-5295-44fb-849c-81bbcf96fbdc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c2e5e05d-26c1-4651-9726-2a9d835a7bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a125f51-468a-42b7-ba1b-8ed02e82a351",
        "cursor": {
          "ref": "215a8dea-9986-4152-a7ba-8447328e5df1",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "89785e75-c6b3-45c8-b663-4c8f83193635"
        },
        "item": {
          "id": "8a125f51-468a-42b7-ba1b-8ed02e82a351",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7aae76b4-70bb-45f1-86ab-d7646cd946bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9417781f-89b1-461b-80d0-3734d584edb8",
        "cursor": {
          "ref": "3186117e-26ac-4d11-81c8-bedfcaa69d44",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba930df7-28e4-458b-8779-cf9b3e504532"
        },
        "item": {
          "id": "9417781f-89b1-461b-80d0-3734d584edb8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "90e55a7f-560f-411a-8776-dd140282eab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df7a99c-7136-4e17-b5ab-18f984a546ed",
        "cursor": {
          "ref": "7d671929-e9d4-403c-bb21-c01b45533b2f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "60b94a57-870a-4b08-8fce-65b58435703d"
        },
        "item": {
          "id": "2df7a99c-7136-4e17-b5ab-18f984a546ed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "974f2c69-bc7e-448e-b887-eda353b8f9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825eaaeb-3dc9-4678-9301-58c3fcf64ff6",
        "cursor": {
          "ref": "7d085b66-3775-43a0-a58b-e4d5c37cd391",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "98f75f35-1bfe-4dba-b774-49b8ec976f51"
        },
        "item": {
          "id": "825eaaeb-3dc9-4678-9301-58c3fcf64ff6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e821115f-591a-4ecf-ae01-73186fbc7ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc390b2-8df3-43e7-b350-d45ea2a27e00",
        "cursor": {
          "ref": "cdaa0b06-afcb-4df6-b850-53a83a3ba03d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "312c24de-a470-4b6c-8d91-5a41b0a2427b"
        },
        "item": {
          "id": "7bc390b2-8df3-43e7-b350-d45ea2a27e00",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f95b68db-b172-4420-bbb1-0c037106a20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00423fd8-83c4-4fc8-9727-ca9dab38a084",
        "cursor": {
          "ref": "269208a9-7f73-4c15-b40f-e436a8f5c228",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1c62689c-9087-4853-a415-c06bb4d6d0f9"
        },
        "item": {
          "id": "00423fd8-83c4-4fc8-9727-ca9dab38a084",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "88f447d2-7e95-403c-b0db-056e9c403c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673f272f-50f9-4b46-81ea-d6c543da6322",
        "cursor": {
          "ref": "8c060452-d495-4efd-b6fe-17d422bed826",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "92d6995b-8464-4eab-855c-c41f1b3877cb"
        },
        "item": {
          "id": "673f272f-50f9-4b46-81ea-d6c543da6322",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8494a38b-9355-4dea-a1c2-ff898369201d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd5acd8-6628-4093-8850-ffd1eb3561fe",
        "cursor": {
          "ref": "27b456a7-a300-4bb5-8b32-1611513aa5aa",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c006adbd-ac54-49e5-87e9-441562bcedd9"
        },
        "item": {
          "id": "6fd5acd8-6628-4093-8850-ffd1eb3561fe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0309ae7f-fb59-4661-9fd4-63e8369d51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8ddcea-1a7c-4e18-8244-93ce88f3907e",
        "cursor": {
          "ref": "15d4b71b-47b1-462a-96c1-93fdb8094dea",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5a68cb78-1837-4243-8a76-9d47359c0533"
        },
        "item": {
          "id": "da8ddcea-1a7c-4e18-8244-93ce88f3907e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "17a0458d-3b24-4572-9497-f543ad9a2554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e22534-cacc-4088-ad86-d42676826911",
        "cursor": {
          "ref": "aa8330ee-b102-4ee7-b94b-535a71a8f80a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c30c115f-5842-4811-a82f-52c60fca9b91"
        },
        "item": {
          "id": "a1e22534-cacc-4088-ad86-d42676826911",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67f6a4d6-5042-4578-afd1-de64965c605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e895a-f9a1-4ea2-bbd6-b98c6ede5112",
        "cursor": {
          "ref": "ee5239f8-db27-4ad5-a6ad-d72342248b6c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a8d5efe0-620a-4ec9-b73e-4206641667e1"
        },
        "item": {
          "id": "996e895a-f9a1-4ea2-bbd6-b98c6ede5112",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "737deafa-da39-4e16-9a26-7a0d5e12bedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88abe9e-99d7-4552-9251-b8d479bf9485",
        "cursor": {
          "ref": "126c708f-bdf1-49bb-b001-0eb30b14038f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d225c697-6850-41b8-94c5-9aa686e9cb1e"
        },
        "item": {
          "id": "a88abe9e-99d7-4552-9251-b8d479bf9485",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "82f00941-0c60-41f9-a0fe-98fbf5801dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297347cd-1948-4d37-9566-0d01fd66c713",
        "cursor": {
          "ref": "e986360d-1c3a-4d0f-99b6-4684578e5e11",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4dc2d8e4-7f66-4d2b-b391-8b1c5095f0d3"
        },
        "item": {
          "id": "297347cd-1948-4d37-9566-0d01fd66c713",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1631f036-a04e-4e43-b8e4-bb235e392e72",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "42fe26d2-2d12-4c91-9888-7cdcef49000f",
        "cursor": {
          "ref": "0598d739-91a0-4c5e-a1e8-751e0c4997b1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d68899e-6a1a-400a-a597-bd60491cbc5f"
        },
        "item": {
          "id": "42fe26d2-2d12-4c91-9888-7cdcef49000f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "05bee777-a380-4b7a-bec7-75afcf3f3825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60706b8-c0e8-4edc-bd04-d2501d26e2ac",
        "cursor": {
          "ref": "50aa931b-4563-4096-a0fc-58108ee06be7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9c76bd14-452d-4f41-949d-fa9f8ac1f55a"
        },
        "item": {
          "id": "e60706b8-c0e8-4edc-bd04-d2501d26e2ac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e3981d9-b7f0-4374-ab94-bd85cf78ef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586af870-c8ef-4734-b985-7b36cf0fef9f",
        "cursor": {
          "ref": "bfd47cd9-eb1e-4b49-9c00-3e3cf69ba0e4",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1af7fb63-e9a2-49e7-a381-d6a4580c96a6"
        },
        "item": {
          "id": "586af870-c8ef-4734-b985-7b36cf0fef9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2b682309-ac06-40e7-acac-aac25f451920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb43143b-17da-4e51-ad21-6aeb7aaafbd0",
        "cursor": {
          "ref": "1294a86a-a7ef-496e-93b3-63cd2dabe5a1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "65f05de2-71ac-4254-b08d-2fcb455f67fa"
        },
        "item": {
          "id": "eb43143b-17da-4e51-ad21-6aeb7aaafbd0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37890f71-7b81-46b0-8dfa-2fc8e2616d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5268eb8b-0dc7-41cb-bb0a-790a8265f96a",
        "cursor": {
          "ref": "c00ee8ef-826a-4d88-941e-0467e6b75e90",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "91a2de4f-0d2b-4054-8d5d-072aef1b3961"
        },
        "item": {
          "id": "5268eb8b-0dc7-41cb-bb0a-790a8265f96a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3248ed71-4248-4267-826d-d6b896281ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a9328e-3be3-4183-b1de-9b146f13371d",
        "cursor": {
          "ref": "6053ec21-762e-4316-94e3-f9440265cd78",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1aa90653-b0a2-4640-b84c-5f41418e6a06"
        },
        "item": {
          "id": "d6a9328e-3be3-4183-b1de-9b146f13371d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c8373014-3045-43d1-a1df-8744d8eb656b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c2a2bb-7d19-4dfe-81e1-3b9a6ba6ad1a",
        "cursor": {
          "ref": "d9a52919-e94e-4cb7-b82f-414ce7d1c297",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0fcebead-ac9e-4e63-ba94-7b7b20214e03"
        },
        "item": {
          "id": "d0c2a2bb-7d19-4dfe-81e1-3b9a6ba6ad1a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "84171280-b27b-4e4a-99d6-bdf1f86d30a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335d3b5-e09d-4b83-81d1-9211ba3059eb",
        "cursor": {
          "ref": "b0f3d3f1-a8d6-492b-b7ae-0a5dfe3b4883",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "40beb395-5b8b-4bfc-ab16-3481b21e05df"
        },
        "item": {
          "id": "4335d3b5-e09d-4b83-81d1-9211ba3059eb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d59922c2-be3c-4513-aacd-f248f420d40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0c722c-fe27-48fb-a5ea-15131b34db40",
        "cursor": {
          "ref": "5598d26d-53af-40c0-86e3-51ccaa2f0ed4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3f8f4870-0415-42bf-be4c-fda8ff3888c3"
        },
        "item": {
          "id": "7e0c722c-fe27-48fb-a5ea-15131b34db40",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "23cc61d1-bca8-445c-8d70-a36067be3bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf63e2f-6daf-4b59-9a86-4956d38092c6",
        "cursor": {
          "ref": "8f19eddb-2444-49f7-9778-df98908f20cd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "da3b3d8b-6298-407e-9462-ac1500ac82af"
        },
        "item": {
          "id": "dbf63e2f-6daf-4b59-9a86-4956d38092c6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f35ad191-fd2f-4071-bb08-7c101464dad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890a9fea-48eb-4b54-8213-959302cdb2cc",
        "cursor": {
          "ref": "5ffbd848-3dd1-46f4-adb9-3d0fb60c1636",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dac2b13a-d1b9-4784-80e9-8315cc471091"
        },
        "item": {
          "id": "890a9fea-48eb-4b54-8213-959302cdb2cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d8b847a-a231-460d-9a4a-045ce3ffdbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b595853-cbcd-4fb0-86cb-a52af25d8687",
        "cursor": {
          "ref": "eb9c5204-75db-4867-9c83-1f33e3293fe1",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d8e14a61-59a1-4d9a-ae82-4c05da4d3d80"
        },
        "item": {
          "id": "7b595853-cbcd-4fb0-86cb-a52af25d8687",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "be7bbdf8-7165-4efb-9eb9-13821bb2ac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeb54d8-43a1-4b97-b412-057da602403c",
        "cursor": {
          "ref": "41daff0f-c152-4a1d-85e9-7adf1fdcc391",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c02d94a0-e236-4b41-ba4c-f2386eeeb10c"
        },
        "item": {
          "id": "2aeb54d8-43a1-4b97-b412-057da602403c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c7920fa-0fde-43b3-8adc-9b02048154b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a334b25a-29f9-4ec0-bac1-c5b15f0ae390",
        "cursor": {
          "ref": "3593df6a-8d55-47bb-9759-ea501770bee6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7514d4c9-dac3-4973-a80c-a520b4c975b7"
        },
        "item": {
          "id": "a334b25a-29f9-4ec0-bac1-c5b15f0ae390",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "92ddab56-0624-4720-95b5-1d5ed9a3f51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3740c328-7860-4294-97f7-01cea5c04b6c",
        "cursor": {
          "ref": "2fb04010-5fc2-4d88-8526-f4b76c07c53a",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0b248974-f5ee-4848-b9c2-b5d8c69ec781"
        },
        "item": {
          "id": "3740c328-7860-4294-97f7-01cea5c04b6c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3a697317-e40c-4b8f-ab4c-22e08c03a88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13274942-2681-4f85-87d4-7b99d1eebc32",
        "cursor": {
          "ref": "95ebc6f3-a9e5-4712-8899-44f4f9ad23f2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cef92217-51c9-49fe-b603-47864bd424e9"
        },
        "item": {
          "id": "13274942-2681-4f85-87d4-7b99d1eebc32",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "525ab36e-48fd-4b95-bc1c-71e76c9e94ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11463e4a-0f41-4571-b189-ba8d38472b3c",
        "cursor": {
          "ref": "dbcad17b-17c1-4075-9254-ffd85186f215",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ef38d81-1b51-46b6-8f6a-0297c7fab007"
        },
        "item": {
          "id": "11463e4a-0f41-4571-b189-ba8d38472b3c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c595a353-00df-4806-9a64-c187a279bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb2215c-639e-49f1-bcd6-933b5d5a0897",
        "cursor": {
          "ref": "9b9fdbd6-4a7e-49e5-b52a-2e91a9bbf52c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0ca2fb41-adb1-4b4d-81a8-b2c52ef1809e"
        },
        "item": {
          "id": "fbb2215c-639e-49f1-bcd6-933b5d5a0897",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2c637753-a115-4119-91f0-8afaa0dcc250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e16cf4-9bb0-453e-8d4d-4fcbd8bc0c0f",
        "cursor": {
          "ref": "dfa6e03e-2a8f-4d03-b9bd-c820cdfab25e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "42590b56-4d24-4f99-9890-d8f2dab72622"
        },
        "item": {
          "id": "e9e16cf4-9bb0-453e-8d4d-4fcbd8bc0c0f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0efe21bd-d894-4d63-b403-9a76a535afbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a321e0-b9df-47c2-a234-008e7f58005d",
        "cursor": {
          "ref": "1efca7f2-aadd-4ab3-8516-cf19644a28e7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "09fa690c-67b1-44ca-b1ce-39fe96d07889"
        },
        "item": {
          "id": "c5a321e0-b9df-47c2-a234-008e7f58005d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a6e8c9b6-fc96-4f04-918f-8824c42a820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af90a1c9-a818-4259-b873-00a1e15bc2bb",
        "cursor": {
          "ref": "a8d70b98-8443-4095-bed8-50e21195a359",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "74c34454-de2c-407a-a3f5-0239546bc2df"
        },
        "item": {
          "id": "af90a1c9-a818-4259-b873-00a1e15bc2bb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "064381e4-6db6-42b8-9e9a-e3c0b23294cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658db0fc-ec33-4e15-afca-21f80f8ff4c6",
        "cursor": {
          "ref": "a4b09282-80d7-4f31-b28d-b2b13e9395d1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c1a14860-a975-4dff-bed5-6cdd148835f7"
        },
        "item": {
          "id": "658db0fc-ec33-4e15-afca-21f80f8ff4c6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "40319922-b7e3-4027-b93b-b5e433949fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b248df39-4537-475f-8033-8c0693375e26",
        "cursor": {
          "ref": "d3e97d70-ec8a-4e70-b9d7-cd8ab9f337a5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "68ed37de-b5d0-4e0a-a366-51bc02af9b5d"
        },
        "item": {
          "id": "b248df39-4537-475f-8033-8c0693375e26",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ac145917-1855-48a6-b517-2ac93af57be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d424ed-b1da-433f-a23f-86af6222de4b",
        "cursor": {
          "ref": "f7e4c9f7-f253-4d77-9169-051881a205b6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a3415bd8-2ef5-467e-80ba-a41f263298e5"
        },
        "item": {
          "id": "95d424ed-b1da-433f-a23f-86af6222de4b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bbe883ed-7beb-40a0-bd90-f320a0825793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11416acb-273d-44ae-b219-2ee2e401675e",
        "cursor": {
          "ref": "5df23753-78c3-4d7b-91a3-12f2c207d861",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "04377073-ecd1-41c1-9bcf-e0de7d986d17"
        },
        "item": {
          "id": "11416acb-273d-44ae-b219-2ee2e401675e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2fef17ef-1258-4628-80da-d004ade69108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ae1690-b5a7-4ad0-979e-fdd443aa7b8e",
        "cursor": {
          "ref": "c69d2e39-b24f-4318-bb08-6bd561100dfd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1fc25a6b-d109-40aa-a9fe-a7e00ee058e5"
        },
        "item": {
          "id": "60ae1690-b5a7-4ad0-979e-fdd443aa7b8e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "814a7d8b-7afa-4ad2-8640-1cc8f9a449cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88fc44b-6b82-461a-9c52-d971a0b380c5",
        "cursor": {
          "ref": "bd345866-fb00-45cb-9602-ad77c1428e92",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cbca882d-cc07-4dd3-ba48-dbdcdde895eb"
        },
        "item": {
          "id": "b88fc44b-6b82-461a-9c52-d971a0b380c5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8f3cdbd7-cfda-410f-90ae-c91f98ea7e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992cf108-be99-4e7c-b0d8-40883f4b4fd7",
        "cursor": {
          "ref": "c3f172c0-cdbf-4c5b-b423-6f076f522c49",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b24ecc08-8f16-4fe4-b571-6b19a72a8d25"
        },
        "item": {
          "id": "992cf108-be99-4e7c-b0d8-40883f4b4fd7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3f0d901b-9aa1-424b-971e-7b5f7305e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29c4202-a806-4bfa-850e-43f1b144e691",
        "cursor": {
          "ref": "03aad2de-57e2-4fe5-bbe5-cc564687697d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2eae8a91-a6f9-463b-9e28-476a7f5dc148"
        },
        "item": {
          "id": "a29c4202-a806-4bfa-850e-43f1b144e691",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "16747145-7bf2-40e1-9ca3-da878d78a26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ff9c79-749b-43a6-a092-9bb149e65697",
        "cursor": {
          "ref": "06d4d439-e6ca-4164-96a9-df6ca9f7fbbb",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c8a5fd97-b2ee-4b5f-b36b-fe01d21ec8b5"
        },
        "item": {
          "id": "f3ff9c79-749b-43a6-a092-9bb149e65697",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c974abb-1406-42e4-93bd-9cab5675371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e823fe-59c4-4f40-9c61-38abbbc2b51b",
        "cursor": {
          "ref": "c5feae4f-de1d-4ac9-9ca6-95d1720dfd67",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2fd6294e-01a5-4778-b4e5-f3d8e0bdbafd"
        },
        "item": {
          "id": "21e823fe-59c4-4f40-9c61-38abbbc2b51b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e96a772-fd6e-4aac-8af0-8699172b88c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a11dab-8767-4b54-a735-10bc6e89271d",
        "cursor": {
          "ref": "e8f1cfc9-e9e9-45cb-ba9a-65515068bf65",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f1292118-c8e9-45d4-a207-1f6b3086ccc7"
        },
        "item": {
          "id": "80a11dab-8767-4b54-a735-10bc6e89271d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d32e482e-9412-4476-ad77-d9c7aee10e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9aab07-cd20-40c2-b23e-34b525942da0",
        "cursor": {
          "ref": "c66e30fe-4758-4b0b-af68-cde37f3ee881",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "02d31b8e-7e93-4a92-bf15-f75ad41f80d7"
        },
        "item": {
          "id": "6f9aab07-cd20-40c2-b23e-34b525942da0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ef8a8f33-99ac-4968-b9aa-1f4c3a50b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29f976b-ab20-405d-841c-9e45e0b6f1c0",
        "cursor": {
          "ref": "4a9ee62a-afaa-4990-8374-699bd4dd61fe",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b81c96bf-32a4-4331-a9e6-d2fe492b6721"
        },
        "item": {
          "id": "b29f976b-ab20-405d-841c-9e45e0b6f1c0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a9ab5694-3d34-4418-8d3b-8a74f244a0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad57040-4066-475f-a34e-296254e2583e",
        "cursor": {
          "ref": "eefab171-8258-4830-96ef-608facd0f5e8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2ff3b2f9-aa49-402f-87ec-fec7c886480f"
        },
        "item": {
          "id": "6ad57040-4066-475f-a34e-296254e2583e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7742ab9c-1249-4c77-83b2-cf62a5b71c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e45b481-ea08-4624-8d17-5fd743f906af",
        "cursor": {
          "ref": "92c7ec03-d181-4cf5-bc36-79164c4754df",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "29c87dcb-5dc2-469c-ace9-b96598b117fa"
        },
        "item": {
          "id": "6e45b481-ea08-4624-8d17-5fd743f906af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a32e9e74-7c82-491f-b57f-e88fc95c3352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3418e84-3e54-4909-ad4d-ea01a570ba98",
        "cursor": {
          "ref": "ac1e54a9-5eef-44bf-aeff-af5e066bfe7a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "108ee91d-c6e0-4cb4-983d-e087a27226e7"
        },
        "item": {
          "id": "e3418e84-3e54-4909-ad4d-ea01a570ba98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "977d4fe6-88c0-40de-b881-c03dfdfabd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d853dc-bbab-4a2d-a80b-c86bad71639b",
        "cursor": {
          "ref": "34f476fd-810b-4c14-ac20-297a512e8144",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e26061c1-bf06-42ee-9e20-94645952285b"
        },
        "item": {
          "id": "62d853dc-bbab-4a2d-a80b-c86bad71639b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9611133e-abec-4eae-a3c2-7d3dc8c7020a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df2b13b-eb58-4e0e-bf32-f630af34b891",
        "cursor": {
          "ref": "6119e366-fdbc-4707-9230-28d6463051cb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e35194f9-d797-4eeb-9e05-a1d6fae8c5d2"
        },
        "item": {
          "id": "0df2b13b-eb58-4e0e-bf32-f630af34b891",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a0354c5c-63b7-4368-b2bb-ed125a4b575b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eab99f-cf28-444a-81fd-6e4747f852d9",
        "cursor": {
          "ref": "33029f0c-60a4-43be-9bd6-1721bbeebabd",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0d649a58-cd2c-4963-a467-dcf73e6a2966"
        },
        "item": {
          "id": "64eab99f-cf28-444a-81fd-6e4747f852d9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0d9794c2-7318-4f4f-8d98-9b4ddff7194f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993da319-4e89-4b4a-ad63-bed129e85dbe",
        "cursor": {
          "ref": "9fe1da66-7d87-42b1-932f-39ba7dcbb5c6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f8e61aac-4236-4c7b-9269-8f9929f17899"
        },
        "item": {
          "id": "993da319-4e89-4b4a-ad63-bed129e85dbe",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2e6b7b87-b819-4168-b040-f2cd77db8f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31480c7-0012-4a51-a823-183e819a22cd",
        "cursor": {
          "ref": "e8b3847f-6839-4f6a-b1a3-618f062e8932",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "92b0e861-6bd0-406e-b906-5703f603402e"
        },
        "item": {
          "id": "b31480c7-0012-4a51-a823-183e819a22cd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ae92fb8a-fbdb-4756-a48e-b037f712b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fb9293-6446-43ba-a61f-09d511aa3695",
        "cursor": {
          "ref": "13e241a1-69da-4529-9aa6-9710d081a3e6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eff7a0ed-74c5-4849-a1a8-cf7240de6ffd"
        },
        "item": {
          "id": "c3fb9293-6446-43ba-a61f-09d511aa3695",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f6536b8-3b48-4b55-be7d-5d02a8c2b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1eecc4-794c-43b2-a365-ea55f9efccb8",
        "cursor": {
          "ref": "010ccd8a-e01b-4e29-9684-ec02cf097655",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4b1d534b-9a49-4869-ae45-6d7ab84c625e"
        },
        "item": {
          "id": "1d1eecc4-794c-43b2-a365-ea55f9efccb8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cb4ce819-ec30-408b-ad08-66760ad4b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a212ff1-c9d5-4ee2-b1fa-f91877ebb7ac",
        "cursor": {
          "ref": "f99628e1-496b-4255-a174-c5c5a4404f61",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e334be3b-a163-4da6-a88f-fb0830288e95"
        },
        "item": {
          "id": "1a212ff1-c9d5-4ee2-b1fa-f91877ebb7ac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7cd1b15b-1a17-49ac-b789-35f78ac86847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d1a6f9-0cfa-4a4c-b9cc-3fad42f115c4",
        "cursor": {
          "ref": "795db2e6-afce-4f7c-81bb-cfd205a5bcaf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5cbd34d8-6041-4f98-9462-d5177b496c81"
        },
        "item": {
          "id": "38d1a6f9-0cfa-4a4c-b9cc-3fad42f115c4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d9718962-1c14-4c50-8aeb-0cbc1dac25f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73abd273-a94f-4f88-81ee-9c4b4a46446a",
        "cursor": {
          "ref": "e46f7763-69e9-4bf5-b675-41415b68d8a6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3070fdf4-a943-4a8b-aa31-14b482c520c1"
        },
        "item": {
          "id": "73abd273-a94f-4f88-81ee-9c4b4a46446a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3776d02a-35e3-42e9-b85b-5f0098c6ffb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b0baa8-21c7-499c-928f-2ccf36fd3a0e",
        "cursor": {
          "ref": "b2c02dc4-dedd-4248-b1d2-7384d110e347",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c697f8c0-438c-41b9-87cc-a2a3041b6402"
        },
        "item": {
          "id": "d0b0baa8-21c7-499c-928f-2ccf36fd3a0e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "456d7d43-66b1-481d-a5e6-11b1b64eb289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d13082e-4a40-494f-8c87-dd64c743fa1c",
        "cursor": {
          "ref": "ed7059bf-4d2f-4974-b3ae-a3a6c2ab95ee",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b59804c6-a63c-4515-9c5e-b5a8e7aaf11e"
        },
        "item": {
          "id": "8d13082e-4a40-494f-8c87-dd64c743fa1c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "69e0a799-27a0-414b-81a1-c9dbc98ba4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b9ea06-876e-4727-9985-caa2c82da476",
        "cursor": {
          "ref": "533d8c74-ee2c-4591-b099-018602f43e64",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0d35a2e4-e40e-4e93-ac23-66c78cebcbdf"
        },
        "item": {
          "id": "48b9ea06-876e-4727-9985-caa2c82da476",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "818895ce-17ff-4196-84a6-dcedb5aeca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed85c687-36cc-4e6b-8b75-a26ccac1b779",
        "cursor": {
          "ref": "01f30437-2083-4a80-baf5-25fd5bca8926",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc26dfc0-3cda-4657-8fff-14e1ea7f0245"
        },
        "item": {
          "id": "ed85c687-36cc-4e6b-8b75-a26ccac1b779",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9fd63627-19bc-4a64-9584-e57e013d9d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea27ba5-7713-4bd1-82da-9b1e499bb6cf",
        "cursor": {
          "ref": "e6b114e4-0507-4c8c-820b-9d9168ac5345",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "569e3b4a-c5fa-4e26-ab4f-69a83f72910d"
        },
        "item": {
          "id": "fea27ba5-7713-4bd1-82da-9b1e499bb6cf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "893b66ea-e3bb-4fe9-b332-05828fd5ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f457ad8f-ff21-4835-b0af-6d23aac97641",
        "cursor": {
          "ref": "a15b776e-9669-4632-8c65-8ecaa6b84143",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "598bda31-cade-400c-98dd-f4a010647e26"
        },
        "item": {
          "id": "f457ad8f-ff21-4835-b0af-6d23aac97641",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6c78aea6-9372-4e5f-8288-fc4c6b4015a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64dfa6ff-dd90-4cd0-9df9-60f59c07bb29",
        "cursor": {
          "ref": "ddbc7819-a351-42a9-b028-eaa299f145bf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7ff17f8b-d535-4c5c-b86e-fd8e8fbc4f73"
        },
        "item": {
          "id": "64dfa6ff-dd90-4cd0-9df9-60f59c07bb29",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "22043189-e333-42fa-8252-66e0d97f695d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4058cb9-e45e-4d26-b2a6-966b4fdd7768",
        "cursor": {
          "ref": "bd8ef5f4-eac2-43ae-a128-20ec5ce93b9b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a10429f6-85ee-44dd-82cc-71ed649c0e1b"
        },
        "item": {
          "id": "c4058cb9-e45e-4d26-b2a6-966b4fdd7768",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e98eb296-02de-4d7b-bc6c-5bcb5abe3ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c46bd-96a3-4e1c-98c3-4a4ec3c8190e",
        "cursor": {
          "ref": "703306a7-aa1e-4eb6-99d2-6b1360178a33",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dcad7072-3a40-47f8-a71b-6633872d9d02"
        },
        "item": {
          "id": "869c46bd-96a3-4e1c-98c3-4a4ec3c8190e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bd1c3074-8d4b-4ec6-bbd6-e3b7ac4278c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da044113-f905-4302-953c-8abc2a10dc6a",
        "cursor": {
          "ref": "69d73c04-964a-4a15-bdf5-555f858b3aa0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "533e887c-cab5-49cf-aef4-17108a732e78"
        },
        "item": {
          "id": "da044113-f905-4302-953c-8abc2a10dc6a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2fa1defb-8508-4ad3-bba5-8e45413e4aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f023059d-5a6b-4966-9001-695b06b09039",
        "cursor": {
          "ref": "6f140c48-5f29-48ad-9989-09df28f5dced",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6e3ec41f-3f06-4742-a2f9-746f9bf142a7"
        },
        "item": {
          "id": "f023059d-5a6b-4966-9001-695b06b09039",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8a4afca3-7741-4d9a-b287-69b706f342f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8040660-2479-4bb6-8326-00792880ad1c",
        "cursor": {
          "ref": "0f2a3dbc-2fcc-4fcf-9354-d40ac6346856",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2e0f8e3-178e-4303-9aee-f7863c4cab60"
        },
        "item": {
          "id": "e8040660-2479-4bb6-8326-00792880ad1c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5670e9f5-9b79-4942-aa47-0b3fd437b9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ffeb17-bb75-4c89-ae01-94499cfcb1c4",
        "cursor": {
          "ref": "e7c1947a-35d3-462e-8ff7-68ce5d8ec461",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c5af8ac-e1dd-4512-ad6c-94ddd74a2d53"
        },
        "item": {
          "id": "b4ffeb17-bb75-4c89-ae01-94499cfcb1c4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0d977752-c6df-4507-a2ca-fde2aa399939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507e985e-4eb6-4689-9b5d-87be44ca54c4",
        "cursor": {
          "ref": "540e2e09-9296-4c0b-b194-80eb094c0574",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ed0f920b-b559-427b-8951-d8fe1ffbb5a4"
        },
        "item": {
          "id": "507e985e-4eb6-4689-9b5d-87be44ca54c4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f582b64e-c786-4c2b-a187-9807cc870863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dbe3fa-b158-4cba-8267-51553c8324c3",
        "cursor": {
          "ref": "9757aa6d-bf4e-4095-9343-a985f4d3540c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0a78cff5-a4be-4917-982e-b8c825378eef"
        },
        "item": {
          "id": "16dbe3fa-b158-4cba-8267-51553c8324c3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "874f77ed-2019-4006-997b-f5addd3d19d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31e26ea-e778-4f51-af0e-48a325b7612a",
        "cursor": {
          "ref": "6b171ae7-2be3-4d67-b68e-8a3a2ea519c5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7b4eaf57-87cd-46ee-a99f-cc6650f899db"
        },
        "item": {
          "id": "d31e26ea-e778-4f51-af0e-48a325b7612a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cf6e5733-7494-4e25-a8f6-6ae51fbc8a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e02d7d1-1be1-4446-90f6-114d593a5cde",
        "cursor": {
          "ref": "4f83073b-0296-447c-a222-091cbc909a58",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cbdd9bcf-198c-4a21-9091-7974384d0712"
        },
        "item": {
          "id": "1e02d7d1-1be1-4446-90f6-114d593a5cde",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b9704b4-8924-46c4-b66b-59351b0febd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff39cfa-08bf-42bc-895a-57f8832d6c08",
        "cursor": {
          "ref": "aaef76f1-1653-4456-b516-ccb74255d620",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c66f241b-9850-4c72-b9d0-cd21db4c2f6b"
        },
        "item": {
          "id": "5ff39cfa-08bf-42bc-895a-57f8832d6c08",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "76f31434-4649-4a35-90b8-96323b67d06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8338ab-3fcd-40f5-a299-098e87e3e9bc",
        "cursor": {
          "ref": "a6f4224b-f212-404e-a2fe-20b583928f21",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c918393b-564b-490d-97da-3b9599aa9d06"
        },
        "item": {
          "id": "ac8338ab-3fcd-40f5-a299-098e87e3e9bc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8c212936-8385-4cc4-b206-d87395e7360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c91cb1-1258-41ca-81b0-cae7e9e2bb03",
        "cursor": {
          "ref": "d7d83ba0-1176-4865-9c64-2397ff1bca0e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f2b3e67c-5a53-4c62-b95e-60ceefaae67d"
        },
        "item": {
          "id": "14c91cb1-1258-41ca-81b0-cae7e9e2bb03",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "30bda2f8-94a8-4fd2-bae4-29d37b10eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0832fc1-da5c-46db-95f9-45f4039622b1",
        "cursor": {
          "ref": "4488d2d9-2ac9-4878-9e72-c45ea8a7cd06",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ea5d96cb-b3cd-41b2-b196-a1193ae28f73"
        },
        "item": {
          "id": "d0832fc1-da5c-46db-95f9-45f4039622b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e115f09d-c2e5-4edd-93a8-7c306044c849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ff8200-4425-49cd-bf9c-fc3d4ac93e96",
        "cursor": {
          "ref": "14e580c0-2763-479c-89ef-807914a9fd27",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eeb39db9-ec03-4c39-b845-032b68427fbf"
        },
        "item": {
          "id": "83ff8200-4425-49cd-bf9c-fc3d4ac93e96",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "65baf811-8dfb-4e31-8847-6b5b209bb4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae878e1-2923-4d58-b077-fa830d76ab12",
        "cursor": {
          "ref": "cda0c33d-047b-4941-a586-94194972e86f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9fdbd87c-1566-47fd-a10e-e6fe0f394fc9"
        },
        "item": {
          "id": "bae878e1-2923-4d58-b077-fa830d76ab12",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f93d276-ca97-4ccc-a39e-4592c08b42cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaefa37-c42c-47d6-bc03-e413d6e5313f",
        "cursor": {
          "ref": "5769d0da-d7aa-4c8a-a9a0-8439ff7684e5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6bd158be-d311-4822-8eac-03be5f396d17"
        },
        "item": {
          "id": "aeaefa37-c42c-47d6-bc03-e413d6e5313f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f052fa94-418f-4757-8d74-8b5cfcc5db02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f693ef08-9801-4bcd-be8e-7b060288469c",
        "cursor": {
          "ref": "4a907910-31f1-4475-8799-3525f735b89f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6d6a5b7d-be21-4637-a8b4-52174d210008"
        },
        "item": {
          "id": "f693ef08-9801-4bcd-be8e-7b060288469c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "55763658-7c2a-4c5d-b83b-bca18ede9402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0051e5c6-8dba-4106-ae09-bec1815ef23b",
        "cursor": {
          "ref": "5e01c154-4b90-412b-b036-fbc33d9ca2d3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f39bb621-c8b1-4ca3-9dee-b8e4cc466d8e"
        },
        "item": {
          "id": "0051e5c6-8dba-4106-ae09-bec1815ef23b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "89b8a378-5383-4107-832a-4f68e1023a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707e37d-2f24-4be3-b1b8-3c776f0c5e57",
        "cursor": {
          "ref": "b27aca14-a7d5-4a7f-9a0f-b1274eda76aa",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "470f9c64-3f4e-4a7e-af54-7de40b8085df"
        },
        "item": {
          "id": "2707e37d-2f24-4be3-b1b8-3c776f0c5e57",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7aa15833-c678-497b-b65b-5ffd4543b4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1725b8a8-9633-431a-a2b7-078b321bbd4a",
        "cursor": {
          "ref": "27534d02-d56f-4991-bd19-3165b5a108b4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "df864107-5374-477e-9f4f-bf0563b2ebc3"
        },
        "item": {
          "id": "1725b8a8-9633-431a-a2b7-078b321bbd4a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a62e9bf6-2612-482b-a7d4-d36d4b1c0069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61edd755-b01d-49d1-8f59-140f57d284ec",
        "cursor": {
          "ref": "8f34dc25-96c8-46be-b9be-deb684f04c64",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "944aa02a-62e4-484c-95f5-acca6fa73fef"
        },
        "item": {
          "id": "61edd755-b01d-49d1-8f59-140f57d284ec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "50346d29-13b8-4957-bb70-35922edca0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3797f7f-49a8-4ff7-a91d-85ea78b20fc6",
        "cursor": {
          "ref": "dd1936e4-cc42-4e3a-b1d6-97607dd65a71",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "18ac1f91-a679-4185-8b78-286f3d0c17af"
        },
        "item": {
          "id": "c3797f7f-49a8-4ff7-a91d-85ea78b20fc6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "650c970e-ae6e-4d48-8455-613bf344311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10d18e5-9cce-4a32-83cc-ae29176b5999",
        "cursor": {
          "ref": "e72ee9b2-c0ee-4f3d-8767-3b80c1ccb090",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "53ff20cc-d8b9-45e4-b62b-c73fba213fec"
        },
        "item": {
          "id": "f10d18e5-9cce-4a32-83cc-ae29176b5999",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b9ebd8ad-8306-4ec7-a19c-6523590f0746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d48a3a-37eb-4fd1-b67c-38493e38877c",
        "cursor": {
          "ref": "c81a9ad1-e847-4090-acdb-7d4b0972868c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c6128403-6e76-4460-b63f-5efd83fff200"
        },
        "item": {
          "id": "e4d48a3a-37eb-4fd1-b67c-38493e38877c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7dfe3e92-6e09-4d8c-aabf-0ede8eafb3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbaa97c-4474-424a-9c93-6328d4e7aa93",
        "cursor": {
          "ref": "bb5a25ec-dbd4-4b1b-9295-468c0c6b13a3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "68ca3bd6-1062-4851-8902-c98685554868"
        },
        "item": {
          "id": "8cbaa97c-4474-424a-9c93-6328d4e7aa93",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3d0126e8-c121-4fd1-8abc-0c34f163647a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1a7205-3ed1-4634-820c-22468bd15cc7",
        "cursor": {
          "ref": "6f593b97-8952-4a73-8aba-3e1eb8c24543",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3ec2b35a-ef07-41b9-9586-19541d4ed75d"
        },
        "item": {
          "id": "fa1a7205-3ed1-4634-820c-22468bd15cc7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "26940f71-2578-43ad-a381-460cd28b0887",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f24e6-c111-4bc7-9fd0-c158adaa852e",
        "cursor": {
          "ref": "b3432e03-4081-4764-b0f9-fd286da63837",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9b1b864-f2ee-40e8-965c-bfe0209708c4"
        },
        "item": {
          "id": "319f24e6-c111-4bc7-9fd0-c158adaa852e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9a15f0cf-839c-4ad5-8a80-afa29194a207",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89276cf-d21b-464f-ad99-44fde4fb4830",
        "cursor": {
          "ref": "d2f673f7-a6f0-4fde-8fd3-dae293573593",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f64c6028-f8d3-4cad-83c2-9a0f738a6f07"
        },
        "item": {
          "id": "d89276cf-d21b-464f-ad99-44fde4fb4830",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ba57374a-2132-4051-b4f0-08649fdb6a53",
          "status": "OK",
          "code": 200,
          "responseTime": 2353,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7f9588-f14e-4a42-a868-b51cbcc20590",
        "cursor": {
          "ref": "3b9c8bea-11b8-4300-b7aa-8fdff4a09b24",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bcb1a62d-cbd3-4cf7-9ef6-36e405bf0e3e"
        },
        "item": {
          "id": "fd7f9588-f14e-4a42-a868-b51cbcc20590",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a975cb67-b794-4f8d-a525-749fbaed8fa8",
          "status": "OK",
          "code": 200,
          "responseTime": 2688,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1994595-f722-4386-916e-2ed5d9489137",
        "cursor": {
          "ref": "675c16ba-8bc0-44e5-9247-8531e5fe7de8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "58dc575f-c05b-4980-929f-712d1b310359"
        },
        "item": {
          "id": "d1994595-f722-4386-916e-2ed5d9489137",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "142ea26a-f8f6-4379-88eb-fd4ec3a24878",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1994595-f722-4386-916e-2ed5d9489137",
        "cursor": {
          "ref": "675c16ba-8bc0-44e5-9247-8531e5fe7de8",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "58dc575f-c05b-4980-929f-712d1b310359"
        },
        "item": {
          "id": "d1994595-f722-4386-916e-2ed5d9489137",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "142ea26a-f8f6-4379-88eb-fd4ec3a24878",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fecd8fd-4df8-4af6-819a-6d7e77c80a91",
        "cursor": {
          "ref": "22cf5a90-aad6-4ba6-aefc-4ea9ab58442e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "02ff313c-f15d-40ac-8e90-dc4c6096b55b"
        },
        "item": {
          "id": "9fecd8fd-4df8-4af6-819a-6d7e77c80a91",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7680a843-dc5c-42c9-b248-57e589c6102b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4045ec22-1fbd-4404-96d9-da31f5944000",
        "cursor": {
          "ref": "a844df2c-7423-4985-9387-d8d2e1687856",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "23e19e40-35c6-41a3-8577-e1753b97f668"
        },
        "item": {
          "id": "4045ec22-1fbd-4404-96d9-da31f5944000",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "99c2cb66-b747-489a-8eeb-2b4aafaa748e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}