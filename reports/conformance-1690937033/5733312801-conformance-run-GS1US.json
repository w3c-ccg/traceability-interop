{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e3ef9713-ff14-45fd-aa35-f38b964527fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6e16761e-b432-4b17-8ca7-e36f54d72fdd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dffc2619-0393-487f-86e5-6a8c0fe0fa24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd900cd7-9db5-4b26-b9e7-1e5096ee3615"
                }
              }
            ]
          },
          {
            "id": "32e7e462-1eef-4a44-876e-6248d6885c47",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "134cb995-8685-4431-8b9f-30782d9f76dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44fa4bb7-5460-4890-b33d-adc903ca6ede"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df5dce79-5651-44ce-8674-1234cf52eeb3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3fb9405d-2666-422d-a2b7-71cac4b81915",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f73e0d8e-73e0-4be5-8a90-7194cce16a04",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e754f66-fa13-4299-9c76-130958921bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "838d61dc-82ed-4d5d-a50c-896a686cdc13"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31a3aab7-4780-4f05-b5a3-b01a2786211d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4f97d3f-4fe2-4972-b49f-0baf273b622e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf43a5e9-3e6d-4e76-a97d-ae11ec821e04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39237aa3-41e9-4025-844b-ed78d4feb260"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "001ec2c4-57eb-475e-8574-a1ffa9e5c9ae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cfb21bd9-0bd7-4d8c-8123-37ff0db0e39a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "068b5f36-2ea7-4971-ac12-c6d3cd7df2d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1efcffa-d349-4095-b044-7cd03d3eb193"
            }
          }
        ]
      },
      {
        "id": "62da4875-7102-483f-b07b-f1a7af91b062",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c202994f-ba4a-42d2-9738-b978bb8bffb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61e17942-665a-4413-8bb3-fa13c0b74e78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85494328-cbf2-4c02-864d-378877f269e4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adf0666-bae9-46c4-a2f6-637026419544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84f5554d-9d32-478d-aa21-c54586143980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c402d0-89b2-4a92-9345-4464f6a2eeec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25050d7-a900-48e5-9ca5-051ab2fac9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34dbcdc3-e864-47eb-9999-ca92f3b29847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bda00bd-68ee-4fcc-95e2-a94a2524c06d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38494cd-123e-4476-880f-b6292ada9d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd34df05-29cc-42fe-862a-d9503074bc2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbea7d2f-e014-4acf-b06e-40c86306cf52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0a82562-bada-47c0-a633-bd394802fdad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab94600-1630-4260-ab02-163199fe9e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71a5de5d-4745-4bde-9f9f-9581f8c5ca64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ae19ec-6705-4020-9b38-4669fc679b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d93dcb-7561-46f1-89a4-7a75f6976fa2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0d60c2f2-53ac-4146-8bd1-ba7270bc3373",
            "name": "Positive Testing",
            "item": [
              {
                "id": "969318e4-c0f9-400f-82d4-7d7dc3eeb205",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a4fdf1f-8214-40ab-ba7b-d9163b817a5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d8aca9ea-0336-4df7-b894-d23da6b39398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4b30d93-9843-4bc2-9a84-0547802d9d89",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ddf247a2-aaaa-412a-9e48-172715bc46b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "004bffc0-a38f-4c65-84f8-1d6f119ea7c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6caee478-2f54-4e5a-812b-2f1f614cac50"
            }
          }
        ]
      },
      {
        "id": "ae4419b6-7af5-49a1-96ff-603dcb2be73c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7e284699-f806-4166-a037-1f99d8c324a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5c03167-c537-43d3-82b0-1127df55cc18",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4ddd1134-8602-4a01-941d-58e2f62d8aa1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a69fed4-2a3c-410d-a2dc-cea6743a4698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a89804a-76ce-4380-a78c-dce954c464b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65e4ae9-f91f-4195-b047-14d98e4c2afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78096d98-b177-4d76-9f61-cd970c197c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b173119-caaf-4c6e-b95c-67917e8d23e4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704f5701-32e9-47f8-91e3-1027660ff232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7421474c-c323-4761-860d-e8e9fa8d6815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4218acc0-16f3-4bf0-9510-81cbb705c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5db8b16d-80c9-4fb1-b89f-41468976d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2612e42c-5955-498e-aa23-8d5728867dd5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5467a2-0ad2-40c0-aab7-523ba2bbed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250c7df9-690b-4b92-a44a-1cdb29613922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b5d268-18ea-4bce-bc60-f8b5a2caf57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64c95a12-3eba-4965-922d-72b1f4e9d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f285fd70-49e8-4f21-9939-a6b0b8deabc9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3716322-f408-4c15-8767-828dc7d3c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035946be-c835-4ea7-8aaa-268061009fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c15e54d-8e61-4ac8-9bba-66dc798f92fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5e2edc0-9cac-41e3-97ff-5df07e6fa8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd34e68-aff3-4a67-b699-170cd7d9eec1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6715ab89-b60d-4c57-9cad-fb422e48b87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59680f6d-6d5f-49b8-8028-6ee81c6c59e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6678f104-f0de-4644-aa29-83534d0aae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6d47021-f2bb-4ba4-ab1f-34c8c1ed2424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ec3f76-1918-4a6d-a723-9cae354bbd38",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc58182c-f83f-4968-99e6-0bbf0a991341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787664f5-4b02-4642-aba5-33a13a3bfca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e1cf57-5c00-4819-a1e1-7b9dd1b35a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "631e11a9-54ac-439f-9cfd-b17f7a8affe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b4e98f-7b2e-434d-8abc-64a25b05b8ac",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ff689b-da9a-4832-90eb-bab4f9cc079b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef068c7-39b3-44b5-85d6-3000da285d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f824abf-6404-4ad4-8b13-c95b7c8b6fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c85ca91-10f5-4726-90d7-940ff34be1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34864544-b44d-4507-b8f7-5bdd9af3cd70",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a01821-4ce1-4f03-8186-216d0b04525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8b0aa2-a3ec-4278-9969-a26dceae75c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8693e-35c9-48cf-aac3-c77d759db759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66335ee2-e4b9-4d9e-965b-b069dc71e32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f77b816-15e6-4feb-b1c1-5ebfb0fb4381",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0147e6c-030c-40e2-98a7-a75751a91236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8184a66a-c8b8-4ba9-8985-97a474431fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c52299-4079-48dd-ace4-3bfe4dfee86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c109e4-bcf8-4568-8d6e-5b7825b9eb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dffadd-558e-4f83-a38d-c7622dc84f65",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bf1ab0-1242-4147-9f79-0be6648c9c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031f5eff-38ac-4fdf-972d-1696f23bdadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce8effd-bc06-4b8f-a52e-9a5046d296ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "301abe12-8849-4adb-adc9-cfe2ff22d54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0eb5ad-1c88-4a6f-9ea7-5d95d6b7dcd5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39439573-8ba7-47c6-a87c-50b3d8a308e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e4b391-7da6-4cc9-b687-7476e675b70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b91bb29-f8db-41ad-bdc5-4bc528032dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c5fe32-8fbd-4abd-8fa5-4c237f759549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da31a0d-6b60-4b58-bcc1-9fff473da096",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f99ddc-f464-4246-8e48-91a9339206aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ed0c29-835d-4089-bd2a-63456abdedde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f0fee4-2894-4ce6-957e-d4a47338b957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e01699e-8538-4bf8-8d23-c01055ade6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9180e66f-c771-4c1b-b764-63fad44c8198",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302db700-7452-475a-b627-aee3cfbc4da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a0f61e-062a-4619-a10e-f71e2325c717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0f8c1e-a84c-4ad8-8a76-7bce48acdc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d39d9506-28ed-45e8-9bb3-a07c89cd5121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5a2f37-39a5-410a-9e3c-76e4542a9b6c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb38498-4348-440d-931b-1bbc7c551f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8808001-ab31-4913-a586-98d17422f023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9997674a-b7ad-4a0a-9316-bd5560c1aae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b5e791c-89bb-4928-b667-3af842037e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42d3764-0d14-4891-a317-bf34819cd7da",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b599397a-d47c-49e4-b041-e9ce7480e7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf409874-67ae-463f-92d0-5ec61a557206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f271050-f3c1-4d6c-9730-47a01fa0f2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a85bb5e-3eaa-44d1-8f27-5697dba7597c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15ab386-5fa1-4ee6-8ad4-46b26a469d4f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5d3165-0c64-49db-968e-a03ae8202cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ad7a6-20d0-48ad-ad1e-91ea6397bcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c1d7b-c056-44ba-a84d-a66396a45b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8f6482c-e947-491d-9542-80876eb830a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99c5ea9-207f-44c8-9ec3-fa52a654d6a3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afe107b-c53c-46da-be97-a6a3558c6711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de80c43b-2994-42bd-ab1e-febd8033454c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a0703-a429-433d-b4e3-da46cf1b7a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbc67059-c93e-4ed2-9063-9156be8502cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa298bb-e0f3-4563-8743-0cdc9b35f117",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac34c0d-aad4-45d0-8094-43b0b300e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8c3d1f-a4d1-4bf4-b35e-0f7f3aa2f511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a8c23f-b6d4-46ac-be9c-30f6fcc352b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ff72f5-5cd7-4994-b14b-8f8ebd7345d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5967d0c-9fc1-4eaf-9308-e5ffd917fdb2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244c05a7-db05-4d81-becc-86228462c33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7079c1b9-3afb-461f-9ab5-d630944f405b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d64d8-b5f9-4f83-8c54-d32198375540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "714b11d3-d6f2-41dd-8cec-f916a72679f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867d9fba-7091-43a4-8e8d-74a01f0e6519",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dfc821-83d3-4a0d-8761-f3039769079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0910d462-4571-4007-8ec8-379136583754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a989ec-f020-4bd4-80c5-483b5cdd3fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd2647-771d-4f42-82db-407a0e3ef62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f40cea-e7c8-4886-87d8-ce62f00847ee",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754970a4-4b74-4755-ab7e-138e4204c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403c1324-7174-4cc8-8719-6ba23db9f37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa79e14-a873-4d99-9130-be07590c330a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a918a826-d253-496b-b6c8-65cea71d0d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eecd2b5-7ebf-45e4-a1c1-672cef8246bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8284a4b7-6d7b-41a1-8817-c8368eb452a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376f0a6c-6eea-415c-86e9-5089b122ac3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75371a7d-e26b-451b-af2d-90a7a24986ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b93f1ea5-de7c-4b96-a2e9-49fd4b754547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81570f80-761e-4dea-b152-6ad1bd2c7de6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe5d085-3085-42c4-8fb6-99ec679a08c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2526324a-2e44-4de9-8a65-ee503ea2eedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee687072-0d81-4482-8251-a10c491dc31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aa9f52-6f77-4961-9401-2f8982e3dde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f25c13-1728-41dc-a9cd-595fccf4f0cd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9ec627-94d2-4e21-a4f6-9c7324a33634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f312dd-bf8e-422c-a762-1bde1aa8982e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6528149-b290-4acf-8642-2ee560b73d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3766bda-fb20-412c-a03e-e0b4f557eca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a329c037-18e7-4525-9b10-675ccd6f3e4e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e6d949-098a-4033-961a-c0273494f09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229c1cfc-0168-49bb-8f0e-eabf435aa65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f119940a-4b7f-4e6b-b76d-16995987d0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7eb25f7-4cc3-40c2-9419-e003a97a5032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6406cd34-fada-44b0-a7c1-bbfd417d1b49",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a788401b-94ec-4a7f-9ba9-8fda7777a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb66b5-12f6-412f-a3f3-83e3f4c0415c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8153921-cb50-43c5-b8a6-f36375f30ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a67ca17-f58d-4589-85db-7d3e40b8a7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e203c86a-6ee6-419b-b86c-3c41ef319a35",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54809c73-3942-40d4-aaac-0b3e2852198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e57409c-e319-41fe-9549-7ed020fdf31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953a9d70-a850-4545-9213-cbceb14caf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd026d13-9c10-4b17-a9a9-2fee7bf1c1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f248c740-ef32-4e3d-aef4-d6035574f36e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6853534f-8001-40cf-871a-8322df121f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92044fb6-6558-4994-b797-2408c5c28a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed2323f-48ec-45ff-b5e7-484678c45a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d804ed90-ba4c-4eaa-9893-aeeecb3d79de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e72249f-a34c-4025-9b85-bdd91a22be99",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f4c778-f97d-4075-9b38-9f0db586082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd3a6e8-d6c3-4813-9ab8-3a919ad4a14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef070e2-ce47-4904-8100-f2ef1aaa7416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82120d06-53c8-4dd2-be4f-d0f2c5f83e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b314a2d-1581-415e-a0c1-d0c05347b215",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cca2f32-4c47-42e1-a72e-dffcda7901f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf05049b-e185-49e9-a237-320bdb1fcfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00129469-4ea0-406e-88a0-f08980f5ce48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0203abd-3026-4518-b143-a2a25cab5dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c11c6f-e5be-4f9f-b896-7f791a3d2c7e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b629f-4518-45ef-b108-3f046b6294f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922325de-2571-4690-a9d3-8b239c6e78ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026a097d-d5e1-4168-97ce-af8ff9c112d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab1f178-d02c-4fcc-948d-82e3214f1823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09c021d-dbd6-4f41-b79f-f2594f1ed61e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d8e5b-61d1-42b9-885b-71844133e5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9cc026-8e54-4363-a096-1f971d8f5ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d701ab-b73b-48bd-b2db-7c3d0551e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1577bd5-f6dc-4a5d-aa3e-fa97386198f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a0a630-4e23-4e5e-9866-060682a2ffd8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513f6393-bd4d-4e83-b337-856d75296b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f27aff-2b3e-4149-b58b-4d706c82fc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ba035d-db62-4c3c-a143-69ad40745b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4f1f13-28dc-47d5-8999-a5f05bc87704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d6212e-a00d-42c6-b1b4-1be6573c1bd9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f721ac-f687-4194-98ed-4ff9ee3e5626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d8542a-a312-416c-91a5-acf9d2c6e712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6e794-5972-4b98-ae1a-34ad7631da2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e106f5-d373-41fa-86c4-24e4677850a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0e9462-8ebe-4e50-a3c8-3f43da01076d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f89c580-bac1-4fe4-be47-2b16670637c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5293714-4790-4336-a3b5-3c3822834eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82d4320-6c73-42df-b77e-4ed1835b6300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3b30e9d6-ca8c-4ca4-8c6d-115cb5384a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332a19c0-6f93-415b-ae10-13e86dc172c6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb5ff04-9869-44b3-be11-81fbe5c79c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65af5cf-c786-4247-ad8e-ec0dce16f31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f54a00e-fab0-41a0-88c5-d49cd9b36f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23cafe7e-0860-4776-8615-efdda65e6062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0139cb-f1d2-4910-b8d8-91ec5d6dde5f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d81646-ce94-4ab9-a001-3994a6525267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0576f8-957d-47ac-8308-3c2364646696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c53690c-af5c-47cf-881f-de65118c4edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a84a52f-6880-4ff6-80c6-37ef59962763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394f45da-641d-4356-9ae8-10a666f86a8c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd48756e-ce8a-4198-b146-50c8551ad626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c051898e-11f2-40b8-b2d0-b0a1808d3417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001a066e-36fb-4ec2-bfe1-c6508bc55047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13644121-7edb-406c-9121-2237e01e01ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9915e8b5-b33a-4c55-9473-fb09dac16cd6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5805bfe-a153-4e60-ace2-bf23c05107fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cfb4ea-124f-4f30-9438-aa9e097d7b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab092d56-fae8-4239-a4b5-dc0a6c8469a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4bdbf9-5b7c-4511-a411-20fead499bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62907d1d-d3b6-4a3e-bb7c-8e7938c2db18",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35da397c-73de-4b2a-909c-603e8b52a23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f9fbea-619b-4a73-ac6f-57e6dd4baf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1900dd4-8e6b-417b-a117-27bb334d435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6854ec6-c60e-44fd-b122-48de0a52fd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b1d7f8-50a4-4d87-850c-1903a7f6d0d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48677f6-2e28-40da-be31-c99f5d5b8358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97db3ce0-cb8b-4144-94c2-60af21f71c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41230da-8a83-4bfe-adeb-e7135666d5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adcca99e-ce7d-42e1-8c1b-ac21499ebbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2406740-2b8a-446e-a703-a5ae729cc724",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e1fd53-bc16-439d-b595-b1d394f88717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee40115-12a0-4599-a0c4-36b1fe9e505e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fba7585-fb05-4437-b948-34e4f6788228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3fa5c4-7dd6-4c69-bcc4-50d16ae3ca1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f856ec-fdff-497a-b88d-b75934a17c22",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600850b9-a275-4c66-b509-70471d77c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe58dea-7442-4caf-8690-a3712b855596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cfe3fe-a789-4b02-ae90-efa707aeaa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d1cc1f-7de2-416f-9999-d8a13abff9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068501d9-cd52-4460-b974-4d1614361d10",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917aba57-3172-476a-ab29-95c120dc805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959bcfcb-a550-4db9-8e37-b8452c56c018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f1e68-d3d7-4f5a-bc77-ef267023274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5254c873-28e1-445f-8157-8bc05736cb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657a3df8-4512-4724-8162-4e2929fc8c04",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70973a41-938c-4225-8816-8335164b2f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c7ae6e-b34c-4de4-b400-a77c30ab5ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9565334c-fa66-4943-b646-4cf9d1ed783b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d431046a-8103-4233-a25e-61466ffbdf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c572a1-343a-41c7-addc-9d41d7a12f10",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617bd7cf-9afa-436d-ab8e-fc499863f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e23944d-71bc-413d-a3ad-15845048b083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30f2705-a83f-4a0d-935a-73bc9db12f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "505ab1e6-6098-44a5-b354-43283615fec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ce06b6-144e-4319-b99e-94313e5e3e77",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd7688e-9bc8-49a1-8ccf-42199cacd180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87ffc17-67c3-4984-bf91-971c7b32d1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c59716e-3263-479f-adf1-5274f213fca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eee1341-ee86-4b5e-ba13-d143027c29dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47e433-464b-4352-a0db-71b181291cd4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3369ea8d-6b5b-4831-88b7-83ff2adcb27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013b1be3-867f-40ae-947a-753974ac5588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e69493-7cc1-4eaf-b0d9-e5a717abe0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4f0302-b9fa-408d-9480-3650b90273c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e012bfbd-0133-4d18-96ca-32810dddd083",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4054a25-c6bb-4c21-b457-2806f2a80b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ca7ba1-8bd4-49f7-addb-91a9526d80cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9007e8-c074-4306-ad5c-25de35ed785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3ef10e-1f3b-488a-910e-8377e1e52459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5d908c-c82b-4ddc-bc42-306550f905bb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3100c538-69e6-4a2f-81ca-56f7b97f71dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e613b1f0-c044-45de-ad85-256649cd255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe71a64-2051-4c16-a8f2-c7b7c2b12e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd5f491-9dff-4f3a-8684-7d397bcf5c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf28f0-e23e-4fc1-a5ab-ed767be836fb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06af02d4-46ef-4230-88cb-e14bc4d8ac27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dd0c50-95c4-4e83-9309-9219366e2558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7239044-1c99-4274-917e-d72e27a97b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7855bf6c-acef-4a69-94b9-0639b2daee44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f8792-f122-4b8e-b1f3-40356050e1eb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a24449d-c6cf-4923-8d63-e28d87562297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba042234-9a85-453f-9792-676d31fb3198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1610b-eb72-4732-b20d-fb3ef5cdf79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7f6454-cd66-4196-bff7-00c7adabb3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5945428-19c7-49cd-9d18-121ccd8dca86",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce2ae3-63cc-4acf-a139-fb74f5096cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d1554e-6718-429b-9f88-d2eaa43b6d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e7cdf1-136d-4c6d-9781-4234aee9e38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "753f95b2-b88c-4d15-8a06-72dc85f46964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db538b1f-c6cb-4fb0-bb46-603e10a4fea6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3e40fe-1554-49cf-b1dd-2289bb88f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb79ddd-e465-470b-b4da-8ed2ad620b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186c65b4-36e4-4a9e-a793-cd7a75adca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "639e310f-406a-4bed-a3b4-db5b8fd9cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a07aa-6ab1-4fdd-930f-d3b7856b6fcf",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca82626-670a-46c2-afc0-2d76a6fd10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b682372-ade3-4471-9872-964bc911adaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3de783-ecc9-4d26-96db-853e833e4e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edcc76c-1a82-45b7-b0c7-0160f99ef5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8795df86-4451-4c97-bda3-ee0ca2ce0a0e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d5927f-7248-4a82-8d05-e864f30915a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292f9237-3774-4abe-a284-2c892add3a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044a81ec-3703-45b4-bdd6-7a2497332c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7036712f-8973-4a94-ac13-6072847d6461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4f719c-8af8-4186-a321-da2e05bf8bab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7af851-d50a-4c78-9ddc-f43f0d976be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e858ee-733d-4b67-adec-14b9bf998b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c94b90-7619-488f-a800-9989a4048180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "713d08ae-e56d-4633-9b6e-aa77dbb7cc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6868b8cc-d170-4963-af6e-73b14466eb31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8dbd96-f62f-4834-80d9-72a2dad3de61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b604ca-9068-4b06-94d6-33996c324864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe0ad42-93f9-444f-94a2-9a2abc3416a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a189ba0-6edd-42de-93ef-6e617d6b56c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0d8365-692a-48a9-97e0-943926928aba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a34cf06-8c15-4522-a14a-e25e9105b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ea11fa-12e7-4a89-81f3-8e25323bbbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937fe1e9-f4c5-4288-92c0-e6115011e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a16f2e-8f91-4e14-b881-1b908cfb2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8362549c-d239-42e2-b7ac-07c041c98c9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a09121-f33f-4424-8a07-37d5cbc7cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a5ad32-e72c-48a3-a296-86a380100720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e33bd86-3adc-459f-9420-e43f7feaff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "058a170f-b9d9-4250-b9e3-bac02ff71f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1fd108-01eb-4f39-83c8-3eaa410a3333",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d46a027-baf7-446e-8691-0927b6eea3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef97f97-ba6c-4c50-ae4c-8cb72e3b15ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce56da3-d270-48bb-9594-fe640c36b4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee35a27-89b0-4600-8cd5-7ffae8398657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f981c1-a3d6-48a5-beea-fb7718d2461e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf078f0-b2d0-4272-a5c2-f8de8789a949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b34c9ce-e961-43ee-86de-d839d8508fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ccd1d8-db49-457b-9866-8dfe5f14891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91e9aec-0642-4e84-b2b0-17f7f2ee2dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da443518-5da2-4d13-a64e-34dc6d4d8be2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3832dc-7421-4182-a380-bc5ca604d9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0e5197-9594-4939-8e33-b37737c7ab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c223d-8f2d-4d3f-8cf2-3932d716d4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c80249-cb19-4ac8-8f64-f7bee3210e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7266659-596f-4821-9704-f3f6cdede0be",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5a7a1-fb6d-40d4-bba4-9157c5eaa080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4faf0f9-3b6b-40de-842e-7626d7ff86a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec33e17b-9b9d-4070-be4d-5faaaea2a6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6fd454-0526-48e8-9098-a8b050079367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d3912-ee80-4987-b28a-5eb8884ba541",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d759c3-fbc8-4f02-8090-4281d8eb01e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863720c5-ca9d-4f64-8132-042b08b76f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7bb606-f307-4792-91df-9c1b172d0517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a3c394-763c-46bd-b687-e70e9f52232e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b04347-db19-4b7b-b188-e2ebcc203271",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7bb205-b828-410b-8e4d-be08501876ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6137902-003a-4ac7-95f7-cf5b970f07ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700bf893-4dd4-4878-a291-8653f7f23817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ddcd0d-1670-4257-9abc-03d57d7df0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a8e248-abd1-4cfb-85cb-dc564244e453",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a006334-2942-43fc-a6bf-e1c404a400f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f2d2d6-9005-4015-b5c0-e1a297edea44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5065f6a-7a73-4f79-aaf6-30410edf6385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c22eff29-a606-432a-a56a-39facc4e5610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0002ea65-1fff-4324-9bf8-c8c7ae93224f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a497654-4ef4-4f4e-b169-cd5d2bf1a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61137a5c-d754-4694-8fcb-441eafc7fa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8de2e5-9783-4872-b176-5e0ea29165f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f58bf8cd-c6b4-4026-a1b2-7beaec1c7173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ae4a8b-7a52-4bd1-983e-49831b4b0946",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a461e7ee-5b0b-4add-a892-54f2b1937511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0545f8-332a-4cc8-8150-1fd2934d6954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d116579-5b87-4f62-838e-1cce9262f21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef7ce47-b06f-49b5-be13-8a7543ccca46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32670ee2-6635-4745-a942-7c847160f952",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b055e05-f523-4656-9f5d-e6aaf51c06b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f497577c-ee4d-427c-a70e-2179f5296b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25062079-c976-400b-b649-cb4fcc98d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18153dc7-6719-42a7-9b9c-9987107ca4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ea8ca7-aceb-44a1-b1a8-ca57d95dc8f9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf146f2-29e6-43ee-b79b-b87f90903f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce598b02-0601-4d3e-976e-8a0607c6e544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fac4ea5-0c2b-4119-9510-c790d75b1ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4587b80b-1720-48a2-81e9-7c13b7a1ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7065818a-8cd4-4bc7-8023-2b781a632ab7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225dcb0a-50ee-4132-9d6a-16da3c850fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32e6cae-0d86-4e94-9275-444740dc0a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9242be16-c6b9-43ba-9b78-7fd68b575582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72af152b-8cb0-47dc-8fbe-0c92d50e41ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a554eee2-b97e-4406-97d7-d7e54223d75a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd9248-3f35-43cb-b0f1-f81a6e2876a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fa5cf4-5316-4a70-9db1-e865f0e55389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e97ab-3038-4b05-b679-f1df028a0e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d93794-9b48-4c0e-b014-3443d79360f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5b923b-cc32-491c-a665-436c456a7fbf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c51ff9-7867-4621-b7cf-1cf47a3d9668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8efec2-e83c-468e-810b-52371011d056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6871a633-f52e-4f32-8bb7-5648c829ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59100886-3af0-464c-b9cf-a8f4aaed801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b00eb34-a095-4eb0-85d9-cf004f9181c6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0887a9-0869-4639-a7d8-605dbfeea1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382df13a-3a1d-4a06-b355-f4a19fa4ef53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925a003e-a2e0-4895-9aa5-a0cdb247c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "183c4765-5883-4110-b8ee-0cdea4f6af0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c563c9-9514-48d7-aab0-098da1ff799f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691d03e-43b2-4ba1-9f3a-8c4ff2b0b64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f46bc1d-2f3a-4d5b-a111-ba66f88d0f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefd1036-ca39-4bed-b72f-625881f19e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5584a471-c9a2-48b6-8815-2572313fe509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987a7200-eb83-4242-998c-7a7bff00dd86",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7661f88-4827-4ce0-bf2f-7909a2089d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea3eaf4-8c67-45e1-9881-ab31cab4b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69973e5-438c-406d-b383-5317502c93f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc87a77-5daf-47bb-b3e8-5a8807ec8071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f296f080-7fdb-4455-9b4f-a7cfac2a5ada",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07d21b9-2c44-4a6a-85f5-7bd57987a5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578e64b1-7764-4b63-b913-183eec7e6989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc38e62-719d-45df-a7bc-d0db6070090d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d23d4125-fd2f-4512-9456-e01ab49841b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3b8799-0677-4fb9-8979-8e74df8d0561",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946ce326-07d0-46c3-aa74-7c5bf21dbc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32f2fb9-218e-4980-b5c3-2dfc36f6fd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418343f3-744c-43be-a4c0-5e0f83c947be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e0dba1-3177-4023-8342-4db3867bc073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce99c8f-d1da-42d2-9d94-c048ad79642a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40168bff-328a-4821-a616-954c623c5f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a299c3a8-301f-45f3-b777-2610218ef059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e54467-4a3a-474c-ad96-6f392c29a0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f38a794-a9c5-4658-b969-f537d28058d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c08f055-bda4-4130-befa-a9e7ba0525ce",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7882b6b-4fac-4173-a57e-c46589fcaa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be55b078-d2e9-4a42-b84f-55305589dff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789ca6bf-8dce-4228-89dd-740ea878a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcfe608-e5e1-4bb5-b58b-8b8d5a6a2e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2943de1f-d08b-4b03-8c0d-54c6c0ee68c0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f70f4f9-ea5e-407f-a3a1-1953aa72bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df3d883-a71f-4836-a9b7-60f637056eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5db3d2d-0263-4c67-a1b7-5633380671e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8be439-a39a-4b8d-91a3-79bd51dc3bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4b64bd-f877-40c7-854e-54e6a3800e55",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff27281-ce4b-4439-a48b-0db48ae9c2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f677250c-15bb-431f-b5ba-8b4109b1fc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2252204-dea2-43ee-888b-6b544a38f3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "878b6cd7-119a-4ad1-9335-ace762aee50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72213bd-f920-439c-874a-d34253b0e0d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7535b4a7-85f1-49ea-ac26-d387e5f82b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8572d63b-f348-47b7-b339-e16d7e22133e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcc9129-ae59-4c2e-8fe0-e03584e88b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "499daccc-f646-47d3-9bf3-ffedf2562435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28000a98-b4db-4f2d-b2fe-c15cedddb51c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1082e777-8cbc-449e-8925-4f8ba330bf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9b4663-6a01-41e6-894e-b9daf31b957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835ce66d-6ef3-4217-a293-1cd29c88e57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8166cac2-81b0-459c-89ba-1ab776469712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8facf00-cd6f-4a31-8d30-ded2571edc08",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef044575-c088-487a-81a7-e7f2a065d31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee8bf95-6c2e-4357-a562-163244c8f225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0944ec94-8e72-41c5-8856-40b485fcbf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7933cd5-d4a8-43d4-8396-b4bb4a9ebc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0aca61-1323-49d1-9ff7-d56d61f71573",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a45380-8a5b-4482-8519-e84928451816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728c89cd-3c6f-4375-ba0f-b4aa72654cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f238c78e-d39f-499e-a1fa-9d3c544d8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "af1910b8-e37e-43ba-8931-37d221015dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fec9a7-c0a0-4219-958f-f0d9f2c274e9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3713c078-83c6-4ecc-9f40-6ee790545df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facf7116-82a5-442c-9ddb-74fc84f5e7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19c21ad-ba19-4920-b7e2-d1f42adb6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64d3e24b-ca78-4fd7-a558-57fa54f824bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813ee62a-5814-4c59-bc0a-f8d228feb541",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb735a2-2d52-479f-94e0-f2cd6a044d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694447fa-d37a-42a6-b05c-c6a7a4cf56ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080afb4-3c26-4694-aae4-a511e5cdcf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d58912-5102-4bf0-b034-4da06094326b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67495816-62f6-41ab-87d2-ec78fe30119b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a41e994-76ff-462b-af13-a4c0fdced203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592c830c-4d6b-4643-b89d-82fc8fdf04b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd94d90-8185-434c-b363-ab5b8802bfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be4d45d9-789f-4a93-a007-9ec9888f0660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bbc83f-f52f-4ac0-b40a-87b341a1513d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba6a19-4997-4ee7-b81a-35d794b90fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547947f1-ec91-4488-8c9d-67e7b74fef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e41e14-2788-438d-bb1f-ed4cb4b41072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0efc5e-b2c8-48bc-9873-4c521ed51999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d583c6e2-8eab-4a3a-91e4-e70b20a2e951",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e43804-486f-4492-99cb-51f9d7390041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2876453e-3d09-4d5b-a69d-1cfbf1346ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4db878-ce51-40be-9802-2f6c9a3c9141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2490f6e-8f6d-4c6b-a2b2-c7dbedf20b3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea97b113-66f7-40b3-8874-16e751722261",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43f2f00a-e07b-4c0e-a3c0-83220435635e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20121e02-22d6-4113-bef8-21ebbf7ae9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c83c1e1f-044b-4ab2-9e25-e330dc600892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949c8b91-f32c-4424-b0ef-302a59d3af0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ea0811f-6398-4758-9b2a-88d1eae21518"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3234eeed-4d3d-4210-a4d5-11db2b6fff3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5241c827-ed9f-4be2-8c4c-f3e678af4859"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e60948bb-5c7e-4dec-8765-6cbae00f8f02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "638e5e67-fcba-42b3-a657-52f5aaaa3c45"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc69ed53-7d40-45c1-a284-29db4c2c54b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71ecb5f3-bc4e-4dc9-a508-d64c3779b9c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1bb6a328-042c-4ea1-9826-1ae2752baa63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ecd6ea7-d26c-46d4-bccd-311ca9bf3454"
                }
              }
            ]
          },
          {
            "id": "a0b31ebc-da3c-4d34-8c90-ef03b74efb36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "009577cc-37eb-4115-ad7d-a7b8e3717193",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4740b894-e17a-4b94-a145-bdb3017ca554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f917a21e-8481-48d1-b42f-0c43e1020534"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40de46d9-4c8d-4612-bccd-c0fb4cb855a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "926d2b04-edce-46fd-a096-8111e7fb64e0"
                    }
                  }
                ]
              },
              {
                "id": "65f4d642-530c-41a3-981a-103814d913eb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de7bf0c-540a-48bd-b97a-155f85158d4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db101ecc-2ace-4339-b93c-61bb394139fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df50f31-60bb-4ad4-84b6-4715c6995c1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab92762c-4fab-4412-ac66-523d563a3b3a"
                    }
                  }
                ]
              },
              {
                "id": "1706ec9b-cb44-4f09-aadf-39342e3b2e87",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5838c1d-81b0-493e-9f5d-6e07af3942f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbe33605-753b-4cf8-95b3-062c3ebf1ed8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97a9900a-e922-435f-9ea7-065c4e6c8bb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e7d6daa-1f80-474e-95fd-22e4dab00ddd"
                    }
                  }
                ]
              },
              {
                "id": "e6c83e7f-ca91-4a36-9c24-4df58472eab2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80fced7c-fbad-4654-aafd-b107899aa942",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54fb7bcc-c8b4-4815-ba7e-55c341ad4cd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c167d8d8-66fe-4775-ba02-fbe7624ddddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "af41d1af-cb1d-41fb-bd15-475d9920b2b7"
                    }
                  }
                ]
              },
              {
                "id": "7485fddc-a96c-478b-bb1d-3b81eebe73b1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a7fd81-7c6f-4337-b4a9-7bc15cefaec3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6da3fb1-aee7-4130-8bc5-d34ecb76bc9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2ee4bf0-b239-40f8-aab9-24051c67ecbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f0588616-2a8a-4ff6-b32a-f12e83daf02e"
                    }
                  }
                ]
              },
              {
                "id": "f7022ffb-ea5c-4543-ad8a-2fbe8e37f4a4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95027fd2-7cf0-459d-bc0a-b90b1ce8d3c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75c719da-88f7-4738-94f2-6313ffbc61f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26dc10e4-3c24-4a8b-8ac5-17438852ccc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4076538-3060-43c6-804e-380805def5bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "422f9dcf-86e4-4b5b-a968-1d7c19a6cc04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b25cb06f-7f71-4e5c-96af-57447c2854da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c92c954-afb0-48df-b94e-96a58fb8d79a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "803787f4-aa01-4c2e-ad45-f20f12c70afc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5f91420-ed77-4f3a-b616-f39220bf0dca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "677f23a3-2ea4-49f1-b834-571be5529b0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cdfebe3-6a4c-4562-bdb1-54915a832d37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebace17d-e655-4c6c-861a-e36e3a8ed100"
            }
          }
        ]
      },
      {
        "id": "92e487be-bc3a-4000-9ad0-66f35a1eec04",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1a5095b1-bf43-4cf6-af59-11bd0004ff66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1885680-0396-4f2e-aa2d-459154bbf5ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4eee2dca-9677-4967-99a1-221fec837bec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7099e2-4054-43df-8ef2-bb205b6a064b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17988a0b-e299-45dc-b794-48e55f3a9bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35c4462-aff3-4053-9ad7-abae52bf71ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfe45ee-b1a4-493d-9e9a-10fa7abb83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f98024-96b1-4839-8d17-638dc9534a07",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d03f9e-184e-4f0a-b66c-d308375606dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73316ace-cd2e-4016-90bc-fee0e79aefa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c046d03b-f634-4e95-9dea-6e88e3e40dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d83a7a4-628d-4c86-aae1-bf49099a48b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55095b93-4571-4d51-b238-1fc434de8f5a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7e4979-d6af-407e-b394-df9304382219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58253242-fc44-47ea-9e50-753d90445649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1932f94d-cd7c-4ece-86ea-6bd8b14f14f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03067cd-061b-4b7b-8107-6d7153a27d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af429fa9-21ec-46fb-b8a3-311c848c90b6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11df5b56-8525-4251-864a-bc1837064dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6812ad2b-404f-4ab6-8c70-4725855dfe84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e6fc20-d95a-4da4-9ab6-8343292fad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ea2370-3572-4f99-b348-d9f1cc502dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81604366-8bdf-4b08-9e39-0f3308b96295",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b0760-69b2-4768-96b4-31fdc4fff833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4b4d29-5888-4482-9629-5a4f0d416440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91338a4-c437-49b2-8d27-54cf8eee408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ff8aa4-427f-4b1d-9a46-340aac68e0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94041d0f-b5af-4129-b745-41c0c0e480c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346f0c48-72ab-4492-85dc-5b2628bce7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f0acdd-2f5b-4d01-b3c1-123b1072d3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e2b273-8b97-4519-b67d-ef2fe0fc6a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1305e6a9-d2d6-4133-842b-80a78b8eb339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd575c58-1e3a-4bb8-93f8-09ece2b36ce9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19096318-d40b-4459-a864-04d3d059e935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a546be5-ec5d-40e1-a18e-be4a195cd8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed848d5a-de01-4b0f-a170-ebc7ade57394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "923e8ff2-2d0a-4f37-8add-085411a84df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75705c11-7d71-4f41-977a-15173d4d1167",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc061f3d-58ce-4450-8df1-1b16e7628a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41b126d-da42-4038-9530-4f6c19227fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d001cae2-d5f5-42a4-9c85-8035a7ae179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbee7d27-b1a5-459f-b26b-93223ec614bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adc90d7-69af-44f6-aca7-e51b7d2ceb61",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98de7afa-4426-47cf-b06c-537589c90452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6f8c00-8d1f-4f59-b83c-de51f9b60a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6e6bc2-f7ce-492e-9179-d4cfb0de9674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e646226-4029-4551-a74d-735ace5a402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23e3b43-5e87-4326-8052-dc40f4bee25c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50de80c9-7246-4668-b59e-f0f4b49617d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff0d386-d2cb-4515-9676-9d957f608fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4747fc9c-4a6a-4f76-9cc9-50a2e6f80247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0e78c1-6835-4697-8c30-48bbfe540d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece97c04-3e74-4c58-9591-803ff7b68781",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7ffe6e-ef1e-4362-a9d9-05c65aff9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e68810-a331-428e-a3f5-73b8e439c26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f136d2-b709-485f-a858-6a3dd1f7d4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1540274-7588-4830-9c94-37e1cec5e4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a51240-b38a-440e-bbbf-d52f98f72637",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cda820-b365-4294-a01a-dde29a1a59f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746eea90-aad5-4807-ae81-a6339fd9abd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb2f86-237a-4c7a-b47b-726673b38a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89e4ab22-18eb-42af-88e8-9daccadacc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525b097e-a064-4ae8-b854-508ef073c13e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd37f7f9-af68-4604-80f0-4fccbd12983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988f1bcd-b77d-4ec7-a371-ba291e02fd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d17d9a-c4aa-4473-aa64-e74b8b86e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e062f401-52ca-4bce-90c2-cdc76dbcadf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e37ad0-7216-4790-a6b6-fee66a3f2354",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85cc7b9-88c5-4221-b7b6-ad5fdb281c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216a5b1b-0867-4351-b5a2-9e2d502c73fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d237d84f-0a44-47d1-bf1e-6f456500cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd61567-bf3b-42ab-83a7-5937bee9b763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f066f91b-f784-4254-8fb5-f73efb75d67a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c980b1a6-4352-4d40-8731-183b4ce37f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad115de0-ad61-45ca-978a-c227b1b81c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb8c9c6-f79c-4916-8e80-b295e063fe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6134d3-09f6-4bc3-aa9e-02b42369cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c239f444-d704-4977-85d5-77a098d1c0e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae019b5-eb13-4bee-aab9-6f28c48704a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603c5381-3e2b-4442-93b8-3e7e8cf41113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36227a-8bc8-405f-b1fd-1e970471712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "017407fc-0538-45af-a870-e70bc420a458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495ae01-0f81-45d4-803a-aa74a62ccada",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68215dcd-cad0-4835-81dd-a63527807698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce8ad98-6054-4489-b4f0-3110921b7a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ac999-b875-4efc-ab91-44db95c760d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfe4f4b-6a3e-4f67-9f9d-e99a860b2f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8ab51f-0edd-4a0f-9c92-f04d937d182d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9d4d6c-13a3-4cc5-ab9c-28542b5e0a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fff0b7-06f8-466d-818e-1fba8a85ab8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfec7bf1-937c-4e9c-8028-f2cc699dbb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a955ea1-3bbe-40f3-a52d-0cc627cebb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeae0ff-25c5-4456-b583-f2c5fc4deb93",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62bd604-cb92-4781-b0fe-abf6529a1210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d37821e-3343-4989-9de2-7c8695e34cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e07940-bc8c-400a-8776-160589582649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d549fe1b-ed74-49b0-901b-b195b8736eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e59d32-57d8-4215-8a6a-73f08d3e7087",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171e1e54-4e18-4ce9-b319-51a8c0ea66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3711d0ab-36fc-40a5-9ed0-118962dedba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f10cc6-99e2-41aa-89f9-8ae547ada8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aab117e-6b08-4ad9-882c-08aaedc6085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c4e53a-450d-43f9-96c3-dbdc4e2e6884",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40bf74d-1a71-43a7-a273-2eebac426922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fbf83e-7e86-4c4a-9b34-4390d77686e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8499df7f-95a9-4ed0-9ad3-51897593a822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9967294-6ec5-4827-b36f-ac8d510c5ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d10d628-93f5-4d4b-9f47-d363138c21e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8624bce5-f9eb-49cf-b942-46b989008d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926f18e6-f418-4346-a820-acf81c59740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d353ab66-3874-4245-825a-38b06f70e7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b116a4-cfa1-4682-ae74-69fa6330d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b1831-42ae-4fc9-a19e-d46240771cde",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bf4f87-c21c-4012-b3b1-ac83d06e7650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab72930-b09e-4953-b551-e5137c15f59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a60dce3-6462-42a4-a4e8-65b48cf0d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0082e14-f8a2-4688-97a8-39b0cef419e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e50f37-968d-4c00-8f02-73dba2b74e8d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afef1ba-c602-4337-9986-e1e4adc2beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d656bf8-7bbb-4a5d-93c3-a9d15a7180e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ac6d15-0df0-42d0-aa74-a9e11669674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f31d75-4978-4178-bc2c-07f8f8f5d1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190fa237-4945-41d5-9cdd-809f82a627db",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada4540d-92bd-4f6d-bc2a-40836e406b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a395ba5-52e8-4dda-b94c-06e3821ac5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a163601-5697-4c2f-965d-7b07055bf815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d604babd-d05b-4fa3-a7f3-8eaaeebeab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c454260d-d00d-42e9-bffa-51313c0dc245",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afda6fc1-fe57-4771-a0af-3728f6416ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ef1291-ae79-4552-8b49-c69e8b30e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c31d902-6d3b-4412-ae76-265a355de7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fffe0015-e8cc-42e6-8254-c86207eed45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792f0fa-7826-4ac2-8993-8f8e81d62b27",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f62f00-a616-4254-9e7f-b76d30772387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd91379-a8d1-4e96-ad20-5d4d3222751e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe47133-69e0-4c48-844a-a87a835f1d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bdea8d-4a65-43a0-af91-703382d1e038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1562be3c-284c-45cd-8529-7f14df252782",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4d356f-3e93-456d-9ba6-c02e99fb4b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13823ad6-f29e-4143-b72f-75b3e50e39d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97f1d4e-5f25-4f4a-b3fd-d35cce1e9240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8569d9f3-ca77-407f-b60e-ac377ef35216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafd34a7-e106-42b1-ae0d-2581d9e9cee2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642c62d-2617-4180-a01e-0d192e768bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f77f77-f811-4cdf-8245-7b73fb82a8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1c247f-2bae-4f92-a123-0545746727a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c60aa1-9e58-4da8-9c32-d1b70dabfe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425c7f0a-cde1-4a99-80b5-08223479d45c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f20594-f532-4ebb-ab9c-a4bc3817c421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358824bc-1800-4d91-96b1-2173e460cfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ccb235-384e-41ad-89ed-0ad14b94ad6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5aae99-8136-4710-a976-b6964bdf5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8daec5e6-c1c1-4ff3-b124-8fe7980950aa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f93cf4-491e-49f0-89a5-4923de5251ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a278b88-c5cd-42da-8ecd-b713624be1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368daba2-2b08-4b59-aa8a-5d407f864043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f334f123-991b-44aa-85fc-aba9a332b44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a635fb-9fc3-4743-a86d-ab6d64bb29a4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a180db8c-25d2-454e-bd17-1e580a9134a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff6f415-df77-4874-8b75-c0223f044f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27c992d-f26c-4198-bbcd-87405ab464b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "395fa44d-8940-4393-911d-bccc91a04506"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "077c2ac8-c79c-4440-8201-89a579039090",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0444249-c499-465e-92a7-bd040b4cabf7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6b33c5-ac58-438d-bf30-5910eb04387c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "875ef17d-d4c0-4009-8707-c7cbffa21c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe61f88c-9d19-4db4-a9fd-e7d35ae5aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "123443cc-33ae-4e8e-b626-429acde489af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fcb3d1d-3fff-45aa-b968-afe7b56db659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf450a12-df53-41f2-828c-e49a127f3e04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c525d305-68cb-484e-90e2-fa5a995d34fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d17d495-1c83-41ef-abbd-f437d84e060e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "755fa068-1a85-4e74-8715-10680694c765",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9714a7cb-bfcf-46da-bcf3-ed5c5c84623c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0cef997-b56e-4d9a-b4bc-504ea72fbe5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92e3b152-3dee-434d-98d8-2439d342f854"
            }
          }
        ]
      },
      {
        "id": "21f17aa5-d597-46df-88bc-7606d7b587a3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "caa4b65d-ff4a-4678-ae1f-e037d6e9c34d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df10c94b-7380-4d14-8297-cd2fabd6a256",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fcb425b0-0846-457e-a4f9-f8267ca55350",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8feba13-10c1-4003-b29e-7e8b44d697c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203cf8b6-8a0a-497b-a1f7-e2b9287470b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66647e87-ec23-47a4-9137-e588b670eccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5815e4-cd41-4e9b-9160-3c11c4da70b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9153de4-2c9d-4e9c-94d5-0adc8219c88f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a6d407-a3d1-4653-ab09-e5c43604552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39c34b0-5eaa-4b90-8b2b-3faeca966823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dac3a0-7b5d-46f5-830d-2a3e4edb3fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92b443a-8b05-4e15-84b0-36fe70585ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6b3071-b5e4-4e35-808f-f356a56d5f55",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15134ce4-3dcd-4d27-a889-a38bdb33b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5636ae-8954-4fe1-8a70-e138128eb51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789bef90-b57a-4b67-85da-e3e124162ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4721e5e2-69bd-41b0-b7e2-04b7deb90b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c367184-7df6-4fa0-880e-5b5d8e1188af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d84847-b358-469e-9619-bebda2444251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4538abd7-07d5-4e57-a0ab-cd617dcc466a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356497b9-67c4-40e7-bc86-b49a5003aa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "117befab-87f7-43cb-8315-544bd32dc856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be23402-04d8-45f4-9439-869ec3dfdf11",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967da68e-2d56-4d10-93c3-0d981e4f200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1d7b84-5075-483c-8f0a-0d53b2eee5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e31bf3c-9356-4c63-ab09-40c44d6c8d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b97185-b657-4ec9-adca-b586866c49ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfddcfb-baf3-4acc-99a1-af06ac3a98c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfed83fb-5a9d-4275-8431-6d7ee883a05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21093d47-971b-4ea0-b9f6-136d2b1bda70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d310cd-4707-409d-ac23-f2b96715ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c23dc1b7-bb80-44a0-bb29-01ef6efa8e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340f6775-5989-4820-8a75-c72ca6f03b4b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dc6846-b67b-4490-b28b-8918f1d51a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596f8d45-4885-4f9b-be05-6ca0f77fa0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f259a17-6af1-4c92-9bf4-d00e1003bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd9c6f5-2fc3-4f0f-b703-9bf56dc16b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc6073c-7746-4707-9a7b-7af94eba74e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0890456a-444f-426a-8828-d97ea80adc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c620273-5b54-4b96-8448-9115c58f443a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0286e3-b97a-4b21-b22d-702e3654b1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa7dc55-6852-412f-a93f-4e5c1e731226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8992899-ffb6-40e6-91f0-fc623c1018ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e4f571-d3a9-4cd6-821e-018514e60717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2d8214-02bf-44b6-9d60-7a447f5cdb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988f3521-362b-4ca8-b9b9-27d473678bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "088ba460-18c5-4a38-bc81-0812ca5345bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8e485e-529f-40b3-97b6-1555b2b729ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95e4a0d-fa88-4380-9064-c2b2c5d1a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2390dcca-ab4f-43c3-b1dd-ac0565f77133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6191fd5-8feb-4e45-b4a1-2addff668dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33bd23cf-43e8-46f9-a9d7-b9b9d81ab7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1356b6-943b-479b-9ad2-218d6e26326b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9082e312-3160-4c12-a9e1-68c72c730f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda76f0d-f0ce-4706-b030-a076bce05b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a5e3e2-a8f9-41e1-99df-bee6a4f1d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e110166e-1cae-48ab-bace-b631316a81b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b84240-1db5-423a-92ff-d0fdaf45339f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe3e8e9-ccdc-427f-8352-46f99123fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93241fb-3c81-4988-8a15-304e9ab89d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d0c7b-2f70-4b60-bf0e-68e38c575cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fc1db1-a6b2-4000-be0a-29782d82a2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e072f897-896c-4ddd-81ce-98b777885650",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceabe5d-9e40-4a6b-861a-fd6b0aa3b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe918c53-6e79-461a-8685-ada6162eb6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca8d3be-cf55-49cf-ab96-f4cf4bdef521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0812ba1-3d9e-412e-b594-5f0109edf6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3b8d07-74ba-4239-849c-f3f3999b0b77",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65795251-dc59-4471-a60b-500f5be1537e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89815e7b-a33d-4bee-935c-cbf4da3b6d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1336160-9d21-49ac-8954-99dc591c91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d44b540-3009-4a09-9a94-b9ffd37dc472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2942862a-e4d1-4d92-a70d-d9db63f5ee3d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ba6606-1a7b-439f-937e-cc7c3ad0a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04005acf-ba6b-4b42-9e2a-96d2d1670bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7298d6f7-7324-4a2b-9004-5bd116994460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90f0294-1ea1-4170-a39e-2ab5c1633427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7f6cc-0b04-4987-a742-50fee89559cd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e1ca0-a94f-4867-8237-e1d8c8e7aafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea174d33-79f0-4297-8011-db241032f911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aab8fb6-91f9-4342-8312-618236471957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2f7fd8-47c2-4f4b-b2e8-b3d9684b55da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78f3b1d-0b00-4d77-abb2-095ce97509ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bcdec4-1fb6-4463-b5b5-cfef4ca3adc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b76708f-84ec-4897-99e9-a46962753881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71866da-951b-427c-aa74-d9617ca9abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b15066a-ff2d-4653-be57-10b59eda7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735316e8-ad77-4ad2-9d4b-9e1f1f5b63db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa0297-d6fd-4f97-9817-9c97c5fa2980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0393dd5e-85d7-4a48-9525-57b1275c2e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ae44f-b233-49af-8bd3-c5a4d329b110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32b4cd45-9f51-4f49-809b-f89f8d97cbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226b8a34-3c39-4f4a-8dd8-f576703315fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b237c9ee-043e-4824-b1b8-f3aa2e213903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab2dd2b-ede7-4675-87d8-e0278657f92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb088ef-aa3e-47fe-869b-c79c69790786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632bae1f-f5c2-40cf-aa75-65b96415b769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24374bac-2b6a-433e-a86c-d276f63881f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb57458-54a9-4212-85be-4e8b0c60276b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec9b36c-209e-43a0-ab4c-c48161f2cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccd5bb3-caca-430b-ad81-abaecb1c8f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef00251f-06aa-4d1e-846d-dba335a22a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9985fbe9-fa60-43e5-bd7d-d02757963341",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f913bb1-eda7-488d-a431-9defc6fa3967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc0a0ce-eda1-4012-a884-177ffb8bad7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa925c9-2f93-412f-8523-382249a1cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db07cb78-5c4d-49f4-bba1-d7c72a2e2ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abf9b9b-88cb-4d5f-9a4a-38241ce8058a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6cf817-47ac-4985-bf32-e4bd925630e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d2a1cb-468b-4f82-9545-1dd01e50de68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9492590-ad7c-4872-9278-5e918e249b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3488b1-77a8-4d2d-b165-95904fe5c058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be2123b-eca0-4b31-8cd9-06c6229e4c38",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceeb49e-90b8-4ce0-a7f5-c795164deb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61db3f2-0ff7-4e8c-8075-fbe5abd261de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb13fee5-b0c5-49f7-8beb-fb4eb5db93d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34957875-e338-4b30-a2bf-3749d21a5e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98130d5-be76-411a-9122-91a10b3964b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ee87a5-9428-457d-94f6-c0b2fa744b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e065a3a2-ef5c-4504-8e52-d1414ab02b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2745980-5ea4-424c-b73b-02ca64bf49b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "022a8dd2-48db-4e34-a58f-16a4bf9c7719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac9a371-6e4b-4fd2-8ed4-72f7dd0b37c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87a931f-23d6-46b2-bd12-80bdc906276f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf93f8a-ada4-4a8d-9d40-562481af8e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b68cb2-3c11-4dce-a21c-9448abcc7230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73db4a34-fd6f-415f-a28f-f982a7403cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fea2b-2bf9-4ab7-8bb3-fb92c6b2f011",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec002ad5-dd45-45e5-9be4-f673edddf484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0306aca-1aa7-4fc7-9ceb-8e204ee392ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8595b82c-1721-4b8a-9278-779158a2d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "426a61b0-5fe4-4cf3-a59e-2e6dd0362f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c56b4d-fbff-4971-91ea-a72e4bd3c1d4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b39bf90-da80-4886-8c66-e0efc134a1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efccb536-afbe-4eb4-a2e0-69f2919437b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f477569-0d6e-4bbe-976f-0bfe8d29bff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a78f410-6329-4cd1-94dc-fc90dfa4d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c697f-3785-4c64-a677-f4ff1700dc60",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358c2562-c975-451c-8225-dd7489444d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e94eca-057c-4288-94bf-f9e81d43e4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e50017-ce81-4bcb-991e-5a2d6a05ee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80afa252-70a7-4307-ad53-80af74933b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c444aa4-cad1-47c2-97e4-791ff61b2857",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c71f7ab-df9d-4097-b552-02228a62a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a45bb05-1437-4e87-8775-627a776e03cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f687d59-fe34-49b9-9ae3-f0c85c171853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8225a42d-ae24-4c88-b3cd-4a899fd58e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf27b725-c06f-4650-8335-a94a9cb2ff44",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88687d6-98b6-40fd-a030-e2ad29eb9478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15567adc-3a52-4d9a-a3b0-4865f1777029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20be5b2f-b92e-4128-bba0-49d2e0cf05a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6e99cb-dc0f-40a1-8663-f5786ee61234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a905b1cb-a8b5-4201-9caa-f12d3d137bfb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f7d477-373b-4b98-90dc-204622c0712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc06611-39c0-4cdc-8c2a-aecd2867ec77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b32b549-c6a1-4ebf-a273-4b8af4b95c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db5bc143-9ccd-41fe-affd-3edb2ea32e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a0cf2-e2c0-44db-b4fb-6e3253801a34",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cac57e5-f517-4c60-ae3a-2828c5bcb3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac5244e-f798-4b1f-a0ad-2ebc9b242297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e104e992-4d0e-40c1-8806-69552346d9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "477200a3-859a-4e45-9484-21c43ddeb3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c193e2d8-4a01-4689-8a15-321cb3228930",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556afd32-d26f-4aa3-be6a-3bee10dcb252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988ac371-d658-4e80-b011-7bdc6ac6f623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1530e3a-17e9-4fec-97d7-a1e8925fad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5f2e1c-73bd-4617-b2ad-2bb5d4acb1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e480bf1b-a72e-41e2-8e48-af2f09d51eb5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df0c541-3dc5-4a8c-81ae-d1c2af609b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5fdd39-bfd7-487e-a88f-8c67212dd77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29608e34-dc25-4134-8830-2639aaa799f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8264a467-e043-44ca-97eb-9e6df6158aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475a982d-d1dd-459e-bda1-4eca8c77101e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45195eb7-997d-4c32-8dc9-ccafa6c0f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e239f0d7-3d41-4c6d-9bc8-43ce719b32dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3c1965-544a-4327-9898-ff9f5c5076b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff443f01-693d-48e6-84ac-ab01fd327826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe7944-e058-4298-853f-6ae1632c07a1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8671f0bc-ec46-4a4d-a7b1-19d6e68cd8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f5d89d-d26c-4eb4-ab36-3097adc7f877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0645739c-cccf-494c-8492-d41d9474c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98661a66-119b-4cb4-b2cb-b7c8ad552f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5451096e-4eaf-4fbb-8be8-697f1af255fa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c0abad-670a-4127-9a17-a44e0cc011a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da98bf53-14ee-4c1d-9527-630df43c4cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c49019-54dc-4e42-88f9-823bec6cb938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bdd5e85-7249-4987-9c75-fe6bdbeb95f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8be8dd31-ae75-4898-b553-3694928c87dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b7c160e-5ca2-44bc-801a-6005cef4e5df",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd967dc-f319-4d15-9134-764039dacecc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "58a348a6-413f-40f7-b79d-a8b3659aecd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b885c71-2bc3-4bd9-81e4-f69a10d62937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b11cfaf2-7845-42ed-ad8c-c5867bc2060b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5528cc95-f269-4315-8cf7-dbec7dd04235",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a24820c-cea6-417e-b822-dcf6ef743f4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8cb5411-90e1-4fa6-b617-37bab71e73f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "179132f4-5f92-497c-9cab-7c4ae0c3d00d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e1d3c20-0751-4806-8c9e-0806c42065ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd260b94-7522-4a9e-9837-21b787c32870"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c254fa4-6aed-4f05-b773-b8b8e9f5fabd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11736144-6e09-4ccd-969b-b8f0ac3fd41d"
            }
          }
        ]
      },
      {
        "id": "e6021db1-7bc0-4528-979a-61747b1d6317",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8aa683ce-1ffc-4373-97a9-e1b6c000b8c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "723b7319-aade-4a3e-b4e2-6a6fada0c9e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fe31292-7725-47c5-9985-462993a57018",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d49a16-4894-42c4-91df-287fc471fd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671f10fc-ae99-4bcc-b709-51ba37cd1c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a540ed91-3141-4f54-ad54-ff4f2d583df1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce42f358-0873-45c1-b2ec-19ae88eb0fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d609c73c-2fa4-4d8f-be8e-ac1405e8559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b40f6-718c-480d-98d1-042c017f4754",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa8f883-8ac6-493a-8c64-504310e274b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b719276e-21ad-476c-a031-07658dd0c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a7e5cf-c9da-4a2e-8e58-83be3a4c84c3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90110268-264d-469e-bc5b-eeeb0c95d9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24876a6-0913-4649-826b-0ea400a10ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3400be99-2f7a-4f32-b504-319c92ca71ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39a3253-47cc-45e6-bc60-e97ac88de2fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00742a7-f6b4-44ea-8744-ee43564eb3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388cdd70-8670-478f-ab25-e3ef24e260f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c202492f-e779-4d65-a92c-ad8f7d579357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c50ca4-b429-4af1-aa55-c06c5348cc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff311f12-377a-4c1c-af53-04c92920da2b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a13de2-4742-420a-9ff7-626b5d562250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6333f554-fe29-4bff-af3d-6880da0f6a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58f3496-4826-4feb-aea7-446fa331b190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c34982-6b2f-4cb4-b952-de63da01c3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be0de41-bc24-4d35-9cf2-43914f39cde5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ec7a17-5631-458a-8db8-72f5b3246be1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec4c2f8a-3bfe-4baa-919d-f6660d60fec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebba5119-daf2-41ab-a41b-ecc3bb4a4486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458de9b3-1576-4478-822c-79557fb71daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff64607f-22fe-458e-94d5-e51a55d054f4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cbebbc-058a-41b7-9576-a33a7617e5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c9a976-d661-41e2-91e6-046e6a31e200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c738ef-98a8-4e5f-985e-206de6f803be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5867f8c-8bdb-415b-bd83-cfdc6f15322a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a786e4-18f7-476e-8a43-ebc8f5f94751",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01595b-cf6e-413d-9c2b-1434229f7eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8371c83-0b37-4d7b-b58d-7d63d9f21dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eb5cab-de8b-4ccb-9d11-e19168eb75d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedaae77-9353-4ff3-bdaf-722291ffbb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32281a6b-6d40-47e0-88c0-bbef797889a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e5c2bf-7cb7-4031-844e-f298df397c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7107b02-48af-4ed7-a548-6932848a3e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81d29f6-8070-467e-ab23-4049cfb845d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7556e16-39b6-41ca-9787-0d2680238063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebdb53-9287-42f2-a4fc-9e2b57994c8c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adea6686-1a25-44c4-9b0c-010c971f01d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30eb83f-70b4-473c-b728-48744f82a1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f457599-5444-453a-8253-19a4be3a8e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c393358-3c30-4296-b5af-4b34335e7da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b01a9c2-1084-4494-97e9-783fdc60d4cf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341fa75-3191-4718-a9a3-69b6f63a82b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "767ef7ff-7cea-4381-9048-0af02670ac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c247a3e4-67ba-49b0-976e-4de20b9534cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bdec86-4f97-4ec2-a21e-af0a262826a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e74e56-fc5a-4455-8e1a-a7ce002cb995",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d796ce-7263-4ac2-9f31-d8e5b035bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9758b8a0-b75e-441a-822e-b9791599c94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487d87f-bf4d-4882-be75-cd6b0b63cdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17015c9e-8992-4c93-bf7e-6d1df339afab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7cb019-ca75-4206-b870-8d85fd025878",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eaca3d-dcad-4ffe-8c21-08e6d3d0d577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768b9f9d-c622-43bd-b492-0a7d13a60ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d818d20-4cde-4fa2-823d-6cf50c343640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5896fa66-ff34-4402-9a07-545d55e52e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacbe53-2382-4925-8661-9a5f88ab7eb4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051bd4e1-1d19-40ef-94f3-25d982fc6453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696013ca-34d0-4bc4-bde2-8455a426d452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6302db-9f66-4e3d-968b-abc9a7ec9eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364a725c-4634-4ee7-82a4-3e85a7a030dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad9b3a9-8048-4224-9723-9b7a6ada196b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7a5c0e-b3e3-478c-9447-2bf0907f6c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b20b3ba-33ac-4f08-8665-4ffbbcc90ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4df5cb-4dc6-4d26-a385-057d273ec2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c7007e-a131-46ac-867b-e9ad396382ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869ce7f9-72b6-47a6-a983-8af24b8c5da0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c613a722-7778-4859-abaf-1669cabd86d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcaf90b9-eddf-4bdd-a59d-a835b2cdc416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722d51e3-f871-4dc2-818e-a346cbf7532a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a651b64a-048e-414a-be2c-056013d4aed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e885188c-0292-496f-ab6d-7622da898fc9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2e0275-1746-4818-9828-1eed67050a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfcf695-5bd2-44c6-8c7f-e3ab6a93fe36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583ed9e4-a3ea-4290-a4e4-4b0df8d55a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1848eb3-4790-4a56-9d7e-93de1261d442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69b253-a42b-41ae-975d-a01859cb27eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559316b-cce6-4f2e-b771-5397043bb428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a9257c-6304-40fb-b137-c067345e174c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187da62f-b641-4f9c-902b-b69057a00ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd21e91-18fe-408b-83e6-8d8b48247b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1df02e-e45f-4c40-a3d4-9b73025e413d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5195a9-a25c-4166-9a34-6e1f7238ba43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda39b1a-d149-452d-8bed-b612105d0498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dba5d90-6a20-4c2e-83cc-77f1a0a6428a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e16abe52-ca2c-4a39-842d-013b64dd7202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dbf3a5-8952-4264-875f-d699dc9d6c66",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79f85c7-4ddf-4c83-82f8-e24a423fa123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9e455e-775a-4805-bda7-06b7bca17724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97b41dc-8f00-4e14-9169-a159abc3eadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d79448e-55c4-42a1-bbae-eb8ae1a0c8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8c350b-38ff-415b-9ec1-ef2857ac91f3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94759b98-eb29-4843-9402-454ddacc86d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3176e614-962c-4dfa-9dcc-7fddcd49ea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a991d999-8b13-4af1-94bb-f42614d849e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203236bd-e905-44fd-836b-6f4fec2b6e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8482598f-adfd-4c64-90f4-304b4e80840d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d8f3cd-86da-4482-8db2-2d13f7c536f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800cbc89-0003-4e90-ae6f-382cad563e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce2c041-349d-4a8b-8c70-4e418d8139db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d942a5c2-51bf-4b18-a336-13f9f8136f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd8c656-4c47-422b-b996-657ade67f18d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cb2ff1-8b44-4d0e-90a4-ad9684b0682d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ec445c-5282-463d-bb63-de1befcbbb63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7109218-29d9-4aea-a61b-4dd1a9b77d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681c49fc-9da9-4b47-a213-f9439854f922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648fcab6-67ca-41f0-912b-39efd88dc733",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c29ac4-9de1-440d-a98a-92c63a23ba63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0539b31-71f2-4501-b3f3-3547e7730a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b107cae-fd6e-4556-8994-1d8b4b4ebf3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938d6bfd-718e-4799-97f6-7821c6bc411c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad57c8ff-94dc-402e-8285-6f3b18c5b787",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b917984-42b2-40c9-bc11-fc0e43be2d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cf8b96e-9116-4c73-8596-b406163fd1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a98de8-3374-4ee9-b24a-1d0e743dc61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a7b1b7-613c-42de-a752-0aaeed5770df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4712a388-794e-4ba5-ac44-32493eb0decb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4044f5-8950-42d1-a648-6f3dabe5eaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f7c78b-16d3-409a-9216-a7d64f670c05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6602f245-fc89-41a9-9007-88ce0577ff3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba45034-cf46-472a-90d2-0b7acb530478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23468d94-9729-4775-a298-ee422ccea1d7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8470a40c-e3af-4792-a4ed-c1397031a2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aef0618-ca36-43fb-ab99-1f0c40535c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1b83b4-4b23-4b9f-8d78-091a3b5cb343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6722d6-cf20-4ed2-a776-477957a2a7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3212123-a250-42ac-bc5f-8583aeda266b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77958a7e-4d3a-4db2-8586-509e1f244a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e3218b-9807-4524-88c5-a2ee0dffd2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55723aca-ab2c-4b41-a6a7-164e8b4db3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f40bd2-e69a-4b02-8c2e-4dbe869f7d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4322bbdf-69d5-4c84-bd4f-4fb877b5cdfb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1194ec2-a93e-438e-a12f-32090c414127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652a5812-eb39-416f-b4c7-b0788d7a0adb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0085b6-542d-4542-8c7d-85cb5908bc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5531e75-ee88-425a-aebe-1171f72cb0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973b52f-7d40-493b-8577-1ced49b756f3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c7101a-fee0-4bbe-9917-e543ac627a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81706f8f-12d8-4c6e-a6e8-4eec8f098dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986b2e1-c222-46d6-adde-ec2d92b5ba0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2330f0fd-05b2-4135-8db5-a2d135d07dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25fd9f6-7cf1-4781-b246-9a6e0b89d5d1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfca52ce-cefa-4536-ab45-00b79024efaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d2e35d-6853-493b-abf8-c66cbfd3b896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ce0c5b-a5e3-4394-9b5a-a1f24d4a63be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3ded29-8b9a-4af2-bb7b-3acbb7375e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ab5cbc-0962-4f42-9d1d-a0ae373271f0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3e565b-5258-467c-ae7c-8c5be25fc7a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a68c2c8-cd7d-41d4-88cc-65ef379547c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a58bd7a-e466-4b25-8e3e-f4c930d99661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23e9021-b74e-4c20-b240-38f29475451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b45f9a-7c65-4ed9-9d99-b315824d3a68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba04e64-44b0-4e66-82e5-a09187ed99fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4900fcdc-8c4e-4885-94c0-f4d68d0d9032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2dd97b-8b4e-40a8-8bae-14201e3948fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f9ee84-a8e6-4e1a-9e36-001617792202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e46aee7-9bee-45f2-bd08-cefaca5dc6e4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f306bb5-8b84-4786-9e50-7b94c27d460a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5a058e-ae4a-4012-87cd-2e3683d20fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ce0e2a-4ea3-4d41-87ae-ade9d31353c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9af41de-8036-4d2b-902f-87b1f2edaf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649033ca-363c-4aa9-ba21-8fd19967075a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec89d0c-a05e-43a8-a391-249b66979684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dc3924-4310-471f-a450-ad076d17f799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0741a4b-d8d6-4408-a8e5-e3aa22abbd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2619053c-c1b7-43d3-8a0f-ae8cbc18eede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42946ac8-86bf-49fc-bca5-c08a860950af",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca26ef-5449-48f4-bbc3-ad36824f3b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb744ea-2d03-4bf9-a650-492ec98a3d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd80d4e-e1e9-4fd9-bd92-1c56a21b6e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78835fc8-53d8-4f65-b8bf-275bffaf0a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ae02ca-c2d5-4a10-a22d-84c2d50aab7c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20643b6b-0419-4266-a81b-503662340122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f4951b-4b53-4e65-ab30-2e93a1879944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3714fcf6-8125-4d97-9064-c568eaaef3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e78ba8-3834-450a-a18b-9e6f6f6f9926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8974d-dd6b-455b-a956-9173ae5e494b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dd1550-7901-41f7-9814-58768a34d571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1856a0-ca72-4968-bb31-7fab0fde2e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4724d80-4d30-4482-841a-bdb7152854a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf1f407-224a-4c40-8fba-1fddefb0420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f640d629-9e9c-4f99-8b0a-91e6e09aaf35",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2ebf74-6aa3-4fc7-a4dd-372252a94117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d9b8d7-5afb-49bc-9d77-d8e0be5e3b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5972f0ef-83a2-401e-b6dc-c60d068c8f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f88d67-e95e-4723-a10f-687eb159cddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4972df92-0cbf-4731-bee3-925114b91955",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73d8c7d-c975-450b-b813-4d55794db7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5431cc33-7cee-49f7-b14f-1607115a98ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cbd76f-5f10-4e85-99ab-a16f9f09de87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b75838b-b8d6-470d-9af7-f85ec89ab502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdab903e-3c54-4090-b7d6-a052a904a1a8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7005b691-85f7-4e29-9be7-da0c0fdfca37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac28ce1-7c55-4bdb-9eeb-09d61e2e81ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e900d4a4-eabe-4067-96a0-aba74d99774c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8a304b-f295-4d32-b960-f87be0ffc2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b189eb1-4a0f-42c7-bd25-c6420a5f01fc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1eb347-89b7-486c-a393-68ab910f183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc6b5c5-d538-4cff-93ea-65d45f12565b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16960715-a2d9-4b71-87c9-c76d2b2e1340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af25365-82f6-4ab3-ac68-2712c9011261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440f8fca-f0d2-4bb4-a356-b41c1d1f0777",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93efd06-56f1-416c-93e8-8fd23eb3470e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1114a-9faa-4c60-8817-a47b0ccb307f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7055e445-7668-4906-908c-45a65cef5cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6f4deb-1241-465d-9a9b-d4c6087e2c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9229102-3deb-4674-82d8-3829e1b53899",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ece57b-8251-481e-8027-e085f8190cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7cc960-2a5d-427c-ae55-54708452354a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9aab4f-6b90-44f7-b2c8-e2288e71ae50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455f64ce-cea9-4982-891f-07052c431055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f944b08-a766-4fa8-8330-a15d485b68fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb21a1e5-426d-4be0-9323-00b35386b957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4bf8b3-1028-4451-90d8-b7b51e18f5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef04d20-0f3a-41f3-8262-9dc7a4fecf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a7dc5a-d768-4ca9-a6c3-339eb1b338d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20396eae-3f22-4e40-a3b9-bab32bafcb3e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f0d74d-8b9d-4d82-b7e8-ea2d26d4e65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4f1538-b7f9-407f-92f8-5ed25ab6a523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e983501c-4e47-4d47-a4f4-49e38f7bd31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f861c9-3981-4c7d-9ae2-57a985561ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa79d91-f7d3-4cf8-a95d-808447c5f4a2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f55a1c-5b5b-485b-9736-84d9ea659bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8b76ef-a2e1-4fcf-bf9e-0dafd8a81f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7df625b-ce78-4886-bebf-9b7a48a2d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839af5a9-cbf2-4dd7-bb8a-51d1c2db0180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b84bd75-5c1d-4ff7-aab2-c967de41e005",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ce634e-782e-469a-ad5e-4c21f2611ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64e0403-2f5b-48d6-a355-ffd911a98705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6f3fde-403a-4c6a-804a-a2ca52acb894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7a0d9d-3807-42d7-b928-c1d59435b89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc5f5bd-1b1d-4861-ae3d-abc6766abd72",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee165f26-bf24-4793-adb6-7f6f7a8ef77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32544141-12fc-4b47-b063-ba83c708ba18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae4d4f5-54a3-4707-9120-17e7dd52f318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bc2dd6-bfb5-418d-8ecc-1dcbea4dc1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05dfb7-184b-42df-b88a-57ebe5c50dbb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40607a43-1e8c-41c5-ab31-fe91ec0425f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599bbeff-290b-4b03-9ea2-800069b7af96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d4b16-ab32-4920-b8be-32823c830149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2134f46a-c3ef-4752-9114-12f7299672b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74248f69-c446-434d-8e51-71d0c2c12431",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aaded2-525e-4e2a-9a98-bedc518f2a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a76055-400d-4a57-b349-572ad204bfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3c4506-9749-44b5-856a-8f3f53262a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262c95d8-b8c1-4fa5-8b93-25221b04ffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31604ed0-6701-41dd-b821-04087d3b8c96",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a27f2f9-5fcc-4592-b2d0-750fcb585562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc6d04f-0f1f-49db-8ace-06763ae4da5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36c2371-4de5-433b-b2d0-aed0f579223b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b73685-cd15-4916-a43b-87b69f95b210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ca3dca-ab4b-4096-b53b-5ff19e0be0ea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef246c6e-bd44-461a-b30d-d74fea006c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5081e529-5087-4a56-b5f3-c4aba5002617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182c6678-73b1-42a5-8d4b-79127c68108e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30531bc8-135b-445b-87a6-8e8bad133437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ba7177-f13c-4985-a1ef-454f57c22a7d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb737d5-be02-4175-b9ee-89103c972b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561fb5c7-d69e-47dd-950f-c56ece97e281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ea6aff-fdc5-4984-8cab-c970038ad8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17180e03-de7d-490e-9961-c50ba86a8073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccb687c-9469-4e80-a243-be602ff7534c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7944dd3a-25c3-4661-8fd0-d7f7d0a592b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6ba9b2-3b29-421d-ae3e-b2506c0f725a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6f0f6-befb-4e97-8ed8-2e8a37de1daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bcdeef-d4bc-4435-b6a3-d123f93817ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9a755e-68cb-464b-9c6d-94315d63acef",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581de370-4624-4eec-aaf7-49b2af47c26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4410e380-e23e-4b63-a40a-b2d084fd22a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3992d011-4002-48a3-bebf-a64bf92c50d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d53665-885d-4b02-800f-38ca406eed26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e897eb-e5e3-429c-9045-07048cd72cab",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f44ee3e-d253-4dd8-b148-f6b9b9783692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9175b512-2db5-49fd-b1af-1506758d13eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a7f157-7fc0-410e-9cfb-7df9e39823a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b948603d-e62b-49b8-b989-6887edf4b364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d359632-7bf6-4118-b626-b73b741cbb63",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8bf3cb-7674-4c9f-b738-01020cbf83cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23896316-93be-4ae8-9ff2-731b65418858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308f9064-1ac9-4f3a-a8d1-26879bb21be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075ba4e5-d68b-4490-aa78-2bc1c6cb38c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f9dc24-c8e6-40f3-b748-b2fa7f566181",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ecdb18-c0f9-4b9d-b6ec-d9f143ae1ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8973f58c-e3b5-474e-a0a5-5ef82c9b270b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04da926-d24f-4c9b-94c5-973695166e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9013995f-1847-4913-bc67-30f0eb722e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5a5f7b-97e6-418b-9361-a8f1f8d9197c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c6be04-cb0c-4e4b-ada6-9d5a39a95172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbdc837-2d35-41fe-91b5-2eddfdaf3196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1bf4d6-a161-4a43-8115-d8a28c1781cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792b7742-bf80-43c5-8122-ad08c9f6611d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8eb8d2-2d10-4665-b518-acab98e46072",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e08c2-3c45-4c1b-91f9-888fca3ecdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858ac368-690b-4dcb-90e1-d4e0d55b078a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be17549-6802-44ac-aff0-ff1dbf1bf7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ada2730-3a98-4409-a6c7-8b252f736b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec4d726-7eb2-4021-a230-e4e8eb2cc3ce",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc74eea-72ec-4c3d-885a-a50264c89d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bcccd18-559d-4794-8dd2-ea66238be8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98754ccc-66d8-47e8-8a4b-1fe9af86b312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3025ba6-ecdb-4e60-b735-1457f387de8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da073d4f-7461-477f-aca3-e509e60b0869",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba963d8-ce17-4ef6-9c0f-4e9c9ec5bd53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47353baa-6ecc-4307-9615-fe804792e9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff52cdb-e187-46c3-a23d-496cd4ae7bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a590a170-d973-4ef3-8a72-480c05b722a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc799f2b-634a-4429-b4f7-e9fde73c66d1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c401221-b7d2-469e-9539-41a20733e4ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3187b117-3f38-43c2-98fd-6d97bc0f150f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd8efd6-7b52-4a58-ad61-705974e14177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fac2fae-da2b-4425-ba51-550dab7cb26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713d9d39-a4a8-4594-808f-9a01a6b7617b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04cbf02-547a-482d-ab34-a83bedfced13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf0544cb-aa3b-467c-809a-63c12aa83bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dce0e9-6b8e-44c9-9628-ceb9877a34cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d20c7a-dfe7-48a5-9dae-c98bf4ace301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288917e3-45cc-444b-b6a6-db233a6f9e2d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1d9d95-1a64-40d6-9c2a-d4e619d9648d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29f0ffeb-78a8-43ba-96bd-fb1960e6897d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eec2634-72e9-4b72-8998-e58c8f0f3e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1100582-8292-4874-b5d7-c1dd224966a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4b44f1-20cc-4708-aa9b-881b27b8aec1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a0bd16-1614-454f-ada6-40aa4024fdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "289f48d2-a26b-4cf9-ac08-d2e27e2d9e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421896f3-d5b2-4bf7-9367-399f5d29cff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894d4da0-709d-4960-b032-2ff50cf2e0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a65c7b-b02f-4c2b-bee0-c810f3d75d06",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6229d98c-efa1-4b3d-bdee-e8e961d62a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7057327c-c1cc-4086-a2f2-e7b4188dd751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29621b9-65ac-4a42-a142-fcfac567e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cfe656-998b-4fc5-8170-ebf0149d5971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6256047-74d1-496b-b8f1-9ae8b40503be",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e84daf-393c-4987-ad5a-42be148369ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d7c10f-d9d1-4b21-9511-40c4f141382a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25281cb2-61c5-41f7-9c51-b7d08693861c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eeafb3-f668-400d-a3ac-908244ec98a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea857cf-8977-404a-886d-222b88d7067a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91076803-d6db-45ed-a166-b860979276b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f318933-a379-49ad-a99c-4f97ea8c0273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a3e20b-7f3b-4f98-8cd5-6a937d690968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97566c7e-8b73-49ad-8d69-e1983f052fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6182b41-f79a-4905-8d08-16ae9c727b12",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dce6ab-27ba-4916-98fc-b8b9fd0319d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342f8fba-a831-4bda-b02b-13c5df158ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9439a-ef00-48f0-b4b5-f19e4d9358d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d16d427-8914-4284-b1e7-34404604da2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e353f-f4b9-4247-935c-b1d44243c044",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb4475c-ebff-4230-8664-988efd7187f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1e318fc-1bf6-4ab9-9295-b166155cb5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4983ae80-b191-49ca-8c1d-eb3d01fe04e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13df69b9-8165-4841-95e1-4dab0559bb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141ae4ca-97f2-4524-bda9-c86eea8e26c5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d7f475-b490-4ac7-946c-ab94823e5380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ab9b7c-57d5-4612-b7d9-f4975d8b01e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657806f0-a8b6-4476-8827-2bb2af9be039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1755275b-033f-4c57-911d-211579b7a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf2d9ec-8207-4206-9873-2603260feb23",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2ca31f-28e6-461d-9c5b-1cb00cd2968a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa820241-db3f-4eea-982f-c9f7223ea974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a95a6e-c7b4-4672-9578-ff34ea45f00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d318460-6919-4439-a8ae-e6bbeed768cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e405b7e8-b5e6-4eef-b128-ab0568419acb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e9830d-6db0-4f7e-b594-dd274d150b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e25e93-8600-47bc-89f5-9f63be29794c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b913262e-dabb-4c32-9fb8-fafd2471f7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010bd9c3-11f4-4f77-ab81-f6b50f9411ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8531d8e-721b-48a6-9d12-8699f19536ef",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5524f1a1-42be-45b0-9ce9-4e13657b5b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c01ed92-f097-4f2c-aa8c-3db7b019c4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ce167b-63d5-4043-81cf-6cd6b2642aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a00413-14e3-49d4-a0b0-739a5ddda7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6839c8-1fbe-49df-9996-23961ea76b8b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d114f6b-6529-4d05-999f-392f559cbfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b6afef-6423-456b-8b03-7c257544b3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164c6fef-475b-4eeb-a994-2fe75d331961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082ae669-5269-4f37-9228-60ebbc9b1ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58811251-8226-4a35-9428-32007d4c57a9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36146ed2-25b2-40d8-b0f0-93a33a27e655",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e5778c-4e23-404c-b676-4f4766edad1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6684758-4585-4978-a86f-31910c2f15e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a239c0-3ad1-4b3e-977a-738b07977865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd92b4ff-3760-4e59-937d-86457ba9f2ab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3619ad06-14e7-4ed6-8ff7-e6e07ddb6f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5d6048-1ab4-4467-b0db-3c6c33d82e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c0e73-347e-4408-8572-322dd4ec305d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d25c3f5-d06e-46ca-8c89-f15ad38924b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e12a79-fe59-4975-9749-1217429c0ed1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b95566-71de-4ddb-b26a-869723eedcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c579adeb-f1fd-44c2-a497-cf986ff4b7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be02540-c637-407d-8989-b2dff94039cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3a0f77-24dc-4806-96fa-f7ea7c4d60be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff926e6-dd0b-497b-b8d7-ce26cb0dc446",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98af3a04-e456-4f25-aa9c-107ffa53fa1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0b0cce-29d8-49d3-a3bc-5bdd11ce11ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b19e13-60ba-496b-8a04-679a46a1c2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5540e67-b9cf-4dcf-80ae-6d26b733134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbf632f-03e8-4b1a-9510-2ceab4212526",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ea799f-38da-466d-bc3f-01dadb6e4161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c1f7cc-f237-4dc4-88f6-da1231895ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988ad3f8-0381-4a54-9d28-c50a82f28ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7164e32e-e0c2-4ec2-a1c1-8db857696ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4773e2ac-3f59-4695-aae2-44b5e54e40cf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d9fa27-1ba8-47db-adea-19294081f489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1dbe584-5d67-45e9-bc7b-c60a08c22798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e9d837-9783-443c-b2cb-f56f962f7b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91405ec-d415-4404-8166-edef650b0bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf1420b-29dc-4d9a-99c9-733a010902ac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b707a-bcf3-4e35-a4ab-474ef7186251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67b0b552-8a25-4fe0-8184-6752bdc05160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d5187e-22b4-4593-b64b-320b45f7922a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a3c728-4811-411f-a5b7-f863908628e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1309d61c-4f36-4dbf-8482-23b6009698c1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8144c90-5713-4df7-a652-6e9df22bfacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b1b312-e8e8-4630-9387-29d83c65e1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24af160a-a9cc-456d-a12a-fbe37d485afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d384fe0-6d08-442c-94d6-822a3ff8a0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f957cc-a96f-46c9-ad66-30f7da45b744",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118ef817-575f-453e-8886-760238480f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f05daaf-fb99-4bd6-b6c5-a8bdc239b076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bd8dd5-4354-47fd-b0ad-f7c78e291c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976c03eb-6f3d-4c61-b311-64c73a777ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52fb853-071d-425d-9ba6-e8238aab1455",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88cbccb-e956-48fd-8849-bb8b534382d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "488d58a6-488d-41a7-840a-71c38f4c35d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647075b6-4155-4f21-874e-69ad1b7508be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5db97f-4454-4a80-9a43-dc98de9075c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab77822-9e4d-4f65-afaa-b125e1e144ae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcc2e4a-4d25-4a74-8edc-e0fe2dac7029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14927ff2-28d1-4e43-bc04-0ae8f4cf797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b60bfb8-03b3-4821-b878-6dce0e65d696",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0476c4ac-e30d-479b-92f6-a35d584b2dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a3c685-6be5-4950-b3fb-4c49fadb7655",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f431ca2-b12c-4d96-b3a2-bbe7983b5b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2f3828d-a233-4ca0-b586-f14ef6325944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b712797-5cd9-401c-b0ca-c917b07f214c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57e31b5-5b74-4616-ad8d-aea7dd883413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d1f26-2d37-4616-adbb-5cf732b43cc1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca21986-ce16-40ed-90cc-cec0e978726b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9d136d-f61e-43c3-b00e-175a92abf4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4349a08-4f23-4fd3-91fc-0f4ad46ba3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccdda8f-f8de-4519-8706-65c9a4890938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703f5a84-13dd-4bce-85c7-29dae1bb62f3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d7bbe7-7de6-4f40-9cd1-af893af165ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26087f7a-4855-4a35-9ef7-404ecc0f4cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59c1580-cd03-4985-b0b5-b62f50c45bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5c7a88-3f82-43dc-b1aa-8e96dcfca4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d45193d-923d-4887-a4d6-4d54bebcb7e0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b538b8da-db3c-4b96-8407-86dc51842576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d57fe3-8045-4ac2-8286-16b37943c866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29953f-55b6-46fd-831c-516a16b3cfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da67dab3-934e-49a3-83c9-c694fcc58928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7313646-2a44-4091-850f-39e6019ef84f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff3e102-bdef-422c-979a-a3ce9ea9a70d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc84a5b0-f18c-43d7-913a-17619459ee87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd07267-bf3b-4bac-a15d-5e608f8eec6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e667b9-b6cd-42bf-b194-cfa8c009cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99012cab-15ff-4983-9711-75f5f5bc938c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a9e5ee-9871-4095-a7be-db713dd49231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7691c267-ba1a-4c82-92b7-da23568a0dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e711785-ce83-4d0e-b90f-b37e33f120ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa6576f-da53-40ea-aa58-7b39fcc00314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0893b42-812b-4c4d-a9a9-8c8704ec30f1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1791b545-21df-4bf6-b5b4-bec2c087e799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d31e1b5-5a95-4355-a6ab-d960b4ace60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89629bf2-65ff-4f9c-a2c7-f89146b8287c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d907f9a-6af3-4bd1-a9f2-005a4b9c50a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f31bc75e-3dde-40cc-b4fd-74ec307403fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d3cea72-9172-4172-b4f0-e64fd9ca88f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a463a737-6a33-4bb8-9794-9eedaf1cd16d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "912d7ef4-d697-4ded-98de-1e813a5af9da"
                    }
                  }
                ]
              },
              {
                "id": "03353473-c19b-4c7c-ab1b-ca540e477c9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37f34270-727b-4ef6-ae0c-1a361e9b6473",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59081e6-20dd-4ca6-9ff4-10c93cb13116",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "408982ac-1787-4b32-bcab-41dfcb43ff54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56bab3c-e19c-4f1b-a0bb-6d3cabd98891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36ff75ef-dabf-404b-8158-a434b4857333"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5445c68d-310c-4f05-a8ea-a99efb73e7a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e9846a-0dd4-4950-9052-3b56b2e87aa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b14fcec-0d8e-42f8-92a7-a5540dcab72b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b323683-bbcb-4a5d-a161-6b9ba4cc1c27"
                    }
                  }
                ]
              },
              {
                "id": "0325924b-ab9e-4a45-aa96-fc0c53e1172d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "99a1708a-306d-4e2f-afb5-3d0ccbc3e628",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c819c-c6ea-4f93-b3bd-da892b3af0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "24d0045f-e79f-4ec8-a0b5-b9fcb61e4443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14960b0-17b5-4e1c-90bd-ca0704ebd39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c22df47-333e-463f-aea1-9e45d5be817c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4138402d-8a86-49c3-a2ae-6698a5988aea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "13fd34f0-4de7-404d-8e7d-559ffad0cada",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3311b6b0-65ab-4d08-9a57-07eadd50c8c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bc78485f-c62f-4b22-9ecc-1d0747c73a86"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8baa0dca-fe4d-4688-936c-66285d91e24b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f91d9eb1-7655-4481-b08f-ee07f3799bce"
                    }
                  }
                ]
              },
              {
                "id": "7e0e628f-58dd-470f-94f9-b601d31a5d2f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce3bc32d-9128-42c4-9a99-807b8a2bb05e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d67ac0b8-e988-4faa-8c74-6f56452c1418"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f44b35-e8b0-4d90-887f-25cecdabde5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed358fc7-2dfe-4a5b-a592-c4922a4727b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b85f3c01-ac05-4ee4-a954-7dd003cf8261",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d57d203-5ca4-4890-bd7e-13553714b06a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60f4dbb9-0d00-48ec-8831-8cf87152dc4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b125797-dc6f-412f-8730-de13c1d35398"
            }
          }
        ]
      },
      {
        "id": "7b19b55a-9df8-47f1-9f28-8c9ebb160fef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4af5e02c-193b-4761-bdeb-5f06c6d05e2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d226223-0683-4439-b375-0eeaf415aea7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8475b216-58d3-4ac0-816c-05af65f8b098",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d7b49b-7586-4e16-a04e-4bf619afdeb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28d4b196-1bc4-4b11-a437-93d0cdf13a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb079cd1-5e8f-4d6a-a8a0-cc0a575a15cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04d83e09-5b89-4adf-80a0-4d50d8d2f324"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c1928bf-4b62-4562-b497-0ff53b4e41cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c25fb33e-a831-4ce1-9e8b-d022f307096e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "428c9a9e-9bc8-48f1-90d3-2470c10a3e61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e1a061f-2e4c-407a-94af-f8257a3a4eca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39999baf-4949-44a1-9466-b267d2a9728e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "097e0613-4a43-4a8e-87be-bf426bbfaa01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2f3c377-fc9a-4e60-b95a-57b57f83d6eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c96dc26-d5a7-4b59-a2f5-7394d1eee1b7"
            }
          }
        ]
      },
      {
        "id": "61263269-6c46-4bf7-99f8-185bf3199f95",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f3cc407d-b172-4a5f-9e60-be537ea33be0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "146ebb20-5b9c-4799-98a4-bee598f0bdb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d4fc681-fde4-4227-9a63-7749880dc8ba",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b797e2a7-d46c-47db-9955-2ef2888fa50c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fffb7004-5845-4422-9d14-ca084b6bdb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230cc893-c5af-4f13-83a2-66adca3c1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d1bbcf2-5209-415c-be8a-8639d3406a6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff42761f-f90a-4010-bc56-4c25f4e8ec77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d626432-4050-4dd2-8ce1-72711258e7c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5998224-3558-4eef-88e3-a293a1f2d81e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c38db53-ef2b-418a-ad62-e47ed2105707"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed66516a-68bc-45c4-aa3c-bcf0f2745b12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f8ab7de-749c-4dd6-8b03-c5af2183a51f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77f7be7f-1a81-469e-b71c-4969dc9d1f7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c294ce28-88ec-4215-8f52-6c5ea3759b47"
            }
          }
        ]
      },
      {
        "id": "488510b0-082f-45e6-b580-cd6d784290e2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e33fdfbb-8f48-40f7-9c98-d92453e36f02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b61d2ad-896d-42a3-9144-0a7c020296b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55362ee0-8192-40d9-b00b-ff05d22b801c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c52c6a-93b2-4a26-9250-550ca1ee69fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726edb40-702b-4854-b00e-4016a3152b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7c1e1a-7c25-4e64-b846-978c72a8c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6e42f86-dc18-413b-99f2-d9f4853fc65c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d506cd75-bd01-4eed-8da3-e5a326d10a05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d8bce91-7c60-4f0a-985d-97dcc8b67c46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17908102-4037-4d72-94df-43033405ead3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17a28684-3b98-4ac3-ba6f-29d076ba5241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34a35638-293a-43c0-bad9-0eb85bef2d26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5b97055-fe9c-4a82-921d-c799285124f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "981ccbfb-1ab2-436f-89c7-17ca1039907b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81c7539f-87a4-43d5-a475-e38d5ecbd688"
            }
          }
        ]
      },
      {
        "id": "36b008e8-4920-414f-8ac8-2f175e36c92b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd5c991-02a0-4455-a3fc-8ac022bf21f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac3108c6-aa7c-4e2c-97ce-0252f0df35af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "78fd472c-3b02-4e85-ae5d-f30a5c64081c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb88af76-b10f-4828-8ff0-c02b601c4f0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fce8a355-69f4-4465-a1dd-e21cc694e286",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 276.7218309859155,
      "responseMin": 8,
      "responseMax": 6202,
      "responseSd": 710.1039227273021,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690936769753,
      "completed": 1690936861971
    },
    "executions": [
      {
        "id": "6e16761e-b432-4b17-8ca7-e36f54d72fdd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c6763dc-1297-49d2-b72f-49fec02b76ed",
          "httpRequestId": "fd4597ba-6618-4a53-96bf-ed38c77ce56a"
        },
        "item": {
          "id": "6e16761e-b432-4b17-8ca7-e36f54d72fdd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f36b7066-9dd5-4b06-9fd8-fd9a3253f38c",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "32e7e462-1eef-4a44-876e-6248d6885c47",
        "cursor": {
          "ref": "351fae0a-0cdf-4fba-baa1-613d9b0e982d",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d2e9f844-051b-46cd-8230-91239011c863"
        },
        "item": {
          "id": "32e7e462-1eef-4a44-876e-6248d6885c47",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "934106e6-9bdd-4161-a234-32ba8b3df044",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "f73e0d8e-73e0-4be5-8a90-7194cce16a04",
        "cursor": {
          "ref": "ce8af0eb-2007-487a-aa66-b3f9fc45c42a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1e785df8-3279-40ba-8983-49987d127811"
        },
        "item": {
          "id": "f73e0d8e-73e0-4be5-8a90-7194cce16a04",
          "name": "did_json"
        },
        "response": {
          "id": "d11bef3d-dd1f-430b-bf89-532b1b283fce",
          "status": "OK",
          "code": 200,
          "responseTime": 438,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85494328-cbf2-4c02-864d-378877f269e4",
        "cursor": {
          "ref": "f2078545-e200-4114-9b86-1249d5369b2c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "696fb7f9-f5ec-4d67-8824-1696e8bb7a8e"
        },
        "item": {
          "id": "85494328-cbf2-4c02-864d-378877f269e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "510acff7-5c30-4c55-b57e-5bfec63d361d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 573,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85494328-cbf2-4c02-864d-378877f269e4",
        "cursor": {
          "ref": "f2078545-e200-4114-9b86-1249d5369b2c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "696fb7f9-f5ec-4d67-8824-1696e8bb7a8e"
        },
        "item": {
          "id": "85494328-cbf2-4c02-864d-378877f269e4",
          "name": "did:invalid"
        },
        "response": {
          "id": "510acff7-5c30-4c55-b57e-5bfec63d361d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 573,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c402d0-89b2-4a92-9345-4464f6a2eeec",
        "cursor": {
          "ref": "9d6a9961-9760-405c-b297-63920ced05e0",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0e3f1724-dcdf-4165-8dea-42d782f260b6"
        },
        "item": {
          "id": "b0c402d0-89b2-4a92-9345-4464f6a2eeec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f1a4a575-63ed-4410-a23a-b1e38136d022",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bda00bd-68ee-4fcc-95e2-a94a2524c06d",
        "cursor": {
          "ref": "9b9b1912-9849-4a20-a40d-62bbe4459968",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "65583d3b-1dec-486c-90db-ffcff5ddf016"
        },
        "item": {
          "id": "8bda00bd-68ee-4fcc-95e2-a94a2524c06d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c0b57448-3972-4d31-9b1c-4bba7fc29fa2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a82562-bada-47c0-a633-bd394802fdad",
        "cursor": {
          "ref": "91cabb57-2e9b-4b8c-a14d-b9377d188289",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ecc8234-360d-45a0-92d3-d114a52f34ba"
        },
        "item": {
          "id": "c0a82562-bada-47c0-a633-bd394802fdad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6aa764e4-ba1f-4779-8a1b-afb03f9c76fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969318e4-c0f9-400f-82d4-7d7dc3eeb205",
        "cursor": {
          "ref": "d7b90212-d499-4cdd-b3ae-d1a6b76282db",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "29e00f1c-3a58-4377-8622-0162f0bd1f56"
        },
        "item": {
          "id": "969318e4-c0f9-400f-82d4-7d7dc3eeb205",
          "name": "identifiers"
        },
        "response": {
          "id": "7338f4eb-8107-4659-bdfa-a1df3d1be12c",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd1134-8602-4a01-941d-58e2f62d8aa1",
        "cursor": {
          "ref": "74018862-41a7-4477-b1f1-75d7b9cf573b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a77e68be-be50-462b-9733-53057a59e422"
        },
        "item": {
          "id": "4ddd1134-8602-4a01-941d-58e2f62d8aa1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "89164fc8-9ccc-4ab8-8dc5-c14eba29872b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b173119-caaf-4c6e-b95c-67917e8d23e4",
        "cursor": {
          "ref": "3cbd7514-c724-4c37-9cd3-aa46abefac8a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "968f8d3c-9903-4be8-b4b7-bff022a5960b"
        },
        "item": {
          "id": "5b173119-caaf-4c6e-b95c-67917e8d23e4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b93e20be-4247-4182-9ddb-b777f6d409c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2612e42c-5955-498e-aa23-8d5728867dd5",
        "cursor": {
          "ref": "1d5a5f4b-732d-4c6a-a243-4cc4b0674672",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd279d7d-6e19-4e48-9141-dfb09774d3cb"
        },
        "item": {
          "id": "2612e42c-5955-498e-aa23-8d5728867dd5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "036f65b8-273c-4cac-b317-a55c11e0873b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f285fd70-49e8-4f21-9939-a6b0b8deabc9",
        "cursor": {
          "ref": "261fa97a-2854-4b0a-b42f-bf9478a13961",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "069b84a6-9666-4657-8a2f-6a560ffd1d86"
        },
        "item": {
          "id": "f285fd70-49e8-4f21-9939-a6b0b8deabc9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "68de4633-3b48-4fa3-9d6e-d214a6851359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd34e68-aff3-4a67-b699-170cd7d9eec1",
        "cursor": {
          "ref": "5d43b7a8-e888-4971-a34d-7f8aa6a461c2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "53ded700-0bcd-440e-a315-c1dec80bd5be"
        },
        "item": {
          "id": "4fd34e68-aff3-4a67-b699-170cd7d9eec1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2a0d5acf-d59f-4e54-bed4-b7fa272c4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ec3f76-1918-4a6d-a723-9cae354bbd38",
        "cursor": {
          "ref": "acdd3ad7-e61c-4b1a-8fce-87271e9fdf76",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6d556c4d-2c1f-4264-be17-7113df6cb6ed"
        },
        "item": {
          "id": "e3ec3f76-1918-4a6d-a723-9cae354bbd38",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "db845d17-5dd9-41a3-8e61-9fbb4a3a33f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4e98f-7b2e-434d-8abc-64a25b05b8ac",
        "cursor": {
          "ref": "a4b8667e-f5d4-433c-91a2-40752a1a6cdb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2f1f5ca3-699b-4715-9a85-b7cb59f1f2c1"
        },
        "item": {
          "id": "d4b4e98f-7b2e-434d-8abc-64a25b05b8ac",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aad1426a-e49f-4a43-8e82-fedcb8ec7c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34864544-b44d-4507-b8f7-5bdd9af3cd70",
        "cursor": {
          "ref": "0d02933c-26fb-4b4f-b578-2ff240c246e7",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4547a79d-4a4c-4bdd-9fa8-79e861990d6a"
        },
        "item": {
          "id": "34864544-b44d-4507-b8f7-5bdd9af3cd70",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f33439b-26ae-4379-bf1f-b812c046f336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f77b816-15e6-4feb-b1c1-5ebfb0fb4381",
        "cursor": {
          "ref": "d125a087-c646-410f-a436-6f086ded6cb0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "44cb808c-adf9-4a19-9874-f286743ffe9f"
        },
        "item": {
          "id": "7f77b816-15e6-4feb-b1c1-5ebfb0fb4381",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f053fae1-9c3a-4cc2-859d-5fece81c69f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dffadd-558e-4f83-a38d-c7622dc84f65",
        "cursor": {
          "ref": "8530e198-f122-4e01-893f-16f26e9830c4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "de6a4398-6c90-4e63-9194-b42672936d53"
        },
        "item": {
          "id": "97dffadd-558e-4f83-a38d-c7622dc84f65",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "62968e5b-ac67-49c4-9db7-d7123a0eed8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0eb5ad-1c88-4a6f-9ea7-5d95d6b7dcd5",
        "cursor": {
          "ref": "7351fcae-bb36-41b5-a01f-961c6213be86",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "faac103f-7702-4142-b0f9-e02c56166c7f"
        },
        "item": {
          "id": "ce0eb5ad-1c88-4a6f-9ea7-5d95d6b7dcd5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e9da68a0-e4de-4f85-99e7-f88ce72df568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da31a0d-6b60-4b58-bcc1-9fff473da096",
        "cursor": {
          "ref": "62e6a851-7f70-46e3-9827-1180838dd4b1",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1f493748-90a5-4c1a-8106-3c4b5c2957b8"
        },
        "item": {
          "id": "7da31a0d-6b60-4b58-bcc1-9fff473da096",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e4451704-15a2-4ac1-94d5-d2e57d0c6937",
          "status": "Created",
          "code": 201,
          "responseTime": 1067,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "9180e66f-c771-4c1b-b764-63fad44c8198",
        "cursor": {
          "ref": "3a44d686-9f12-462a-9bb4-e93db8f2bb92",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "de9a8156-ad03-4234-8991-f0d362fc2187"
        },
        "item": {
          "id": "9180e66f-c771-4c1b-b764-63fad44c8198",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "23dd5603-227d-4345-8011-81e827cd2fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5a2f37-39a5-410a-9e3c-76e4542a9b6c",
        "cursor": {
          "ref": "0dfcd3b6-752f-4947-8728-8457e68f7962",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ad1a7b4-1b14-4c8b-b3a1-90dac043de0a"
        },
        "item": {
          "id": "3b5a2f37-39a5-410a-9e3c-76e4542a9b6c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "30634cab-a468-413e-a69a-e32b74cf1779",
          "status": "Created",
          "code": 201,
          "responseTime": 6202,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "a42d3764-0d14-4891-a317-bf34819cd7da",
        "cursor": {
          "ref": "8cb9352e-ad8d-42aa-ba98-a2055e53f9c9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9f401e0d-a8d5-4ff0-ac73-0273306216d6"
        },
        "item": {
          "id": "a42d3764-0d14-4891-a317-bf34819cd7da",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ec9e88cb-a0a4-4856-b49e-5dc32ade82db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15ab386-5fa1-4ee6-8ad4-46b26a469d4f",
        "cursor": {
          "ref": "5ad53153-2699-47d2-98bd-2ec0799e4071",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7fe61368-d142-44ea-b9d6-34e60eb0cd99"
        },
        "item": {
          "id": "c15ab386-5fa1-4ee6-8ad4-46b26a469d4f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0cd0c862-6734-4ddc-86bd-eb4938d749c2",
          "status": "Created",
          "code": 201,
          "responseTime": 3309,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "d99c5ea9-207f-44c8-9ec3-fa52a654d6a3",
        "cursor": {
          "ref": "279f6bbe-4fe4-4952-b5ca-05e71ff1f803",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "00c5bda6-b3ae-40c6-89be-f5d7db1761fa"
        },
        "item": {
          "id": "d99c5ea9-207f-44c8-9ec3-fa52a654d6a3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8522638f-b2f2-4107-84bd-d6c5aa996904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa298bb-e0f3-4563-8743-0cdc9b35f117",
        "cursor": {
          "ref": "4841ea4e-9b01-40bc-b26a-a814b0eb9bf1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "11bee642-1b9d-470b-b83e-f93b55027354"
        },
        "item": {
          "id": "afa298bb-e0f3-4563-8743-0cdc9b35f117",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "87ad76d6-6c23-4f25-963d-4ec85ff9f386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5967d0c-9fc1-4eaf-9308-e5ffd917fdb2",
        "cursor": {
          "ref": "c35f249e-3d43-409d-8194-8ba96f3ec1a2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "47060ee2-91cf-4bbc-8651-80a78a04fb93"
        },
        "item": {
          "id": "c5967d0c-9fc1-4eaf-9308-e5ffd917fdb2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cfd84c3f-4261-48b0-a1e2-7827d36df54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867d9fba-7091-43a4-8e8d-74a01f0e6519",
        "cursor": {
          "ref": "bdc34a5d-df98-4cc0-8b9b-0da512883b92",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "86626f79-3f83-48ba-96aa-310d76aa4a73"
        },
        "item": {
          "id": "867d9fba-7091-43a4-8e8d-74a01f0e6519",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a92daf06-cec7-4078-b75b-ffaa904dfd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f40cea-e7c8-4886-87d8-ce62f00847ee",
        "cursor": {
          "ref": "a0f96087-8a8f-4a8e-bdcf-6b554fd75106",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7affb341-3f1c-4c3a-a95b-45e32d868e20"
        },
        "item": {
          "id": "25f40cea-e7c8-4886-87d8-ce62f00847ee",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1990d97c-696b-41b1-a9f8-d2e9a4bd4e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eecd2b5-7ebf-45e4-a1c1-672cef8246bd",
        "cursor": {
          "ref": "ef843153-7bb2-416e-9883-1beb5f58ab0d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3472996e-9a58-4cc7-b8c5-11080d51d8d1"
        },
        "item": {
          "id": "0eecd2b5-7ebf-45e4-a1c1-672cef8246bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7abef2f5-e2bf-4391-a74d-b547484aa896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81570f80-761e-4dea-b152-6ad1bd2c7de6",
        "cursor": {
          "ref": "363b589a-b733-4d77-8fe1-7252231e5014",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4a6bfda6-c9cf-458f-8082-8e3b6b937b14"
        },
        "item": {
          "id": "81570f80-761e-4dea-b152-6ad1bd2c7de6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0705a4b7-2a1b-4bdd-9128-5f4d268a9d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f25c13-1728-41dc-a9cd-595fccf4f0cd",
        "cursor": {
          "ref": "858d0480-3465-4f15-b002-d6fd210943b5",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "44a5bc2d-f236-44d9-8a9d-befd4f16335e"
        },
        "item": {
          "id": "29f25c13-1728-41dc-a9cd-595fccf4f0cd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2d83b7c9-51c9-4ecd-b7b1-39be536e4d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a329c037-18e7-4525-9b10-675ccd6f3e4e",
        "cursor": {
          "ref": "25ccf26c-1c74-4eaa-a6eb-a77b7edf50e0",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b17db79-6361-49ea-9ae4-7cdae5b1e618"
        },
        "item": {
          "id": "a329c037-18e7-4525-9b10-675ccd6f3e4e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7cf00961-9853-4da1-895a-4fef9e2a62c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6406cd34-fada-44b0-a7c1-bbfd417d1b49",
        "cursor": {
          "ref": "ca1e0578-a295-4e46-b8a3-dd57efae16a2",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b911804b-0aa5-4619-9d7c-fe047e5d41f2"
        },
        "item": {
          "id": "6406cd34-fada-44b0-a7c1-bbfd417d1b49",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c9816de2-91ce-4fc8-847c-7f95abecc5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e203c86a-6ee6-419b-b86c-3c41ef319a35",
        "cursor": {
          "ref": "5ae6530c-3f77-478d-8794-94d16bb83f7c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1b0ee99b-a68e-423c-9aca-07026d487848"
        },
        "item": {
          "id": "e203c86a-6ee6-419b-b86c-3c41ef319a35",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4ece8a58-b833-431b-a983-13f573dfc077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f248c740-ef32-4e3d-aef4-d6035574f36e",
        "cursor": {
          "ref": "0180826e-f6b4-4839-9af0-0e7865ec46f0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6b7afef7-f140-4240-9c1d-7f15e2009a2a"
        },
        "item": {
          "id": "f248c740-ef32-4e3d-aef4-d6035574f36e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "51945c2c-8d35-41c0-b87e-531d467d8a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e72249f-a34c-4025-9b85-bdd91a22be99",
        "cursor": {
          "ref": "1d8451c6-3b4a-4cad-b591-61ebb8065e4e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "02ec1427-6a77-472d-80b1-f3eaff4a5824"
        },
        "item": {
          "id": "5e72249f-a34c-4025-9b85-bdd91a22be99",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6a924238-cc33-4244-8f0b-43d40851c87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b314a2d-1581-415e-a0c1-d0c05347b215",
        "cursor": {
          "ref": "30a15419-072d-4148-b742-b3ad83936961",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "925ce58e-3eb1-47fe-bfa8-1c94e709f618"
        },
        "item": {
          "id": "1b314a2d-1581-415e-a0c1-d0c05347b215",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1104af55-9fa5-4c3e-a3ee-25abe5d087b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c11c6f-e5be-4f9f-b896-7f791a3d2c7e",
        "cursor": {
          "ref": "6edbff92-06f8-407e-b7e8-9c612eedb4dd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d6fb5bd0-f5e1-406f-a6b3-f11a5e1d11dc"
        },
        "item": {
          "id": "f4c11c6f-e5be-4f9f-b896-7f791a3d2c7e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "103cc767-088b-4e84-a98c-abd79a27ceb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09c021d-dbd6-4f41-b79f-f2594f1ed61e",
        "cursor": {
          "ref": "fc6b0693-b5c2-4a70-b93d-ac393b6c634c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1f3fd9dc-604d-46ad-9431-db76ac042528"
        },
        "item": {
          "id": "c09c021d-dbd6-4f41-b79f-f2594f1ed61e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aa91654c-2c8b-499c-b1de-32c2d5dc2b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a0a630-4e23-4e5e-9866-060682a2ffd8",
        "cursor": {
          "ref": "2043a5af-8f02-4762-a7a9-a2106589ada7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb9b7fd8-3e43-4095-b8c4-6949409bd86f"
        },
        "item": {
          "id": "49a0a630-4e23-4e5e-9866-060682a2ffd8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "65b4c172-f01c-406b-893f-dc38109c544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d6212e-a00d-42c6-b1b4-1be6573c1bd9",
        "cursor": {
          "ref": "2f15d35f-d2e0-490a-8b4b-1aeab59de691",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3fbd5b0-1d38-4f78-8673-870e476e4f80"
        },
        "item": {
          "id": "b1d6212e-a00d-42c6-b1b4-1be6573c1bd9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "99c866f9-7325-48aa-ab67-b9bc6811b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0e9462-8ebe-4e50-a3c8-3f43da01076d",
        "cursor": {
          "ref": "160c3666-41d1-4c96-88b0-6f4fdc273e8f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22e2bc08-50eb-4672-b370-0c8514cd8d2c"
        },
        "item": {
          "id": "1d0e9462-8ebe-4e50-a3c8-3f43da01076d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a67092d2-6017-4fa0-a492-cbd644ca9e90",
          "status": "Created",
          "code": 201,
          "responseTime": 3010,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "332a19c0-6f93-415b-ae10-13e86dc172c6",
        "cursor": {
          "ref": "1ae33ea3-3adc-4ca0-8d06-530b76644cee",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "68d0d175-baac-41d4-a3de-fe145b53b87b"
        },
        "item": {
          "id": "332a19c0-6f93-415b-ae10-13e86dc172c6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b6b50827-a502-42c9-a7e5-6e3784b157aa",
          "status": "Created",
          "code": 201,
          "responseTime": 3106,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "7a0139cb-f1d2-4910-b8d8-91ec5d6dde5f",
        "cursor": {
          "ref": "13554f89-e540-4ff5-a649-9931d64b226f",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "15954923-7dec-4259-ae82-b4196feaeb78"
        },
        "item": {
          "id": "7a0139cb-f1d2-4910-b8d8-91ec5d6dde5f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36d36dc8-4fd5-420d-b407-3f8b2c6eb8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394f45da-641d-4356-9ae8-10a666f86a8c",
        "cursor": {
          "ref": "be2992a1-b533-49b1-bd83-7bd2946a7a0d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "471fe439-2602-49d4-867e-2efc738f22e8"
        },
        "item": {
          "id": "394f45da-641d-4356-9ae8-10a666f86a8c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b72cf5f8-f765-4298-8574-09ff8e298273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9915e8b5-b33a-4c55-9473-fb09dac16cd6",
        "cursor": {
          "ref": "c10abd29-a85d-4417-94a9-e04baf3492df",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6eb89713-0fe2-48c3-9aea-dd95af027831"
        },
        "item": {
          "id": "9915e8b5-b33a-4c55-9473-fb09dac16cd6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "31da0d95-2986-4825-bcf8-c31cb16717a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62907d1d-d3b6-4a3e-bb7c-8e7938c2db18",
        "cursor": {
          "ref": "b28165b8-1c79-4df9-957c-83de3a3a2ea1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc7e2f45-b2c6-4b1d-b723-5041acd24854"
        },
        "item": {
          "id": "62907d1d-d3b6-4a3e-bb7c-8e7938c2db18",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "10a1e3a2-71c4-42c2-9bec-2dace08cb983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b1d7f8-50a4-4d87-850c-1903a7f6d0d7",
        "cursor": {
          "ref": "2e482630-5074-48ad-91c3-2a76fc095f0f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b64a24cf-63dc-4ade-b02b-a3609ae4d366"
        },
        "item": {
          "id": "b0b1d7f8-50a4-4d87-850c-1903a7f6d0d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "41af512d-d557-44c9-aff2-f7bc7b79531a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2406740-2b8a-446e-a703-a5ae729cc724",
        "cursor": {
          "ref": "d8926a44-1f3b-4d29-bf48-7858522f97de",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "98402c7b-c9f4-4613-94f4-2cabc53c9e16"
        },
        "item": {
          "id": "b2406740-2b8a-446e-a703-a5ae729cc724",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a10192e-9420-43ad-87a9-0556c4773120",
          "status": "Created",
          "code": 201,
          "responseTime": 3980,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "21f856ec-fdff-497a-b88d-b75934a17c22",
        "cursor": {
          "ref": "abe01769-f7fe-4534-b1c6-9ba7fd78c96b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e158dc8-e07f-4c4f-97dd-073a33d8bd58"
        },
        "item": {
          "id": "21f856ec-fdff-497a-b88d-b75934a17c22",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca9fb3c6-4857-46dc-8bab-167779399d4b",
          "status": "Created",
          "code": 201,
          "responseTime": 2810,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "068501d9-cd52-4460-b974-4d1614361d10",
        "cursor": {
          "ref": "241c1228-85fa-4ec5-8ff1-5a74cc684963",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3bf15581-53ee-4a1a-97be-2c815551a6d8"
        },
        "item": {
          "id": "068501d9-cd52-4460-b974-4d1614361d10",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9b052cc3-9ef9-4dbd-ab26-2a927e124137",
          "status": "Created",
          "code": 201,
          "responseTime": 2969,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "657a3df8-4512-4724-8162-4e2929fc8c04",
        "cursor": {
          "ref": "18bc89be-0ed3-494a-9d4b-f97d2c1ce35a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6c51343d-531a-4103-9c9f-ff908cf9a237"
        },
        "item": {
          "id": "657a3df8-4512-4724-8162-4e2929fc8c04",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "da854de7-f451-4286-9788-5ba17c9a22b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c572a1-343a-41c7-addc-9d41d7a12f10",
        "cursor": {
          "ref": "a4dadbfd-f6a4-4406-b422-80f49c1adcf6",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e7bf6f23-91f8-4563-8032-9784047e19c8"
        },
        "item": {
          "id": "68c572a1-343a-41c7-addc-9d41d7a12f10",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fc2ac1d5-96ae-4b0f-b029-b0c5e2cc8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ce06b6-144e-4319-b99e-94313e5e3e77",
        "cursor": {
          "ref": "be08b75d-44a8-4d21-8c8f-29398eced0fc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "de1c790c-d409-453e-84c3-04a3261d1f80"
        },
        "item": {
          "id": "37ce06b6-144e-4319-b99e-94313e5e3e77",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c3f292db-bfb6-4d76-bc68-881a46b5e6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47e433-464b-4352-a0db-71b181291cd4",
        "cursor": {
          "ref": "723cd535-cd6f-422c-8ba8-b82c8b5ff5ff",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "284a9414-b838-4d04-98f6-2fabf6353f8a"
        },
        "item": {
          "id": "ab47e433-464b-4352-a0db-71b181291cd4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3c45ae1a-1ef9-44e3-8b3f-2070d81f5a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e012bfbd-0133-4d18-96ca-32810dddd083",
        "cursor": {
          "ref": "f898bba2-78aa-4094-9628-a4259fa6120d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a331df4b-09cf-4a91-9522-04ede17d4453"
        },
        "item": {
          "id": "e012bfbd-0133-4d18-96ca-32810dddd083",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b781776c-288a-4e9e-8e12-ce9f6cf3e6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5d908c-c82b-4ddc-bc42-306550f905bb",
        "cursor": {
          "ref": "c462a875-c645-4fde-9c73-f42e3906a28b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5b86e72d-68bb-45db-9b8d-5812a507f24d"
        },
        "item": {
          "id": "1a5d908c-c82b-4ddc-bc42-306550f905bb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "abd922e0-7f17-441f-a249-a15c7477a614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf28f0-e23e-4fc1-a5ab-ed767be836fb",
        "cursor": {
          "ref": "0b927156-c0eb-405e-bcac-79efa389364a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "337b67e1-03f3-442e-97bd-68d3682ed87d"
        },
        "item": {
          "id": "5edf28f0-e23e-4fc1-a5ab-ed767be836fb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6911af72-22cd-4362-8c67-451b3bada7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f8792-f122-4b8e-b1f3-40356050e1eb",
        "cursor": {
          "ref": "d4ed1154-3f33-46e2-9892-21ed2ddc40c8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1f7b788e-006b-4c5c-92fd-ec1f6d0f11f7"
        },
        "item": {
          "id": "430f8792-f122-4b8e-b1f3-40356050e1eb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df40574d-9d81-4879-b75b-e4b6395d8506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5945428-19c7-49cd-9d18-121ccd8dca86",
        "cursor": {
          "ref": "72a0c298-865e-4e37-aedf-cd0b62c0baa4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "244fb3c7-6ce9-432a-9bce-c086b710e769"
        },
        "item": {
          "id": "e5945428-19c7-49cd-9d18-121ccd8dca86",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "28e82823-ec89-4c6d-aa70-bee8ee5509ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db538b1f-c6cb-4fb0-bb46-603e10a4fea6",
        "cursor": {
          "ref": "a0a89e87-6338-4a57-bea0-9c8696c31c08",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6bdc4fdc-fee0-4347-834a-1b9a5448e928"
        },
        "item": {
          "id": "db538b1f-c6cb-4fb0-bb46-603e10a4fea6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "512d1585-071c-43b2-b907-d834f9561c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a07aa-6ab1-4fdd-930f-d3b7856b6fcf",
        "cursor": {
          "ref": "8e0dcd63-c679-4be4-9c76-118bef9f80b2",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "00ec6895-d70d-42be-b12e-9d4c290c603c"
        },
        "item": {
          "id": "8a7a07aa-6ab1-4fdd-930f-d3b7856b6fcf",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8267124f-9c27-4b35-8a4f-b25dd68bcd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8795df86-4451-4c97-bda3-ee0ca2ce0a0e",
        "cursor": {
          "ref": "c7b76efd-9aa0-40ab-a45d-ff120c4d764f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7ff544a8-9d80-4119-8bcc-af1bb13c8c45"
        },
        "item": {
          "id": "8795df86-4451-4c97-bda3-ee0ca2ce0a0e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "54ffd489-18a4-48bd-b3b7-5876c33ec542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4f719c-8af8-4186-a321-da2e05bf8bab",
        "cursor": {
          "ref": "fbb93a34-974a-4baa-9a1f-8d14b602f3d2",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "01e5756a-3f06-4ba5-9eea-62582f02170c"
        },
        "item": {
          "id": "fc4f719c-8af8-4186-a321-da2e05bf8bab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6c16371f-1b9f-4ee9-9ff9-47217cb80698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6868b8cc-d170-4963-af6e-73b14466eb31",
        "cursor": {
          "ref": "c3a42b45-478d-49e8-97a5-ffbad1f18323",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81951f4b-6624-4168-99a3-db63761f8d7e"
        },
        "item": {
          "id": "6868b8cc-d170-4963-af6e-73b14466eb31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2dc45832-2af2-4327-af4e-cd41b6461c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d8365-692a-48a9-97e0-943926928aba",
        "cursor": {
          "ref": "70b1f7d1-cb59-4e76-a68f-49687a935efe",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "63e16452-bb00-4f91-bd99-e1dfde2fb7bf"
        },
        "item": {
          "id": "6a0d8365-692a-48a9-97e0-943926928aba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5c198574-d1c5-459f-b3e8-92f81e923f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8362549c-d239-42e2-b7ac-07c041c98c9d",
        "cursor": {
          "ref": "732d9a87-912d-4d25-b0da-17ab7b0fbd96",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6b5b6e7e-8248-4eb2-8978-a7c55c6f27aa"
        },
        "item": {
          "id": "8362549c-d239-42e2-b7ac-07c041c98c9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a2567812-29f5-4e87-b50f-8b3cc4454e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1fd108-01eb-4f39-83c8-3eaa410a3333",
        "cursor": {
          "ref": "c2af7c0d-dbd1-4dea-9415-921f151de2e9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "112eb2d9-a050-4efd-a8a5-3e5ca99d21ee"
        },
        "item": {
          "id": "7c1fd108-01eb-4f39-83c8-3eaa410a3333",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4d647b63-d380-472b-9371-b2bfca693bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f981c1-a3d6-48a5-beea-fb7718d2461e",
        "cursor": {
          "ref": "4c41a072-c948-418d-b9c7-b44b81be5f5c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "306c450a-5b97-4522-9bb9-19aaeb41f8f9"
        },
        "item": {
          "id": "b4f981c1-a3d6-48a5-beea-fb7718d2461e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "306d9bac-353d-47ba-bbe5-59d11a5f83d0",
          "status": "Created",
          "code": 201,
          "responseTime": 2248,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "da443518-5da2-4d13-a64e-34dc6d4d8be2",
        "cursor": {
          "ref": "2613ed1b-9995-42e8-9597-272028fd2d0f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8312f129-d37d-43a6-932b-9834460f85b5"
        },
        "item": {
          "id": "da443518-5da2-4d13-a64e-34dc6d4d8be2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "20b44845-e500-4067-a9bd-f32c4d5a57e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7266659-596f-4821-9704-f3f6cdede0be",
        "cursor": {
          "ref": "1aeae741-ae4f-46df-ab3d-17c691a4f397",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e540a805-974e-4db1-9206-fb11d69bfea4"
        },
        "item": {
          "id": "f7266659-596f-4821-9704-f3f6cdede0be",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "acc106a5-8be2-4d90-9465-de445f453f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d3912-ee80-4987-b28a-5eb8884ba541",
        "cursor": {
          "ref": "93dfc621-d377-42d5-aa8b-ed326875e179",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "519245e8-a24b-4703-94df-446f93357d38"
        },
        "item": {
          "id": "9c2d3912-ee80-4987-b28a-5eb8884ba541",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "24e4fc70-f7aa-4b11-bd14-bbb864b4a0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b04347-db19-4b7b-b188-e2ebcc203271",
        "cursor": {
          "ref": "9c54af2a-fdfb-4bc2-81c1-de8f30d3051a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2d10672f-fac5-48af-8d3d-b155b3e912f5"
        },
        "item": {
          "id": "e8b04347-db19-4b7b-b188-e2ebcc203271",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cfc27fe3-2af4-47b9-9a0d-a41200cb28ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a8e248-abd1-4cfb-85cb-dc564244e453",
        "cursor": {
          "ref": "79a8b99a-c749-4a3e-9d08-e9a1842616e6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e0027d90-63da-4897-ab4b-5acda468af96"
        },
        "item": {
          "id": "54a8e248-abd1-4cfb-85cb-dc564244e453",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9d2243ec-c52b-42df-8683-7a2366810d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0002ea65-1fff-4324-9bf8-c8c7ae93224f",
        "cursor": {
          "ref": "b6dd8d9a-8d98-4104-88f6-ec37792b11dc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ff0c54a9-cf20-4083-8073-225c98e64262"
        },
        "item": {
          "id": "0002ea65-1fff-4324-9bf8-c8c7ae93224f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abcdd84a-854c-4e49-98c0-2a1d0956efa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ae4a8b-7a52-4bd1-983e-49831b4b0946",
        "cursor": {
          "ref": "d5e097bc-1f5d-4cd9-bfa2-85938f8db01f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dcd4a61c-1c23-46a3-b89f-c1e7724d5b59"
        },
        "item": {
          "id": "d7ae4a8b-7a52-4bd1-983e-49831b4b0946",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "034cf633-8c5b-45ba-a575-4ebd3d491f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32670ee2-6635-4745-a942-7c847160f952",
        "cursor": {
          "ref": "99d74ecc-1bf1-4711-a3d3-ef1619ee101b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f9e28335-8e01-4fb0-977d-03deddbf0e9e"
        },
        "item": {
          "id": "32670ee2-6635-4745-a942-7c847160f952",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a803bd7d-a580-49ea-b993-3aaeb3ff3cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ea8ca7-aceb-44a1-b1a8-ca57d95dc8f9",
        "cursor": {
          "ref": "121d57f9-f63e-4c0c-91ed-25e0b650e8eb",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b7a17cd8-8c37-4612-8ff8-1c5e0cac4eb6"
        },
        "item": {
          "id": "55ea8ca7-aceb-44a1-b1a8-ca57d95dc8f9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d1ab2791-2210-45fc-979d-1586f13ea742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7065818a-8cd4-4bc7-8023-2b781a632ab7",
        "cursor": {
          "ref": "ecad22c6-8af3-4684-a625-cdece191d0b2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "85f684f5-c219-459c-9c12-e7a29bacf67b"
        },
        "item": {
          "id": "7065818a-8cd4-4bc7-8023-2b781a632ab7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "14036084-8ff5-4052-bd1c-b7a50e03bcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a554eee2-b97e-4406-97d7-d7e54223d75a",
        "cursor": {
          "ref": "f96f0fbb-52d7-4929-98a5-2ea8db3b6445",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3013566a-f180-47d6-b9cb-453cd2f26248"
        },
        "item": {
          "id": "a554eee2-b97e-4406-97d7-d7e54223d75a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7218b94b-42c7-4e19-a153-6d052696db90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5b923b-cc32-491c-a665-436c456a7fbf",
        "cursor": {
          "ref": "0d1ae122-45f6-4cda-a4b7-58e6839c0fa7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c5fd9231-99a1-46e1-b071-506bcda80280"
        },
        "item": {
          "id": "cd5b923b-cc32-491c-a665-436c456a7fbf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e8c44c5-ae56-4fc8-a1f5-d261417768cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b00eb34-a095-4eb0-85d9-cf004f9181c6",
        "cursor": {
          "ref": "c56562ba-3297-4880-9b97-9d2b829cf71d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "734073d5-4fab-44d0-9e9a-020e08e5cc33"
        },
        "item": {
          "id": "3b00eb34-a095-4eb0-85d9-cf004f9181c6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "415f8979-530b-4f0a-ad99-3e2c580f9089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c563c9-9514-48d7-aab0-098da1ff799f",
        "cursor": {
          "ref": "c08cd54c-ae23-476c-9719-71613dcfa5ad",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "31b19ca7-dd5f-43d3-9750-554ed3e66b6d"
        },
        "item": {
          "id": "25c563c9-9514-48d7-aab0-098da1ff799f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1ed0f5cc-a223-4e85-9d74-552b8180529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987a7200-eb83-4242-998c-7a7bff00dd86",
        "cursor": {
          "ref": "4dbe0024-7de1-4ec1-a282-23f38cd99972",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c98be6a-543f-4ec6-a120-12293178d3c8"
        },
        "item": {
          "id": "987a7200-eb83-4242-998c-7a7bff00dd86",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6cecb0f-63ab-4d75-aa02-0b56b103fd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f296f080-7fdb-4455-9b4f-a7cfac2a5ada",
        "cursor": {
          "ref": "d7ea8cea-1015-438c-b775-cfd600e5252a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "12e60fbe-35d2-4dac-866f-406397e7b8e2"
        },
        "item": {
          "id": "f296f080-7fdb-4455-9b4f-a7cfac2a5ada",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "faa2cfb5-ac6d-4a06-bd54-884f7a0188de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3b8799-0677-4fb9-8979-8e74df8d0561",
        "cursor": {
          "ref": "ebc8f512-00f9-4fc9-a43f-328a170b2c29",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a044118e-d179-488f-b95f-cf63fec4e9c1"
        },
        "item": {
          "id": "5f3b8799-0677-4fb9-8979-8e74df8d0561",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83e409f8-f0cb-4523-981d-a749da343b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce99c8f-d1da-42d2-9d94-c048ad79642a",
        "cursor": {
          "ref": "70916c59-858c-4560-8e6b-5922697addbe",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9b0548a0-c005-4f20-95b3-83865dfcdcc1"
        },
        "item": {
          "id": "6ce99c8f-d1da-42d2-9d94-c048ad79642a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "035ea041-ad43-41f8-bc78-a7524587bec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c08f055-bda4-4130-befa-a9e7ba0525ce",
        "cursor": {
          "ref": "50828ebf-da70-491c-a324-33cf47a2693b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3b308f92-27ce-4f2e-a06a-7b97449455b3"
        },
        "item": {
          "id": "0c08f055-bda4-4130-befa-a9e7ba0525ce",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "80c42f2e-089e-4e51-8019-0f80d20c51d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2943de1f-d08b-4b03-8c0d-54c6c0ee68c0",
        "cursor": {
          "ref": "1d0806c0-af74-49f6-9e1f-889dbbd05e30",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a6f93aa6-45c5-4275-bad6-123b97ccf0fc"
        },
        "item": {
          "id": "2943de1f-d08b-4b03-8c0d-54c6c0ee68c0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52192928-b09a-489b-96bc-b72ede6aa5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4b64bd-f877-40c7-854e-54e6a3800e55",
        "cursor": {
          "ref": "92c16933-959d-4f0f-b83f-27740e80cf81",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ed0a9a2b-116b-4b7a-b243-a2175f19f3b4"
        },
        "item": {
          "id": "6c4b64bd-f877-40c7-854e-54e6a3800e55",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b1ecff0-b61b-4d9c-a4d8-d1c3be776cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72213bd-f920-439c-874a-d34253b0e0d6",
        "cursor": {
          "ref": "53ca2ffa-c243-4313-98b0-4cf4d966dd64",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f8370650-3043-41cf-b373-c067eb312210"
        },
        "item": {
          "id": "d72213bd-f920-439c-874a-d34253b0e0d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3c82e0e0-6992-4f81-9dd1-fce764721e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28000a98-b4db-4f2d-b2fe-c15cedddb51c",
        "cursor": {
          "ref": "2afd9ac3-18d1-4f39-86bd-3392dae84958",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1485cea9-ee28-421c-9084-588bb366e028"
        },
        "item": {
          "id": "28000a98-b4db-4f2d-b2fe-c15cedddb51c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fbebd3a1-eef3-477b-ade4-236f8926cc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8facf00-cd6f-4a31-8d30-ded2571edc08",
        "cursor": {
          "ref": "0c7a22f0-9aed-491f-9e3d-c060d011c95c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7369d294-a04a-4722-afa4-8ff47e69786a"
        },
        "item": {
          "id": "b8facf00-cd6f-4a31-8d30-ded2571edc08",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fbd8cbf8-f3e3-42aa-ae1c-efa0d58aee85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0aca61-1323-49d1-9ff7-d56d61f71573",
        "cursor": {
          "ref": "2f11765b-090b-46e4-85a8-5a6205c3ff1a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "394dd498-fc28-4e06-a4e4-6876621a6fc1"
        },
        "item": {
          "id": "7b0aca61-1323-49d1-9ff7-d56d61f71573",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b029062a-5c3a-4036-afff-c5f76ea33581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fec9a7-c0a0-4219-958f-f0d9f2c274e9",
        "cursor": {
          "ref": "724c20cd-3bf7-4747-98f3-3af19093f6aa",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5c3b8094-2f88-4f00-b1ad-6fcf2c47a2da"
        },
        "item": {
          "id": "70fec9a7-c0a0-4219-958f-f0d9f2c274e9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7d53efa0-d081-482f-8405-e142215747ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813ee62a-5814-4c59-bc0a-f8d228feb541",
        "cursor": {
          "ref": "78ed2502-921a-42c5-af00-1126006924d5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0d67af96-fecb-4bd9-8ff6-5ea445852639"
        },
        "item": {
          "id": "813ee62a-5814-4c59-bc0a-f8d228feb541",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7b4fd5ee-a0e2-45b8-b3da-dddd6f987c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67495816-62f6-41ab-87d2-ec78fe30119b",
        "cursor": {
          "ref": "f4848279-4b08-4003-9726-bc59078f9e3a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "062dd479-6c35-47ce-b829-b5b3d315d543"
        },
        "item": {
          "id": "67495816-62f6-41ab-87d2-ec78fe30119b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3d295cc-0769-4aaa-9554-a865aa8c703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bbc83f-f52f-4ac0-b40a-87b341a1513d",
        "cursor": {
          "ref": "e63a36df-1f29-452a-849c-bc11fd2f64d9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a10ff6a1-2ac1-4806-90f8-70755b09c901"
        },
        "item": {
          "id": "41bbc83f-f52f-4ac0-b40a-87b341a1513d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e1db6a1a-09ba-438b-8562-de86359dc998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d583c6e2-8eab-4a3a-91e4-e70b20a2e951",
        "cursor": {
          "ref": "9a58e48c-622c-45fa-a3f2-ee4421895499",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ff61e6f3-5f98-4753-a245-91e3e5f1cc56"
        },
        "item": {
          "id": "d583c6e2-8eab-4a3a-91e4-e70b20a2e951",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5af6ccac-ed5f-48ab-a5ea-cd45601ec14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f2f00a-e07b-4c0e-a3c0-83220435635e",
        "cursor": {
          "ref": "7e66793f-ee45-43b1-961b-d3b0faf734d2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c3e10557-df3e-40db-a31a-3355a4ec9825"
        },
        "item": {
          "id": "43f2f00a-e07b-4c0e-a3c0-83220435635e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1387d13d-f829-49c4-9643-67d430f12704",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009577cc-37eb-4115-ad7d-a7b8e3717193",
        "cursor": {
          "ref": "0749aa7a-92a6-498e-b543-50ed8de62b5a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "73c10530-7140-4b40-aee0-aeb548159d7c"
        },
        "item": {
          "id": "009577cc-37eb-4115-ad7d-a7b8e3717193",
          "name": "credentials_issue"
        },
        "response": {
          "id": "19e2a3ce-e0ae-4bc4-86ce-2a6036632c35",
          "status": "Created",
          "code": 201,
          "responseTime": 2163,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f4d642-530c-41a3-981a-103814d913eb",
        "cursor": {
          "ref": "a291d0b4-47f8-4a9c-96ac-3cca91130c04",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "87f2a2bf-f661-4779-9dd8-8c90872910fb"
        },
        "item": {
          "id": "65f4d642-530c-41a3-981a-103814d913eb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eb1561a7-1cd0-4df3-b95c-af0ec996e268",
          "status": "Created",
          "code": 201,
          "responseTime": 2429,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1706ec9b-cb44-4f09-aadf-39342e3b2e87",
        "cursor": {
          "ref": "cd5b51bd-237d-42c6-b6de-4376cfedf0af",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b9b588e9-86d1-4e9a-b8a0-d427fd6b3cfe"
        },
        "item": {
          "id": "1706ec9b-cb44-4f09-aadf-39342e3b2e87",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef4a1ba8-1254-4f52-94f9-2ddf1e24be3d",
          "status": "Created",
          "code": 201,
          "responseTime": 2790,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c83e7f-ca91-4a36-9c24-4df58472eab2",
        "cursor": {
          "ref": "b543d65e-8993-4c84-9810-a0435f94e9ec",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "07985627-8372-4535-9b47-30a5d59ee88c"
        },
        "item": {
          "id": "e6c83e7f-ca91-4a36-9c24-4df58472eab2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dcd8711f-c950-4760-a1bd-e2c7bfd76b89",
          "status": "Created",
          "code": 201,
          "responseTime": 2387,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7485fddc-a96c-478b-bb1d-3b81eebe73b1",
        "cursor": {
          "ref": "01e4b525-6e31-4887-95b2-7eb4e9b812d8",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5626cffd-884c-40e5-98cf-c44bff7ac914"
        },
        "item": {
          "id": "7485fddc-a96c-478b-bb1d-3b81eebe73b1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a3b0d2c8-11ba-49cf-a422-dea7fc328ebd",
          "status": "Created",
          "code": 201,
          "responseTime": 2546,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-02T00:40:31Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-02T00:40:31Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f7022ffb-ea5c-4543-ad8a-2fbe8e37f4a4",
        "cursor": {
          "ref": "cf8cd7b3-5c72-452a-9ab5-aac244f2e256",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7fdeb39e-3aff-4d34-85a5-2b4d136574cf"
        },
        "item": {
          "id": "f7022ffb-ea5c-4543-ad8a-2fbe8e37f4a4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fc528b74-40cf-4de9-9346-9b70b1a974d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "4eee2dca-9677-4967-99a1-221fec837bec",
        "cursor": {
          "ref": "f0b269fa-ca27-462d-a3b4-c5af8d175eab",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "26b99ef2-34fb-4014-8d24-e71a9d8a1df2"
        },
        "item": {
          "id": "4eee2dca-9677-4967-99a1-221fec837bec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "060a9417-957e-4c72-8be7-d9830379aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f98024-96b1-4839-8d17-638dc9534a07",
        "cursor": {
          "ref": "06ffd08a-013c-4ced-96be-7094aa0968a1",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a18bb1be-a41a-4f10-99e4-99107ac023d0"
        },
        "item": {
          "id": "d9f98024-96b1-4839-8d17-638dc9534a07",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "627e8be2-7acc-4ae8-abb2-32936f526068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55095b93-4571-4d51-b238-1fc434de8f5a",
        "cursor": {
          "ref": "726a734d-3aba-4fcc-bca4-d2c421d2b0f6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4c02356e-5d37-48d5-bab1-a0dc83ecc61c"
        },
        "item": {
          "id": "55095b93-4571-4d51-b238-1fc434de8f5a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0cba312c-8932-44da-a1b7-b410b03cb3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af429fa9-21ec-46fb-b8a3-311c848c90b6",
        "cursor": {
          "ref": "aeb65641-52ad-4ae6-991a-57e196d69a5e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f4e3b2eb-072f-4862-8d5a-5784525bb536"
        },
        "item": {
          "id": "af429fa9-21ec-46fb-b8a3-311c848c90b6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9ed1c32-ee7e-4b39-8964-984f2bd0222c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81604366-8bdf-4b08-9e39-0f3308b96295",
        "cursor": {
          "ref": "f0ac0cae-a7c5-43ab-8bc7-ab50bb5897dc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca623990-2c8f-48fe-acb5-586f1f2caffe"
        },
        "item": {
          "id": "81604366-8bdf-4b08-9e39-0f3308b96295",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86b79c91-acb7-4b75-b3b2-bb87ac0a9e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94041d0f-b5af-4129-b745-41c0c0e480c0",
        "cursor": {
          "ref": "7f666c98-2e6d-4767-aa06-1fb5aa22f9c4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "875af5d8-c8d0-466a-a778-c23bd670487c"
        },
        "item": {
          "id": "94041d0f-b5af-4129-b745-41c0c0e480c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8861be04-7a53-400d-b170-685b185ae44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd575c58-1e3a-4bb8-93f8-09ece2b36ce9",
        "cursor": {
          "ref": "2785c143-c95e-4560-8d54-7ca450c8f039",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c1ae6b64-c184-490d-9d9c-cb7da47eb16a"
        },
        "item": {
          "id": "fd575c58-1e3a-4bb8-93f8-09ece2b36ce9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bca676f0-c114-4645-ac8f-41e8c30def6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75705c11-7d71-4f41-977a-15173d4d1167",
        "cursor": {
          "ref": "8c63ad7b-bed6-4ba3-a11e-19dcd1b98d6f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0776ec56-0cfc-4e73-983f-cabaa259d0ed"
        },
        "item": {
          "id": "75705c11-7d71-4f41-977a-15173d4d1167",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0d05f2e8-99ad-4d37-bbd0-97b1ae574699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adc90d7-69af-44f6-aca7-e51b7d2ceb61",
        "cursor": {
          "ref": "c85aece7-fa4d-402b-87fb-13b2058dd50f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5848fdd0-7f4b-4e66-a8a9-02932200ceb3"
        },
        "item": {
          "id": "8adc90d7-69af-44f6-aca7-e51b7d2ceb61",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8005aa57-8654-4cab-92b1-b8dd847b3154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23e3b43-5e87-4326-8052-dc40f4bee25c",
        "cursor": {
          "ref": "ed2a513d-a73c-4b48-838d-4a0d01105be5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "53b34253-e13e-4d31-bcb0-5afd73f3bc5e"
        },
        "item": {
          "id": "a23e3b43-5e87-4326-8052-dc40f4bee25c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b06a933f-9509-4c9c-8a26-2e55cb4037ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece97c04-3e74-4c58-9591-803ff7b68781",
        "cursor": {
          "ref": "0d98178b-bb0e-4294-b70b-ed9d5d027481",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4f61dc06-6dd9-45fd-bcf9-6c4cd0a49481"
        },
        "item": {
          "id": "ece97c04-3e74-4c58-9591-803ff7b68781",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "64c5e751-a068-4eca-8a83-378e4f434f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a51240-b38a-440e-bbbf-d52f98f72637",
        "cursor": {
          "ref": "5c8aa4f8-9797-462b-b85c-cf72cc2e97d1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "20692adf-5f13-4c3b-af77-61dfc6569256"
        },
        "item": {
          "id": "f2a51240-b38a-440e-bbbf-d52f98f72637",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15a209f6-f002-43ae-bdba-c880886e4fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525b097e-a064-4ae8-b854-508ef073c13e",
        "cursor": {
          "ref": "668fc138-86e9-44a9-a0f4-1fc31bb4bdf8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "76b919b9-2684-4622-bb57-59d1cdf696e9"
        },
        "item": {
          "id": "525b097e-a064-4ae8-b854-508ef073c13e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b0fca8e8-a6b2-4a38-a9c9-309c92fd9d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e37ad0-7216-4790-a6b6-fee66a3f2354",
        "cursor": {
          "ref": "488bc1b9-fbff-4d29-ab47-46665879ab4b",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "658d59e5-efd1-47e5-88fb-40dbf8f44e80"
        },
        "item": {
          "id": "23e37ad0-7216-4790-a6b6-fee66a3f2354",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5829f0ca-ecf4-42e6-9748-2a6167cad269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f066f91b-f784-4254-8fb5-f73efb75d67a",
        "cursor": {
          "ref": "f7273d6d-beed-49f4-8557-0a1ea73417cf",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b0b94b4a-2739-44a5-8cfb-85767888241b"
        },
        "item": {
          "id": "f066f91b-f784-4254-8fb5-f73efb75d67a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4c2e3b06-b586-49ab-8e7e-9cd96cfe2ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c239f444-d704-4977-85d5-77a098d1c0e6",
        "cursor": {
          "ref": "5580ed97-b030-4969-a095-02e252fe3ba1",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6574d61a-fb75-4b41-bb6f-1ea0e9a3743e"
        },
        "item": {
          "id": "c239f444-d704-4977-85d5-77a098d1c0e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7a8e392a-2f9a-4c36-852b-5951e69e51ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495ae01-0f81-45d4-803a-aa74a62ccada",
        "cursor": {
          "ref": "e6ddd2a9-9009-4603-93ec-835eda0065c2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "41713f8e-de0c-455b-b2d0-87a367825d95"
        },
        "item": {
          "id": "6495ae01-0f81-45d4-803a-aa74a62ccada",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "58ccd9ed-2377-481c-914e-8402502aa1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8ab51f-0edd-4a0f-9c92-f04d937d182d",
        "cursor": {
          "ref": "1d4d5c44-a4d3-4b7c-98f9-fd1baff3bbfb",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "638a3961-6abe-43c3-9faa-e3e2b930a722"
        },
        "item": {
          "id": "4a8ab51f-0edd-4a0f-9c92-f04d937d182d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bafdd0d5-5478-4aaa-adc5-b781385bd7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeae0ff-25c5-4456-b583-f2c5fc4deb93",
        "cursor": {
          "ref": "9edc8605-23c7-4dfe-b3c8-7cb35caa304f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2952276f-5504-4f1f-9590-bd7f81e33f55"
        },
        "item": {
          "id": "9eeae0ff-25c5-4456-b583-f2c5fc4deb93",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20f0c684-6560-48e6-9c48-5697e60100f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e59d32-57d8-4215-8a6a-73f08d3e7087",
        "cursor": {
          "ref": "085fa10c-9bf3-45a2-a592-a4bbc41f5be7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f6220499-daa9-4a75-aa9d-b008043a6290"
        },
        "item": {
          "id": "60e59d32-57d8-4215-8a6a-73f08d3e7087",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d61b6c05-51e7-4b9e-8e50-72075d5d7485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c4e53a-450d-43f9-96c3-dbdc4e2e6884",
        "cursor": {
          "ref": "d1470501-446a-4fbe-bf6a-7d54f499f07e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3ea0491-e478-455e-9b16-7b724c0cbb40"
        },
        "item": {
          "id": "d5c4e53a-450d-43f9-96c3-dbdc4e2e6884",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f807e628-898b-418f-ae18-6d0d90330e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d10d628-93f5-4d4b-9f47-d363138c21e8",
        "cursor": {
          "ref": "278c36d0-a732-4802-8c83-0a5a77a35012",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "26ebc0e2-f78a-4522-bceb-5457ba908428"
        },
        "item": {
          "id": "3d10d628-93f5-4d4b-9f47-d363138c21e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a8c57f62-ff4c-4fac-a1a7-538cd206e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b1831-42ae-4fc9-a19e-d46240771cde",
        "cursor": {
          "ref": "4a0edac0-3cfd-41ef-b54f-0fa9c75ad2d8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "709d42a4-7b22-441c-9065-e07ad0aacbec"
        },
        "item": {
          "id": "fb1b1831-42ae-4fc9-a19e-d46240771cde",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0d69e73-babb-4ae6-82c7-56c0b7ce1f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e50f37-968d-4c00-8f02-73dba2b74e8d",
        "cursor": {
          "ref": "60ae35da-0d19-4a42-a6e3-55d67bad0a9f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a485d98b-c75c-4b43-8601-115d4c28d69c"
        },
        "item": {
          "id": "05e50f37-968d-4c00-8f02-73dba2b74e8d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4d9702d1-8c2f-441b-9d16-d55b8f6c140a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190fa237-4945-41d5-9cdd-809f82a627db",
        "cursor": {
          "ref": "c0684b42-1fd6-46b9-ba6f-c7fdb03511e4",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "959d165b-7db8-424e-9015-f7e1017847d7"
        },
        "item": {
          "id": "190fa237-4945-41d5-9cdd-809f82a627db",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea031b0f-eebf-44dd-bc33-716aeb74d19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c454260d-d00d-42e9-bffa-51313c0dc245",
        "cursor": {
          "ref": "87591e17-7344-43d7-8e52-36182326b130",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee6a1575-a00f-4969-8d74-3a9fa15c1317"
        },
        "item": {
          "id": "c454260d-d00d-42e9-bffa-51313c0dc245",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "aa34a59f-ac24-4e15-bfa5-49720ae94466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792f0fa-7826-4ac2-8993-8f8e81d62b27",
        "cursor": {
          "ref": "a57d2b58-35d7-495f-af26-bd18d4c6f4a0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f55b7fe6-816a-4d4d-9a11-de23a83a4239"
        },
        "item": {
          "id": "1792f0fa-7826-4ac2-8993-8f8e81d62b27",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "521fcbb5-e6cc-438a-920d-e1e4202af1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1562be3c-284c-45cd-8529-7f14df252782",
        "cursor": {
          "ref": "c510589a-d3fe-4907-906f-8589d0709aaf",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "10202355-901f-4c6f-8d79-ae9e7c0bdf0a"
        },
        "item": {
          "id": "1562be3c-284c-45cd-8529-7f14df252782",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f37e833b-111f-4eed-b8b7-1a8fbcc8716c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafd34a7-e106-42b1-ae0d-2581d9e9cee2",
        "cursor": {
          "ref": "7b63ae4a-4a96-46cd-a4d0-cefbfe7a09cc",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f09b3b22-5e80-4048-aaad-ed30bbd3dc86"
        },
        "item": {
          "id": "bafd34a7-e106-42b1-ae0d-2581d9e9cee2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ac56322-d77c-41ce-904a-aee90b7840f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425c7f0a-cde1-4a99-80b5-08223479d45c",
        "cursor": {
          "ref": "e9d7cde4-c6b8-4c6e-b8a4-7ba2a2ec51df",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "277157de-8229-4255-a19e-5c4a987da838"
        },
        "item": {
          "id": "425c7f0a-cde1-4a99-80b5-08223479d45c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c862709a-1d72-45eb-adf0-2e61ca88b2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8daec5e6-c1c1-4ff3-b124-8fe7980950aa",
        "cursor": {
          "ref": "1de30154-52a3-4b4f-a434-0a52eb96ec1f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "09c8354d-1820-4bb5-b7d2-49a68414252c"
        },
        "item": {
          "id": "8daec5e6-c1c1-4ff3-b124-8fe7980950aa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfbf4933-b20b-4540-91f8-73d7f3247e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a635fb-9fc3-4743-a86d-ab6d64bb29a4",
        "cursor": {
          "ref": "25c160fd-dfec-4f4b-8af5-cb0a238459f0",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6911294d-ef39-4c82-b5df-ce98b158fe78"
        },
        "item": {
          "id": "b5a635fb-9fc3-4743-a86d-ab6d64bb29a4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "901f05c7-4cce-4f3f-86c7-510a25a8270d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0444249-c499-465e-92a7-bd040b4cabf7",
        "cursor": {
          "ref": "f61e5505-d11a-40ab-bb4f-d448ec9fa9fc",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "72f2d64a-176a-446d-ba5d-80ad00b1d56d"
        },
        "item": {
          "id": "e0444249-c499-465e-92a7-bd040b4cabf7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "68d9afc1-5e1f-4ab0-94cb-5e60aa7449c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb425b0-0846-457e-a4f9-f8267ca55350",
        "cursor": {
          "ref": "1fec5550-197b-4899-a3cc-34d6ae378dbc",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b13b6fc2-f3ae-42d7-86b6-eeb83a3d6907"
        },
        "item": {
          "id": "fcb425b0-0846-457e-a4f9-f8267ca55350",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05082bfc-cbf6-4da3-8aa8-a2af04c222f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9153de4-2c9d-4e9c-94d5-0adc8219c88f",
        "cursor": {
          "ref": "6c96af89-5f27-4d28-a63e-1dca305c00b1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eb371458-dccd-4ec7-a14e-edd44d6195f5"
        },
        "item": {
          "id": "f9153de4-2c9d-4e9c-94d5-0adc8219c88f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1d64e19-f653-40aa-8032-8a18fe7859d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6b3071-b5e4-4e35-808f-f356a56d5f55",
        "cursor": {
          "ref": "6f65a8a8-9d4f-4fcd-a7c7-70989f8be879",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "088d2d51-e6df-4073-b3c7-f99f4a0e8e25"
        },
        "item": {
          "id": "6c6b3071-b5e4-4e35-808f-f356a56d5f55",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d96ebc42-ed2a-4442-9baf-4718d32ddd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c367184-7df6-4fa0-880e-5b5d8e1188af",
        "cursor": {
          "ref": "e8a986fd-6805-40a4-adbf-1998c1e6cc21",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03028938-9c75-49d0-b922-763ebe3f5f1e"
        },
        "item": {
          "id": "7c367184-7df6-4fa0-880e-5b5d8e1188af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17ad766e-155c-4856-9eb4-77214f0fa71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be23402-04d8-45f4-9439-869ec3dfdf11",
        "cursor": {
          "ref": "302e1e0c-0fd7-4ce5-980c-b8a0f423885d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e41ff6d7-33ad-4b45-b314-cecc3479a8bc"
        },
        "item": {
          "id": "1be23402-04d8-45f4-9439-869ec3dfdf11",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc1c5adf-5dfa-4fad-b255-6328a7fb3d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfddcfb-baf3-4acc-99a1-af06ac3a98c1",
        "cursor": {
          "ref": "6f048717-e28a-4a67-a484-ef2c83c1768c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c109c0fe-1d20-4db3-8afc-da471b33818b"
        },
        "item": {
          "id": "0bfddcfb-baf3-4acc-99a1-af06ac3a98c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d7a0bf1-d34b-4a75-a3fe-0cbee7b819fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340f6775-5989-4820-8a75-c72ca6f03b4b",
        "cursor": {
          "ref": "7e5d3079-7b24-4ed5-b380-e60f2b11bbbe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "59aaf149-d69a-4b72-881c-211c564fea7b"
        },
        "item": {
          "id": "340f6775-5989-4820-8a75-c72ca6f03b4b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "980c27f4-4b4f-4bbf-82c3-f5fa8b778c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc6073c-7746-4707-9a7b-7af94eba74e2",
        "cursor": {
          "ref": "04bd5a8b-9bfe-4058-84fd-b46191c9f154",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d590e5a2-7ab6-4a21-8cff-4eb90d5e8390"
        },
        "item": {
          "id": "adc6073c-7746-4707-9a7b-7af94eba74e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2f906aed-6be5-4eb9-b041-aa4d58730bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8992899-ffb6-40e6-91f0-fc623c1018ff",
        "cursor": {
          "ref": "deaf98d2-89b2-46b2-94cc-18b02062360e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d6f8f837-3495-4393-9375-aecbdabced26"
        },
        "item": {
          "id": "c8992899-ffb6-40e6-91f0-fc623c1018ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "780cce31-6df6-4a3e-b2df-a78aa32e00c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e485e-529f-40b3-97b6-1555b2b729ab",
        "cursor": {
          "ref": "8831815b-03ee-41a4-9214-32c01b7828cc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f49caaae-5962-4b66-9e81-1df6ffcd1096"
        },
        "item": {
          "id": "bb8e485e-529f-40b3-97b6-1555b2b729ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b29225dd-22c6-460f-866a-d95491b518d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1356b6-943b-479b-9ad2-218d6e26326b",
        "cursor": {
          "ref": "209255b0-55a6-4e19-992f-22da79c1efc4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "84f72a5e-9b20-4ccc-92df-43b1272bf703"
        },
        "item": {
          "id": "af1356b6-943b-479b-9ad2-218d6e26326b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7eec5250-0cc3-4260-b299-595c91b33483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b84240-1db5-423a-92ff-d0fdaf45339f",
        "cursor": {
          "ref": "dad94206-d576-40f3-a714-68d8bc4420da",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f259fc9c-2de3-45cf-95f3-07f82ba646a2"
        },
        "item": {
          "id": "23b84240-1db5-423a-92ff-d0fdaf45339f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e49937f1-3cd9-474a-9221-94b1d16c03cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072f897-896c-4ddd-81ce-98b777885650",
        "cursor": {
          "ref": "99b5ed05-081e-47a5-b608-6d74cdf30f3f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "16f8053b-9820-4f83-9ca1-e3f3cfb072e3"
        },
        "item": {
          "id": "e072f897-896c-4ddd-81ce-98b777885650",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "21f24ac5-a662-4fe1-97de-91b86c03a5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3b8d07-74ba-4239-849c-f3f3999b0b77",
        "cursor": {
          "ref": "a46437ab-eb72-41aa-997f-6b6f900081a5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "94ed5cc3-e748-4024-be66-e7f76e96102c"
        },
        "item": {
          "id": "eb3b8d07-74ba-4239-849c-f3f3999b0b77",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3dbb9257-77b9-41c7-a92b-8b1c2afd1785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2942862a-e4d1-4d92-a70d-d9db63f5ee3d",
        "cursor": {
          "ref": "edb8023f-525b-4e55-a587-e48b8cf45c38",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "cc744590-425e-49bb-ba40-2f42df221c58"
        },
        "item": {
          "id": "2942862a-e4d1-4d92-a70d-d9db63f5ee3d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "270dd88d-9b50-4c38-8662-189f93cabb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7f6cc-0b04-4987-a742-50fee89559cd",
        "cursor": {
          "ref": "fb19cb24-3a19-4f5c-83ff-630649834a3a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9720d803-d520-4c34-8fea-9f7cbe7c32ce"
        },
        "item": {
          "id": "53a7f6cc-0b04-4987-a742-50fee89559cd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "27e19cc4-1288-4672-86d3-79baba819b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f3b1d-0b00-4d77-abb2-095ce97509ee",
        "cursor": {
          "ref": "298b9e19-abc4-483a-b29c-8366c3d7dc07",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b320a354-c533-4daf-b748-461a6ef9a3f2"
        },
        "item": {
          "id": "c78f3b1d-0b00-4d77-abb2-095ce97509ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f912423-30ed-4ece-aa66-a13a5a63a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735316e8-ad77-4ad2-9d4b-9e1f1f5b63db",
        "cursor": {
          "ref": "a29d110c-72e7-4a45-b334-5b781b7fa6c1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dca04cf0-c8cf-4da6-91f8-f6231b833526"
        },
        "item": {
          "id": "735316e8-ad77-4ad2-9d4b-9e1f1f5b63db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bea963c1-5454-4280-95d5-930393ae793d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226b8a34-3c39-4f4a-8dd8-f576703315fe",
        "cursor": {
          "ref": "3d7cadde-7e8d-4f12-ab7d-f0f5b31a325e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a7e0e845-2be2-4526-8899-549076682711"
        },
        "item": {
          "id": "226b8a34-3c39-4f4a-8dd8-f576703315fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6607acfa-fd25-40f0-a1b3-f0987e22ca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24374bac-2b6a-433e-a86c-d276f63881f4",
        "cursor": {
          "ref": "0dc6bbc5-539a-4d2a-86e3-d985780e0b65",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "794bd666-4651-4a60-a03b-a5ebda07284d"
        },
        "item": {
          "id": "24374bac-2b6a-433e-a86c-d276f63881f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7566e4f2-95bd-45ee-8d58-eeee0aeac662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9985fbe9-fa60-43e5-bd7d-d02757963341",
        "cursor": {
          "ref": "52239e44-24c3-442b-b43a-bd62fc6412cc",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "27b69fe0-0663-4370-8479-8432b80dc4f7"
        },
        "item": {
          "id": "9985fbe9-fa60-43e5-bd7d-d02757963341",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "87420a07-5348-44ef-8f36-f5eb8ead6832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abf9b9b-88cb-4d5f-9a4a-38241ce8058a",
        "cursor": {
          "ref": "f44d32ea-9ddc-4074-b10e-33b9311ca089",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1d7e9d55-94c0-443c-a07d-1530766f2991"
        },
        "item": {
          "id": "1abf9b9b-88cb-4d5f-9a4a-38241ce8058a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f909db9-403b-4ce0-839f-a07733770f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be2123b-eca0-4b31-8cd9-06c6229e4c38",
        "cursor": {
          "ref": "5bfe9d56-a196-4fcb-91d7-3642a65bb9ba",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "59d13f8f-74e4-40d8-b433-1351ca248fa5"
        },
        "item": {
          "id": "0be2123b-eca0-4b31-8cd9-06c6229e4c38",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86d5bb6c-632c-48ae-90ec-df04dd788279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98130d5-be76-411a-9122-91a10b3964b1",
        "cursor": {
          "ref": "346c5af9-daf1-4400-bd3c-2b7b7d33d1a6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c877fbb3-67d1-416a-aa9e-1d4abb02483a"
        },
        "item": {
          "id": "c98130d5-be76-411a-9122-91a10b3964b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb067d4c-b360-48fd-be67-8c4fd9b71600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac9a371-6e4b-4fd2-8ed4-72f7dd0b37c3",
        "cursor": {
          "ref": "d85c0856-d1a7-4285-854a-cbfd3b8155ad",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c9226d95-7672-469f-9662-6086ae1eac7b"
        },
        "item": {
          "id": "cac9a371-6e4b-4fd2-8ed4-72f7dd0b37c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "95310b9b-0346-4c00-9ab6-3f5afc49dfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fea2b-2bf9-4ab7-8bb3-fb92c6b2f011",
        "cursor": {
          "ref": "d84f4025-5257-4f96-8122-702ff6b83cbf",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f18adcd1-d9c9-434b-9554-9719ca9968fb"
        },
        "item": {
          "id": "719fea2b-2bf9-4ab7-8bb3-fb92c6b2f011",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "198264bb-5f1c-47de-9cda-082e373e10bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c56b4d-fbff-4971-91ea-a72e4bd3c1d4",
        "cursor": {
          "ref": "4be4a09d-b917-41db-924e-fce1d9813ab0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1b63cae-8f5a-47c5-9841-3bd5588a64cc"
        },
        "item": {
          "id": "87c56b4d-fbff-4971-91ea-a72e4bd3c1d4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e6d4cceb-8f33-4a64-9c65-503fb250c81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c697f-3785-4c64-a677-f4ff1700dc60",
        "cursor": {
          "ref": "88578a33-fdef-4b03-9fa2-e654fe7ed0fc",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f1256563-e1a2-4542-9c40-56df290cf29d"
        },
        "item": {
          "id": "d13c697f-3785-4c64-a677-f4ff1700dc60",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ca7391d-88db-4847-ad73-01e13ebbdd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c444aa4-cad1-47c2-97e4-791ff61b2857",
        "cursor": {
          "ref": "5462d2ea-89f6-4db1-a08f-290fd599e2c6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5b075f3a-cdda-4dd6-9a68-ae564c13ef7e"
        },
        "item": {
          "id": "4c444aa4-cad1-47c2-97e4-791ff61b2857",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbb722c1-2745-45b4-a51a-6c5ae7cae933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf27b725-c06f-4650-8335-a94a9cb2ff44",
        "cursor": {
          "ref": "e0600d83-d4b2-4eb3-a428-0c5fabb5081b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "caf96bb9-26c9-447b-a4fc-36466cc56363"
        },
        "item": {
          "id": "cf27b725-c06f-4650-8335-a94a9cb2ff44",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38a25fcc-65dc-4fd9-b94e-6e696657ecdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905b1cb-a8b5-4201-9caa-f12d3d137bfb",
        "cursor": {
          "ref": "ab9a751f-f177-41fd-8922-875331e00238",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f1bd0c8f-358f-4886-9375-4c9519f54298"
        },
        "item": {
          "id": "a905b1cb-a8b5-4201-9caa-f12d3d137bfb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fe0e0c4d-0248-4b96-8e14-f6066ad2b1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a0cf2-e2c0-44db-b4fb-6e3253801a34",
        "cursor": {
          "ref": "dca0aab7-2c80-4ddb-bce1-6895b6e79749",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6d176ecd-3694-4381-8d3a-c2866eb0e7ba"
        },
        "item": {
          "id": "ea0a0cf2-e2c0-44db-b4fb-6e3253801a34",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6b400695-cc1b-4127-a67f-cf058ce48212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c193e2d8-4a01-4689-8a15-321cb3228930",
        "cursor": {
          "ref": "42ff831c-2419-486a-b213-f396319e4dcf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b0ad53b-4978-4c36-a23c-87793b97b1d2"
        },
        "item": {
          "id": "c193e2d8-4a01-4689-8a15-321cb3228930",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "05d9fec2-1341-407c-9afc-2db0370b4237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e480bf1b-a72e-41e2-8e48-af2f09d51eb5",
        "cursor": {
          "ref": "d1d80b9b-88f4-4180-8157-e28175a4eb91",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "87e7881f-bd50-4bb7-bd94-cf83cd356a95"
        },
        "item": {
          "id": "e480bf1b-a72e-41e2-8e48-af2f09d51eb5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "00b9a5b7-2da6-45ad-b2ea-6c393cffcc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475a982d-d1dd-459e-bda1-4eca8c77101e",
        "cursor": {
          "ref": "0afad442-033e-4fba-8da9-486bae858a04",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b75d74ba-293a-4bbf-b8d9-6e9819833cb2"
        },
        "item": {
          "id": "475a982d-d1dd-459e-bda1-4eca8c77101e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "99dd6da0-5dbc-4452-af43-51967407e934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe7944-e058-4298-853f-6ae1632c07a1",
        "cursor": {
          "ref": "fee250b0-f26a-4a59-b7dd-995a70fa0ce5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38983ce2-4d13-4b49-8f22-6e3f7f077735"
        },
        "item": {
          "id": "5dbe7944-e058-4298-853f-6ae1632c07a1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b8b0e597-32ee-4421-9954-d2d8bc102911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5451096e-4eaf-4fbb-8be8-697f1af255fa",
        "cursor": {
          "ref": "3530f3c2-b867-4da1-b24d-c22c7682b449",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9aa93630-3dc0-4cc7-83b2-4d511dd63804"
        },
        "item": {
          "id": "5451096e-4eaf-4fbb-8be8-697f1af255fa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "06154625-4cb0-471b-a0e6-07bfe885818c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7c160e-5ca2-44bc-801a-6005cef4e5df",
        "cursor": {
          "ref": "76173015-0fd8-46b7-bbdc-614b0d912a13",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4713b6d3-65b8-484e-a5b0-426b0284014e"
        },
        "item": {
          "id": "8b7c160e-5ca2-44bc-801a-6005cef4e5df",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c366a72e-13e6-4971-801d-705da0b4649e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe31292-7725-47c5-9985-462993a57018",
        "cursor": {
          "ref": "86c9463a-2cef-49cc-91e4-7c24107dcf12",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2cbb2736-c8ac-4d32-b0a0-7a4584552ca4"
        },
        "item": {
          "id": "2fe31292-7725-47c5-9985-462993a57018",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "544dc8b3-4ac1-4467-b392-5e8ca2355123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a540ed91-3141-4f54-ad54-ff4f2d583df1",
        "cursor": {
          "ref": "f4f69526-c30a-4985-9423-8f7a7e6576d6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f4df6ee1-1fd8-4e81-a4f3-6e2e116ff803"
        },
        "item": {
          "id": "a540ed91-3141-4f54-ad54-ff4f2d583df1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4c3c13cd-cf98-48a1-ba1a-3b261ebf8151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b40f6-718c-480d-98d1-042c017f4754",
        "cursor": {
          "ref": "0ea33e3f-60bb-4328-a545-859ee6854d38",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "10a9a163-fc80-43ff-bec9-e0e7e6a09803"
        },
        "item": {
          "id": "7c2b40f6-718c-480d-98d1-042c017f4754",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ba3e596b-01fa-4de5-90ba-15a16615fe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a7e5cf-c9da-4a2e-8e58-83be3a4c84c3",
        "cursor": {
          "ref": "139ca7e1-a56a-49b6-86ae-61feef62ecdb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8be4caae-83c6-46bb-81a7-661fd5cc4db6"
        },
        "item": {
          "id": "16a7e5cf-c9da-4a2e-8e58-83be3a4c84c3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "30f04dcb-3d25-4a66-a6bc-db3a9a9e0fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3400be99-2f7a-4f32-b504-319c92ca71ae",
        "cursor": {
          "ref": "44bb4a34-fe25-4203-8eb7-a1c6c6320b10",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e127f3e8-430f-4524-909a-ebc3bc25de14"
        },
        "item": {
          "id": "3400be99-2f7a-4f32-b504-319c92ca71ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c42e1a34-8ada-40d1-a9c6-521f12bafeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388cdd70-8670-478f-ab25-e3ef24e260f5",
        "cursor": {
          "ref": "95cdcc98-efb2-4651-8c36-388ea0d64116",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5023fce-0834-473d-bc24-d7a2cc5c6a90"
        },
        "item": {
          "id": "388cdd70-8670-478f-ab25-e3ef24e260f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "61a1a25c-14b0-43ad-85af-0ffcc9c56389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff311f12-377a-4c1c-af53-04c92920da2b",
        "cursor": {
          "ref": "8f1b07f1-7e4c-4dfb-95d8-af347fea8425",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1305542f-1719-417f-aa7d-35934d2d9972"
        },
        "item": {
          "id": "ff311f12-377a-4c1c-af53-04c92920da2b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7c2a4a00-7aba-466c-acb0-44c82f494450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be0de41-bc24-4d35-9cf2-43914f39cde5",
        "cursor": {
          "ref": "c7d07e1f-5cca-4267-80bb-beeaf581c2ed",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "11f8f701-bb45-4cf9-abe5-c486a4577082"
        },
        "item": {
          "id": "8be0de41-bc24-4d35-9cf2-43914f39cde5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cd8c02d8-297a-435b-8e04-001c0e98883f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff64607f-22fe-458e-94d5-e51a55d054f4",
        "cursor": {
          "ref": "b2c6326e-a05b-465e-a9a2-57c5b93d13c5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9f3be687-fc35-49f8-baeb-d1b4d6bc8aaa"
        },
        "item": {
          "id": "ff64607f-22fe-458e-94d5-e51a55d054f4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fb784190-191a-48ea-8438-6b562dfbcd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a786e4-18f7-476e-8a43-ebc8f5f94751",
        "cursor": {
          "ref": "f0dc4a79-77bd-4616-b307-fbdef634031f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2311b4f-7510-4061-9f8d-787b16c030a2"
        },
        "item": {
          "id": "01a786e4-18f7-476e-8a43-ebc8f5f94751",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7bedb51a-6afb-4775-84a0-ae3e3dca1969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32281a6b-6d40-47e0-88c0-bbef797889a5",
        "cursor": {
          "ref": "883d3f77-d439-49d8-9b20-2a3666405e90",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2688dbd2-a666-496e-8f3f-90b1396d1eac"
        },
        "item": {
          "id": "32281a6b-6d40-47e0-88c0-bbef797889a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9e999f77-7994-4477-8bc0-d82b3244ecf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebdb53-9287-42f2-a4fc-9e2b57994c8c",
        "cursor": {
          "ref": "03153209-08be-4479-9740-9b2bcb896d47",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "442f72d4-3c60-4ca2-b2f3-ec5ca4de60a0"
        },
        "item": {
          "id": "44ebdb53-9287-42f2-a4fc-9e2b57994c8c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a22c58c1-6df7-4cf5-8a71-8fcf40ffd658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b01a9c2-1084-4494-97e9-783fdc60d4cf",
        "cursor": {
          "ref": "39b8aca0-1a3d-4fde-ba74-9235066b34de",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e5492ade-7eb4-4507-9b04-d4ff15c87beb"
        },
        "item": {
          "id": "5b01a9c2-1084-4494-97e9-783fdc60d4cf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e1aa68cd-cce6-42b9-8f1e-b82e8bdd06fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e74e56-fc5a-4455-8e1a-a7ce002cb995",
        "cursor": {
          "ref": "9f4c06e9-54a6-4a34-9587-7f42037f1f9d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "28cbe92e-fa17-4c84-8ff1-1baa80aa9152"
        },
        "item": {
          "id": "c6e74e56-fc5a-4455-8e1a-a7ce002cb995",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "398e5ee8-16dd-4bbf-9254-2f9f5cb49f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7cb019-ca75-4206-b870-8d85fd025878",
        "cursor": {
          "ref": "4bfd2599-53d3-49f7-a9fe-49b74abc4b37",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8d0766a7-f46f-41d9-9254-a9b626eb55e4"
        },
        "item": {
          "id": "5f7cb019-ca75-4206-b870-8d85fd025878",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2582d0d8-ed56-43f7-892b-f617b094b025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacbe53-2382-4925-8661-9a5f88ab7eb4",
        "cursor": {
          "ref": "600b0b44-cb5f-4d91-af6f-527cc413d99c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb951698-c556-470f-9c0b-0f393392e7c7"
        },
        "item": {
          "id": "4dacbe53-2382-4925-8661-9a5f88ab7eb4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d671e138-52b3-420b-90bc-de490215a348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad9b3a9-8048-4224-9723-9b7a6ada196b",
        "cursor": {
          "ref": "3821862f-690b-464d-bf40-a55557e5dd3d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f249004f-0966-4182-8fd7-f3d102851761"
        },
        "item": {
          "id": "9ad9b3a9-8048-4224-9723-9b7a6ada196b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f50aa5e1-d8a8-4073-88a3-2d7de9318cc8",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "869ce7f9-72b6-47a6-a983-8af24b8c5da0",
        "cursor": {
          "ref": "e28c146f-7f10-4f4c-9edc-595440fdaad7",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f9a35c5-a0d6-44f1-a844-285607aae29a"
        },
        "item": {
          "id": "869ce7f9-72b6-47a6-a983-8af24b8c5da0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e24e0ec2-12d1-4303-9043-df143f084310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e885188c-0292-496f-ab6d-7622da898fc9",
        "cursor": {
          "ref": "ed7f8d28-73c7-4f13-a854-ecbed1beaacf",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d8ad5011-6f15-4a52-9a3f-6fadefef8623"
        },
        "item": {
          "id": "e885188c-0292-496f-ab6d-7622da898fc9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7700c0cd-e937-4050-a33b-5823f4f83cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69b253-a42b-41ae-975d-a01859cb27eb",
        "cursor": {
          "ref": "4629a473-9dd3-4196-8809-f8378861887e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ebc346c-2b5c-499e-b757-1f7b372695b3"
        },
        "item": {
          "id": "ab69b253-a42b-41ae-975d-a01859cb27eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87ac06e3-8483-4698-ab4b-fa5f4e845ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1df02e-e45f-4c40-a3d4-9b73025e413d",
        "cursor": {
          "ref": "17abb987-42dc-4c69-9e06-8b678569a8d0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "aa6c77ed-4278-47f8-9ccb-80bfda92afd6"
        },
        "item": {
          "id": "df1df02e-e45f-4c40-a3d4-9b73025e413d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "601bd0a8-570c-4c36-b0f4-7889a891c90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dbf3a5-8952-4264-875f-d699dc9d6c66",
        "cursor": {
          "ref": "0f5c6afa-1ca2-4eac-91e3-cea649d73b1d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "212b739e-f6bc-41ea-afca-ecc55e401986"
        },
        "item": {
          "id": "61dbf3a5-8952-4264-875f-d699dc9d6c66",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aca9c4a8-d438-4299-997f-fa2602b48257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8c350b-38ff-415b-9ec1-ef2857ac91f3",
        "cursor": {
          "ref": "186d3201-4bfd-49f9-a6f6-d97887483c73",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5ea7fc58-d039-4379-abe2-00f4fe1a13bd"
        },
        "item": {
          "id": "3a8c350b-38ff-415b-9ec1-ef2857ac91f3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "857d285f-797b-40a7-af57-061fecd41f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8482598f-adfd-4c64-90f4-304b4e80840d",
        "cursor": {
          "ref": "dc446a67-c62f-42a3-9492-04c649f0ab56",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4c7f2844-9e04-4bdb-a2f3-461703faeebc"
        },
        "item": {
          "id": "8482598f-adfd-4c64-90f4-304b4e80840d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9b2853fe-f176-43cf-9e76-6c967c7a4384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd8c656-4c47-422b-b996-657ade67f18d",
        "cursor": {
          "ref": "0d7fc3ce-afde-4fd1-9b6f-6a8f12d2ec46",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f9a1296b-22f8-47d8-859e-d78c46ac7ca6"
        },
        "item": {
          "id": "3dd8c656-4c47-422b-b996-657ade67f18d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "221f4038-d7a1-4e08-ba80-6383531d034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648fcab6-67ca-41f0-912b-39efd88dc733",
        "cursor": {
          "ref": "34a7e910-1b8e-4d65-ab6e-5755811a3dab",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6a684cd4-ed3a-4e98-aa2b-6b390678ad50"
        },
        "item": {
          "id": "648fcab6-67ca-41f0-912b-39efd88dc733",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a0f1e90-7501-46b2-a8c5-352124065e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad57c8ff-94dc-402e-8285-6f3b18c5b787",
        "cursor": {
          "ref": "f2c700fa-29d4-42f4-8370-963978f46ae6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1baa8cb7-f156-442e-9c98-d18db1cfe302"
        },
        "item": {
          "id": "ad57c8ff-94dc-402e-8285-6f3b18c5b787",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "292966d8-e916-4307-b3e8-43b5eb72637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4712a388-794e-4ba5-ac44-32493eb0decb",
        "cursor": {
          "ref": "9a6329c4-954e-408d-a988-86b963d648a1",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1d83879e-0887-41e6-8196-521ef294b409"
        },
        "item": {
          "id": "4712a388-794e-4ba5-ac44-32493eb0decb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b3ed10c7-7e5d-41db-a083-00e731d19917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23468d94-9729-4775-a298-ee422ccea1d7",
        "cursor": {
          "ref": "e280e7ef-eb61-42bd-b44b-a53a0ffc49b2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6257450b-6070-43bf-88ad-b41bb004632d"
        },
        "item": {
          "id": "23468d94-9729-4775-a298-ee422ccea1d7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "31c540ce-1b8d-4eed-aa84-ab8f7ca1fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3212123-a250-42ac-bc5f-8583aeda266b",
        "cursor": {
          "ref": "9c88f460-184f-495a-85b7-cfad8647b80d",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1f16218b-c470-4e34-aee0-a7eae8fa4a9a"
        },
        "item": {
          "id": "c3212123-a250-42ac-bc5f-8583aeda266b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d86fdc8b-f3fd-4308-9354-e377f21db30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4322bbdf-69d5-4c84-bd4f-4fb877b5cdfb",
        "cursor": {
          "ref": "f468babe-e648-42c7-b9c8-ea3ff39618eb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9a43b3c6-e1f7-4a46-8f3d-ca7b384013b1"
        },
        "item": {
          "id": "4322bbdf-69d5-4c84-bd4f-4fb877b5cdfb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5547d10-6328-4286-9adb-0f7029744250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973b52f-7d40-493b-8577-1ced49b756f3",
        "cursor": {
          "ref": "2741ce3c-e5d0-43b9-9831-142e8a7cd3e9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bc88eaf8-4311-46ce-9ac0-48e63df782fc"
        },
        "item": {
          "id": "5973b52f-7d40-493b-8577-1ced49b756f3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "605551c2-8cc9-463d-ac44-f550662ef770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25fd9f6-7cf1-4781-b246-9a6e0b89d5d1",
        "cursor": {
          "ref": "d73d48be-241e-430e-827f-8f675ac5f1bc",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b25f670-01aa-4f3a-a13b-24881e5f601b"
        },
        "item": {
          "id": "e25fd9f6-7cf1-4781-b246-9a6e0b89d5d1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "10913b73-5e11-4a92-89cc-d077f0f448c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ab5cbc-0962-4f42-9d1d-a0ae373271f0",
        "cursor": {
          "ref": "4b48a9bb-ab08-4276-9c6a-443c3a9533a0",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d08a56c8-7927-49bf-b324-ae2ec096c5ab"
        },
        "item": {
          "id": "b4ab5cbc-0962-4f42-9d1d-a0ae373271f0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "41b5657d-9a51-4dc3-80ef-d35907b2594d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b45f9a-7c65-4ed9-9d99-b315824d3a68",
        "cursor": {
          "ref": "a03c5f95-fd6e-41d2-b211-bfeb52cd2de8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0de21839-cbd7-40d2-89d2-19ac8b9d4cce"
        },
        "item": {
          "id": "79b45f9a-7c65-4ed9-9d99-b315824d3a68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cca5b2d0-3c80-4f19-aa29-5d294294cc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e46aee7-9bee-45f2-bd08-cefaca5dc6e4",
        "cursor": {
          "ref": "a4a01fc1-d37a-4076-b508-3c2ef0eb952e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "58d12049-6691-4153-b295-5663a9867452"
        },
        "item": {
          "id": "3e46aee7-9bee-45f2-bd08-cefaca5dc6e4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "99ad80f1-a9ee-438f-abaf-3cd41ec46971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649033ca-363c-4aa9-ba21-8fd19967075a",
        "cursor": {
          "ref": "16604eab-52c6-4f88-a842-aa3d81ac0e2e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a8c35f5a-13c4-4f13-95eb-496e5481ddd1"
        },
        "item": {
          "id": "649033ca-363c-4aa9-ba21-8fd19967075a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1bec4890-8d65-483c-8722-0c93afef22cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42946ac8-86bf-49fc-bca5-c08a860950af",
        "cursor": {
          "ref": "8da70423-94d8-4c6e-aee7-d863886ab97d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b708b5e-bb63-4233-8e4e-e777d0888c39"
        },
        "item": {
          "id": "42946ac8-86bf-49fc-bca5-c08a860950af",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d690cfb6-e88d-4421-9a39-b03d2bd1045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ae02ca-c2d5-4a10-a22d-84c2d50aab7c",
        "cursor": {
          "ref": "4b053ab2-3d82-4d18-9d23-f5829fd12579",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5ae83791-74ed-4e56-9652-4a05de4ddc79"
        },
        "item": {
          "id": "96ae02ca-c2d5-4a10-a22d-84c2d50aab7c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0f4df9c8-7b6b-48d7-b19f-4d9666eb60cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8974d-dd6b-455b-a956-9173ae5e494b",
        "cursor": {
          "ref": "0c933e93-cb89-4293-84e5-f4e31f00a09d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eba7e0cb-160a-4c05-ab1d-0e72209be10f"
        },
        "item": {
          "id": "6ea8974d-dd6b-455b-a956-9173ae5e494b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f49558c2-b7d6-4213-9f9d-8f497f5d5c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f640d629-9e9c-4f99-8b0a-91e6e09aaf35",
        "cursor": {
          "ref": "7078ad2a-0e6d-4092-adf4-f0a941a521a4",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9504d906-0d77-4ccf-af47-cd09cfa76857"
        },
        "item": {
          "id": "f640d629-9e9c-4f99-8b0a-91e6e09aaf35",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7ae6db07-f615-4f2c-b9f1-da50dba94f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4972df92-0cbf-4731-bee3-925114b91955",
        "cursor": {
          "ref": "0145cb52-112c-476f-98e6-ee10a43aab9b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b7a523fa-3aac-448e-8f8e-86886efd6b43"
        },
        "item": {
          "id": "4972df92-0cbf-4731-bee3-925114b91955",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5a124e74-2379-47b7-86d0-30ba0be1948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdab903e-3c54-4090-b7d6-a052a904a1a8",
        "cursor": {
          "ref": "80131b85-cb16-48ed-b0e4-60652e9825f7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9b4fb35d-e7a3-47ca-8e00-f00a133f11b6"
        },
        "item": {
          "id": "cdab903e-3c54-4090-b7d6-a052a904a1a8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6c7c832-097c-464c-86c9-1948a112cf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b189eb1-4a0f-42c7-bd25-c6420a5f01fc",
        "cursor": {
          "ref": "c304103b-6636-4270-8b82-3fe5aa46ca01",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7d661714-5c75-460d-a462-888aefdc4d9c"
        },
        "item": {
          "id": "8b189eb1-4a0f-42c7-bd25-c6420a5f01fc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4be3b759-0666-43f4-9df6-d34311c3ad78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440f8fca-f0d2-4bb4-a356-b41c1d1f0777",
        "cursor": {
          "ref": "413abfac-713f-41cf-a41a-82daaf56b375",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1d39c2ac-0429-4b3a-9bda-f4c5407f86e2"
        },
        "item": {
          "id": "440f8fca-f0d2-4bb4-a356-b41c1d1f0777",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0af7a1e1-710c-411d-ae58-f546ebb9ba8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9229102-3deb-4674-82d8-3829e1b53899",
        "cursor": {
          "ref": "66dd8868-22d0-4726-b04d-d0c06e19dfdf",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa88c70b-d76d-4ac4-8eb4-91a6fc56a156"
        },
        "item": {
          "id": "c9229102-3deb-4674-82d8-3829e1b53899",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "40b58e43-5b31-48ec-afad-1006224c5536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f944b08-a766-4fa8-8330-a15d485b68fd",
        "cursor": {
          "ref": "4bba5077-3479-4dd7-bcca-0ad8cc236fd7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c86e1a11-bfbf-458e-b789-205a821bd7e8"
        },
        "item": {
          "id": "0f944b08-a766-4fa8-8330-a15d485b68fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ee89593a-7155-4d22-be4d-2171a4f4b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20396eae-3f22-4e40-a3b9-bab32bafcb3e",
        "cursor": {
          "ref": "b5d96c44-19dc-43ca-9514-8e69f512d4f0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0bfd064-bca0-46bf-85eb-e0d0bad8ae67"
        },
        "item": {
          "id": "20396eae-3f22-4e40-a3b9-bab32bafcb3e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "15ca3896-b83b-4746-9475-91cc506c5ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa79d91-f7d3-4cf8-a95d-808447c5f4a2",
        "cursor": {
          "ref": "1fffd01f-ab66-4a93-b640-46a6a985b997",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "284ef84c-b929-495d-8526-9909108505a2"
        },
        "item": {
          "id": "8fa79d91-f7d3-4cf8-a95d-808447c5f4a2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "89943af5-3952-4ed9-86a9-52179034d256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b84bd75-5c1d-4ff7-aab2-c967de41e005",
        "cursor": {
          "ref": "7ee2b1c1-ebd5-432a-b251-8dc99c2ef607",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "80c91c07-6c9d-48ae-b27c-03b5ba1ae5aa"
        },
        "item": {
          "id": "0b84bd75-5c1d-4ff7-aab2-c967de41e005",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd890911-626e-4737-8fe0-bf99f63c5dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc5f5bd-1b1d-4861-ae3d-abc6766abd72",
        "cursor": {
          "ref": "d8579ab3-fbb1-478e-807f-8e777dd9c2da",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e3c54178-9a5f-476f-9b5f-c37fdb6acedd"
        },
        "item": {
          "id": "5bc5f5bd-1b1d-4861-ae3d-abc6766abd72",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fdb24d99-0fb5-4310-9429-929b52ad55be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05dfb7-184b-42df-b88a-57ebe5c50dbb",
        "cursor": {
          "ref": "576ccaeb-5172-411e-83c8-7f01f4698031",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ac754e85-d4db-4324-80e3-607f96d79d12"
        },
        "item": {
          "id": "1b05dfb7-184b-42df-b88a-57ebe5c50dbb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "68aef137-f650-4c68-8500-dd609cb5ec55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74248f69-c446-434d-8e51-71d0c2c12431",
        "cursor": {
          "ref": "a490ba7d-c2fc-4fa6-8a6c-8761616a86b3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "34a6676b-0bb7-4a40-ae49-8cc4255e9441"
        },
        "item": {
          "id": "74248f69-c446-434d-8e51-71d0c2c12431",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "69f91ddd-b1c9-4c88-905e-0a89f4ea8d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31604ed0-6701-41dd-b821-04087d3b8c96",
        "cursor": {
          "ref": "1393d218-a758-4df1-b00b-8d8fab7488fa",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "57284e6d-dd4f-484b-9587-696062b84de4"
        },
        "item": {
          "id": "31604ed0-6701-41dd-b821-04087d3b8c96",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cfec0ac4-b4ad-441e-8e6c-9055ddeb003a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ca3dca-ab4b-4096-b53b-5ff19e0be0ea",
        "cursor": {
          "ref": "13be1728-bb0c-493d-8a4d-409703c7690b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f471dce-a630-4daa-85db-f8354d1003bc"
        },
        "item": {
          "id": "f9ca3dca-ab4b-4096-b53b-5ff19e0be0ea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1262b58d-8533-46c8-af8d-51f4042f997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ba7177-f13c-4985-a1ef-454f57c22a7d",
        "cursor": {
          "ref": "4530f9a6-b85f-49fc-b40b-5587c3c53a31",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a4d379d4-d058-4ef8-a876-430ef7258829"
        },
        "item": {
          "id": "65ba7177-f13c-4985-a1ef-454f57c22a7d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6186a437-85bb-4aff-a496-f97c4732deb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccb687c-9469-4e80-a243-be602ff7534c",
        "cursor": {
          "ref": "109febe6-f411-4d74-8a82-f7db2229ddb8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b78e17e4-3f0f-4e89-a078-f455ea275638"
        },
        "item": {
          "id": "bccb687c-9469-4e80-a243-be602ff7534c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "34e7bb83-461b-45b5-829e-2773dda3c33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9a755e-68cb-464b-9c6d-94315d63acef",
        "cursor": {
          "ref": "787a1e07-cbb2-4a2f-aa19-63814efd8074",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b0e2c91b-9f82-4843-a05a-1a168e1899c9"
        },
        "item": {
          "id": "0c9a755e-68cb-464b-9c6d-94315d63acef",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ccfaaa84-8dbd-4b26-b0c8-1acd5e4de4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e897eb-e5e3-429c-9045-07048cd72cab",
        "cursor": {
          "ref": "456ed452-97ca-4873-a718-e4cdfcce5e7e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "965ce49d-b3f5-41bf-81c4-a6095ae0546e"
        },
        "item": {
          "id": "c1e897eb-e5e3-429c-9045-07048cd72cab",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b4ad8145-fbaf-4561-800a-b9e70fd7ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d359632-7bf6-4118-b626-b73b741cbb63",
        "cursor": {
          "ref": "51681d1d-2136-47ff-811e-7e594be0f18d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2374f4d0-f805-42e7-ba48-a596935dc844"
        },
        "item": {
          "id": "8d359632-7bf6-4118-b626-b73b741cbb63",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "22f89616-cb39-4567-8f6c-ad50780bdb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f9dc24-c8e6-40f3-b748-b2fa7f566181",
        "cursor": {
          "ref": "a515fa57-3449-48a6-bb80-d229bf4ef69e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "58c5ed30-4aab-48c4-b8eb-dabe39f52cc4"
        },
        "item": {
          "id": "e1f9dc24-c8e6-40f3-b748-b2fa7f566181",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cccb59d3-c0b6-4ef3-a62c-40a36da6e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5a5f7b-97e6-418b-9361-a8f1f8d9197c",
        "cursor": {
          "ref": "98af85ed-bb9a-4654-927a-b60732f8c2e3",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb034ad4-8c3e-48a0-acff-ab6cbf057542"
        },
        "item": {
          "id": "3d5a5f7b-97e6-418b-9361-a8f1f8d9197c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e0cf2dd0-18ad-4f06-8c87-9eb8f287af78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8eb8d2-2d10-4665-b518-acab98e46072",
        "cursor": {
          "ref": "a976489a-fe66-4b76-8318-7f8b05c29767",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b0ba6d6f-f266-44e1-a1e2-5a65f9868090"
        },
        "item": {
          "id": "bf8eb8d2-2d10-4665-b518-acab98e46072",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a323ffc-9cb5-4439-b1dc-923650a28a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec4d726-7eb2-4021-a230-e4e8eb2cc3ce",
        "cursor": {
          "ref": "55d0af34-e780-423c-af06-f056fbffa65d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c7b675f5-37e6-4134-b03f-041cab95e9d5"
        },
        "item": {
          "id": "2ec4d726-7eb2-4021-a230-e4e8eb2cc3ce",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "71e614ae-44f7-4616-b743-26fbd715e856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da073d4f-7461-477f-aca3-e509e60b0869",
        "cursor": {
          "ref": "259b3965-f198-4fd2-80ec-637415f6167a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ebbd2e06-552c-4568-9b4a-4d0ecb6cd610"
        },
        "item": {
          "id": "da073d4f-7461-477f-aca3-e509e60b0869",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2861dba2-1c3a-459c-b281-15859e1ce732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc799f2b-634a-4429-b4f7-e9fde73c66d1",
        "cursor": {
          "ref": "b5d64d29-9ace-406f-b091-02797ff0475d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1ed13fc2-ff2f-41f1-9c3d-755737c3e23b"
        },
        "item": {
          "id": "bc799f2b-634a-4429-b4f7-e9fde73c66d1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d7fef9d2-d5fe-4e67-ae22-0746179d185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713d9d39-a4a8-4594-808f-9a01a6b7617b",
        "cursor": {
          "ref": "42d1e153-29fb-4eda-80f9-cbaebe520736",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8ea8cd78-bfe6-4ffa-9d82-ba47a1237ac6"
        },
        "item": {
          "id": "713d9d39-a4a8-4594-808f-9a01a6b7617b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "974735c0-b6df-46fa-a327-33b93df18a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288917e3-45cc-444b-b6a6-db233a6f9e2d",
        "cursor": {
          "ref": "4dfa0391-3116-425c-9944-95d4fd3c01dc",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "29095e62-1ac5-4273-bfdf-473c490ee904"
        },
        "item": {
          "id": "288917e3-45cc-444b-b6a6-db233a6f9e2d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f826d3b4-45f1-493b-851d-7b24623c7fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4b44f1-20cc-4708-aa9b-881b27b8aec1",
        "cursor": {
          "ref": "6d3bd9da-42bf-4f11-afd6-2b22f71fc6f0",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "26c46bf7-cd45-4b49-a916-267e3c3e41fa"
        },
        "item": {
          "id": "fa4b44f1-20cc-4708-aa9b-881b27b8aec1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "200fc848-d3eb-4ff0-82e0-4bc2a469dcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a65c7b-b02f-4c2b-bee0-c810f3d75d06",
        "cursor": {
          "ref": "1f8ba09b-4215-4bd7-877f-3ac994b5fd9a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b859b78f-f49e-48b4-90e1-2337ad4c3fb2"
        },
        "item": {
          "id": "76a65c7b-b02f-4c2b-bee0-c810f3d75d06",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "65607049-496f-4222-8521-c0b22e1b64f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6256047-74d1-496b-b8f1-9ae8b40503be",
        "cursor": {
          "ref": "0b0b0616-c89c-4e5e-8d41-b8d6c86911c2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "902560cb-2056-42a7-9a30-c2392addae5d"
        },
        "item": {
          "id": "f6256047-74d1-496b-b8f1-9ae8b40503be",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c6bb7614-a3db-44e9-b858-193696adf930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea857cf-8977-404a-886d-222b88d7067a",
        "cursor": {
          "ref": "104a526b-ad44-4356-b764-b3c4655ad585",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "34d9fb25-24fe-4efc-9885-bf907f91768f"
        },
        "item": {
          "id": "1ea857cf-8977-404a-886d-222b88d7067a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9925b713-a11f-440b-9803-c6a0b678aace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6182b41-f79a-4905-8d08-16ae9c727b12",
        "cursor": {
          "ref": "0d53f5b3-2fd2-446c-bf89-c60c97353a28",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "712aa1a7-9426-417e-bc1c-a0cf6fa90bca"
        },
        "item": {
          "id": "d6182b41-f79a-4905-8d08-16ae9c727b12",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "202fd5df-a39c-47f6-88c2-bd7eedb8b59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e353f-f4b9-4247-935c-b1d44243c044",
        "cursor": {
          "ref": "16702fc0-ba31-4512-8e47-1d11cb2376aa",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff610bb4-44a4-49f5-b66a-09df23710e89"
        },
        "item": {
          "id": "1b5e353f-f4b9-4247-935c-b1d44243c044",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd5bb85a-26a9-4a25-9217-996fa89c952e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141ae4ca-97f2-4524-bda9-c86eea8e26c5",
        "cursor": {
          "ref": "6bc2fcdf-fa25-4c25-83e9-97f2a85d878d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "48453704-7110-4131-a5ab-0cc032563b76"
        },
        "item": {
          "id": "141ae4ca-97f2-4524-bda9-c86eea8e26c5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83b3fda6-49d6-45ff-aa7b-46c62eb6b523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf2d9ec-8207-4206-9873-2603260feb23",
        "cursor": {
          "ref": "a3e929aa-885a-4328-bae3-1c896ab06941",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "77d987b1-0ba6-44ce-bc78-7561822a7c9e"
        },
        "item": {
          "id": "dcf2d9ec-8207-4206-9873-2603260feb23",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "279df5f0-717f-4c73-8c18-02246ee214ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e405b7e8-b5e6-4eef-b128-ab0568419acb",
        "cursor": {
          "ref": "620b22a6-fe50-4b62-905e-034a000e7b15",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "84223d20-01c9-4562-8aca-8cdf06ab039c"
        },
        "item": {
          "id": "e405b7e8-b5e6-4eef-b128-ab0568419acb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1b2652e2-27d5-47a5-a98d-86bfe8cecf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8531d8e-721b-48a6-9d12-8699f19536ef",
        "cursor": {
          "ref": "b54e4ce2-3351-44c3-a484-01600e8e43c0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1d3099b8-16a5-4305-8e93-609a320018ab"
        },
        "item": {
          "id": "e8531d8e-721b-48a6-9d12-8699f19536ef",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "caa4fb71-5fb0-4c06-b46c-470b310b8268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6839c8-1fbe-49df-9996-23961ea76b8b",
        "cursor": {
          "ref": "067a8d55-eb9b-41bf-a805-7772068bae6d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1bab4957-0200-4611-a9a2-e9f36cbf058a"
        },
        "item": {
          "id": "6e6839c8-1fbe-49df-9996-23961ea76b8b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22453ebd-5bff-4ba2-a9f4-85b711409a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58811251-8226-4a35-9428-32007d4c57a9",
        "cursor": {
          "ref": "8b78db10-c54e-4a94-8a10-589a27a80e77",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d95bf13f-a254-4c2c-9e33-ec283e8804c6"
        },
        "item": {
          "id": "58811251-8226-4a35-9428-32007d4c57a9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "17a9efc0-74af-45c8-b8a4-da98ad91baeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd92b4ff-3760-4e59-937d-86457ba9f2ab",
        "cursor": {
          "ref": "c4ea0c48-15f1-4f9a-8302-561944dd3272",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "51dcd7b8-0e0b-4781-8db4-2bcaf33189a8"
        },
        "item": {
          "id": "bd92b4ff-3760-4e59-937d-86457ba9f2ab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4a5355a7-9b67-4381-8672-f6db851bb622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e12a79-fe59-4975-9749-1217429c0ed1",
        "cursor": {
          "ref": "56d309fe-28cf-454d-aece-f7c6ea752671",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6f1bea93-6ba2-469e-9312-08cbac3b3f34"
        },
        "item": {
          "id": "78e12a79-fe59-4975-9749-1217429c0ed1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "370d1fcc-31df-40d7-a037-236b3c7b60bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff926e6-dd0b-497b-b8d7-ce26cb0dc446",
        "cursor": {
          "ref": "e164aa47-4fab-4cfd-9f0d-be4f0654a4c8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a8bdad09-9c44-4e18-a0e2-47df2262b444"
        },
        "item": {
          "id": "9ff926e6-dd0b-497b-b8d7-ce26cb0dc446",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2ecc07c9-fcec-46af-b97c-a51fc2464e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbf632f-03e8-4b1a-9510-2ceab4212526",
        "cursor": {
          "ref": "cea45cea-ff94-4a94-924e-5f02f60d540e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d7d105ab-d780-430d-bd73-310c7f9697d4"
        },
        "item": {
          "id": "0dbf632f-03e8-4b1a-9510-2ceab4212526",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4afc293-878e-4732-8599-ea0d19eb8b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4773e2ac-3f59-4695-aae2-44b5e54e40cf",
        "cursor": {
          "ref": "3462a2d6-a069-4f42-a8e8-0e284d1b011e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a4dd46da-92b9-45b2-9c5a-a78252895620"
        },
        "item": {
          "id": "4773e2ac-3f59-4695-aae2-44b5e54e40cf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eaf78fd4-9a12-4ef8-9ec9-e78eb9a3697f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf1420b-29dc-4d9a-99c9-733a010902ac",
        "cursor": {
          "ref": "6a607453-53fc-4e9e-9c5e-27cb729aba8c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0a684924-6d15-4688-a752-15c72d9271a3"
        },
        "item": {
          "id": "eaf1420b-29dc-4d9a-99c9-733a010902ac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f892169c-eb04-4433-b8fe-c51bc2dcbfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1309d61c-4f36-4dbf-8482-23b6009698c1",
        "cursor": {
          "ref": "43c5f581-c306-45da-a7c6-9cac09b56cc2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "486e0207-0820-407b-a124-fd9938aee849"
        },
        "item": {
          "id": "1309d61c-4f36-4dbf-8482-23b6009698c1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3e969e7-d79b-4350-8368-46adaa6ea673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f957cc-a96f-46c9-ad66-30f7da45b744",
        "cursor": {
          "ref": "b3b55022-6ba4-476e-9a83-c99bc075ca81",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4b7325c0-235a-499e-ab11-87caed2389a6"
        },
        "item": {
          "id": "d6f957cc-a96f-46c9-ad66-30f7da45b744",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a7ea8870-57f5-4ee4-813f-bfccb90226cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52fb853-071d-425d-9ba6-e8238aab1455",
        "cursor": {
          "ref": "581d88fe-179c-4a28-80fb-d9439e512e98",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c2115a30-169a-496d-80ca-4a01d6bbd107"
        },
        "item": {
          "id": "c52fb853-071d-425d-9ba6-e8238aab1455",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e7f6e8b-b22e-4e00-813e-ba456c3ef6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab77822-9e4d-4f65-afaa-b125e1e144ae",
        "cursor": {
          "ref": "9dbffa92-b3f6-43b8-9d28-60465e959636",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "55914bd6-bf7c-4c30-a2db-7e8083a80e88"
        },
        "item": {
          "id": "fab77822-9e4d-4f65-afaa-b125e1e144ae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c9524d5f-bee1-4466-bd37-4fdc1a8af9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a3c685-6be5-4950-b3fb-4c49fadb7655",
        "cursor": {
          "ref": "963b2d6a-fdbc-41e0-bc8b-034582d82db6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8640ad42-8888-4d7d-a4fd-259246723f39"
        },
        "item": {
          "id": "b3a3c685-6be5-4950-b3fb-4c49fadb7655",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5aee9a2d-4685-45ad-bd85-93360c43432a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d1f26-2d37-4616-adbb-5cf732b43cc1",
        "cursor": {
          "ref": "30d9aaa3-2d80-4509-87cf-dcd62277d8ae",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1e40d445-5aee-4e36-8e1c-f7be66827978"
        },
        "item": {
          "id": "c17d1f26-2d37-4616-adbb-5cf732b43cc1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "79c1b77d-d610-4b66-a19d-06e2027c97fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703f5a84-13dd-4bce-85c7-29dae1bb62f3",
        "cursor": {
          "ref": "5bb2af4e-a165-4205-80a3-d5321e5b6357",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "28479d6a-e15e-4e23-ad97-4376ce82bcc1"
        },
        "item": {
          "id": "703f5a84-13dd-4bce-85c7-29dae1bb62f3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1bd62acb-48c4-4ce5-b927-3b374cd288f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d45193d-923d-4887-a4d6-4d54bebcb7e0",
        "cursor": {
          "ref": "ea779a0e-5a3b-4863-b492-c33d968c0c0e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "357b52fd-870e-4836-a969-df1cf691e578"
        },
        "item": {
          "id": "5d45193d-923d-4887-a4d6-4d54bebcb7e0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d2f75c50-7956-4b46-9b91-c782753ce3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7313646-2a44-4091-850f-39e6019ef84f",
        "cursor": {
          "ref": "c3e26eb7-71ba-4163-922d-cd18304a3703",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a4cc5a86-750e-4b2e-8cad-e8f7e539d10b"
        },
        "item": {
          "id": "a7313646-2a44-4091-850f-39e6019ef84f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3f55cf41-1567-42e1-9cdb-eb52772ba320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99012cab-15ff-4983-9711-75f5f5bc938c",
        "cursor": {
          "ref": "4c9ac042-99fe-4d73-89d5-18df9d63cd17",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0f5b6b87-c540-4556-9fd3-a8f2d0af739f"
        },
        "item": {
          "id": "99012cab-15ff-4983-9711-75f5f5bc938c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "20a0f93a-8def-4792-a173-4b2bca0ce413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0893b42-812b-4c4d-a9a9-8c8704ec30f1",
        "cursor": {
          "ref": "bfe42717-df1d-4764-b023-04eaf4c79888",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2c10d501-5a99-42bb-acf1-2c426710cee3"
        },
        "item": {
          "id": "c0893b42-812b-4c4d-a9a9-8c8704ec30f1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "017e8457-ced3-40bb-90b1-63e57c3fe4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f34270-727b-4ef6-ae0c-1a361e9b6473",
        "cursor": {
          "ref": "ff9421f9-754b-45a6-b0e0-5c20303b55fe",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cebfde67-ebbc-4528-9e99-792be39cae89"
        },
        "item": {
          "id": "37f34270-727b-4ef6-ae0c-1a361e9b6473",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b541aee3-11d0-45b0-be30-8d8a4ae23fe3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a1708a-306d-4e2f-afb5-3d0ccbc3e628",
        "cursor": {
          "ref": "7f730a48-36b8-4c92-8073-ddfc7ac26717",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "af024b96-6925-4249-80da-f6c6325a67c0"
        },
        "item": {
          "id": "99a1708a-306d-4e2f-afb5-3d0ccbc3e628",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f608d334-0098-41a5-9662-14637c9725bf",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fd34f0-4de7-404d-8e7d-559ffad0cada",
        "cursor": {
          "ref": "b2750b95-5300-420c-895b-f6839fad1120",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3f235608-2c00-45df-82fd-1c9adf285704"
        },
        "item": {
          "id": "13fd34f0-4de7-404d-8e7d-559ffad0cada",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5ad85f71-9bf4-48d1-b115-2daadb8337c5",
          "status": "OK",
          "code": 200,
          "responseTime": 2909,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0e628f-58dd-470f-94f9-b601d31a5d2f",
        "cursor": {
          "ref": "014f18d6-608f-43bf-a0ad-6e6105cff9b3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8c3cabfb-28dc-4faa-abd6-54f8a957d26d"
        },
        "item": {
          "id": "7e0e628f-58dd-470f-94f9-b601d31a5d2f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d2e8c8e-424a-4445-b0c0-28274ff7fc34",
          "status": "OK",
          "code": 200,
          "responseTime": 2724,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8475b216-58d3-4ac0-816c-05af65f8b098",
        "cursor": {
          "ref": "b2c24455-05c5-47a4-84db-6365ad3fa0d1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "644f1a70-b485-4ada-a673-eba711394d8f"
        },
        "item": {
          "id": "8475b216-58d3-4ac0-816c-05af65f8b098",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7eb69dd4-cd69-4742-8f42-efbbc9865cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8475b216-58d3-4ac0-816c-05af65f8b098",
        "cursor": {
          "ref": "b2c24455-05c5-47a4-84db-6365ad3fa0d1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "644f1a70-b485-4ada-a673-eba711394d8f"
        },
        "item": {
          "id": "8475b216-58d3-4ac0-816c-05af65f8b098",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7eb69dd4-cd69-4742-8f42-efbbc9865cf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4fc681-fde4-4227-9a63-7749880dc8ba",
        "cursor": {
          "ref": "11ae3939-d553-4cca-9d7e-c89b47d3bdf7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "971cb703-3e20-4f14-8977-14d1db50226e"
        },
        "item": {
          "id": "6d4fc681-fde4-4227-9a63-7749880dc8ba",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "af98a022-bf57-45a7-a328-a90c6a6a96b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55362ee0-8192-40d9-b00b-ff05d22b801c",
        "cursor": {
          "ref": "e0d8c513-b418-4dfc-9e0d-66e3d71e83ce",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "86e52358-db98-4d60-857e-59350b1ae3ed"
        },
        "item": {
          "id": "55362ee0-8192-40d9-b00b-ff05d22b801c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "016b667a-6fc1-4e80-8d12-3ed034a5a4ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}