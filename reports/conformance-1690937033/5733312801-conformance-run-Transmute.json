{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d140b6b9-a34b-4ccd-b2d8-6e7055e20ede",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e52329c0-d2e7-4ca9-9e59-9a4e2c1ba069",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df1c9058-acee-4974-bb28-e34e7cb85e66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0bfab6d4-90d4-4ac5-abaa-3315e95b2297"
                }
              }
            ]
          },
          {
            "id": "9d07b4d5-6518-4ae1-b669-591052432d57",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6ad622c-2a32-4726-a957-7efef6fb44d3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "65ef096b-a203-4a7c-ba4c-84d553f9eae7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "141d381c-50e2-4301-8a8a-536fe2d60e7d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "54e54e94-8db8-4535-a6d9-0ef93a9ce266",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d1f071a-7dfc-49de-a741-8ee57b527001",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc8745a2-e2ed-4910-b9a7-11cee07d8af6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47022c65-e6c5-4351-b8e6-a4c4f21d4c53"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16ed1341-4608-4ecf-906c-367fc9ec437c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae4c0fad-fbcc-4ac6-a6a5-ec605aa72825"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b375e756-b7c1-48a6-bea3-60cebd98622f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67250521-fddf-40e9-aad2-2a8252b1f8ad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afc86202-327e-4313-86ab-d9624dcc7f8f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "67b84cea-40ed-49fd-a865-b55464cd0303"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04573daa-6f47-4c56-8c28-bea4ee5104bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db1c3281-a0fe-4af1-afef-261491c6739d"
            }
          }
        ]
      },
      {
        "id": "b5633d87-1c89-4c06-8674-bce1c3697aa4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d220242-cd74-432b-907b-fa03ca44d7e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6bb964d-3887-42be-abaa-19909b6738bd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "168c7849-5201-4ab2-b119-abe71c1afe0f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92013382-baf8-4163-b019-e43e06f1910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0e9e043-7c35-418b-a694-707a99353d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186ab08d-fb0f-48e5-9cc7-0945b50fa00f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe18ef3-75ff-4e4e-ba32-90f2c1d74301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def7db13-bf49-45e9-8d6f-5f87e7406ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2e088a-9062-416a-8ee9-87ad4c87b8f5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a86296f-7b1e-49d0-801a-c25e1c8e68d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3467869-f6e4-4dea-9e4a-9b815ed16f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6af0925f-3668-4e61-926d-ed51e01a6711",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d75028a0-1450-4614-973a-a16ddffbc5a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b045bcb8-7183-4025-aed1-b1ec701e379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9006a813-f47a-4607-a44d-00b26c450e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ccad95-8fce-4f58-8ff1-792fa72798c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557f2d76-e616-4954-b911-58640a4a1e4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c0a49649-6014-4316-899a-37e5bf5bd5a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b13bd69-4dbc-44d8-8a22-3a61754c0128",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69846075-9745-42e7-9f19-f6327e855cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a08a31c2-823a-4341-952a-f290f65cd9e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "477ed4d0-11dc-44b5-99c3-0f9dfd84ab75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5491c2bd-29f9-4824-8bf9-5f13e8806392"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8a9a442-47ed-4929-84b1-d0c8ef37381b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63299781-bcfa-4704-a475-6c4109885007"
            }
          }
        ]
      },
      {
        "id": "4cd098d5-ca03-477b-b6af-5630e984c98c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1565587-6147-4f8b-95e2-1f346e8c0307",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66e224ce-c67f-4f0e-832b-a908083318ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db6dee43-36b7-41ae-9cd4-4bfab7876936",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c32351-2ef9-40e7-82d3-568e8a9807a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643a02e2-383c-4838-a153-1eb72869cf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81e474b-04a6-4ee7-9509-b785ea696ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61a78656-788a-4144-ad59-1e1fecb97e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82febbe4-052d-4b9b-a207-e575abba68a3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b3f059-723f-4ccd-ad80-0c4a3ec70ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e065bb5-7c77-4b70-bb53-4d6482ebcfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669cc67e-e62e-4af9-8f2d-f306c3c7431c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2d3caa-948d-4d96-a1e6-0c0c2494a3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec67f68-0899-47cf-bf5a-2f5a7c2785eb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b376609e-36ff-4cdb-bab6-047fe35920df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138518cf-bff6-4e0c-a116-3e6bed660a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8468ae9-ba34-48e8-ae0d-c94a748d795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aae3386-d288-4cb7-a856-089df57033a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcca34e-ad9a-4952-b73a-167fa2118223",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b5d599-ef23-49d7-88ca-7a70251f0d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7559c8ae-c73c-48f4-aeed-d573ab478dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4839803c-48fe-4963-95fe-53ef85f9bff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9085db7c-85b4-47ed-9451-4a944b69f1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db8e03-8181-408d-87e5-116e89e006d4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f748233d-a9eb-4224-bfbf-f7de46d78dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f23f34-c1af-4f98-a0f2-5a4aa3a67828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af4691-496d-4869-b8c3-ae8e58cb356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47671454-1ee3-4f5a-aec1-6f6f4088ad7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60d468b-2bd7-4fba-a00a-37afaf710fcf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a989da69-a190-439e-ba5f-b2aaa3d79e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683fd55c-232f-4f85-9092-568b365fca1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3c56be-515b-47c1-8a07-845d63011317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ed679b-7329-4137-b151-b790cf8b5744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8633de41-1c01-42bd-80c4-ebe948f23af0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4280791-848a-4bdb-b661-e669d746d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557abfd2-34d9-4afc-8a0f-363c1b617f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c216ec91-40fd-45fe-9df9-286ae518e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e8bf25-16ec-4009-80a1-72a9e96d0034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be52efc0-5e23-4003-96a1-ad579b018474",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2d107-f482-452a-a9f0-c11e6ce197e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706ca700-ca37-41ee-9bb5-2db1d878e9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0cb5bb-c783-417b-a423-0166af492988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9e4fc42-ac7c-4c48-a618-79ed2712210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84eef5a3-6be1-40b8-9c9f-efbd12508b94",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71786a3-62f2-45e3-b82a-2f746a0151b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8800c65e-c272-419c-9301-9b17066c6a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13535431-5f0a-4605-9ed7-8f69499970fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11adac74-2798-42c2-aea0-7c8e41282095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306bd7d0-c7bd-4fc9-8412-de328b81095b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af5db9b-25f1-4c81-bba3-58bff977a8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f00b98-da47-445b-bbdf-e3c71ad79349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df2a146-6bb2-4b11-9c95-fcc9e3614a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fffa952d-eb1b-4499-8666-dfaf04e60b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae05872-2ee4-496a-a3eb-76a3f396037c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e805134a-38b7-4eb1-aa3d-dc6829014c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dda51f-e380-4c6e-9895-d7fa65dd14b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d531ab9c-e080-4f9e-8570-2adff9a14dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7906f87-82b8-4c55-83a8-a2035f2ac682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d025d8d-7abc-4fa0-9694-48ceba080ae0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81364b7b-ef85-4de7-a6cf-6a0bce7a43e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cfe9ec-7f07-4413-bd30-ad5a68fbd324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1270fdff-a1b0-474a-b556-2fad733b39b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98fd2911-129d-4431-9468-979a770271a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1357f9b4-71c9-4a99-81d2-23c3531b21a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cb6b72-babe-497a-8053-ceedf73a310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92846774-d43d-4e20-8627-92af35457baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225f92b6-d579-4cea-9621-a94709f1a18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63eda45e-199b-4a74-a69b-37147d0baeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabf9c9d-71fb-4bb2-bd47-106b281e9446",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c602b15-c354-4e9b-a9a0-07bc34f346d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3517cd8d-58d1-4024-ab6c-683e0166bc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f4612e-09cd-49f1-8452-2494ac65c7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "126d19b4-5deb-4d15-86bf-4740753e48ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9cb629-95cb-480c-b2af-eed71f6405d1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e79015-1ef2-4e36-b12a-944f891190d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af08762b-df0e-4b01-82d1-254de0835c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf5aea2-d31e-4fa3-9e5e-4bfba646e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "244b9b94-9123-4e1c-b71b-e0b45707be49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e1e403-8946-4a77-a9e1-0cabeb3acacd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13aba24-a925-489d-b2bf-58b8da19b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f9b534-c08b-4003-b680-4c2d4134aa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc91f1f0-8cab-4795-a17a-357f344c8a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7929aa-18be-444a-b416-34178f42741c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efd46a2-f0ac-4bd8-b763-5d426ba67521",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cda3644-1c05-451f-a2a9-8b70f428358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7840781-d79b-4060-b53a-a21e546e8097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96710624-ff8b-4994-9eae-a46b46a01a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1465b19-6a45-45f0-ad14-769e513c91d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38f3145-7291-4034-97c7-2152ffb89544",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7663e2e6-1e71-46f4-bf5a-9254e5525d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc432202-90ec-478f-9fae-46659f47cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc95a6a-bae1-41d6-a64f-f0adcbf31776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "afcd66d0-3130-4204-a1d0-0d204c976d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9847565-4843-4f3e-ac10-70351605b252",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f3b8c5-bb0e-4e2f-a4c4-aa5dabc3b95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8bd5c2-022d-4e92-a8a2-3146ab2eab67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84f192-cc5a-4391-b308-20bc97aee7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "638dc1ec-4c57-4a30-8dbc-2f914d044108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ff3e47-58c2-43b0-936f-4bfe21e61bda",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aa4e8b-0b79-4017-ba6a-872af0c19ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd150b43-137f-4a90-bdd5-449f6d4385aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ccb060-f4ac-4c2f-baee-c20bc01e76f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e08b2471-ede8-4194-80fa-9268e8b61413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7545520-7080-49aa-aaa0-f6c47465a434",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34d148e-e6bf-4847-b125-fbe58e63e256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6705e9-0d02-4429-90a3-fbb2bd2ea5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88c7990-e472-4d22-87cd-6cbdfb77b216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e29899a-81b9-437c-9ee1-6842ae5ad3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d5068c-23f2-4d6b-935e-5358970ede0f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db80800-827c-4c10-b0e2-587560a50620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2078f627-b463-499a-a74a-08350ae93507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd470a2-132d-4ff6-82f1-70f2fb1cdb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "903bdbf3-c91d-41b7-9543-24ad39a70512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6fa71-c6b8-47df-bef4-04818f74e847",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d17e50-972c-426e-af6f-a9349a9731dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a018684-b7aa-4dc2-900c-58ed7fd390f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d9975-8e05-404d-919f-6027dccb2755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "901a79ce-1449-4ba5-a0ef-2e517720f863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86793b-9246-45ec-96d8-32e84a2b00b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d85789c-c0df-4925-9858-1f4b52ea4a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ee354c-cc30-439e-adda-c3de9a61b219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b940a-a43c-4381-9c87-37556740a323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b2fa62-0c3e-4d66-b61e-b4d15c2aa3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71df710e-d954-41fb-98f5-28a7514c741b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56de56f5-b0e1-466f-ac07-d3a9a960187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7f31db-0421-41e3-a58d-fda4c2b24ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a43b43-1691-48cd-95df-06add719b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed24bf9c-2708-4fd3-a817-200863900210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730d58ea-beab-48e4-a704-0f9b60f48d2b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d0717a-c0ea-49bf-a760-521b0c2d6c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5ce23a-e1a8-43b6-b6fc-4eb9afd8c7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad1b81-4e7a-4fc2-a2d6-f0d7c518593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62eca6f-1b7f-4be0-8621-dbece5b5ee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f48689-63f5-4bf8-893c-5e76f81281a6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9862ee-00b8-4346-b089-024aa752f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fded8f5a-0c43-4cc2-81e8-39882171a36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054c5c6b-1bd4-4a61-9bae-b64b39af12fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1899c4d-7127-4a4d-a7a2-2a2fc73284db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6d21a1-5bf3-4987-b629-b9eb99fb0c74",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8391f35-89e8-4383-8f7c-eaa1e83e5a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580131b6-071c-4912-9b95-4a24d8dabace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec16368-a688-495e-9b78-ff3f582d59ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfffd45-ea90-4e3c-b127-2f3890965c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd8d809-5190-4b7a-a7d8-3cdd694bc91c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634f14c5-a8f5-4ebf-8c52-947fa67a5b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1139b2-662e-4460-8aa2-798de26a3265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08298a3c-440c-466d-93b2-872ba24e1068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89625cc9-1c8d-481f-a89f-27301b21e2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb917ece-ac69-4df1-a506-b6b5ec68a54a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18af1ae3-5e78-4b2c-a681-c31bce6febcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496d7183-42c1-410b-bbde-cebe66ddcf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c12f0a9-f02e-485c-8479-4629649c9ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e53baf-4eaa-4408-bb8a-ae37883a5f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2483404a-04e6-4279-b4a4-fb9dbee693f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6b1802-566c-476a-9ab3-e8be3a909405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7c953f-7846-4766-b0d6-96a0a1d280c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34d2a19-db68-4c97-8e88-b367f10795bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff16b607-541c-46b3-8654-80764f7346c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d99f3a4-3713-4320-87df-f334357250dc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e96a9d6-64f0-482c-af4a-b75d4cb90f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbdea46-3719-4328-abf7-da2c995d1afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63541773-d11c-4090-93ab-f6dccfb8570d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0f8d66-de67-474c-b6ee-a6f13cf776ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bf014b-87f3-4e93-84fd-a36465054bc9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf673a5-d4ca-4452-903d-558e78417306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331f893b-d92d-4ada-a3e5-4fea38646f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd685967-19c5-4c6b-bb96-fb37de68f849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "626a5308-4c10-463e-9d3a-5b6b90f63d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5fc66c-eea3-482e-8489-e8e65ce630b8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8e5b8e-b49b-4d6f-b827-89e46941cbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3beff-d070-467f-ad20-c7fb4978be24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f67c3bf-cec4-4bf1-84d0-72e58054db50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc3c3c6-e3b0-4bd3-bb1c-f3a90978fd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa1a0e2-2ffc-4b0c-a8bb-af04a836299e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0bf3e4-afdb-4814-b118-6d68a260d5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5de3e7-7942-4d74-b766-628d2386cf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ab9f28-4d46-4173-9ed2-06336d81509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dad02ed2-08a1-4917-ae9b-9c4aeedb014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea82132b-48e2-4871-97fb-0fcd99de96e0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f4ce71-ee8a-4fcb-ace7-6441187e3a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1309a8ad-1a62-4388-a787-c5e59c89fcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f89050-15b1-4939-a682-0390dc30bd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21b881c3-9322-4f87-b3bf-b6849f8d3c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf2f1c3-430e-4baf-916c-f67a97f1ca64",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b37514-6244-4bda-ad21-278a033649fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc778ff9-e92b-4d46-9ee8-bdd39aa26b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbb5e74-bae7-441a-98a1-08daad151655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0708486b-c83b-4c5e-aa1d-25decba80c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b0fd52-ca9f-40c2-b897-74bcef445182",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c944042-3117-4b3e-b077-5a52114ec05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bed5218-84f6-422c-84d8-e5bf05ae308a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fdf019-3e9f-4cdb-8165-bd1b085fbfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "389775ee-356e-47f1-a5fe-fa93bfdbc2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec77b8-f1b2-4123-88ac-b9c9c722becc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41893bc-17d1-4d01-8a77-c7f58af74ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841fe87a-b7f7-4472-bcdb-f4808621b859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c000ab6-759a-4426-bc69-0281a7a96683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56a05533-9103-4cfa-b95a-dedf005fb23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12a2a6-1187-4cd6-baa8-a62b1abab675",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16e9995-687b-4a09-845b-e4637df5e94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ba5661-a93e-4261-b3d2-94808cbc355d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bb4613-7728-4653-b1bc-65bdcd09ae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c3258b-7ec4-4779-a383-62b1a7a9aecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4718a0-8675-4035-a87b-5d72fdbc7a2a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dfc554-3edf-4bc5-be9c-b331f4fcad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893a0804-fe8c-45b1-b791-3c9c93538d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aa940c-b2c1-4850-97d3-06b7c51ad85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f26c05a-3b84-43bd-b706-19ec0cec6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa06b84-9b56-48a2-b6e8-4165c425f149",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e2063b-ed6a-43df-a839-08234f5e2d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e8b388-e28e-47e1-a681-4d8981f0137f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d175190-ff41-420e-b0ad-0f533d6b9e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "707fed85-4b7a-4520-a2bf-86737c9747a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd9679c-8332-4f1e-a3f0-728036d73a68",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f264b1a1-739f-492a-b72f-0b7778d8057c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bc9e4a-5bf7-4714-9436-a8fbef4bc41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242c235c-1973-4077-b7ce-943b5ce72c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac1394e-1908-4bb1-a231-f4c7edaf0f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee6a1b2-54d4-4da9-bf58-7c7eac76492f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b3b3b2-908f-4c83-afff-81962a8c9974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a91dccf-b519-42a0-9995-9b5f5e534a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac8406-4822-4bab-9bad-98e93e395bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "33436d8d-daf0-4685-8f69-3bfd31d872e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8f77f3-29bd-4012-a63f-249bea6ac724",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae972928-ea36-4bbd-b66f-586c32de5c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c635036c-2ab8-4a22-a2b8-87eaa617d29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82de34f2-9dc7-4f94-ac0c-4cc730d3743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b03fe35-e5e1-4f35-9584-49d38c13c193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2efb02-e15c-4480-b447-8511ba799c8e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37637a03-7dd1-4352-91ea-b189b367c209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ed13f9-5052-49a1-bf7e-0a2ef1457713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a4baf-259f-4436-9ddd-74c947685a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb8ebf8-e1f2-40f6-a43d-627a55c0ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5873e93-9e7e-4c07-9738-ac846538a642",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fac5caf-48a7-4e29-a452-07b96d718162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e259a3f-0ff2-4b02-8288-ca8dc40d2230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b320ac-24ce-4fcd-bd43-81ed143cf1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6afc1208-1871-43bc-827e-c014f726f781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702eca1e-6bca-4302-b7d8-dfa4b5bcfab9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161134be-2c66-446b-8840-1cce7192eac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81243ea6-97ad-457d-8d75-ca6b8a97f0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e4243d-5524-4c35-8194-67c37bedde1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdde4a5-5e8f-4c68-b8a4-0a730e2cc418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51272df4-3eea-4e03-af54-5834d45c0e76",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c883f-6732-4abd-a0b4-660cf65f4b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f37ab3-08f8-4ce2-aa65-91403287e92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2343546-98e9-44e2-8e96-7a3250089508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2673575d-13ab-4c3a-910f-dcb8bd39c4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9600b781-955a-479e-8be0-b4ba1a303d92",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579cda77-2549-4ef2-9397-051f984da3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069a2b8d-c15c-43da-a243-044c2e100688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fa6738-f389-4b31-b6c2-23950dec60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "241e6fcd-589b-4894-b6d6-90ad0554f7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502d7c2b-4e47-4a8d-9072-a6327fc756f4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196a2b7a-f9d6-4942-b9a6-ec9dbf059192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26792c9-9640-4847-b386-481d8a013e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c15e90b-548e-49a3-9f5c-4d23d6393213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "788a3826-ea24-4be9-aeeb-d24bd701ffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004be917-264c-45e6-9143-73b6794a9e1d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adc1053-b40b-44f8-bfe1-ebccd20f3840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e419dc4-baa8-4456-9709-561d181326d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c0930f-e054-4fd5-9a2b-f2469912508a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afcf492-aeb2-402c-91c5-f3e64858cb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe506eb0-553f-41d8-9162-13a9bcf74161",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806d119e-8008-41fb-b806-d2f48b28b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90baa5e0-c9b1-4803-bcdc-ad616e0ad62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db81d553-fe9d-4fd7-881e-92b1d4f241e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fceb8f5-b158-4797-b9f1-4dd56632afea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aef525-339e-4d53-bdf3-d7d4b715cbb7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e200a2b9-cb55-44e3-94ca-ec53e5192fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c09d1a-8660-405c-888f-ae6b9ba68c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3d60b0-5292-4b7b-abc0-d522664ebaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5b4c54-5326-4030-ba52-26a8a2b13354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a935f85a-f6fb-4647-8059-9eef92d48404",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefe812a-aa42-41b8-a0a2-81a19c6a5f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2061cdbe-c756-444c-b823-5203208dbf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec9fe20-25fc-428c-8433-78331f14e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4ff0e2-0f55-4a08-9a74-4677a36f44d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fbe735-39cf-423c-9cf3-bc8651c8eed1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09879f3e-55a2-4305-9525-722365edbb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0b958e-bec3-43c2-8221-49f3b873fe5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0101f22-0bb4-4614-b12f-6ebd1e5c536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4c15ea0f-d8dc-48cd-af84-985cdf70715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb81375-890a-4788-892d-14c2266a0568",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd67796-9a18-430f-8c1f-497aa8fe0fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987c3e41-0df2-4f1f-a5fe-ae76321c01a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e5b593-a9a5-4fdc-80fa-9116ab712597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "915c9e86-6b1e-47e2-9ee7-1976275d65a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2dee90-e16c-4d8b-bffe-e731e9e21890",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb06e54-eda5-4306-ae9b-2aaa47b13f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2d2a25-040d-4d3e-b289-3995abeadac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a2f392-d50a-49a4-9bd1-33173b83f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3e0cb5-79b7-4e48-ad24-d5b5f28b8657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59748d8-070a-4684-8e3b-6639fc840704",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653c2ca2-90be-424d-9500-322a34fd59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5223409-0997-4c4b-9e23-8e875050d321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd95666-1481-4654-ad97-9c38fb44aa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48bbcf2b-71b7-4e65-897f-b448a8f59f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe79b3e-fa2b-4085-8de7-4dfe9b90433f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ceba4-9e10-4d71-b283-3889e24fbd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfee9187-ceaf-4c71-903a-9120b4b3d173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa9d522-dd65-4934-82ef-b16f349a9f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7b5e02-cc6a-47ab-ae72-591c167d4f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4723f9-098f-4877-a3d2-f074fa2adb0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a4bf2e-4792-451c-996e-bb887f40f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d1fd73-6807-493e-bb7e-310f9b6aa2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e711878-1c97-42ba-a28b-46af15e06e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71caf074-6c37-4e49-9367-97c06eb5f3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00477003-266c-47b0-9eaa-321b312888f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51e001d-ece6-4837-ac29-a1c578191cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a562dc01-4c7f-48ac-8092-1d4c5ad6a50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d0813-8cc1-417d-bae7-133ba5cf4d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e47acc9-540f-4b71-80c8-57633f0de1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2968308-6228-4c56-af16-5402f6a792c8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f15851-7d4e-4f30-9c35-5c7f92af5900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315ec2ef-7f11-4e92-bff6-410207fd442f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd00ea-35a1-42c1-a379-69aa14a3850e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "95120395-6870-42c0-a02f-40e2408488c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef91f142-a3dc-414a-9dc7-8f1226838fab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d22f5-1ff3-4b50-9ab0-28049538d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226b7cc6-5290-4a4f-bf67-d1db5c62bf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707ae3c0-a0f0-4f73-8537-7793f20492e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e310ad-6e31-4988-b254-ba98703d1589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbe940f-b90d-430e-8258-6eacf1a03fa0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbb5140-3542-420a-9826-f1116059b01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c3da4e-c556-48ff-828b-05863976878e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec467f-4f19-4c85-b4e3-f5800bcc4f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12635680-8497-4e5f-9ead-fbc351fdf65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810452a6-bb62-4757-8959-2b0657897aa5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0639bd-fc05-4967-b649-0210918ab2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb27b57-7e57-4992-a949-ce27ff53ea36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9e8e35-fedd-49fd-b5e5-54f4377edecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3dfced-7907-45cc-a686-cee073f4c194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ba2f0-38f0-4acc-8a0f-0727f4275d5f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a28081-8efd-499b-a0fa-9372f6ddb64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e16a38-3f43-4602-9d15-1e0263999c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1102c738-05fe-40a2-8c83-d5a4c6a3a5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79ba8f11-568d-4388-bef3-7f8e0f638b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc0c574-bedc-4a28-88e4-d595c37ff0f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ffd74f-5ab2-4e8f-8823-2b7aff61343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ed3aab-bce4-4517-b640-21179e046920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d78b19-e5e3-41e9-be56-73262e27a22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fca180-b1ef-457e-b0d3-028ca6ab8d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670632da-2bd6-4f2b-9401-49ce77de8c00",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c30be4-a070-4b51-bc94-a58eaaef7622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3d45ff-e08a-4a2b-8eff-7a19d04c335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c6237e-0110-48c8-a2bc-2f8a376cacac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f54eda2-dea0-4ee3-a5ca-2cce25dcf6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e6296-26da-4085-961a-5245878ac9aa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aaeaa5-459c-417c-bc63-c820833f237d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd24d0c3-47b4-48e3-9bb1-0ebe69381bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a00eb73-f251-42ca-b086-37063d7c368e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbec8e7-a446-40ae-9349-6dc70726178a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a81739b-4b7d-4e0f-b0cc-e67fff32adc9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8effb84b-348a-4e80-b4c8-3baaf4074069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9ca2b3-bd15-47c2-acef-6e1824aea43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3492e31d-1509-4685-a91a-c97a6786389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d487359f-c1d2-49c9-a549-d5167207091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fa06f2-5875-4b70-a172-b23b5fe499b2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22644e24-8506-440f-bd42-84878c1b8432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a43ac1-64f5-44e8-a23f-ce7b06b0ab7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c5119c-1464-4a6a-b5d1-07440d29e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12bd4b15-0f28-47a0-ab5f-db0e63a8cf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a20b77-8b10-49e9-92b1-ea985e0b6c2f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6737a3c-100d-4017-8f70-d32487b91485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619851a6-5b5d-4c7f-8e48-d9fbbd7dc424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e06536-dbaf-4b7d-a8eb-aa7db70a123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "45690f82-63fb-4fd7-b920-6c40e3b5867d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4937e9e8-f319-41eb-b302-61cfb31b5d34",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12adf03b-c240-4971-a6f8-ae58a488fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da198629-a1c9-4370-8349-25095bbb91d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a1d629-5dc6-4de2-8abf-83ecc101e0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3462cf67-20fa-4dd9-a166-8788c9ce90dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dec42d-2535-4f6f-b846-a92319fb155d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fa96ee-7d8c-486a-9bba-9da7ea686f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7014cb-ea7c-4193-a591-c3b117a1b3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bab67d-1d73-4035-8f02-ca6fa13812bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2cb4f3-cd97-4594-aa54-781e3aa06766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ddc0dc-b9fa-421e-bed9-b258e8d528cc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3a0fcd-41ee-4007-b84f-675f8f652393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827afc29-cbc2-4a69-b7e0-fe1e2052f3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beaaacc-6d8d-4eca-9556-11bc424e8ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "640ef43a-f0e4-4d00-bd26-027ec066cc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63981422-ba64-4296-ad27-ef9cb1da7130",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308cea08-0b37-4328-a7b1-cb700acf2e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d00fca-7f3c-40ba-84df-0ba61262d7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444bfdd1-cff5-42e5-a779-8a2892acb45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7434ef29-4868-4a9d-8f42-424b4a6bff50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd36b05-b4c1-4f13-9367-22633b3d48f2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3332897-4bd4-4eec-8f3c-c3f6bd85870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f613e663-9f53-469d-9198-8424dad7c2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a197d8-9a15-489c-8076-a87158e0c687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63fefddf-4121-40b8-85f5-55bb2a7f1c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20887d5b-7950-4af0-b739-549447fc917a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e9881-057d-42d9-af0c-2b8da9af97a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fa9f2d-cbd1-4db7-885f-1731960ef0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8ce393-4657-4a5d-9c58-372d992a5be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b677bc8-c5f2-47f8-af1e-235e17fede8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f65ac50-1501-4017-9005-44891ce6fc45",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd05793-4224-4bab-b8b8-04663f12ecd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8269681b-9bb9-4b91-8886-5b4ae6692b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071eb4c5-ac0e-4f1c-8e43-b6af2ec6dc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d236f6c8-de64-4ab9-b1a8-4a0b6c66246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aad88cc-9070-4722-80bd-f0d4ccee5092",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7c1822-28ec-496c-a1f4-1e9bd2e8f3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e9268b-c043-444e-b731-77385150a8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe8503-962c-40bf-a9a1-90c63ade5041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4194be3-9c02-4c31-bbfe-e3a4a0f2b42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe8106b-e8dd-4286-82eb-632aefd9dd30",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699b0607-5c31-4f1b-bbfb-972516a2c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb367878-fe4c-4c08-9954-b8db2e1f3d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971511a3-c15c-4a8e-a48a-628f3324ccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da7b193-5e93-4a38-a53f-b295a02debae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdfa081-d64d-495d-a4d2-dcaf1f78990c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf4c9b1-efb6-4b14-9622-53d661792c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7639e855-c181-4e10-a2f8-5b282bfecd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c8e3ab-f30d-4410-b19c-6306b98f8869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc4a5e7-c835-4830-a0af-0fdb3111eec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736137df-a160-467d-a813-754154cdd4e8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fedecea-ba56-4f1d-8045-e35a456ddfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b197f1f-fed8-47ee-b605-049ebff62232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542798c1-0013-44de-a7ac-d8ae6b54f271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6f1407-5c0f-4985-a9b5-3dc39631e78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a238c09-35bd-4d9a-aa56-1dc03e1a7fd5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0999ceb2-d9f6-4309-b0fd-30e12184a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60242885-d1d2-43bd-b3e3-9a2fa19a90f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18497c3b-5d04-4831-b46c-14d691fe5e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3aae833-681b-4c3e-aa80-4dd935d2690a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79205ca-b5fc-42b3-83ca-5af54cfb629d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c322d3cb-6a5c-4974-8646-3315f731429a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21a746e-6f1e-4802-bb10-23239473f7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e400eb7-15d8-4399-9d04-f33f12d630e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90874bf-6c7e-4e78-b6a1-4debceb74ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b24b81-f22f-43be-b00d-c7357ad216af",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cf5453-7fc4-403b-8e83-657860569d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a8dec2-b2ca-4973-8d1a-de0c945b0aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959cd8bd-95b3-4fb0-a22a-1c8cdd0e93b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "daa85818-22db-4008-91a7-5d8fc485bce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b223e6-b977-4d1a-93ec-3acdd88cf21c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec31e139-c66b-45cc-b9cc-4be728ff4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd11882-2088-4e9b-8060-e3fffff9a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fa6ab2-8efc-4df1-a9da-f162a71e1cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f552ab3-24d9-4d75-82e4-74f9d9520fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ef73c1-de0b-4dc2-8776-a1d22e9c0b2e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b262c09-7de7-443f-88ae-8723cfdf30e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff47149-7072-40ef-a0bd-67f4038bf9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cd3588-ad28-421d-b136-0aebefed490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56870547-1505-4af9-8785-ea72b9187a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fd3f36-01ea-4797-a02f-07399109563c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd56b060-9ac8-4a54-972a-d38163dcb886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7005f3cc-c5fb-452f-aef2-516ea96e6f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e23458-9794-4414-a289-f684e73b14ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd64952-9dac-4eb8-872d-6a1b2c21c703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e7781-363b-41a7-a206-d6140695dbf2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377061d-dc66-443b-aba7-d2dd9825a0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d2f684-be12-4691-98bb-d9ca46cc8df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4b2a19-6e2f-431d-84cf-5bb0019eee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4011416-ee08-4982-8793-1de19974e44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719bb048-3adc-4f34-9cee-b875a20407a7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7795e2db-bf1d-42b9-8707-e835d3088b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "679986f2-2967-4f60-a27c-6ee464899a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430aa79f-8115-4c9a-8a3c-755a1f8198ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9991407b-1afb-4ef1-b642-45413e691ad4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0038d9a2-a5bb-4910-9d06-3e9237da05a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17717134-e57b-42d0-9aa4-ce5243e48ba3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88004b9f-8edd-4a12-bc7f-bca41f3124cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56b446fd-b2be-4912-9a31-026bdedbfb07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8f3588-c3f6-4476-b215-b26693338dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2aa31e8-6835-4220-a808-d4b1bf88be47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2609d8ee-13bd-43ef-bdb6-25a8c775c78d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97b4254b-5185-4109-a1b1-4d833005d32d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4490ff81-e366-4ed8-9d84-34838bc77cea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83c2fdd7-051c-44b7-9baf-20debb51b54d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4d38b97-88c8-4209-9c32-9fdc454b8dff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4faa7fcd-c2a9-4cc2-bdf2-daf98d554461"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a1cf62e-9dcf-4975-8f77-62ce117f9f72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cad8b753-ca58-4b85-b08c-8cde6887c6f8"
                }
              }
            ]
          },
          {
            "id": "a3ba3d43-cf05-4e5a-879c-f8ff3ff1f2d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29e9f02c-5c73-4dfe-ac66-e75bcd0b7c6f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48f33850-8580-4b75-be86-c27115030da5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00d4248b-a003-4994-886f-e3b2b39b0fd5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa096940-0487-4f06-90e4-121fb2362e60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50b0f803-80d9-40dc-a18f-cb89cf89d5d6"
                    }
                  }
                ]
              },
              {
                "id": "cb9982e5-320d-4ed7-b19a-c2c08a5c59d1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "005599fe-b04b-4bfe-b012-5df37257337d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f33dfe1-462c-42e8-876d-3453d326d921"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59bde7de-2e4f-4c78-aca6-6eb4461e5922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bbaa046-197a-498b-b396-69e151b214bf"
                    }
                  }
                ]
              },
              {
                "id": "1bd2c0d9-f0bd-419b-b165-889bc4b78032",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f6cde1-cc72-4d53-a5f6-1a759f0a11a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "533666fe-52fc-4941-a876-239f19e3df54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe99f4a7-18a8-4aa2-aa66-915ec21f6756",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46297834-508b-43ae-9884-1408c59f213a"
                    }
                  }
                ]
              },
              {
                "id": "dc63bd4a-67d6-40ae-978d-910b4701dac6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "584c9501-2b21-48a5-8685-1adc12378286",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "973a9b81-6357-49d3-9d7a-51bed4354772"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46d91e9c-f66d-424f-b054-863af7aeadec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e6416d23-0676-4430-8836-ff2eed6e49bf"
                    }
                  }
                ]
              },
              {
                "id": "97fa43aa-edd0-4651-80a2-da4a912ca66d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dcbcd86-059a-482b-96e5-f4b8ba1f1a22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b55c556c-e7e6-4560-a99f-4513bdbd5ad1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0349c7e-f488-43da-9781-abf7d24cbb1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "96fb29e3-0f6e-4189-bba7-10ddbc2e8d74"
                    }
                  }
                ]
              },
              {
                "id": "34d3dc3d-bff1-4df4-8f10-dcaee34cbfcb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8408baea-982c-4c0e-87bc-e28d26bf23fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a573b1e2-ff41-47a1-a9c4-ab2cfd7a8af8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62df9713-105e-4fea-a120-abc324babab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20486f59-6f86-4769-9f89-39cc343e957f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a4c5daf-c027-48d5-bb42-f4e43f96862f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88934b1a-9d1e-4763-97f7-480d4af0146a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9fd96ae-de54-42d0-a73a-561098a90257",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "461ea183-f35b-4136-a997-e746f34b8b07"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c63616e4-1682-4e82-8ae1-0bad12096b71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "42e066af-5fe1-4d09-ad73-3a433e3c21f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4f792df-f594-4a74-81a8-ebd0136b73de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0b1ead2-7b76-4471-9cdb-60940be88da3"
            }
          }
        ]
      },
      {
        "id": "97c6f5a5-7d19-4920-9aed-d507c6768cb6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "07f7bcd0-c027-46e7-96f8-90c17f9297e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a12938e-258c-4570-a8f9-23ed1ffc9e47",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5e3c42f-57a5-4827-93e2-9f61b8f1a654",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a341cf5-4c2b-4e39-978d-f326e801e41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2ab742-1c24-4b13-813b-5185aa55c2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c507bd-f06d-447d-b0f0-2eb6ebd67590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1e9f27-1e46-4f3d-858c-a0e092ab3b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae19755-05be-4555-accc-c74effabaffd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566bb029-aa13-44ed-ac0b-e1fe0c04c9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94751676-40fc-4a76-be75-f4b821a4976c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06860f28-1d58-41e1-96b5-4ba6c1e2ddc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dc2aae-3e33-47e5-9a52-ff39c8684f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d80f2fe-9e91-46d8-ab0d-4eefe89b810d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a8e5bb-686b-4028-a77b-6b8735ef7fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b2c638-4959-4921-8c82-4dc15c0234e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07180dda-f9c5-44be-9f08-3cce6d8ebfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b13c779-dc3b-46f1-a415-9c443ffa53a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b58fb3-8c92-4b88-b103-395489877627",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099dc4b1-d7c4-4dc4-8bf2-478af0dfba8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfec4971-93a0-4dd1-b23e-529a6cefc79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b2d2b6-8e3b-4951-8a2a-dd49caea319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa085ed-2854-46e1-a6b5-44a0c1bf69ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d629a0e7-4bbb-48af-95f4-853f2a96e67d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd88ec8-aac6-4480-9d4f-f42eadb03448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc03a5a-e2fb-4bed-ad27-3277cce53689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16799bb-6a27-49db-b322-0fc9fafec733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9348adb-95a7-4399-88b1-5ff98929dfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1024da4-d284-4fca-bbaf-d572ee221371",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1eb2c2-fb25-4b6a-9a02-7a915ba151a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e7f512-d6b0-425b-9b3d-78be7016bad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e6bdf6-0f11-4d29-baa3-a9c63826427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed00122-ddd5-43c3-a282-0343579b1f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed93ecac-2e9b-4347-b10b-8b0a7fbd397a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d61e5e-09a7-4bc5-9066-819678cabce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba6d2d2-0bce-4e10-9c3d-bf5004f2ad56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fbf569-a4f1-4b12-ab61-0411bfc5292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac29fa1a-69bd-49ed-9275-a4c1cf3a2171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12d934e-836b-4161-983c-b81d6dfdde4c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478c0556-5863-4f04-9b3f-bff80406738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0448803e-5f1b-4833-bf3e-47af2745bbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e768ab-794b-4063-bf8c-a6f3b97db76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bdaec3-d38a-47a9-80ae-4982fd4da680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56364588-7f43-48a4-b4df-05083322a936",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c6ee93-5e03-4a12-9b33-f3f27a099f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d722ee-d8cd-41c8-ab09-4026b88355a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37d932b-50a8-4fcf-8f71-6341a68b7bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5d5d66-539f-49d3-9852-7341788815b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1df71f8-e8d0-4e1d-89d4-ce52e34f384e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fac9a26-0c13-474f-8dbe-1c22b8ed55a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cefa0d6-895f-436e-838a-466f6e0a6646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de208d5-dadc-4d87-bed3-c2fe36e33208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89218638-39e4-4710-9103-380e5db9557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ce7a7-af4c-4106-b7b1-0c9f4ff9bf02",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e3ce81-f9c4-4780-8f28-bb074468851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7969da54-28a0-4dbf-9174-08201557b9c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98fad64-4385-4569-af9e-d79862efe6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "43d298f4-430d-48bf-8672-f9acfabb5389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6becbbfc-6dd3-4740-9bf7-89c1a8a3d48d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a544207-e1ff-4a77-8935-499d3b1dee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e37cca-6b2d-449e-83c3-fedee33dd0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd55f4d-3bb6-4cf5-aaf0-fc9316100f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5065b877-7858-4147-b764-c155a91302d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5675a2ac-c7b6-4537-9e78-c2275f754179",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5b10bd-2087-4bc7-b5bc-25090616f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5954b5-3c29-4a65-aa7d-ad3a5e520425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ccaeb-6260-4f82-9241-bb10766ce8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b212d83d-d21f-43fa-b17e-7ca1a250fa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c85614d-723f-403f-ae67-bd2ffd15431b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a48b97-245d-47f0-8a83-ac0a3dcb5a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0929be87-5073-4192-9945-2902ae42c841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2a2a1-10bc-497b-8fbb-51196695066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00dd94c3-75e4-4638-9492-cd9c9c2174ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbca952f-d231-4590-8580-56af9afad4ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6d0200-15d8-4d2a-a740-4d4a639cf481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca82a77-a2a0-44c0-af19-4b4ff864b1f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fa0bab-857f-4e7a-b298-917105e21aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6174ec9-786c-487b-adae-878480fbae53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037b5981-5826-4295-905e-c06ba2607bc4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8302dea-0357-4be7-841e-4ed665d80b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5ebe8d-677c-4dcc-a45a-742ea34e1ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67321aa-a71f-4ab9-93bf-d71844a13371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "631e2f27-0c81-4419-a82b-6dbed11da179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34d0166-7d54-45f7-a78e-cb3f7c853b9d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617bae5a-b071-4c0c-aa88-d66f6e445b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ff54c9-52b6-4a80-b8c2-9eb58ac6444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2ba195-5815-4ee8-99c9-9f243cc149bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0926085e-ca91-401f-9342-bd0178591263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4a4ee1-f245-4ca6-a51c-a6c15347d489",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7082c86e-53ad-4911-a365-d6562cdcd97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1884f47c-1416-4723-a4fe-3f0ddff4eb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8733e39c-cc66-44c8-9e52-bcf7e37edc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c1f93d-0cd4-4563-9a48-b1749e84a62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6e4c00-da2f-4927-bda1-15ce6f0502ed",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb106f-5923-42a0-b081-9100c9a74ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cc76a2-6836-48b2-9db4-43487c7dfa37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80c58fe-00ab-47d2-a1ed-1ca4278ac10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bd2a29-ec8f-46b2-a23e-758b69a1b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9652242b-04bb-40dc-91a8-ff2035e3f730",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0631f84-8d32-4e26-8f3e-0e9666b12f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b234d60f-4baf-43cd-b5e0-339d27ba94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92eb013-10ef-4039-8a26-5894f8dd2fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a0c90a-2484-4889-b2c5-7a8ff302859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1182ba-971e-492a-9299-dbbf0cfa48da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43320b34-ace1-4a38-b339-39f4e01acf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f356f44-8983-4b82-b157-932f0ab51e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5bf638-9a16-401d-a9b0-588fe87b26cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd43467f-71ff-4e95-ba01-862173235beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca74356-bdbd-44e1-99b6-938fcd5574b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ce99f2-c331-49f8-9290-b80be75401f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15047736-ab77-4c0c-9fb9-ba16470b089f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dbe5a8-ba55-40c4-819a-dcf70a00a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9c9969-371b-4414-873b-a9da597ffb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba1bf67-422e-42b4-ae3a-eba4f2ee46d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91f034f-4f69-42cb-9017-c92e5c8d0e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4d11b2-1444-487d-8aaf-c6a46f408a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5392e5-4159-4544-8d2f-ce02db9828cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f32840-7a6a-421f-8f0c-fc432406e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f108c2ed-6f14-478c-89d0-379b7e18427c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5587f858-3ae8-491f-be47-a6ffdae20227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d684ed-de78-4cbf-b2cd-fe525dd15c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a799817-6fac-4fed-b8ed-8799152c17af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2c0d84-0580-41b8-ae54-731673110627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4661920-9317-4aa8-bb9c-37291a69d5b0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c044ac5d-d0ed-4d84-ba15-189e3678527d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b96e65a-d329-45f2-b068-70a0cdbea2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca621d4e-238b-435f-bc37-5425ed19ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf4f182-d8f3-444a-9bf9-de525bd8d512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ea3b0-c33a-414b-ab29-885b229d34e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4ef78-9223-40f8-822e-441dcea58b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6f5f24-7658-4123-853a-7d945c6e1da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89a46d6-2aec-45c8-9886-72ffa9ab40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2d8d8f-a571-4a19-89d4-a678c0cb8182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e872f9b-e6a4-43cf-9fe9-8f04e3f3740c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f2a1aa-5208-409e-95f5-8e80ee091ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df7444-289a-42cd-8333-9c5d6b6ac8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18f88e5-b2e7-4c4e-8dfb-ab9aad383970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf87d29b-60c1-4a3b-8f8d-386009be8a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8832198a-0bc1-45a3-a169-f4296c5757f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d4248f-6048-48fb-89d3-e03b7d1e0d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de69adc9-1526-4a73-88e1-bca69c2e797a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae4e0ad-0ab0-4b62-9bc8-71f687fa9485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "410e1cdf-8b38-4847-b7ac-0be258115663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca5a86c-44ef-4a42-800f-31b546eeb0fa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0468d-b33d-4b99-839c-73b99bb06b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ed2210-e5ee-417d-86e8-da50f27d1419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2114d3-4be9-49e5-a0ac-19fbce143bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79eb0cd-71d2-4147-b988-6aa9ab8db39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8d97bb-49c6-4acd-8cce-db6a906f5165",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e240c946-4ab1-48c4-af2e-eac3ad76dea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc4c6cd-b61d-4e11-b906-6a7c4ca40264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7769dfd3-8021-4543-9593-712d1bafd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03f2961b-143c-4e93-8c17-a81d904079d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3432450-eba1-44ef-8baa-78bfb521a542",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd53c5a-a6dd-493f-a7a4-b9d25fd36aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c502f5f-c4ae-44cf-9f85-8408659d0a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb898f74-6530-4c03-8d5b-da1ff49ea678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72eade36-315c-4e80-a256-997ec2bb4fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb3e511-7cbd-4cb9-913a-970667b1d109",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8472c864-cfe9-4a7f-9ead-d09c981b554f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159eafe5-cdbf-4a18-b148-b305c203b858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe96b40-f2aa-4501-9ba0-5a3bb72f4c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a32adb8-7fdd-4df4-b357-03e5e09140d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "495f65fb-07fa-46ed-b374-dce619b6db71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b2d7022-0e7a-4d9f-a2a3-253f8824e963",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc57ea3e-5bc2-4c08-841c-66752aa3bc6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f42684-32bb-44ef-88c4-cb8a862cca52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2f7f5c-f7fc-4143-864e-49d262c8720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34e46f04-4fdc-420f-8ffe-1197bb5bf502"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a251cc1-79b5-4469-b132-740b75a9e6ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72d52edf-54e6-4b8e-b0c5-c8b7ae700ddf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d18de94e-9439-42a0-b881-d9560f19d84a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf272682-62d9-4cca-b602-87cde86ce65d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d619c62f-978b-4f67-ba93-c2845832822c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5db56fd-7d34-4cc1-ae0e-81994b19d796"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aff7cef1-e663-41b5-a0bd-10721603adc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "021228dd-4314-43e5-9a93-075567c62ad4"
            }
          }
        ]
      },
      {
        "id": "63d42c1c-271b-479d-ba64-3f7011c9a3e5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "39cf6ee6-599a-4a2c-a27d-1a693eeda117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "381c5e9e-2bb3-4685-8463-d7ee76a53ac0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8668b5a-6d7d-49b3-b396-3be86a7ae411",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96a53ba-4e52-4850-8d3a-1620669a72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9719cc9d-0aba-42e7-9d34-47fafd13fc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86042691-82df-4a19-9be5-ea82d89c7d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5184121b-37fc-42a2-ad48-58865fe85900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3cebed-defc-4ef9-bcc0-f06399e7571c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940e0bb1-f35e-49bf-9414-7dffa3c20e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f773137e-bba4-4a31-9753-0eb0b5683a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e46c307-406a-4ded-a89b-6d26f1f8a213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80096dc1-11ff-45da-82ae-e3f229928b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4997457-29af-487d-bf21-6d17fee1ea24",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a67e79-370a-4568-ae92-10221855a920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921b8276-34ce-4d48-9d87-22a81e12d9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513ec8c-6049-435c-a699-5c50a6f76943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96826938-c4a6-4873-9a37-c8049f3f936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def0adb5-34bc-449b-a6a3-5a4164804e8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647771a6-34cb-42a1-9550-c40773039fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f12902-99bf-4799-8703-41391c42b85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed507023-8f1f-4240-99ac-467b7f241565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf76c28-913d-43c0-8338-06bd43beadca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d20b28-5a93-443c-80f5-58df66d566e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9acabd-febf-486e-a46f-a1080c7d167a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bdac64-d535-4deb-a071-75c2da8d5a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a0a158-33ae-47a4-9b82-e3e2ff6bc626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "245b17e4-88cc-4439-987d-f346f4270c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e889bd3-f04c-4de3-805f-58ed80933a72",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f897f1-bbd2-4b8f-b4a3-495adc976202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f11fba-8f66-43b9-9d43-eac16df6a9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050771be-fb17-497f-beec-24d8d3b330c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "458feece-8dcf-4c45-8b03-f927a9c88040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f6746d-d902-4e17-99e0-770f78a01704",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca9b496-1886-4ec7-9fb5-b68f9f6824f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a313e7-9425-4adf-ad37-c25419341fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08212a25-b17a-4e54-9162-5c01d85e7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6108e2d5-918a-41c2-81f3-4befb1603984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b6c45-3ab5-4ec8-bfc3-2ebc3b19ae98",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e1fada-62a4-466d-bb1e-7b4f46a64a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdcf352-daf7-45d2-b11d-fb6969e7d64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29af6144-4e41-4419-9549-2809f43624b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b825ac-fb83-487b-988f-b9d26a10656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ddd627-dd31-4e27-9c93-af64be0c1c06",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bded48-8378-401c-857c-7e52364633a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbbee2a-ed66-4b4a-8ef8-bedbe821152e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57c89f6-0ae8-4e79-8182-79f8209cb7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2895522-a4da-4b04-a841-a229c8a07712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97912c15-f27e-497b-a1c2-bcb3bb3a9941",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3da570-378d-4b9f-ada4-a8d5a1aaf7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea094c5-5a8c-4643-b44d-e4e4374c3535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5e4274-bcaa-486e-8a36-7b1e27dd3402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ad85a4-7837-4021-b17f-31ea143e1ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7e603e-76e7-4f55-8c2d-411ea4b82e3a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce21975-fa51-418b-b102-fda324ffe682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b016600-6a90-43e0-adf0-a4a8e1901e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f542370d-03af-4987-a62e-641babf2f37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ab01ad2d-12ad-4c82-ae94-b9ab75d192aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e135e7-7f8e-4497-bde4-a1b205a0c269",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ef1451-4c9f-49da-baa2-46bb910343b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aef6836-8960-48cb-bad2-7e5b816ba427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14234f8-7698-4f0f-b6ea-401b1fc3a521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d80b77e7-e8d7-44be-8dfe-89c5cec3aaff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12484f76-e893-48b4-833d-8532336f3bf5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3719461a-f44b-4b49-aae8-f997aa9028d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9edaa0-ba79-4fdd-a6aa-e991ee590645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35cb7de-0010-4f21-9cb3-577cdaece865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d203aaa-e948-47b7-97ee-bfbc7d14ed7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b9d49b-3111-4ad8-ae32-9ff5f5d706fd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0d768f-fd38-4cfe-93a7-56004b283a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d2a4e9-e718-440f-bb8f-5f62e0f8d071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2321dc43-4820-4826-ab2f-e11afeb412d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d0fa58-c859-47aa-8f5c-d63144f64ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b88dfa-9bdd-4d24-a360-d7167b98acca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a2c531-e953-455a-a0e3-b670cc6a3be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee249229-eb4f-40fe-a340-1c3ee1475efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea958d35-5e26-4302-a248-6d6f213731c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fb4b91-a673-4596-b2e1-bc6d7c2ef28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95eed6e-67a6-448c-859b-fcaadd65b5cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef044f7-a7c1-4df2-a01c-4073a2a816f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a7d908-ed12-4e99-a234-5a2e4e3b25e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d365bf-3458-431f-aba5-3d47d5bbeda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78db889-c531-49de-ac02-bc21603254c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56867dca-1e82-41eb-b29b-3a5ab0b4051e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2106107e-cdcb-46dd-8134-10aa404492dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8d0c9c-efeb-41e5-bf16-b230e0c85f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a20e675-9678-4cd9-ad7e-dcd1a99371ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c78b81-8587-4312-b9ee-3d962db2a5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d646c4a-fad6-42ef-86fb-45a61e3d0a90",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874112a7-a350-41fb-a733-925807ee69b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6601c8c-f17a-4138-87ee-8ee5d4d411ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb9a43-ffa7-4658-8505-78980d8bf664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c2e04f-9140-46c9-8d2c-3645d765459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aacd995-896f-4160-b5e6-2aeffd0942c3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb5c423-df41-4865-806e-04d00c57b5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f42aa8-ed0e-46eb-894f-8708f609adab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295f190a-4df7-4c48-ada0-82ea3a1b1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc70b42-47aa-42ca-9e93-9f35a7c36353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3721100-78d4-45bd-9e69-95efe52df19f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c1ad66-4a0d-4d54-adb3-4d0054e7f5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa5e39f-bd02-420f-af90-6125260078ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3860ff0c-316d-41a8-9c22-5078b4823a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2ea050-3f53-4c68-ba1f-73313ddbcb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3876735-0498-46cc-b161-1eec99277d8f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b6b729-ca28-431a-85a4-dac649487439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc15f85-54a8-4ebd-8eee-4e490f41432b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9616d9aa-bf8c-48e2-a639-38f57ee2fcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32680a7-ed99-4d68-ba0d-6e5dbf34167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baad94e5-70e7-4295-ab70-190aa5a25460",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f00c44-83ee-4758-a35d-f531650de0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c95370-0438-4b27-b5e9-4ec82319ca5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba376d4-2ed9-488b-bd68-fecda80324d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4306485-8997-400a-b527-f23bfe1b86e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257f5227-18c4-4a79-96b0-6fc5e9497e83",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46265762-c252-4f8b-b792-b4d5b53d7e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69e040d-3e1e-46ff-988a-1e1aa2e5a41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01caf2f5-1b1b-4af5-a0aa-d1e8435d10e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9fb961-d6e8-4b60-bea5-0d7d699f0ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8797171-2003-487b-9d44-c73bd83384c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23eb0141-cf21-412c-aab9-a4c36922790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f559b57-b1b9-4fff-ba53-c59b28b21275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8276e3-b170-4e9a-8e38-4ce3254bf634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a7233d-64df-492b-ae5b-3d40bec66ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a541667-45a8-4ffa-abc0-e73848b00211",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18792f58-b635-44eb-9e33-9928c48de0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893ffba8-458a-4a9d-8c69-3d4901cf8a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eae6ef-5e20-4fc8-ba39-45e18da49c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b35af37b-0930-4e7d-9ec3-56b2d6082cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d8d89b-4e21-4da5-9caa-8c2ac0c3e903",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55808b1-3501-4951-ae83-6c58912d5863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f94636-3459-463d-9ba1-4000247259af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d8b705-6904-48b5-8c57-6fdcdfcd9d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b24bd8-03ab-4d68-87c0-5d2fd3c9d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e50535c-6862-49b7-8a00-2acf77d108e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b650cce9-d61b-4dce-8de8-fe71dee831ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a1d3fc-de85-44f0-a01c-81d024d14a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd64826-3a2c-48d8-ade8-a78db1edb8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab181d6a-9138-44bc-8d63-405fb2c6b210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b39dd2-5e4e-4213-9392-fc87c57d5bce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219bc15c-4f1b-4fc6-a414-9f1caff5c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e187d450-9d2a-44b5-8f09-06ffae3e2192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750b0d73-892e-4e9d-a34c-0c007bac54cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5428dee8-900a-4194-a5c1-52d87dd63cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f788af84-474d-4961-9f19-ac5287e92eff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349e42db-26fe-41c8-b7bf-addc3a75789c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ce1a24-1b63-4c7f-8266-75053a2a9f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088c4db4-db0b-4ebe-8756-af8181f4859d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d63531-85bb-47ac-93b9-7de70ea94e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12367c7-c0fe-4783-b71d-71e148529297",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a511a8d-bb4c-4795-b25b-352f2ad7c88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcce152-8cbd-419e-b7c9-a5947423ea8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458288dc-21d3-443f-a6a0-f8f8300aeaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e042f35-3b15-4b2c-a842-58ef77164bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84192b79-81e1-4bb7-b73e-560082f9b720",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239f9439-f791-4f8d-8a4c-13766e4eb201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3345e7-d2b4-4eb3-b359-afddc5827d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578a4752-b6d2-4ad8-a24e-bc56eb597feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c00122-7f28-4b73-94a5-a47baf750629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc7fe7f-fb0f-488e-922e-f359cbdf1b1d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797245cc-8879-4b22-b260-47a0cd37575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c824eca7-51f4-4c9a-8e33-e9c0f05fe9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54724a6f-65e4-44d2-8ca4-99218d3c34de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dcef15-c7be-4dba-9fb1-51f248422027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab067d0-0875-4807-ab9e-53b30ff8ff27",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2695038e-1d2b-4492-9fa5-76503b98a2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241b42eb-12dc-4743-9c01-a123b27f8bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae96c96-96d1-47dc-a775-0b88bfcd352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdf594d-a723-4883-8368-04c7c77a1f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bb9f48-0dea-4f5e-92d6-b264f5387c7f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ceb2c2-5729-4ec9-8cdc-6777ae38f7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01988f57-2090-43eb-90f3-196d8afaf133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38d3ec2-10af-41f6-8462-1a90f3e97dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24907621-b61d-498d-b29f-cf74b3be0f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b10effd-5750-44e5-a7ff-defd46b0893b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7656989a-85b0-4b6b-816c-46151d0554fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f52f51-a422-4322-8577-a3b20106c158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03fc537-d50f-41e4-be9d-00bc735b31c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b255e7f4-58bf-4e64-95d5-a4d5fdb484ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ed6e65-e5a2-4d7c-9758-609a2947b55b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382061ab-941f-4a04-b2ee-8c37fa5b15ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf141e6-fa5f-48bb-babc-fc48999ba1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d8b6f3-b2d4-49db-820b-5345941819c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4a939c-3762-4216-bdb8-460c41d0fccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc18d4a-bfce-422d-bbeb-8ba88d71e33d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62e95ca-dcd3-46b4-95cb-344e88952b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357257f1-ebb5-4e6f-9480-b7a4f9c7caa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92b07b5-f5c2-4ac2-92ae-5309fdd7f94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a2db55-3de1-4096-867f-65aa453d78f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcd6638b-c723-453f-adc6-af31584b6962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e08b9426-2f9d-45d2-964e-8879cd0062b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c05fcb1-89c9-4bbb-8ec1-603da62986a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6799ed-a538-49da-8ba8-1d33a4b6b82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fcda0b3-3be5-403b-bfa3-59401798880e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efe1249f-dc4b-4e1e-9cb3-a06393f65a09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81527c54-89b7-4283-b629-aac81314924a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd630917-9682-4bd2-a5e0-8a5e2fc50033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6a7250f-38c5-4d5a-b24e-80f16a8fe6c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a0197cf-a8b3-4818-8574-761e96f3a296"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d2b50a7-a5c1-4bcc-8df4-fc6dcfec81df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9521ce97-738a-4b67-8da1-b2bfde099425"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af606e52-8472-47f1-a813-0412cf044974",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "784ef295-fdbb-499b-94ab-3991dbd885b3"
            }
          }
        ]
      },
      {
        "id": "512ceb58-5b0f-4b8c-b743-048d08246811",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "59de886d-216b-48f2-b3b6-428c55edd8cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "684ffe1a-8ecf-4e42-8776-40e365e3c760",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b4ef77dc-ef35-4e4d-8469-7c181279f76d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c540bf-319d-4112-8b1a-6f0af4fdac66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58e6b62-8fe4-47bc-82d5-b22f2da9e50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6193f860-add0-487a-8cd4-51ec29817118",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e90bf2-0119-43e1-965c-ef94c6e34bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a800a28f-90f8-403e-8689-8f707ff2fd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e929f2-a7b1-4f76-a05d-c87aade7294b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3549d7c4-febb-4726-86eb-57476c2fed56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e30e16-b97d-4845-8306-f7b41178549b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111052c6-ebf7-41e1-91c6-b3b3ee57f950",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb6e021-856a-45fa-900f-515690d33912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93133caa-4658-4862-8019-0e414de2f09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91496ae7-fa05-4aee-a1b8-5378c328e3f1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c13a2a-aa6a-4086-9a75-9aedb661f9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc09b77-9e9d-454e-baa0-66d5a483ad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c8c8a9-c29d-4088-97bf-582edae2518d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04576f62-cdd1-4613-80c8-ad235b89f234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d71f1f6-a36c-4f77-84ed-25d6cbea8543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7008c8d-bc41-43e4-b86d-810b5ae8da91",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27737b3-faaf-4ffd-a9a0-847cb52fe10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b26006-8b9d-49a2-bfc2-617fbebbe603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f97522-4716-4975-b207-ee6adb3b1573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa5d8b2-8474-4246-9f9f-f8698d0b8d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d61b10-cb77-4fff-9960-9073e25902ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c8f0b-6fa7-4315-b350-8ad3cb906bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "930fe503-36d8-43fa-98b3-f4b361fa253d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb0ee1-36e0-44c2-9e48-011a8d60256f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7991c3ce-4b4c-46ce-bb9c-3bacb01bb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef4e991-f2d4-4790-8c1b-2d449ea3ecac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437e03cc-1241-44d8-beb3-c02640066012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20dbe9e5-2bb6-4b8b-8c75-77965d4de7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a1b35-7ec9-4747-aa91-5197c5ca7cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15388ed7-dd93-4fcb-8dc1-c048e3360aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c8c65-9c48-4dfc-ae5f-32369fbfbc7d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fed8c3-4200-4939-8d88-de262bb6ca47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74733a1-e7fa-452d-8aa6-1b52d108628e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b8cb48-ba0e-46ec-b2f9-c0843a7baee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6a8c0c-b183-4b33-8554-de346f62f1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8a177e-fc58-4533-bd48-6a245ab3edc6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82f62d3-ab95-453a-8fa9-4818a614e912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03f024-d502-49a2-8ffa-f695336f284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a439d87c-bfda-4e30-9135-0ac566ff10b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be326ec0-3821-4bda-911f-bbc5d13605fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc627eb3-efa0-4445-8353-b8c7d337d5f6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c38f831-b705-4b64-8b3d-3e5bf1e0603f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ac7b20-18e1-4a14-aba4-c97b7c5cbec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c2fa4-19ac-4632-8dee-81d513e95c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a545a6-1b13-4ae8-afbe-9f646f4d321d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1be462-d456-419c-94bd-0f4c43eae0d2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e85c5f6-e314-4020-a55f-bd6be5b7047c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccc2ca57-7a7e-4dc7-bf32-da6d722378bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fbcdc3-76d4-45df-9b47-6f21e2aa50ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15f8778-dcac-45ee-92b5-5667b295a311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807702ef-7806-4adb-9661-b9df5c671272",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c0408-7429-4e9f-955f-ee12404b95b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e652a88-a391-48d2-b2d3-db0816c047a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f546089-fc86-4dfd-92d4-fff733685b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e7ae1a-df7a-4ccc-ad9a-75e8eadcbd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c14953-3b6b-4c84-b366-99c78504fbb1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507d73e0-9b5a-4517-ab52-9ac293a59119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736e7465-bd0a-4bd6-bdfc-a01aa4595026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03286812-3fc8-482b-b8cc-cf07ff852970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897194a4-d558-4394-995a-53bbb65b1af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861cb129-54d5-4eec-8de8-d393ae1ac9ac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddb53c8-0f40-4bd9-ad70-d6e9d9d429f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6f7d0e-8d7f-42f3-bbfd-8d282f3173b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d126c0-8f6d-4ba1-bb42-31dadd7a5d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0cb333-f523-4d1c-a348-c7d5996fb4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c66ea7-0b0b-408e-a3d5-b8e264222a95",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a8ccfe-fd4b-4ca9-b0a3-cea8a35912f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745744cc-838a-4351-9fe4-40490c7651ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c00071-42c1-436b-a8b9-099f64846d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4313d2a4-a214-4263-be43-bd59904ee7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8c1749-0b6e-48ab-80f1-d2b6eb0d0142",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5b3eaa-dd91-40a9-9917-0920740d4cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f7dce8-a144-444c-b026-622e2893fca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6858687-f521-4950-beb2-b38dc045a6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969bbe03-3c0a-4b74-92e6-5a6d8e41e407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebca649-eea8-4e88-8713-48bc17cd05d4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa2c99-13b8-431b-a87c-ef6b6be8bcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb04acf-98ad-4886-9992-6c638c3e28f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc2100-47a8-40e3-83b1-8795884c68b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7d2bef-9a3b-4e5f-8bc3-f06af00e5a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b295061b-1a1f-4907-a46a-8b9fadd99089",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c730da-156a-4bf8-aa57-0c40e5088163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fb2070-fe9c-405e-876c-6db965fe0b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32b88d0-3528-41a9-b8e8-45f04567144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70255db8-6b05-47b6-a1c3-af70620cd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb14b92-806f-4ce7-a756-29715993c1df",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc407e-f710-49da-bf75-699589f2ef0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c79227-dabf-45a1-9007-b0de7bd0858d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32bea8d-2dc9-4226-bb52-8a3825e2041b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e48b56-4875-4c5f-be65-6c0cf1e949b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5625c343-f777-42f9-a43e-30f0801d2d64",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2af643b-df12-4ee8-89fb-7fa35b5ab430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a966b405-9d45-4962-8a48-65fc07182f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f2b5b2-0e80-4c53-a843-fd71b6071e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37bc98b-afab-4c66-8219-51508f4adb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa4a512-d061-421c-981a-99ee2c403db2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa96f763-aaa7-475e-82d3-817c1a0bd6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1656b3-16b3-44ba-86b3-3f83c8720885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d8ae19-5fab-49e4-9c86-71c2a87eb7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf38f6a0-8af4-4be4-8c27-a48ba7b6b955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b801c14-8124-41f1-8646-28d3ac7256d8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8687fcb9-cc7f-4a91-9159-e9e0e5c74d52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b50480-5995-453a-95d6-ef9ae26f06cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db65700f-c596-444e-8463-28f2e39c6e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7536b1d-2347-4839-b9e3-c8971895fa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ca69dc-4004-41ab-95ac-64a5ee0d70e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562e51d8-8009-40cd-aaba-b66aa31c49d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062a01ef-db85-4834-b13d-249775a157af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25347724-e732-47e3-b650-ee4f5a4eaa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92766ce-0256-4163-8fe4-0caf5e710ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388678ce-014f-40b0-b23d-8b1f0e45d1b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f43c4bd-62f0-4c5a-b5ca-f828d88c667d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd444543-251f-419e-9c18-8c3f7f8993f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7296970-5a95-4e5a-a692-801f61618d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0d9b6f-e255-439a-ac9c-6e0aa401f0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c7b154-4fa2-44c2-9cf2-c83e7fc29091",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e14e80-c6eb-4c56-a498-b963f89819d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f557023-4ade-4a57-af62-d7022bc6e7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27916c5c-584b-4e26-abf8-21b2d246581a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66451f4d-b908-468c-8585-671ed21e58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e271574-683d-475a-956e-0eb79406e56f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66df8c28-a5c6-4c9e-b6c8-bdf7195709bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8c0ed6-9212-4300-a0f1-706811c60695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ceff2b-54e7-4b81-8528-8e22c9bfe1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0741f21c-2649-49c8-9074-7b0f6212916b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d643c6e4-f5f3-43fc-8711-38096b8d36ba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b8837d-e7b4-43cb-8d31-34cf8f17c673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae01acd-5cfb-4fea-9866-54669ef51015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54e4da3-60f6-49c9-a6a6-bc4c74cfae46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3444655c-174a-45f9-9283-ca4273f9902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1280e639-643d-4b21-902e-a3b717cc4808",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab613b2b-f263-46bf-b14a-d9ef07aa576a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c0f647f-0e90-40a0-b507-f40a5c210596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc91104-cc81-44fa-b4ef-53cbcbe36509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f576b8a5-610d-423d-ae41-a29cf6404e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33aca6d-1231-4fde-bade-fa6367cdb02f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e62aa4-ade9-4c72-8d59-310c502dbca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad10393-3a70-4ec0-9fa2-e6448d59954d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871afae8-bccd-4c83-955d-0ccd7d1feda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7783ae20-173a-4488-8b50-825e59a9e37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a5fe03-1dd6-4cee-ba8d-177a697f2eba",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d68293-2405-41b9-bd90-c20e4737e7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d3ae10-ff8d-4f79-8032-bbb7da5874a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70092a2-1751-49c5-aae7-65939c0dca98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1207c179-f8cd-492a-b8b9-957d8985c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ec0187-93a3-470e-9546-67c2631f8729",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6beae819-7317-4857-9304-689298b3789e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1716af3c-6880-4660-9bf8-5b9d80ccafcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7357f36-d038-460a-93e2-7690a940209e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b3663c-b641-4510-aea8-a1b9363bb0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8808d2c0-9f17-46bf-a3e0-6df41885c84e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b463f259-e5ca-4bdb-b23a-959178bbe7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8548bcb-0971-410f-a3b5-31b94449499e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b11dfcf-a842-42d1-bf25-fc8beac470d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13018bc-074d-4bba-bf6e-581e6ed15a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09495b75-2b51-4ac4-b1e1-f674f2c269eb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cab7c9-11d2-4ce7-ab32-51c5172bcc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931cc831-de03-434b-b839-a153ae62869f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e24b9-268e-4df1-ac29-e26ab030dc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ef84e0-ca72-4a9c-b83c-9c476e62bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6617b003-37d0-4e1b-9f76-4182746b2060",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8b3d58-8b1c-44c7-a41f-8ec04552f90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1b8e5c-3bff-4377-b146-1efcdabdd178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d2d995-ce08-4061-8a89-604134ec176b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd335f2-9fbb-4282-be15-43c2d970d800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edd37c1-5cdd-428f-ab45-30f26b29dd2f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3a6394-7500-44e7-a88f-da1326338d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fb3a75-3437-4726-8dad-2512426a6dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555d4bb-bf6b-466a-8f47-dfae1e06534f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032aa7d1-9577-4f29-aaa0-8604e6f567f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cf8a30-7869-4ece-ad5c-f3c2e55db617",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8122ce24-f6c2-44da-aa2e-5de08da97f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fc2d8a-ff7a-4b60-9eee-519f829bd6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859a50bd-4325-47f3-9381-f03cceef0c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533b955b-26f9-4ade-9398-2b9d37205702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28dce4e-2808-4280-8364-8abce4e0bb7c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb93d13-2ad1-4e69-a747-242e3bc1a9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8867a3c-f09e-44e6-8bbf-0c679b941797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b374d154-b8a7-4d46-a294-5edab592eaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492772b4-3eb3-4e78-97da-2bf5e10f1b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf97323-91ce-4baf-9929-06f70fdb8119",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99469b7-cf17-49ea-95ec-814fd1d3836d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6037fb69-5743-48c2-860d-88e763b14444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdce4ec-3ec9-401c-9b6a-6981a121324c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a3f653-d619-436a-90dd-f719475846e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f63b43-8411-4b7e-ac44-74f00acc8391",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea6a62e-b3a5-41f1-a5d6-62c59af2212d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcd0c69-ff67-43ec-9a5e-e2010db98c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d497d1-0420-4ed3-b434-a7352754d523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abd6d85-6d14-4fac-a574-1bba18a2f0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1272665a-3c9f-4492-be9c-b477100e06f4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b40cb21-f68e-4a3e-88f4-d956d5e566c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f704fa-d695-43d6-a2e5-874799e5e403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd883de9-77b2-42bd-872e-986739a4e0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477035bb-5010-4ee5-be92-0c731490630b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eee7e80-5a1d-452c-95f3-41826e0927ff",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1f3cac-4090-468e-a842-058cc0e0fc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2214d8-3c7b-42ae-b89a-b82357959ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6cb10c-a0fe-4fff-b56c-b1b6b6c492c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2641dcd-151f-48f7-9f68-15a07f963af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c799df8f-88c8-473c-9f7e-58aa9983b256",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5da3f-a1ce-4a31-bf42-4c7418e6b237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b04a90e-51c2-4ecf-be0d-4be92fdbf530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d7eadf-d115-4ecb-9ed1-e6c2a68ea4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79226430-e5c3-4558-8452-355a38155f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38b955-2b05-4d77-8fa3-7339326d7bda",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f82517-2a73-4953-9e50-18cc91490196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d432931c-75e8-424e-aed8-badc731ebf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78122819-f720-4c28-bc3d-9e20afc1b8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a3690a-6be5-4086-b6d4-63428607049a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64802a54-6778-4794-9070-cf1e7048fc83",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4455bf-fba6-4c80-bd80-978d3df4e00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd58eb5-6bc8-4fc4-a7f7-3993401c0459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf6f037-2b1c-450b-969f-b5529a55c5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235bfa31-88d5-41d2-8b34-1b2fe73c4c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a241757-1345-4578-a565-07080701d49f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd79a89-1e02-454b-80a6-124ab6c79e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ae004d-0f4d-45d0-95de-aa82a46e92e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a9a673-6a2d-4563-89b2-b115ec314533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478cf310-e1fc-4ca2-966e-4df3dd2994b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89e16d0-6431-4e6a-80a8-5fcc869f8c70",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f741df6c-ae83-480a-ab0d-6649c577b668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e71c9bd-2995-4d25-8a28-2cd14163812d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29fc83c-f0f5-49e4-a572-3739cc3c9e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63518702-cd11-4f36-b61c-ce0d0a3d50a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5975c64-8443-43fb-a02d-6053cdfa2e55",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b2b7d7-b573-459b-8eb0-63b3d44a2f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb05a18d-3573-4c44-9c52-9c9fa9c53fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d884f-1f16-4792-88d3-a000ff551d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc603c3e-72db-488e-92f2-83a875e58f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66eded2-c187-47e5-8c43-9e8dd17bd1dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02e28ef-5326-4c3f-a30a-22894bd63593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7595d817-61a5-4d1b-9123-d6725e212a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bcf47a-3a7d-4e09-a13a-0ead8873826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dd5511-cf90-4379-89e4-71fb2f0a1396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563b0d45-a3f3-4f14-94ef-9b85cf961f82",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e58a505-0ee8-4e58-8b45-036ce3af711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0e2842-cde3-4cfe-a6f4-1f60d38c6c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffa4335-c92b-4154-a38d-fb28c825288e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca448d1d-6f13-4a40-81b0-b8de0595a7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef26f844-2660-40c6-8efc-b404d2bbb627",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcd6e3e-6eb7-4642-8884-1e525043af28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea1f3da-6ab5-4c93-9da8-073cc56204a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcca0155-bfb0-4e5a-8f81-56191f69e413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a86e505-1244-4409-9740-88c8f1a90c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4172d02-fbc1-48c1-9222-77a362bdb5d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f57916a-01bb-4e6e-9e25-6c31ff6cd57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880a11c4-b394-42b6-ac48-b3254e6712bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6988cf-e81d-4164-a488-935ee1ef0916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0064bf45-4b73-4fe4-875e-4c4b706efac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fe5ba6-af7f-4aa3-96fd-264fdf7d72f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a353f35-4a6d-417b-80ca-8c11b2f9f2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0199b3cf-9515-4e47-8fa8-897d5a18267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973082e3-461b-4b2d-8bbd-46dd59dd7403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5644adf8-76f4-4315-bc28-e5a0ac4bbd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf76bc7-7d4d-4b57-ac56-2e40550d7441",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70e0c0c-899c-4a88-872d-b0d8312be95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a12b91-e6a2-49e8-bf67-97dec2a9fe76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03429d70-08c8-482d-a9f3-578d5140ea5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6892f1-dff9-47aa-950c-fb381535004c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4631d80-4b47-4e92-bb91-f0f2c0272f29",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84242e5-da7b-47a4-84f3-756117f44565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a62d235-e7b2-418f-acfe-a34789f31a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f4e0ab-567a-463c-8b38-f9ae741d444d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53baf0bd-a1fb-4a2b-b6f4-686453d7d077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5054a90a-daeb-4dae-aa31-ba52e13e9090",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6c2121-5336-4890-8433-807162be151e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dbeef0-f4dd-4334-9ca9-3af9a1f75140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0a5a4-6089-44cc-8981-e0f22745cd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472b07e8-0108-4121-bdaf-600b97b42db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a0c70-7a8d-4134-9a5b-391f1fd15a3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79586143-3295-4266-b109-3750ca928b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3fe891-221f-4af6-b5e5-7d04983bea86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4665b76-af31-4650-8841-1844e330a117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26db82c0-c28e-4883-bf58-d798a4108f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d708106d-8785-46c0-9dcf-e5531aeb2dd2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d410ed0-a903-4dd3-a22a-8bbc39ea9cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5f1933-8a8d-4e10-80b2-85f6bd3ecc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81181aa-6755-49d8-8b8b-8e0a130c0a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2302302-77c7-44f5-8a96-af846c789c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0b7b87-5f81-4546-9d5a-1b7bd33c56b5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c212d-4e58-4742-9d27-4af805ae7d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042a7ce7-57ed-4f96-9d69-15133d975eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb160e5-7fce-47b2-87b9-3948a9d9e3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182be7d4-b3a4-461b-9c65-5f8d9ce4c868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba64df56-0c81-43ea-91bd-264abd10f708",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a2cf9a-4a23-488c-874a-3f2f6b2655e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32793598-f8b5-4e5d-8df6-1a6623176e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d37559-6e76-4866-b0b7-4c335f59eeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a39ea09-99db-46f1-93ed-4d4392a1cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0278044-63a6-42a6-9a85-313b76561b9f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd3f30-6b8d-4bba-8b66-174c5a41ef44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffe7061-6f11-41df-a04c-55df6b3c22e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a3b1f5-652d-41b5-accf-0eaab7d7c00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc233518-5f59-4d0e-84cc-b9e571c38f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23642c-535c-43c8-9238-d26ffd578cb8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a461bb2-94d4-4b1b-b930-deb953a4bfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d06302-f451-4512-9d9a-9cc755c9a47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4834c7c-08e6-4923-8f92-ae8e0f03bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4d9c1f-cce4-4959-86af-a5c3b5cb3844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98982b0-5f12-46f2-9af8-9aa5821448f0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20c21b1-9424-404f-9c72-115dd658f296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a86c57-c45d-4bc4-94db-12318b1c9697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bcfdf8-7a57-42af-9d3d-a2290738025c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3158f2a1-7e52-445e-87d6-a76c8dfb71e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839db845-0fe6-49e1-bfa0-60b48b59d255",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c93f1fd-78a9-4677-8f5f-9f5ad221b81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29d030d-adb7-489b-8fae-223287623272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96182d36-ac08-4cb8-a2c5-4254a0a8928e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135b1631-54f4-46df-bfb7-6ad221d5da3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6f6f8-6a05-4836-b737-94f1f3065779",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7111c50a-e1d5-46a9-9dc7-2baebbd699d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9ed7e78-168f-46fb-9ece-78ca75c73d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef166c6-8c07-4f33-b909-fbeda331bc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd99342-fa7d-48f1-95ba-0e3d25b20a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0abbec-601f-43cc-bb9d-c75332d94755",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910805b2-3d0f-48ab-9cbb-234202cc70fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65644856-c3ec-4b05-be56-76595fa8478e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b70fef9-f851-4655-8ba7-2757927d3ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d353aaca-e1b8-45b2-81ab-f74a89065bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c69d31-6e03-4aac-9b74-c11591583006",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40669b3-714b-4796-aa14-0bb10e02fde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd726b4-ad5a-4a62-bd00-225155440e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca97a1b3-d919-47b6-b967-a42d9ee523dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8e7f9e-6094-434b-8e69-9de2f9de4798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01d56fe-44c6-4475-95d2-45fdd5b3682e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325d1897-34a4-462a-9ee2-8dd9e57d07c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "304fa673-2598-43e3-8c95-5ebed348ba18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da9be57-bbc7-4094-9e06-105a29899c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1831a938-3a40-4bf2-a5e4-c4f99b02dc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99804d9-0eb8-4ff1-b637-996a675a1814",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee8649a-5d2c-4c62-95fb-25a9ea75baa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d3a50b-8396-455c-80a4-c7723b8bb3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e4f24b-25b9-4093-9a51-0ccf493590e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494d3956-6739-43aa-9841-3b125f2ebe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c49eceb-498a-4191-9a25-45f8b43d28c6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347bd5f6-8412-41a0-822a-3b3d281bc358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "139fb0d5-b0a2-4284-a009-8619fae1df7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bbe92f-13d5-45eb-bd71-c2c6ce0fba29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336ad9ce-ef74-4b41-8d91-abf26e4a1c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b1d05a-0c8b-48a7-b85e-0ec8965b9b7e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1e50dc-b0e1-4624-9667-d75e2b1f1f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2791a5cd-7bb9-415d-beaf-aa64b0909333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac8735b-66fb-4af7-b9b0-f4fb5e150b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249e7cea-9a44-4810-ac7e-21fe6a7acd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b804a26b-6390-4757-89f3-9fd163a36479",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fbde9d-b996-4f65-94a1-d5deb4d6c78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe661f6d-0c07-47b5-82a4-97293cc7e560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b9f1c4-2ebd-4d7e-9937-06ff32084f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c826f7-193e-441b-85ce-cda7151cb3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687af881-b4c0-4383-9356-89a24545cd67",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd8a8fe-7445-4983-a0e1-3d241983d64f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f23cc8-1a03-45f7-a988-b595f60a3a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62cab49-8f10-4624-8167-68e2d549bb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b09a50-af4e-4d47-aad3-7c52e40b53a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2eca7fa-0def-476d-b002-1a0be976460a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a4f0a1-5919-43d1-8c83-e529990ea608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d338d957-d406-4adc-a793-eeef8c2902cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac696a49-1f20-42ad-a1ea-f45fcc109813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cb8488-28e2-4e75-bc87-31c22070672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2ba75c-ea8c-48cc-a1ed-fc9e5c0289c3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15fc3ad-fe24-4632-9132-56c1ee1b0a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282b5f06-4d95-439e-b9f5-0c42bc8d1099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2efdc4d-c4d9-42a5-9c89-ec98d0ee3cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991dba20-6c98-48a7-8a15-2a711c77407d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1afe1fb-21a0-468f-bf86-b4781079e165",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5c6400-4edb-480f-9133-eb6795261bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f022965-97ec-4555-a018-4f9f9ee09f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54552179-1528-4e2b-89bf-d6e5c59580e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aefa2bd-f125-4d41-9849-e78e24ebeb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f24053-1b46-409d-9b66-a84712b778e3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71190897-6710-4b23-80a1-4cee0736b714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7d76eb-ad82-4aa9-bc5d-4af3f82cf9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56e1504-2d0f-46e9-ad92-d8c030ab81bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6e4755-6ed4-436d-b363-9a96e5ab0ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5109629f-341e-4d94-bca9-20977ccec84b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55cea39-bbbd-4cf4-afc1-95155ff5ab5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa29fab-c606-4b48-8ae9-8aec21194d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6022d711-04a0-4d59-98b2-94406374ec04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f434c5d-058d-465a-86c5-cc8d20554239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2efcb6-d2af-48f5-bbd4-c199432c03bf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ecc4b5d-4b8d-4b44-87a4-5ea0f7e3eb87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bd07fe7-efaa-44d5-976d-efc593ba188a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2605afb-d106-4574-a2fd-e49000f43e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462b044d-21d4-4809-8d2c-38c90b84cdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ff22c9-b821-49e4-8c63-b97282116afb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdcf826-5d85-4be0-93f4-c73b47a86aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0323fc90-9149-4ee5-b847-d12da11ae07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abfb36e-e4e4-489d-a24e-f401c21a365c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aeea044-3592-41d0-9f8e-510cd00e9618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3207ce97-bfb8-4dd9-ae01-fef2881de747",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec910b78-c519-46e3-934b-68084c04d04c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf73ad59-f859-4f3e-9b9c-ae5321fb74c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f179fe96-64f9-4b1c-95b8-44161cd3a4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0aeae5-c64e-40ba-82ff-b74e07e74697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8415d189-eddc-47b1-9343-b85dbc8f972a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2e5a59-4f7d-4cfc-afc6-774faa99d010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fffb943f-3833-44ba-bbb7-37f4a5700133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6cbcd8-02e0-4214-aca7-7572fa54b3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cbb703-7ac1-423b-9983-6e2fd40cb1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a52a8e-64c0-4421-aa52-6b0c64bb46f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c79a2c-2b42-450c-bc6e-49ffcf2adbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04242818-a848-4354-9426-a65ea2fa201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c212b1-af96-4f94-9304-9e06518bb43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f764a96f-ec9f-4b71-9d72-ff9114e4b294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59a38e6-766b-4622-96b0-022096a66860",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d710ffdf-538f-4796-8106-a9915a300898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711bb34d-5b8e-4cfe-8cff-3731fc5d43ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74056c2b-a179-4eab-8766-94effd011532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d967ac9-a8a4-4b7e-b026-ebd490304cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab159a5d-486b-4742-a67f-e2a3985ebce7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414a8a11-d92e-4887-b125-5390c25c4915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd071a1-b3e0-4fa6-8381-c9bc7a37712c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9edc0ac-2e97-40ff-aa95-9c81fb118565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682c7d0b-c920-4883-91ce-967881556976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9457abd3-222c-4cd7-b2d4-ab6328f41756",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a302a76b-8c47-430f-91f0-efe855525b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0083f8-6240-422d-b52d-2bdc03d2ef2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c4941-ae80-4c65-b197-b0d8515c0f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225b637f-b8b6-44fb-902a-649b740c8e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b15ca2f-9ad3-456a-b1ec-58b1357870cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66cd4a-66bc-40e2-a3c7-5bb8a7796941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd8b0cf-d587-43ad-befb-1fd8fcfcc306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431d4e33-d1eb-42be-8ca7-aeb7810426e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d243a5cc-d718-44e0-8400-0072c3192fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0b0ce2-8aef-477f-be4d-87dba96c7308",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31d5e0a-9c95-4646-a44c-3006bb98cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce18af8-eb5f-44df-82a0-69f6c37b940c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc8301c-607d-4434-8025-486cde323048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10743af6-d5dd-4a19-80d4-395c2259ccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88abc070-5f22-46d2-9a1c-4c07b6c268d2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1755a4-2fbb-4ff5-9397-2b482907a697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7313dc30-7ed1-47f4-8832-a72e2ffd2f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6718c9c0-cbf2-43ed-8e89-656952c46205",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ff6633-70ec-4c51-bb47-93eb654377b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1292a32d-9170-46b7-87f5-e2580e7b078d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1ddd96-5538-4966-bd37-363c1273397f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e7e573-c6b3-4181-895a-92b41c68e6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4780dd68-bd83-4423-aa9a-664205e62150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6deec61e-18d5-4352-a087-770191d0d3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e42a3-f032-483c-95ee-28ea186a39b8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e4a056-4029-494b-b645-2b6de2736a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c305393-6e58-4f5e-b6ae-217a53cfddf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fa21d5-975d-4645-9e4c-76c94fe00b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1880048f-0ca8-43de-a79b-5da5ba099d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddff40a-85aa-404c-9f93-f2a500e4555b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fcaa76-82cb-4700-b03d-2ad19d163ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12a17d0-a1ba-4eea-926b-7b92a304410c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfde2494-6d58-42dc-ba61-7a7c406b12c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13aaa2e9-92ef-481f-a994-e3aca0f4dad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923f8f4d-ab85-443e-ae6c-66178e0d64d8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1a8d75-986b-4999-92b8-dbed78f2e732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b522f8-5a6d-424b-8e0f-cb1b9dbea93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3081ef81-f16d-496f-a1df-ac242cc28181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab24ca0e-8a37-49ea-9681-b928e5480912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a876a17c-3ae4-4987-af55-6dbfd4320819",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69523d1-7347-4edd-bcd8-9b85ac2f49f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b793b102-a9eb-4345-b205-e5e74c79b6df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f824df-f5d2-4879-945e-ba75d8ff929d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b920ca51-397c-49be-b7d5-b7aa2dcdd72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b3e2ea-45ae-4a80-b4a7-274be27da69d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593a43b8-beeb-48bc-993f-d88375cc32ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82b89fc-2e46-4909-a03e-e135f91e5e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c888e3-82e9-4b23-bd18-03fb4a5dc1e9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468a95e4-d846-4fa4-b0d9-1488c85ddaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdca066-dcb1-481d-92fd-2d980ff199a1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b41a2b7-b31e-4d83-99f6-dd170af56f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbfe8ec3-2f1c-4386-b255-294f27ae228f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061eccde-8ccc-4505-9281-d8ecef35854b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82de966-36d7-4a3c-a720-5c1405ca0cb1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7305438-af12-4a3b-ac6d-a9204ff448f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "762dc270-8c5d-45d8-992c-7244e1d03056"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22df1a9-8c7a-447a-9183-5d5ff24e79bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57652b91-da33-4db4-b491-12b11e21c5f4"
                    }
                  }
                ]
              },
              {
                "id": "246ae46f-d7c9-4292-a5ba-33cc6a2966e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27620906-285d-4617-9f69-7f2cef4523cc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bd89a2-bd2b-470b-b473-7c3b74b6656f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "27108539-7557-4b39-9447-1d3dd925f2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95594362-82fb-4f7c-8f1d-ef7959c4b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "644fc86f-5848-4df2-a6d1-db15dc2cb601"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b1a7f5-dcd1-4ceb-9bea-b912a9747fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b9205ee-d535-4914-9149-fa7b2af8b503"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "276642e4-24ed-4a34-9563-8f21122c9172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff7aaba9-b7fb-4c04-b8d3-8e8e9b342afa"
                    }
                  }
                ]
              },
              {
                "id": "19c98bff-1731-481b-b364-f65e17d4a460",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab877dc2-89cb-4485-bcd2-2094830f06bb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ee212b-21b0-4653-9c5b-6bce17346ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b2ba6fc8-0a12-4b93-ac10-116648b89fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519f4fb-8949-4dcc-98ba-50ce316a6da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d774b0-a3dc-487e-b300-9afe768b9a88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e0adbe1-7494-4689-b6de-b60ae008d974",
            "name": "Positive Testing",
            "item": [
              {
                "id": "07764487-27d4-4a73-8cd8-f6872e0f40a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "060e0e0d-46f1-45c4-9ce3-bb265d241732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6c0c112-3b7c-42f3-b733-7bab9e6e5ed0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ad5198d-43a8-4bec-bce2-1a5a54f8b73c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e92852-76ec-4909-9c40-e54e20cc4b74"
                    }
                  }
                ]
              },
              {
                "id": "fb27b597-52fd-4123-a02e-a813d2cdd6c9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9af9fea-3cdd-45df-b75c-d9154ca60ed1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b8042c1-1890-48bc-82eb-f98064771210"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccf9fc72-ad0e-4622-a40e-4699d03a3994",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd0b9f9f-5f98-486a-b3cb-98941ba86d47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56f86a9d-d074-4e36-98c1-19736271f747",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "536288bc-1517-40f7-84b0-66151a81ac0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5089529-19a4-4eb5-b12e-52ef526779fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4808a827-71cb-49c3-9d33-ab2aa1adcc28"
            }
          }
        ]
      },
      {
        "id": "ee13431c-2c9f-4efe-89fa-8a3b7a497470",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d81f2f8-5878-4c2a-b720-653ef106f8b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8fc917e-45b7-4064-a1cb-bfce7788f3aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12bcdf41-0907-4e3d-9941-fcdb04df2c62",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd552aa-bbd6-4f48-8b31-314fe545a614",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa1b3cbb-6d7e-46b0-b667-078ba2e17b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5872e561-10b1-4e4d-a8b9-bef1c40ba52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a5de0fa-677c-435d-8fde-d3763e179178"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4705a8b3-6eb3-4264-91d9-74b937e94fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eef23ab8-64c6-403f-9f78-a3ce0bbe1162"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e542a65-a668-4263-9712-6cf7d3601643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd9c23e9-c863-4d4e-ade5-84274c4b6ba2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2fcf3da-234d-41e5-8da1-8da01f07f27c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d045efc2-50ba-4a84-ade0-3e1593c44b18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43ad4c36-f99d-4eda-9c22-ca5853c54ea8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c81d2672-1094-46ba-91f7-824a2651ab0d"
            }
          }
        ]
      },
      {
        "id": "3c03b7c5-f5fb-4d72-8636-977f02031d72",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b22c10c2-0047-47f2-8557-1e49339a29f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "744b6a35-c9c1-4aad-930f-5d18e64453aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42a2097f-4471-457b-8840-3ca4941e4618",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d76fc2-48f8-4bf4-b1c3-1830afc993e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56af140d-b0ed-45a4-821e-9e24fcd63ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6092734a-ed6f-4101-b794-9267e0eebf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af11948-f480-4cd5-af76-4b9a082eb152"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b763ee85-265f-4d54-9383-6e8ab6c6f7c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f36de79-0511-4caa-a494-1e2a3f263886"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db748fb5-0ca9-4001-bbbc-a4f4dd703033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fd1721d-ff32-4461-abdd-37c6acad091a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5faef0d7-7648-44d4-88c3-20bbbf2bdb34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eadfe5c4-46c2-4c37-a949-b081b18afd40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d3cd4ad-bdce-4308-bc71-068a48f5b212",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b1e0efe-3e1e-4fb8-b354-f046194af878"
            }
          }
        ]
      },
      {
        "id": "6a464823-e718-46f7-8b05-fbe84b5bdf24",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5c70571c-9de5-40e8-b1b4-a85cff37d41c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea56a50e-1aa1-40ad-8578-8d30e17dd528",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7f8ddb2-3d78-4bde-b8c9-f60a14ca64ef",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cdd4df-3f5f-4022-afad-d5f73c2f77ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8052337b-fb67-4317-a96f-69d85c4cff31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2638fd7-383f-43c0-bbcc-133c1d3a4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89704479-005a-486d-8f93-6734dbb2d2f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "198ba57a-e090-49da-8ef5-6c21003d319f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0b8556f-a688-4289-8efd-c84851679440"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8feee58f-757c-405d-b4da-e12d3f122ae0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e44b378b-f612-4741-a236-d035f89dd847"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b914db7d-2b2a-4c2e-aab4-e8bb99fc0ebd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8913113-2b2a-49d3-af99-6f08f6f7b6bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b3e5c25-7740-41eb-ba46-e9093619165f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29a9aa5b-995a-4cb0-ac02-9960f3f4aec4"
            }
          }
        ]
      },
      {
        "id": "4dbecfea-1731-47db-8ea8-8045dec25fbe",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c2a492e-2821-45e7-831f-8c356411805d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15d0b257-7f1e-4b11-98c3-076eb18eb2a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "52c061a1-ae7f-4dfe-bd68-b38eeb682e6d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c578e27c-b187-4086-9d8c-278e6408b671",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f656069f-28fc-4196-a177-c81f99f81947",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 221.5915492957747,
      "responseMin": 11,
      "responseMax": 6346,
      "responseSd": 406.4889194292098,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690936761485,
      "completed": 1690936836772
    },
    "executions": [
      {
        "id": "e52329c0-d2e7-4ca9-9e59-9a4e2c1ba069",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3f3fb381-b74f-447b-94a0-2094ce6c7340",
          "httpRequestId": "0e42b603-2099-41b8-a6f2-dfc5c6247f60"
        },
        "item": {
          "id": "e52329c0-d2e7-4ca9-9e59-9a4e2c1ba069",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5ad715b5-95bb-44bf-aa7b-75fd89239210",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "9d07b4d5-6518-4ae1-b669-591052432d57",
        "cursor": {
          "ref": "cf6955ee-7745-45c2-8a89-c48c925a679a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d049abb7-34cf-45dd-aa8d-64c2f0a29625"
        },
        "item": {
          "id": "9d07b4d5-6518-4ae1-b669-591052432d57",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d2ddd6d0-ae37-48f2-a7cc-d04332ad36ca",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "7d1f071a-7dfc-49de-a741-8ee57b527001",
        "cursor": {
          "ref": "0fa73745-d877-4a0c-9561-a2a59e606aa3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5188ced3-797f-4c25-8828-32f0df93b74e"
        },
        "item": {
          "id": "7d1f071a-7dfc-49de-a741-8ee57b527001",
          "name": "did_json"
        },
        "response": {
          "id": "b15d8e25-6836-4787-85f3-547199297a0a",
          "status": "OK",
          "code": 200,
          "responseTime": 920,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c7849-5201-4ab2-b119-abe71c1afe0f",
        "cursor": {
          "ref": "a05b1318-64c9-496e-877c-e30a69f04e6d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1fe2624-3ac5-4e84-9e71-e6cbebbbecb3"
        },
        "item": {
          "id": "168c7849-5201-4ab2-b119-abe71c1afe0f",
          "name": "did:invalid"
        },
        "response": {
          "id": "2bec2e82-bc20-4a6e-8132-7e7ede2aa86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168c7849-5201-4ab2-b119-abe71c1afe0f",
        "cursor": {
          "ref": "a05b1318-64c9-496e-877c-e30a69f04e6d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1fe2624-3ac5-4e84-9e71-e6cbebbbecb3"
        },
        "item": {
          "id": "168c7849-5201-4ab2-b119-abe71c1afe0f",
          "name": "did:invalid"
        },
        "response": {
          "id": "2bec2e82-bc20-4a6e-8132-7e7ede2aa86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186ab08d-fb0f-48e5-9cc7-0945b50fa00f",
        "cursor": {
          "ref": "6aa37679-da7d-46eb-9b38-41ea4f0b5ca1",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "29426ecf-100d-4642-a533-59f334d75b87"
        },
        "item": {
          "id": "186ab08d-fb0f-48e5-9cc7-0945b50fa00f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "37344380-a35a-48aa-bb24-ed9f0ba77785",
          "status": "Not Found",
          "code": 404,
          "responseTime": 445,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2e088a-9062-416a-8ee9-87ad4c87b8f5",
        "cursor": {
          "ref": "2aed8638-3207-4944-a90a-80b1566e3488",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b22193aa-c9a8-4048-b7bf-ffc651b06fa5"
        },
        "item": {
          "id": "9c2e088a-9062-416a-8ee9-87ad4c87b8f5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4746f248-74a9-44fc-a214-fc148463fad2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 255,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75028a0-1450-4614-973a-a16ddffbc5a8",
        "cursor": {
          "ref": "0da0c8f2-5dba-40bc-a465-0b19463591f2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "158df519-677d-444c-b97d-ffd533beee3f"
        },
        "item": {
          "id": "d75028a0-1450-4614-973a-a16ddffbc5a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "edd38d80-0ca2-4926-b6ab-84019eb9a492",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b13bd69-4dbc-44d8-8a22-3a61754c0128",
        "cursor": {
          "ref": "1c4d1c68-63cb-4bad-99e2-a529f9277178",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "33c8655b-fba1-4fa5-aa9d-b5960f871058"
        },
        "item": {
          "id": "2b13bd69-4dbc-44d8-8a22-3a61754c0128",
          "name": "identifiers"
        },
        "response": {
          "id": "fca9e2f2-6635-4afb-9c50-778e1e04fda7",
          "status": "OK",
          "code": 200,
          "responseTime": 1028,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6dee43-36b7-41ae-9cd4-4bfab7876936",
        "cursor": {
          "ref": "634021e8-76f4-410b-9fb5-8109eb6e54f2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f59c950d-490c-4d54-9ba3-83b1a3f4455c"
        },
        "item": {
          "id": "db6dee43-36b7-41ae-9cd4-4bfab7876936",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b9776ab-7fb3-42ef-8108-96b8b34e20e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82febbe4-052d-4b9b-a207-e575abba68a3",
        "cursor": {
          "ref": "33ceed1a-566a-45af-821e-69e9a62b44dd",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c4919675-f133-4906-9bfe-598fe2d6f57e"
        },
        "item": {
          "id": "82febbe4-052d-4b9b-a207-e575abba68a3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "39ba8149-160d-437d-8c4e-60683a3655d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec67f68-0899-47cf-bf5a-2f5a7c2785eb",
        "cursor": {
          "ref": "ff9bd797-797a-4085-b6dd-f64aedadf1ee",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "be439317-d15b-42c0-8142-262a5a916988"
        },
        "item": {
          "id": "9ec67f68-0899-47cf-bf5a-2f5a7c2785eb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ae6da7c0-21ef-4a51-9cfc-d1b55de13358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcca34e-ad9a-4952-b73a-167fa2118223",
        "cursor": {
          "ref": "bb8974e4-76c6-4f38-9cb2-a2ad9cfd02a9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2ab8492b-bc33-495a-9049-639a19ef1f02"
        },
        "item": {
          "id": "4bcca34e-ad9a-4952-b73a-167fa2118223",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9008f406-5a1c-4776-bd16-7ad00dc3394b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db8e03-8181-408d-87e5-116e89e006d4",
        "cursor": {
          "ref": "21651ed5-92b7-4efc-92e8-f5d91ac5fab0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9397f2d1-9bc2-4fe0-8a4d-aa2871f8bd32"
        },
        "item": {
          "id": "78db8e03-8181-408d-87e5-116e89e006d4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0b613fb0-90ae-488d-afb4-daa4722cf97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60d468b-2bd7-4fba-a00a-37afaf710fcf",
        "cursor": {
          "ref": "5c5e9bfc-d3fc-42b3-a85b-eadf77330683",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "916639c7-39fe-4c5f-8110-b78da9cc5a2c"
        },
        "item": {
          "id": "e60d468b-2bd7-4fba-a00a-37afaf710fcf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe7fec93-8601-46a3-93cc-3ea005857c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8633de41-1c01-42bd-80c4-ebe948f23af0",
        "cursor": {
          "ref": "201f24ea-8d49-45a6-9fdd-73ccfae5d40f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2cb51fd8-d76b-40ea-ab60-6dd5af9c5200"
        },
        "item": {
          "id": "8633de41-1c01-42bd-80c4-ebe948f23af0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "420b7dae-53d4-41d5-af2a-4460c3531c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be52efc0-5e23-4003-96a1-ad579b018474",
        "cursor": {
          "ref": "f519d5c2-0ad9-4df8-8e44-fefd7721ec5a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9041b855-da1b-4ce5-a1f8-a3e49fef6db9"
        },
        "item": {
          "id": "be52efc0-5e23-4003-96a1-ad579b018474",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ac455332-28d8-4644-87b7-0c9bea5a56cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84eef5a3-6be1-40b8-9c9f-efbd12508b94",
        "cursor": {
          "ref": "ae0fc572-bc6d-4897-84b2-62fc3ba44d12",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8fc6377f-1a1a-478c-865a-1cfc001dc94e"
        },
        "item": {
          "id": "84eef5a3-6be1-40b8-9c9f-efbd12508b94",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "644f3b5f-aec0-441b-96f5-1133bf9d6a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306bd7d0-c7bd-4fc9-8412-de328b81095b",
        "cursor": {
          "ref": "4cbf09ba-525b-44fe-825b-fb814ffe444c",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "826754b4-3048-448e-b1eb-6f64fec8acb6"
        },
        "item": {
          "id": "306bd7d0-c7bd-4fc9-8412-de328b81095b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4da39fac-3394-45a3-bb66-310c9868fc66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae05872-2ee4-496a-a3eb-76a3f396037c",
        "cursor": {
          "ref": "275d9ef4-6fc4-4d0a-9539-10b7ca0a0524",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fdde5d0e-d2c7-45bb-951f-d6a63fa5e1a8"
        },
        "item": {
          "id": "7ae05872-2ee4-496a-a3eb-76a3f396037c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed280570-7383-4f6e-b258-6b2c8d36810e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d025d8d-7abc-4fa0-9694-48ceba080ae0",
        "cursor": {
          "ref": "a226de27-2a08-4142-8c2b-26598c3c1a26",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "93334436-4251-4102-9839-be17a6e6c472"
        },
        "item": {
          "id": "3d025d8d-7abc-4fa0-9694-48ceba080ae0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08fd0198-e5ed-49bc-8a82-9b484c2a858c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1357f9b4-71c9-4a99-81d2-23c3531b21a0",
        "cursor": {
          "ref": "3424c6ba-953b-4d34-86f3-4e1d520a0808",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e3f0bc78-932e-4128-acf6-0f26d64545b4"
        },
        "item": {
          "id": "1357f9b4-71c9-4a99-81d2-23c3531b21a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0690d6c3-cfb1-468b-888f-c179e821d6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabf9c9d-71fb-4bb2-bd47-106b281e9446",
        "cursor": {
          "ref": "d5f2dea9-f8a0-4666-830a-c274c0f4ed36",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2caa7221-c741-491e-a032-e227a7caa503"
        },
        "item": {
          "id": "eabf9c9d-71fb-4bb2-bd47-106b281e9446",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9fc420ef-9efa-459a-a95a-9f7689cbfdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9cb629-95cb-480c-b2af-eed71f6405d1",
        "cursor": {
          "ref": "f53e1928-5ce4-4481-ada8-dfc25f68e236",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fb551f08-b233-4e0e-8732-aff36cf00815"
        },
        "item": {
          "id": "bc9cb629-95cb-480c-b2af-eed71f6405d1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7f547f72-6678-4069-a1bd-d8ebc3d651b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e1e403-8946-4a77-a9e1-0cabeb3acacd",
        "cursor": {
          "ref": "749eadb0-e267-4626-9806-fec178c77525",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b79b5779-e7ee-40e3-b1f4-4ee87dd0a13a"
        },
        "item": {
          "id": "b9e1e403-8946-4a77-a9e1-0cabeb3acacd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e5322f3-9641-469e-b22c-766bd3c69408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efd46a2-f0ac-4bd8-b763-5d426ba67521",
        "cursor": {
          "ref": "86296cd4-d2a0-4ed9-a9b9-c6b25e208ed5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d180f126-1efa-45bb-a8df-b2d355272f60"
        },
        "item": {
          "id": "9efd46a2-f0ac-4bd8-b763-5d426ba67521",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bb89459d-7620-4d79-8824-15a878df71a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38f3145-7291-4034-97c7-2152ffb89544",
        "cursor": {
          "ref": "f095090f-dedb-41e1-be8b-0d109af40bd8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c012dc21-9166-4566-8a5a-716a0f37cc29"
        },
        "item": {
          "id": "d38f3145-7291-4034-97c7-2152ffb89544",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "76340621-a6b0-4e0f-9d66-57852bc04eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9847565-4843-4f3e-ac10-70351605b252",
        "cursor": {
          "ref": "086d1444-2f0f-4862-a9b7-6e839e4c3df3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3a2eb630-6acb-45ef-aeb3-8e31b0746493"
        },
        "item": {
          "id": "b9847565-4843-4f3e-ac10-70351605b252",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1d41d39b-4b01-4a9c-9de6-da93c0e0f60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ff3e47-58c2-43b0-936f-4bfe21e61bda",
        "cursor": {
          "ref": "19df442c-45ee-481c-900b-48468914d1ac",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f2693edd-f570-479a-bc80-9ea2b028ffcd"
        },
        "item": {
          "id": "d3ff3e47-58c2-43b0-936f-4bfe21e61bda",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c74f0958-95c5-4ef4-94bf-1f4a6858eef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7545520-7080-49aa-aaa0-f6c47465a434",
        "cursor": {
          "ref": "ed21fb7f-cacf-46ec-b109-d5c812848c59",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cb100441-92af-4754-8b6f-80c28965ff80"
        },
        "item": {
          "id": "b7545520-7080-49aa-aaa0-f6c47465a434",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "502aeab2-2a03-492b-9c2d-81681df23839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d5068c-23f2-4d6b-935e-5358970ede0f",
        "cursor": {
          "ref": "a5696e73-5b07-4448-bb83-fe9a930f3be2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d14dd753-2f47-45ad-b360-2cb3d422400c"
        },
        "item": {
          "id": "11d5068c-23f2-4d6b-935e-5358970ede0f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dde9c41a-0f9d-4536-bc2d-05dbb192a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6fa71-c6b8-47df-bef4-04818f74e847",
        "cursor": {
          "ref": "8cefa8c7-01a6-47b8-93d2-731f71f79f3d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1ed7a35d-408f-4081-a807-dbf8bfed4fd1"
        },
        "item": {
          "id": "73f6fa71-c6b8-47df-bef4-04818f74e847",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4573dd16-a09c-4cdf-b1bc-7fcdca154de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86793b-9246-45ec-96d8-32e84a2b00b1",
        "cursor": {
          "ref": "5b5da3cc-6256-4f60-8991-c45efed5442b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f7e807e3-c92d-4f42-8aa2-a59597718347"
        },
        "item": {
          "id": "5d86793b-9246-45ec-96d8-32e84a2b00b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "26eaf1b1-d733-4e2f-bf8d-d118d2f1b54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df710e-d954-41fb-98f5-28a7514c741b",
        "cursor": {
          "ref": "d7266b02-8f63-4d12-b3c6-7eda73aac436",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9a44206a-2cc9-498b-a2e2-8dc0fa7188f4"
        },
        "item": {
          "id": "71df710e-d954-41fb-98f5-28a7514c741b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1081c888-ac79-4bfd-8d5a-874418fd99e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730d58ea-beab-48e4-a704-0f9b60f48d2b",
        "cursor": {
          "ref": "7a55be01-32e0-4d38-ad88-63f1a1b40f28",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1820d0d-f765-4781-990e-839e71a9b590"
        },
        "item": {
          "id": "730d58ea-beab-48e4-a704-0f9b60f48d2b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a503014d-ba93-45ad-9e95-15302d7a197c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f48689-63f5-4bf8-893c-5e76f81281a6",
        "cursor": {
          "ref": "a6e0d5bc-7598-435f-86e8-962dfdcea525",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2752fc3f-dea6-4777-9f45-d9de38f224ad"
        },
        "item": {
          "id": "f4f48689-63f5-4bf8-893c-5e76f81281a6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1cd364cc-455d-43f9-9833-2c28a80ce91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6d21a1-5bf3-4987-b629-b9eb99fb0c74",
        "cursor": {
          "ref": "b8e0815d-b00b-45ac-a499-c9b94644fab7",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "431d89f6-7522-45d8-9d09-85c9441eec8d"
        },
        "item": {
          "id": "bc6d21a1-5bf3-4987-b629-b9eb99fb0c74",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5be9dc95-4ca4-435e-9229-7889a376150c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd8d809-5190-4b7a-a7d8-3cdd694bc91c",
        "cursor": {
          "ref": "50c01fa7-7d17-4484-b160-e5d8afaed36c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4227fb33-1780-46c9-8bbf-ccbecb8ae4c4"
        },
        "item": {
          "id": "fdd8d809-5190-4b7a-a7d8-3cdd694bc91c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71d2da6f-96b9-42f9-8eb4-4553344fb7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb917ece-ac69-4df1-a506-b6b5ec68a54a",
        "cursor": {
          "ref": "f0a41abe-5e94-4b75-9533-3e0f2d6d9f1f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "823d146f-d919-4bca-9568-9067dc32d444"
        },
        "item": {
          "id": "eb917ece-ac69-4df1-a506-b6b5ec68a54a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6a62a91d-fefd-450c-a979-cf06c8018e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2483404a-04e6-4279-b4a4-fb9dbee693f2",
        "cursor": {
          "ref": "29df6811-a56a-4ad1-8bbd-98ed31338985",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f1ab7be-7194-4516-bdfb-3cad622f1206"
        },
        "item": {
          "id": "2483404a-04e6-4279-b4a4-fb9dbee693f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "099215b3-ffa9-4c8f-b73e-ee8ec4a33eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d99f3a4-3713-4320-87df-f334357250dc",
        "cursor": {
          "ref": "97f7d6be-640c-4156-9fc7-b64dcfce814a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "11ab47e7-9772-4271-9ba7-895660c979d7"
        },
        "item": {
          "id": "7d99f3a4-3713-4320-87df-f334357250dc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d7ed0fc8-ca92-4d46-9d4b-996b26b67e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bf014b-87f3-4e93-84fd-a36465054bc9",
        "cursor": {
          "ref": "6737ca0e-4eec-45b3-a7c8-718abc543a32",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e065f0e6-8baf-4714-8f93-bf810d6e461c"
        },
        "item": {
          "id": "51bf014b-87f3-4e93-84fd-a36465054bc9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cad01c5f-db56-4008-894e-8658604f0a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5fc66c-eea3-482e-8489-e8e65ce630b8",
        "cursor": {
          "ref": "dfb3f75a-087e-47ce-9dea-63da5211eaab",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1c66b924-5422-428a-b8c6-3b3d37a7fbdc"
        },
        "item": {
          "id": "3b5fc66c-eea3-482e-8489-e8e65ce630b8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "80290b04-1f5c-4692-8a5d-89ab4e0cb2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa1a0e2-2ffc-4b0c-a8bb-af04a836299e",
        "cursor": {
          "ref": "27ae7443-8c9c-414a-a633-79ebf9da5ea5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ac4c0006-5e4a-45b1-8bdf-732cee6d2356"
        },
        "item": {
          "id": "faa1a0e2-2ffc-4b0c-a8bb-af04a836299e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2e1a4dc9-0bf7-480a-9396-38751b84cf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea82132b-48e2-4871-97fb-0fcd99de96e0",
        "cursor": {
          "ref": "651ea775-97bb-4a48-bcfa-556b15f0aadf",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ef3e8ca8-d4cf-42e5-9737-2896d34e32d9"
        },
        "item": {
          "id": "ea82132b-48e2-4871-97fb-0fcd99de96e0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ed31f0f6-6ac9-45cb-bc70-ac0b2f359750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf2f1c3-430e-4baf-916c-f67a97f1ca64",
        "cursor": {
          "ref": "9205a6df-366a-43db-8cfe-5e221ccb98a1",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c3f11003-6182-4c4c-a000-56ade367d0a8"
        },
        "item": {
          "id": "abf2f1c3-430e-4baf-916c-f67a97f1ca64",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bdeac608-6c87-4ded-a59f-261e05756114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b0fd52-ca9f-40c2-b897-74bcef445182",
        "cursor": {
          "ref": "13f8b273-e3e3-43d1-aa3a-a10081d538c9",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "391b5f6f-ab36-42cc-b6e7-a291996e4391"
        },
        "item": {
          "id": "b1b0fd52-ca9f-40c2-b897-74bcef445182",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "567d6982-7371-45e2-aa00-8baf41a967af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec77b8-f1b2-4123-88ac-b9c9c722becc",
        "cursor": {
          "ref": "5716cae1-309a-44fa-a7cf-cb88f74d9d6e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0bf96425-a75f-40a7-b7a9-183635c187c8"
        },
        "item": {
          "id": "5eec77b8-f1b2-4123-88ac-b9c9c722becc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e1309a9c-d8d9-46c9-8f55-654849015579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12a2a6-1187-4cd6-baa8-a62b1abab675",
        "cursor": {
          "ref": "1afab8bd-3e13-4a50-9e33-633b250c5a75",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6d60d88a-807a-4e40-8ee4-af0c776ecfbc"
        },
        "item": {
          "id": "1e12a2a6-1187-4cd6-baa8-a62b1abab675",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0ea44789-d703-4c21-b13d-f46daf0d3920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4718a0-8675-4035-a87b-5d72fdbc7a2a",
        "cursor": {
          "ref": "14c22e69-371e-41ed-b2bd-fe0d1efd5d36",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a5400f67-8eec-4cf4-8113-cd433e5a6003"
        },
        "item": {
          "id": "8f4718a0-8675-4035-a87b-5d72fdbc7a2a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dd0fc4a1-e145-406a-8055-e524de33d7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa06b84-9b56-48a2-b6e8-4165c425f149",
        "cursor": {
          "ref": "aa820fc7-b13b-4125-b5c3-21134bedc78b",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d1c6df15-25d0-4c85-a305-ae2b08dfbb91"
        },
        "item": {
          "id": "1aa06b84-9b56-48a2-b6e8-4165c425f149",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "05f6d9bd-160f-4035-a0bc-cfd18429913b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd9679c-8332-4f1e-a3f0-728036d73a68",
        "cursor": {
          "ref": "3f760ea3-1c91-41ea-9a5e-3cea940b6fd4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3265f36-8c15-480a-bf00-a133c283160a"
        },
        "item": {
          "id": "9dd9679c-8332-4f1e-a3f0-728036d73a68",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e2297a03-236c-41ad-b053-32c21c30e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee6a1b2-54d4-4da9-bf58-7c7eac76492f",
        "cursor": {
          "ref": "d02c44c9-aaf3-4f2f-abce-772c570a039d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7f7d678f-9695-4b4a-822a-2d82b3adf779"
        },
        "item": {
          "id": "4ee6a1b2-54d4-4da9-bf58-7c7eac76492f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "879ad156-fef4-47dc-9bba-868db1eb8dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8f77f3-29bd-4012-a63f-249bea6ac724",
        "cursor": {
          "ref": "bdb790d8-fac4-440e-a5e7-3f78fbd68f87",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c9dd3ce5-fb36-41e3-846e-9629d43d9d76"
        },
        "item": {
          "id": "3d8f77f3-29bd-4012-a63f-249bea6ac724",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f1b6a3a-4f8d-4c6f-86c2-8eec02fdaf33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2efb02-e15c-4480-b447-8511ba799c8e",
        "cursor": {
          "ref": "560e8e18-d60e-4fef-b5cf-93abdb82e3e7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8931ea17-17d2-4968-a0ea-ba97c4a0be39"
        },
        "item": {
          "id": "ba2efb02-e15c-4480-b447-8511ba799c8e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7aa9570c-9d7c-45f8-91ed-a1fa4be27f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5873e93-9e7e-4c07-9738-ac846538a642",
        "cursor": {
          "ref": "712d1d4c-92d0-40db-923a-d8fc150ecaa0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8211c904-2424-41f4-8226-96ae9fdb3065"
        },
        "item": {
          "id": "c5873e93-9e7e-4c07-9738-ac846538a642",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "424361f6-4c43-48b6-aa18-dea3eff6143f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702eca1e-6bca-4302-b7d8-dfa4b5bcfab9",
        "cursor": {
          "ref": "a1f85125-3132-42f3-a590-a06c1f960f4a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "150cad92-1922-4aee-81cc-73fadc5efe08"
        },
        "item": {
          "id": "702eca1e-6bca-4302-b7d8-dfa4b5bcfab9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d54a9c35-783c-45a2-b912-afe9d4a57fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51272df4-3eea-4e03-af54-5834d45c0e76",
        "cursor": {
          "ref": "8462d510-8bbf-46d1-80fa-8601f2e6fa4d",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "735c325c-f4cb-47a4-a6da-8860893d2396"
        },
        "item": {
          "id": "51272df4-3eea-4e03-af54-5834d45c0e76",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5494d8b-a291-4100-b250-a16e059d1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9600b781-955a-479e-8be0-b4ba1a303d92",
        "cursor": {
          "ref": "a6c5116b-ce39-40d4-9804-7a8e2cf4dc16",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0ef35581-f7fb-4a33-b43d-4f13e8364759"
        },
        "item": {
          "id": "9600b781-955a-479e-8be0-b4ba1a303d92",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e227b657-b313-46b2-bce1-350083e7c647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502d7c2b-4e47-4a8d-9072-a6327fc756f4",
        "cursor": {
          "ref": "51d1a4cf-a288-4325-bc3e-dc9c84547a3d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b2429444-35bc-40ce-8d27-51e3a24666fd"
        },
        "item": {
          "id": "502d7c2b-4e47-4a8d-9072-a6327fc756f4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "40e9ef2a-5a3e-4e8c-a3da-eed0612999bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004be917-264c-45e6-9143-73b6794a9e1d",
        "cursor": {
          "ref": "54fa2081-fce1-4250-bdc9-b57f5b26cad2",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8241ba4d-7feb-4cce-9649-1c46b9a74a73"
        },
        "item": {
          "id": "004be917-264c-45e6-9143-73b6794a9e1d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2f639a3e-a0a0-4685-8d6c-1d3504e9cf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe506eb0-553f-41d8-9162-13a9bcf74161",
        "cursor": {
          "ref": "682abf37-7e4f-4cb9-bfc5-cb45c514e8ae",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "faf81a4f-1989-46f3-82d1-d81e0e1387e1"
        },
        "item": {
          "id": "fe506eb0-553f-41d8-9162-13a9bcf74161",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "57a8889b-8d0d-437e-af48-a34a9e8bdd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aef525-339e-4d53-bdf3-d7d4b715cbb7",
        "cursor": {
          "ref": "ddddec06-c8e2-41f0-96ce-7a430798c1c5",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b34be102-019b-452d-930b-a6515872376a"
        },
        "item": {
          "id": "32aef525-339e-4d53-bdf3-d7d4b715cbb7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00d9eebc-16ea-4161-8612-2a7aaf33579a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a935f85a-f6fb-4647-8059-9eef92d48404",
        "cursor": {
          "ref": "f25d48fb-1194-4d43-b3de-97bf4e3f2b4e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cc6e5998-2d72-471a-84fd-11495366021c"
        },
        "item": {
          "id": "a935f85a-f6fb-4647-8059-9eef92d48404",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "159b8e5e-d994-4665-a815-29d0e254b237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fbe735-39cf-423c-9cf3-bc8651c8eed1",
        "cursor": {
          "ref": "76ddf5f4-ac74-4a25-a975-999032aae89f",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5b016843-7916-40a6-9de8-285be1fa0007"
        },
        "item": {
          "id": "c2fbe735-39cf-423c-9cf3-bc8651c8eed1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4130b621-f551-4bae-b9ec-482acffea192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb81375-890a-4788-892d-14c2266a0568",
        "cursor": {
          "ref": "c50636df-0d7a-46a1-88db-84a486393c6d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "be371c6a-dee0-4755-858d-abc97886c995"
        },
        "item": {
          "id": "9fb81375-890a-4788-892d-14c2266a0568",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "12a24141-fa6e-4af8-ad14-c9d5ff694393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2dee90-e16c-4d8b-bffe-e731e9e21890",
        "cursor": {
          "ref": "4b3a51da-9fa9-467c-96f2-40b19ae4b2d4",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f3739400-6d49-4d0b-aca5-f35b4a959c1d"
        },
        "item": {
          "id": "2d2dee90-e16c-4d8b-bffe-e731e9e21890",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3f7d1744-10d1-443c-84f2-6c949fe2aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59748d8-070a-4684-8e3b-6639fc840704",
        "cursor": {
          "ref": "24f9d95a-9632-4a62-b024-48336aa9a4b2",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "110063e7-c7f9-479b-8e21-1f6de429faa4"
        },
        "item": {
          "id": "b59748d8-070a-4684-8e3b-6639fc840704",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "81642e15-089b-4ccc-81e5-14097cc6dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe79b3e-fa2b-4085-8de7-4dfe9b90433f",
        "cursor": {
          "ref": "e954ef33-566e-478e-9b6d-359f49941bf1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "112a4aaa-6eba-4752-998c-4ccc4991259b"
        },
        "item": {
          "id": "2fe79b3e-fa2b-4085-8de7-4dfe9b90433f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1a9d16b3-64da-49d4-a2b6-aaea2f548b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4723f9-098f-4877-a3d2-f074fa2adb0d",
        "cursor": {
          "ref": "7070b7e5-987c-423d-8d39-46ace821c753",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d04f2666-359a-49dd-ada7-bf98f299f3f6"
        },
        "item": {
          "id": "af4723f9-098f-4877-a3d2-f074fa2adb0d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8c7f95e4-49f8-4998-8d7a-b4dd8961f6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00477003-266c-47b0-9eaa-321b312888f6",
        "cursor": {
          "ref": "9796df98-f82d-43ce-b41c-c51996121a94",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "838ed1b9-62b6-4ea9-846b-331ffbb2f895"
        },
        "item": {
          "id": "00477003-266c-47b0-9eaa-321b312888f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "afa63532-b81d-44a8-89b5-966b91613c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2968308-6228-4c56-af16-5402f6a792c8",
        "cursor": {
          "ref": "1085c7a1-8c8a-4315-9c83-9be704695d9a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "889a15b7-41a0-47d7-84e1-a7fd2ddc84fb"
        },
        "item": {
          "id": "b2968308-6228-4c56-af16-5402f6a792c8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2da1c7b0-4a55-4016-940d-f244ce46645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef91f142-a3dc-414a-9dc7-8f1226838fab",
        "cursor": {
          "ref": "57b43337-df07-4d81-ab43-8bd27138dc45",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c31968ca-352f-48fb-8248-89bdf386d6c9"
        },
        "item": {
          "id": "ef91f142-a3dc-414a-9dc7-8f1226838fab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f6dba4ea-0339-4a56-b091-1f2445b77f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbe940f-b90d-430e-8258-6eacf1a03fa0",
        "cursor": {
          "ref": "d480e044-7a12-4a8b-856e-f45c5a14f3b0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4750a082-bfa6-4c84-a50b-2666e1861a60"
        },
        "item": {
          "id": "2fbe940f-b90d-430e-8258-6eacf1a03fa0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d1314d1-bd45-4bdb-97a6-9341934d8986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810452a6-bb62-4757-8959-2b0657897aa5",
        "cursor": {
          "ref": "d0a9f7df-df6a-47b0-8c8f-43e1a0f329d6",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e5ebda69-6c8a-4800-9b8e-35f8014934ba"
        },
        "item": {
          "id": "810452a6-bb62-4757-8959-2b0657897aa5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4948efaf-2c98-455d-801b-8a0e5fda08ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ba2f0-38f0-4acc-8a0f-0727f4275d5f",
        "cursor": {
          "ref": "87fa4ccb-d1b0-41a5-9096-f574ecf3cd3a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "39343ab5-ef94-4466-a482-b0330afb98ab"
        },
        "item": {
          "id": "665ba2f0-38f0-4acc-8a0f-0727f4275d5f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f9834476-d60f-45b0-b24e-05dc63980935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc0c574-bedc-4a28-88e4-d595c37ff0f5",
        "cursor": {
          "ref": "b8d035fb-4602-4037-a457-186521d1af71",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a570210f-b821-4609-9839-80555d3ffc42"
        },
        "item": {
          "id": "6dc0c574-bedc-4a28-88e4-d595c37ff0f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b0dd3191-aef0-43a1-bd86-5d39966c02f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670632da-2bd6-4f2b-9401-49ce77de8c00",
        "cursor": {
          "ref": "c54b2348-93be-4d42-80af-f0d48fc012c3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e1a99aee-c35b-4d4b-aa5f-56de42cb4f86"
        },
        "item": {
          "id": "670632da-2bd6-4f2b-9401-49ce77de8c00",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1a23d737-6234-4c4c-b8a9-1bcd7e45aa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e6296-26da-4085-961a-5245878ac9aa",
        "cursor": {
          "ref": "87726b04-e8c6-44d5-82ad-7a835667be2a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "96bfe50d-a9be-4c70-9ef1-4ecc6ac52738"
        },
        "item": {
          "id": "272e6296-26da-4085-961a-5245878ac9aa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6b904197-0ed8-42c0-bb87-213dc07c368a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a81739b-4b7d-4e0f-b0cc-e67fff32adc9",
        "cursor": {
          "ref": "d40f182f-ea02-4529-9c7c-f9b2c4c7f298",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "52207a1a-c2ff-4a01-95ca-6829dbc47390"
        },
        "item": {
          "id": "0a81739b-4b7d-4e0f-b0cc-e67fff32adc9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bef1a9f0-dcaa-4e6f-900a-10dd26392db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fa06f2-5875-4b70-a172-b23b5fe499b2",
        "cursor": {
          "ref": "b8ec025e-bf30-4268-90b1-9ec0adec79d6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3d75faf9-10d0-4aed-a420-f20c7256f2d6"
        },
        "item": {
          "id": "81fa06f2-5875-4b70-a172-b23b5fe499b2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a69e7685-f576-49ff-a6e9-0d8fbf19be46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a20b77-8b10-49e9-92b1-ea985e0b6c2f",
        "cursor": {
          "ref": "c9feb153-bc3d-4677-b37e-1b7e368b328d",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4fe567f7-0701-4d86-b999-947dc91f618e"
        },
        "item": {
          "id": "51a20b77-8b10-49e9-92b1-ea985e0b6c2f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "57eb7ac4-2a8b-451e-a202-b92bfb3ee07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4937e9e8-f319-41eb-b302-61cfb31b5d34",
        "cursor": {
          "ref": "2ccedd1f-5343-4eb2-b40b-33edc9074d7a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "92be0884-ac37-4adb-94c7-9b8e065a4d80"
        },
        "item": {
          "id": "4937e9e8-f319-41eb-b302-61cfb31b5d34",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b5502d2d-b699-47fa-a7ac-bbd4e34f9bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dec42d-2535-4f6f-b846-a92319fb155d",
        "cursor": {
          "ref": "d560a58a-240d-4cdd-a5de-5a3dd1530b78",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b0f7329d-f606-44d6-b052-839409fccfae"
        },
        "item": {
          "id": "39dec42d-2535-4f6f-b846-a92319fb155d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9f6f0ab3-5121-4daf-9f38-de24486659d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ddc0dc-b9fa-421e-bed9-b258e8d528cc",
        "cursor": {
          "ref": "6320eb63-665a-4a2b-b065-27e11f193b2d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d1249737-6271-4450-8cbd-56938591d386"
        },
        "item": {
          "id": "e7ddc0dc-b9fa-421e-bed9-b258e8d528cc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "beb27c75-196e-4f88-bd83-dfef7ca19796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63981422-ba64-4296-ad27-ef9cb1da7130",
        "cursor": {
          "ref": "d878e012-26bb-4931-b750-958a00921485",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3de107c6-26b7-4285-a430-86748c0fb2d5"
        },
        "item": {
          "id": "63981422-ba64-4296-ad27-ef9cb1da7130",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0410d4e2-a2c5-4e2d-8b50-e9a11653dbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd36b05-b4c1-4f13-9367-22633b3d48f2",
        "cursor": {
          "ref": "bd9eef30-1d7e-4682-a9b9-c3b496967538",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4b7e1e51-abcd-42c8-a286-b6100f3201cc"
        },
        "item": {
          "id": "0fd36b05-b4c1-4f13-9367-22633b3d48f2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0aeea45c-fcb9-4165-aa93-2056209c8040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20887d5b-7950-4af0-b739-549447fc917a",
        "cursor": {
          "ref": "d6c32dd4-417e-439c-b142-e245c367f2d0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b9a6422d-e9e7-45bc-a58f-6c55f2803c8a"
        },
        "item": {
          "id": "20887d5b-7950-4af0-b739-549447fc917a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "da860d28-78a5-4757-bce7-0e9e12719841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f65ac50-1501-4017-9005-44891ce6fc45",
        "cursor": {
          "ref": "42892874-d4ef-48fa-83e5-7f785923f5c1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0d66e94-f608-490c-bec4-db3d4653a21c"
        },
        "item": {
          "id": "4f65ac50-1501-4017-9005-44891ce6fc45",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eb66dc88-301b-49e1-9a22-38946d5c7a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aad88cc-9070-4722-80bd-f0d4ccee5092",
        "cursor": {
          "ref": "7d08112c-fd71-4b36-9350-dd3a1c4ecd93",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "658008ab-8273-485c-baa0-2e8d32e768e5"
        },
        "item": {
          "id": "0aad88cc-9070-4722-80bd-f0d4ccee5092",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "59ae2e3d-74a8-42e5-b48c-961f39d63672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe8106b-e8dd-4286-82eb-632aefd9dd30",
        "cursor": {
          "ref": "d6f79509-6ae2-4a4d-a5a2-811f6d8b6b00",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9069556a-b1ae-4fe8-b92c-5297bcdac0c3"
        },
        "item": {
          "id": "efe8106b-e8dd-4286-82eb-632aefd9dd30",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ebe3f687-c7f0-4160-be87-ab850c602498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdfa081-d64d-495d-a4d2-dcaf1f78990c",
        "cursor": {
          "ref": "85cb3533-1761-4eeb-986f-e3afc671402c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "42b99e03-74ca-47d9-953b-80a4f54564f1"
        },
        "item": {
          "id": "dbdfa081-d64d-495d-a4d2-dcaf1f78990c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fc3d8f5d-ecd8-4ed2-8f0f-23a174701cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736137df-a160-467d-a813-754154cdd4e8",
        "cursor": {
          "ref": "9bd9082d-1795-47d4-98e2-99310a18d966",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "285a34d1-987c-46e0-9d08-7fb8b9a5bba1"
        },
        "item": {
          "id": "736137df-a160-467d-a813-754154cdd4e8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b238be0f-5d7d-4bc2-9ecf-ae2b675d99dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a238c09-35bd-4d9a-aa56-1dc03e1a7fd5",
        "cursor": {
          "ref": "616f122c-6bdf-4cd4-81c2-bb258facead6",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aabf998d-1b42-42a4-ba4f-ec4b0c2dcb51"
        },
        "item": {
          "id": "6a238c09-35bd-4d9a-aa56-1dc03e1a7fd5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e43003ea-8920-48d2-a488-c46984ef8b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79205ca-b5fc-42b3-83ca-5af54cfb629d",
        "cursor": {
          "ref": "fad7899a-04ff-40e2-8910-be88fbbb459f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6db75a7d-1c11-4ed6-bcde-c14d371dd7d4"
        },
        "item": {
          "id": "c79205ca-b5fc-42b3-83ca-5af54cfb629d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aeacacec-e35d-44b5-96bb-d61efa7f1378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b24b81-f22f-43be-b00d-c7357ad216af",
        "cursor": {
          "ref": "f5c5e255-7a0b-4f24-8282-07ce63435204",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0097050b-0108-4679-9427-d561b3432d5a"
        },
        "item": {
          "id": "24b24b81-f22f-43be-b00d-c7357ad216af",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "579bf8d4-3b8c-4c90-91a9-38f4d267ce19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b223e6-b977-4d1a-93ec-3acdd88cf21c",
        "cursor": {
          "ref": "aa4cbd66-86de-4c5c-ba3d-89877e20c956",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f844b520-64e7-4e44-8566-2eedb1e916eb"
        },
        "item": {
          "id": "14b223e6-b977-4d1a-93ec-3acdd88cf21c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "832265ac-24d8-46c8-9793-1a6ab84b32a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ef73c1-de0b-4dc2-8776-a1d22e9c0b2e",
        "cursor": {
          "ref": "31f956a7-c61f-4aa0-b4fa-d8d9017d51db",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "056ad64f-f431-4682-bc15-e6d35cccc4c5"
        },
        "item": {
          "id": "69ef73c1-de0b-4dc2-8776-a1d22e9c0b2e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "66428727-58ef-46c3-af7e-4006fb8fbb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fd3f36-01ea-4797-a02f-07399109563c",
        "cursor": {
          "ref": "fc9f98c3-e93e-448a-8af6-919cf34a6a94",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d43ff721-d07b-42af-be8d-7cb808be9d4d"
        },
        "item": {
          "id": "d0fd3f36-01ea-4797-a02f-07399109563c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6113d12d-733f-4055-899e-d74138f4ab6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e7781-363b-41a7-a206-d6140695dbf2",
        "cursor": {
          "ref": "ee7de75d-c4a4-4812-9818-ffeab4786fe1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "90b94456-50b9-4c54-b63c-83228c604814"
        },
        "item": {
          "id": "e81e7781-363b-41a7-a206-d6140695dbf2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "23a5c40e-5a6f-4aab-94e3-195e43ce116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719bb048-3adc-4f34-9cee-b875a20407a7",
        "cursor": {
          "ref": "3af89b75-d368-4bfd-9374-904acf8e0f94",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1fa3892a-71f2-483e-a860-5aff74ffcb02"
        },
        "item": {
          "id": "719bb048-3adc-4f34-9cee-b875a20407a7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "655cc754-4a16-49cb-9ad1-b13ecec83bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17717134-e57b-42d0-9aa4-ce5243e48ba3",
        "cursor": {
          "ref": "04bfd391-c66b-4fc6-9da9-e7cd95761dcc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6f1d6b51-d025-402b-867b-3f257b852763"
        },
        "item": {
          "id": "17717134-e57b-42d0-9aa4-ce5243e48ba3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "abef8f05-8f16-4d15-bfc9-08b25b30dc55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e9f02c-5c73-4dfe-ac66-e75bcd0b7c6f",
        "cursor": {
          "ref": "26cb1c35-8f1d-4e6e-a278-28467a23a6e0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "791d3a48-85d5-43c2-9abc-e4409996b1cd"
        },
        "item": {
          "id": "29e9f02c-5c73-4dfe-ac66-e75bcd0b7c6f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "94cd4302-28c4-42b1-9ff1-0f474dcf889d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "cb9982e5-320d-4ed7-b19a-c2c08a5c59d1",
        "cursor": {
          "ref": "c174f938-ca50-4d81-8ac7-e04f9a3f3c13",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "acd228aa-0cbb-4c47-808d-f86727cfce8b"
        },
        "item": {
          "id": "cb9982e5-320d-4ed7-b19a-c2c08a5c59d1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3d580032-9369-4aed-b0a1-a87bd0634ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "1bd2c0d9-f0bd-419b-b165-889bc4b78032",
        "cursor": {
          "ref": "c913ac06-430c-432e-abdd-715489272786",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d04c12ff-6da8-4042-a442-ea8e3299f936"
        },
        "item": {
          "id": "1bd2c0d9-f0bd-419b-b165-889bc4b78032",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6e44d251-c70c-49d1-9459-d0b3751245f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dc63bd4a-67d6-40ae-978d-910b4701dac6",
        "cursor": {
          "ref": "7212dfd5-e371-4b51-8dc3-dbffab1ef907",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c2beaeae-1684-481d-8c97-4344d970f5df"
        },
        "item": {
          "id": "dc63bd4a-67d6-40ae-978d-910b4701dac6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "638ee60f-14f0-42b7-b4d1-fe0361e55507",
          "status": "Created",
          "code": 201,
          "responseTime": 6346,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa43aa-edd0-4651-80a2-da4a912ca66d",
        "cursor": {
          "ref": "4c37fd31-6d2d-42df-9620-fb774264ef16",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "db86382b-fd2e-4469-8d1b-583a5cb8c100"
        },
        "item": {
          "id": "97fa43aa-edd0-4651-80a2-da4a912ca66d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fc6ce530-5745-42a2-ab57-a7b7aa2fe13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "34d3dc3d-bff1-4df4-8f10-dcaee34cbfcb",
        "cursor": {
          "ref": "39eec34c-5e58-46f4-8e49-bf637ff2101e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "59081290-4ac5-46da-be44-129090d4ad17"
        },
        "item": {
          "id": "34d3dc3d-bff1-4df4-8f10-dcaee34cbfcb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ae3a5fd-65b7-468d-acd3-29df795dc2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e5e3c42f-57a5-4827-93e2-9f61b8f1a654",
        "cursor": {
          "ref": "350d9c61-34e7-4711-8083-db4b887e9261",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7168f5db-d681-4bc3-90da-853f7e05d63b"
        },
        "item": {
          "id": "e5e3c42f-57a5-4827-93e2-9f61b8f1a654",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1578296a-d612-4419-b38d-911332924618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae19755-05be-4555-accc-c74effabaffd",
        "cursor": {
          "ref": "f62a2227-2365-41d7-9fcf-c8333348d165",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4e886c43-ae51-4b64-a27a-ba02a4a65d13"
        },
        "item": {
          "id": "0ae19755-05be-4555-accc-c74effabaffd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03d61df9-7b12-4252-b5e3-85319f20f8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d80f2fe-9e91-46d8-ab0d-4eefe89b810d",
        "cursor": {
          "ref": "0151237f-d571-47c7-a7e1-5499a88a6f66",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "685d79fe-1ce5-48bc-98a7-83bb4445502d"
        },
        "item": {
          "id": "6d80f2fe-9e91-46d8-ab0d-4eefe89b810d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dd229ab4-b81a-437a-b683-0a3b19c11458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b58fb3-8c92-4b88-b103-395489877627",
        "cursor": {
          "ref": "3450bfac-c7a3-4baa-b3e2-a8908968f313",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2865dde4-f1f8-41a5-b687-4018a08cda24"
        },
        "item": {
          "id": "91b58fb3-8c92-4b88-b103-395489877627",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1793579a-9200-4b1e-b6dc-b9a42edac6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d629a0e7-4bbb-48af-95f4-853f2a96e67d",
        "cursor": {
          "ref": "7885ff43-f338-4f54-b9aa-add3773a330c",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "552a93b4-e617-4084-9ecb-c608430cd4f3"
        },
        "item": {
          "id": "d629a0e7-4bbb-48af-95f4-853f2a96e67d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c0cb0ef-9cc4-4fd3-b751-9f88d67d7a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1024da4-d284-4fca-bbaf-d572ee221371",
        "cursor": {
          "ref": "0b7e6164-6cbd-4a90-b0e2-c3b89393dd3f",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f1110e7d-e1f6-4a06-a8df-be4085ecf555"
        },
        "item": {
          "id": "f1024da4-d284-4fca-bbaf-d572ee221371",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "38c37ace-13ad-473a-b534-d4d3a44b82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed93ecac-2e9b-4347-b10b-8b0a7fbd397a",
        "cursor": {
          "ref": "0ead26ff-e41e-4a00-86e3-9fb3aee1fe07",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "16223428-49bc-4270-a7a7-69466248f83b"
        },
        "item": {
          "id": "ed93ecac-2e9b-4347-b10b-8b0a7fbd397a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff798d3a-6d8e-41c3-a4a7-91ae6f819d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d934e-836b-4161-983c-b81d6dfdde4c",
        "cursor": {
          "ref": "d50175bb-4bde-4ec5-b4a5-0c1be5c1d2f8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "281629e2-726c-4377-9c9b-b806e025878e"
        },
        "item": {
          "id": "f12d934e-836b-4161-983c-b81d6dfdde4c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b389c770-262c-45a5-aab9-003c0b6619b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56364588-7f43-48a4-b4df-05083322a936",
        "cursor": {
          "ref": "94337ce0-d9c6-403b-8ffa-a600dd2d07ea",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "84b7020b-e765-4ea5-ba58-552384c8e81d"
        },
        "item": {
          "id": "56364588-7f43-48a4-b4df-05083322a936",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fad08311-c91e-468f-861a-fdbce6ee8469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1df71f8-e8d0-4e1d-89d4-ce52e34f384e",
        "cursor": {
          "ref": "7ca07c08-8df3-4290-a9f3-dc2c8c6480ab",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bbaeadcc-c284-4c7b-8764-db63ba596e72"
        },
        "item": {
          "id": "b1df71f8-e8d0-4e1d-89d4-ce52e34f384e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1134230b-b5a3-4b3a-bb6c-9791a94ca048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ce7a7-af4c-4106-b7b1-0c9f4ff9bf02",
        "cursor": {
          "ref": "4eff4bda-5c38-429e-a2b6-8d77ce0ed16b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "199ff150-caaf-43f2-a782-70ca7a19266c"
        },
        "item": {
          "id": "c54ce7a7-af4c-4106-b7b1-0c9f4ff9bf02",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f98f6673-60ad-4d4c-a0e7-4135aae70105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6becbbfc-6dd3-4740-9bf7-89c1a8a3d48d",
        "cursor": {
          "ref": "175c71e4-6568-49bf-9398-58a9b25bfc58",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb4b4baa-b621-4720-948d-a27d201e7d04"
        },
        "item": {
          "id": "6becbbfc-6dd3-4740-9bf7-89c1a8a3d48d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dfecd0e5-40ea-4db6-b053-9322e4dc2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5675a2ac-c7b6-4537-9e78-c2275f754179",
        "cursor": {
          "ref": "4c3b576f-6763-4794-91d3-28ca60d6eca5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f75cc7c-2336-4ceb-9dc4-2bb673b08b6f"
        },
        "item": {
          "id": "5675a2ac-c7b6-4537-9e78-c2275f754179",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b573d07-d4aa-42f0-9bf6-71e426e15de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c85614d-723f-403f-ae67-bd2ffd15431b",
        "cursor": {
          "ref": "6558558f-be80-42c5-acbd-478052d6e5d9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b87c8b5-0785-479b-b808-96bc563a0bfb"
        },
        "item": {
          "id": "3c85614d-723f-403f-ae67-bd2ffd15431b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c1dee0ef-5366-4b98-8aba-0a94fa81148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbca952f-d231-4590-8580-56af9afad4ec",
        "cursor": {
          "ref": "7de2beaf-0467-4d88-87d2-0b8246d62aaa",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "135d6194-529f-4427-a8b1-4c49585da9f3"
        },
        "item": {
          "id": "bbca952f-d231-4590-8580-56af9afad4ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1f42f22-d4f8-4d87-b56f-68eba359535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b5981-5826-4295-905e-c06ba2607bc4",
        "cursor": {
          "ref": "afd34b93-aa27-4d57-b3a0-2bb76b2f18bd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4540bf07-5ecc-4682-94d6-b2d9f7e6d3a7"
        },
        "item": {
          "id": "037b5981-5826-4295-905e-c06ba2607bc4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "10bcb6e9-952f-477d-aba8-f8b12882f3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34d0166-7d54-45f7-a78e-cb3f7c853b9d",
        "cursor": {
          "ref": "f506cf42-7fc3-47dc-bf90-57d3b3f0dafd",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b33ed29-4f3e-45bf-a96a-437b6ee81365"
        },
        "item": {
          "id": "d34d0166-7d54-45f7-a78e-cb3f7c853b9d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "199f55f7-c602-47ae-9728-702f98a845b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4a4ee1-f245-4ca6-a51c-a6c15347d489",
        "cursor": {
          "ref": "ec54c672-b1c8-4b8b-b9c3-4874067232ce",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ebd10088-cf9d-4420-8e37-1d64c025f692"
        },
        "item": {
          "id": "cf4a4ee1-f245-4ca6-a51c-a6c15347d489",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "37f70f8a-2039-48c6-9731-e5167151b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6e4c00-da2f-4927-bda1-15ce6f0502ed",
        "cursor": {
          "ref": "334e6780-8008-4d7f-a5ea-696e9b27e1e9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d9a38750-a492-4624-89be-4e959dd2215d"
        },
        "item": {
          "id": "4a6e4c00-da2f-4927-bda1-15ce6f0502ed",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42765a87-2f26-4cd5-bccb-8846f9b25340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9652242b-04bb-40dc-91a8-ff2035e3f730",
        "cursor": {
          "ref": "e047e076-c555-4059-9136-e63fae4e3e79",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3ecb1076-9e96-4e37-8aa1-1317c67e5856"
        },
        "item": {
          "id": "9652242b-04bb-40dc-91a8-ff2035e3f730",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d284c08-8e0b-4f1f-a862-80fff976c963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1182ba-971e-492a-9299-dbbf0cfa48da",
        "cursor": {
          "ref": "9423083e-626f-41f7-9dd7-3d8c156c9f4c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "31c7d13d-ae31-4342-b307-a96a901cb549"
        },
        "item": {
          "id": "fd1182ba-971e-492a-9299-dbbf0cfa48da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b0e2f1dd-3239-4c1e-8435-d0c7067118ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca74356-bdbd-44e1-99b6-938fcd5574b4",
        "cursor": {
          "ref": "ad24d573-7a3e-41c6-9b8a-df3950bccb09",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "16496543-1acb-4151-b456-acfdd9814efa"
        },
        "item": {
          "id": "4ca74356-bdbd-44e1-99b6-938fcd5574b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "027534c3-69e1-49cf-8e5b-5ada4299de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba1bf67-422e-42b4-ae3a-eba4f2ee46d7",
        "cursor": {
          "ref": "72457083-3f4c-48aa-b70d-8d6a5e89da1a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ca79c40d-6850-44c3-9068-7647795bcb9f"
        },
        "item": {
          "id": "0ba1bf67-422e-42b4-ae3a-eba4f2ee46d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3d91c5a7-4527-4e14-8977-6d55ee8d8d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f108c2ed-6f14-478c-89d0-379b7e18427c",
        "cursor": {
          "ref": "df3e2598-a6f8-4b86-84fc-4bc4d2de1668",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "83bba05b-e953-410f-ad5c-f2c1fbdcba5f"
        },
        "item": {
          "id": "f108c2ed-6f14-478c-89d0-379b7e18427c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bedc772-0624-4de2-a82f-ade3174f5c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4661920-9317-4aa8-bb9c-37291a69d5b0",
        "cursor": {
          "ref": "a2effbe9-cb50-4147-b53d-f44346b670bd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "92e21e71-bb67-4c65-9020-661ed9ef33b9"
        },
        "item": {
          "id": "a4661920-9317-4aa8-bb9c-37291a69d5b0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "151a8df6-d981-4828-a3ec-438f67a5075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ea3b0-c33a-414b-ab29-885b229d34e9",
        "cursor": {
          "ref": "593f28bc-caf6-4ffe-83a7-89e0a9ba9a22",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fe46d59a-10a6-4dff-bdc9-e94dcfb5db28"
        },
        "item": {
          "id": "7b1ea3b0-c33a-414b-ab29-885b229d34e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d442f756-fa05-44de-84b6-27595c995ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e872f9b-e6a4-43cf-9fe9-8f04e3f3740c",
        "cursor": {
          "ref": "a4781f75-dca7-4e73-95e6-c2543f3221f7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "95bb0bf8-7927-441a-8af4-2f1328bea1dc"
        },
        "item": {
          "id": "0e872f9b-e6a4-43cf-9fe9-8f04e3f3740c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8d145270-ddf3-4022-9c7f-3ddd842df223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8832198a-0bc1-45a3-a169-f4296c5757f7",
        "cursor": {
          "ref": "e3b31816-640e-40da-bb31-e63bee5b593e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "efcf8d6f-c1b4-4913-84ed-eb54f0fe794c"
        },
        "item": {
          "id": "8832198a-0bc1-45a3-a169-f4296c5757f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d5614570-4d1e-4e58-af46-3c89942e5d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca5a86c-44ef-4a42-800f-31b546eeb0fa",
        "cursor": {
          "ref": "875b0d30-87c7-47f9-a104-966db1ad716c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c653b81-ecc9-41ba-90f7-4e92aa28a398"
        },
        "item": {
          "id": "9ca5a86c-44ef-4a42-800f-31b546eeb0fa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7213980d-9d2e-40d2-8d67-8ac28fd2026f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8d97bb-49c6-4acd-8cce-db6a906f5165",
        "cursor": {
          "ref": "e252835e-f4c5-4a90-9f37-5aaf62c26b93",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cf0b6508-68e6-48a9-877c-d80d46f625ce"
        },
        "item": {
          "id": "fc8d97bb-49c6-4acd-8cce-db6a906f5165",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "139ee24e-e99b-4976-ad47-587cb550b4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3432450-eba1-44ef-8baa-78bfb521a542",
        "cursor": {
          "ref": "01332cc9-78c0-494f-8f5b-a5eda17ee094",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2dde0e38-2fde-4e25-8128-e1aeca12db3e"
        },
        "item": {
          "id": "a3432450-eba1-44ef-8baa-78bfb521a542",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8db32bad-257a-482c-a2b9-d0f9c19c3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb3e511-7cbd-4cb9-913a-970667b1d109",
        "cursor": {
          "ref": "81278695-8b17-4f6a-afaa-5904197538a9",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "712969f3-b4aa-496f-aaaa-cbc4a974dd96"
        },
        "item": {
          "id": "7bb3e511-7cbd-4cb9-913a-970667b1d109",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72d6634f-fb74-43f1-9845-a8b72e3afa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2d7022-0e7a-4d9f-a2a3-253f8824e963",
        "cursor": {
          "ref": "1a095710-8117-4235-b6bf-0fa0d9f0eac0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6607595d-98dd-45f9-9db2-4481c554cae8"
        },
        "item": {
          "id": "2b2d7022-0e7a-4d9f-a2a3-253f8824e963",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88376b78-0afd-4193-9fb1-1d788d4b9370",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8668b5a-6d7d-49b3-b396-3be86a7ae411",
        "cursor": {
          "ref": "45c5a693-d36d-4fdf-a330-d96e0c8111f7",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dcf9a3db-5d53-4ddf-9f8f-efe98a6cd081"
        },
        "item": {
          "id": "f8668b5a-6d7d-49b3-b396-3be86a7ae411",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3bd7789-db39-4770-896a-16a5f72bebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3cebed-defc-4ef9-bcc0-f06399e7571c",
        "cursor": {
          "ref": "4cf10948-9cd6-4332-a185-ffbe8f8999d9",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0e81ad00-d9a9-4290-98ed-581eda4ec9b8"
        },
        "item": {
          "id": "9b3cebed-defc-4ef9-bcc0-f06399e7571c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62b427f7-3c15-4b9e-b43d-0204c436df50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4997457-29af-487d-bf21-6d17fee1ea24",
        "cursor": {
          "ref": "85dac6d2-702c-4118-b2d1-02d606335bc2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "13491b13-29b1-49f5-8203-50045f984a38"
        },
        "item": {
          "id": "e4997457-29af-487d-bf21-6d17fee1ea24",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "279843c0-dd5e-4bbd-aa11-08dc8afd5482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def0adb5-34bc-449b-a6a3-5a4164804e8a",
        "cursor": {
          "ref": "0dc8db53-d1a1-4bfb-a2f2-84a59cfe7976",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67f29365-3a70-4c8d-9bfe-6e3e7f85fefd"
        },
        "item": {
          "id": "def0adb5-34bc-449b-a6a3-5a4164804e8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "35663a5d-32f7-43b1-9fff-3345cc9374a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d20b28-5a93-443c-80f5-58df66d566e6",
        "cursor": {
          "ref": "c36b6145-4864-4d6a-a512-402371df69cb",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bb8b61fb-b1c5-4f2c-aed8-b217765d7bc2"
        },
        "item": {
          "id": "89d20b28-5a93-443c-80f5-58df66d566e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0049f68c-2412-42d1-a2ac-138a70595f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e889bd3-f04c-4de3-805f-58ed80933a72",
        "cursor": {
          "ref": "d6c1cec0-c00f-4a36-b51a-886531756e3e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a11e4401-29c6-452c-b90e-6052a6788073"
        },
        "item": {
          "id": "6e889bd3-f04c-4de3-805f-58ed80933a72",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f2d15c0a-a1d9-4298-bd09-8c4b98f52438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f6746d-d902-4e17-99e0-770f78a01704",
        "cursor": {
          "ref": "2d548625-3a42-4c5a-b489-56c35fd58f61",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2b957930-f8b0-4f22-84b7-5a4350463138"
        },
        "item": {
          "id": "71f6746d-d902-4e17-99e0-770f78a01704",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60284a55-c4f8-4e10-83ea-2af987c84389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b6c45-3ab5-4ec8-bfc3-2ebc3b19ae98",
        "cursor": {
          "ref": "1f853ede-37ac-4fc7-a826-ea8fae859bc7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bfbcf67-a590-4fd8-bae2-59cb04fe1168"
        },
        "item": {
          "id": "320b6c45-3ab5-4ec8-bfc3-2ebc3b19ae98",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3dc1b76a-a3fc-43b7-b3b6-c74f8276e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ddd627-dd31-4e27-9c93-af64be0c1c06",
        "cursor": {
          "ref": "6578db55-50f3-4913-8d72-ad4b886ca1df",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3e9f6994-7325-49db-ae77-90b147b99132"
        },
        "item": {
          "id": "c2ddd627-dd31-4e27-9c93-af64be0c1c06",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a3c95c0c-b7d4-4e58-961e-f8696c23a93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97912c15-f27e-497b-a1c2-bcb3bb3a9941",
        "cursor": {
          "ref": "7eacab35-aa48-4264-9f08-2d3053e54dac",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e9073757-30d9-4d9f-9dcf-1420be7efd46"
        },
        "item": {
          "id": "97912c15-f27e-497b-a1c2-bcb3bb3a9941",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "57bddc7a-b6c3-45ad-876a-17cc456980e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7e603e-76e7-4f55-8c2d-411ea4b82e3a",
        "cursor": {
          "ref": "d29dd3f1-4abd-464d-8bf3-a43dcace8e2a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5f11dfd1-3cde-470d-9dd4-edc8294daf23"
        },
        "item": {
          "id": "5e7e603e-76e7-4f55-8c2d-411ea4b82e3a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d074db26-5f7c-48d1-b80d-ff2705467ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e135e7-7f8e-4497-bde4-a1b205a0c269",
        "cursor": {
          "ref": "7d1d4b30-7966-4131-b761-0b6d4d5b9898",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dc6a91c7-72b0-45ac-96b1-e218389cd97a"
        },
        "item": {
          "id": "42e135e7-7f8e-4497-bde4-a1b205a0c269",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fda4abf0-93d1-4b5b-9eca-add961b9a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12484f76-e893-48b4-833d-8532336f3bf5",
        "cursor": {
          "ref": "3fbf5b3f-e09f-4844-b42c-15a4883bbb24",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2c5b0ca6-10ab-4e93-afc3-c9a28072031c"
        },
        "item": {
          "id": "12484f76-e893-48b4-833d-8532336f3bf5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c69e72b5-d3aa-4f87-b6ed-c311e1ae5c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b9d49b-3111-4ad8-ae32-9ff5f5d706fd",
        "cursor": {
          "ref": "48f64757-c1c4-4328-86c1-245b501642cf",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0d364233-a462-44f7-8051-c6f57374a636"
        },
        "item": {
          "id": "21b9d49b-3111-4ad8-ae32-9ff5f5d706fd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d711a49e-5bc2-4a1f-a9fc-a554676c108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b88dfa-9bdd-4d24-a360-d7167b98acca",
        "cursor": {
          "ref": "0d9b4e35-1730-4d8f-a534-f5e3d4458ebc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bf994e69-0f33-4c88-8fdb-19dc15c415dc"
        },
        "item": {
          "id": "32b88dfa-9bdd-4d24-a360-d7167b98acca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa022635-0562-476f-a742-4283028c46f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95eed6e-67a6-448c-859b-fcaadd65b5cb",
        "cursor": {
          "ref": "2f717fac-f159-4fad-8bdb-dc7693fe9b99",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7cf08cf1-1e93-4975-9a87-2eb3764d7c7a"
        },
        "item": {
          "id": "c95eed6e-67a6-448c-859b-fcaadd65b5cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17fa673c-b49d-4ec4-a500-7bb577332055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56867dca-1e82-41eb-b29b-3a5ab0b4051e",
        "cursor": {
          "ref": "2b22bab1-c544-4507-a800-c40743d84fd8",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1effaf58-42a0-42c7-aab1-58eb14d2db54"
        },
        "item": {
          "id": "56867dca-1e82-41eb-b29b-3a5ab0b4051e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "462a32c3-795f-4ea1-ad91-cbd1279e9e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d646c4a-fad6-42ef-86fb-45a61e3d0a90",
        "cursor": {
          "ref": "59ae58af-d062-4064-89cb-aefeb7328d0d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "82f3dfb0-e624-4031-9992-f6b8a2939673"
        },
        "item": {
          "id": "6d646c4a-fad6-42ef-86fb-45a61e3d0a90",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03f8d295-057e-4080-a1eb-4a131e4bce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aacd995-896f-4160-b5e6-2aeffd0942c3",
        "cursor": {
          "ref": "850f6924-e61b-4006-b5e5-b16d8caa3468",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0cbfeb19-91da-4ca2-8a66-fe2a8ab12bec"
        },
        "item": {
          "id": "7aacd995-896f-4160-b5e6-2aeffd0942c3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0a19ce8f-a9fd-4e7c-910a-78a778549e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3721100-78d4-45bd-9e69-95efe52df19f",
        "cursor": {
          "ref": "cc335bb0-8d1b-444e-ba10-366a01386ef2",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "21895cf5-53a2-424e-ac87-acdc5070adfc"
        },
        "item": {
          "id": "c3721100-78d4-45bd-9e69-95efe52df19f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3108b808-2b6b-42e6-a687-eb92c76a4987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3876735-0498-46cc-b161-1eec99277d8f",
        "cursor": {
          "ref": "90217b92-9c95-42a5-9a54-7a4b1cc818ff",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93fc1b12-b246-4eaf-b424-77798103766e"
        },
        "item": {
          "id": "d3876735-0498-46cc-b161-1eec99277d8f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6097205-f616-41f9-ae18-2398b106ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baad94e5-70e7-4295-ab70-190aa5a25460",
        "cursor": {
          "ref": "07118eff-a7c4-47df-b193-b7d325cd5f74",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e0b826e7-54be-44f2-af5a-0c2738a44b62"
        },
        "item": {
          "id": "baad94e5-70e7-4295-ab70-190aa5a25460",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9294edac-965d-4a7e-81b0-3d823c6fa0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257f5227-18c4-4a79-96b0-6fc5e9497e83",
        "cursor": {
          "ref": "dac6e591-c17e-4dc8-87e4-31196a1fbd0b",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4eae5122-a140-49f8-bb0a-07995f2ea102"
        },
        "item": {
          "id": "257f5227-18c4-4a79-96b0-6fc5e9497e83",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6178871f-e932-443f-abd3-83f252f22be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8797171-2003-487b-9d44-c73bd83384c0",
        "cursor": {
          "ref": "57eab087-79d0-44ba-965f-804b05bc4a63",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "244054b2-fa6f-47ff-9801-2fe3a31fbd09"
        },
        "item": {
          "id": "c8797171-2003-487b-9d44-c73bd83384c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6fdf7a62-42b1-4835-bd9a-c2ed2cdf48fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a541667-45a8-4ffa-abc0-e73848b00211",
        "cursor": {
          "ref": "70ec1eb8-aa25-4e9d-bff0-9d2c504b0f65",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bb237149-9b1f-491a-983e-03f15fa87378"
        },
        "item": {
          "id": "6a541667-45a8-4ffa-abc0-e73848b00211",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "95bf9ade-976e-44be-a4d2-fa139a88a80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d8d89b-4e21-4da5-9caa-8c2ac0c3e903",
        "cursor": {
          "ref": "038358ef-af79-4841-9518-1dae15c649c9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "372ba306-d8b9-4333-bb0e-48b74fed8814"
        },
        "item": {
          "id": "a6d8d89b-4e21-4da5-9caa-8c2ac0c3e903",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f4bba67b-52b9-49d1-b3eb-2372fdf96631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e50535c-6862-49b7-8a00-2acf77d108e6",
        "cursor": {
          "ref": "d2d4e678-6e0b-4ee7-9fe6-9539748bcdfb",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "166ff852-eb5e-4826-8573-37e51190a282"
        },
        "item": {
          "id": "0e50535c-6862-49b7-8a00-2acf77d108e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c5ad755d-0982-4dbe-95f9-3a54b2b83816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b39dd2-5e4e-4213-9392-fc87c57d5bce",
        "cursor": {
          "ref": "7c6e08fd-6d5a-4a04-b470-a4616bb96453",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4a381f72-7f8d-4564-9bf9-5bb3068a1981"
        },
        "item": {
          "id": "41b39dd2-5e4e-4213-9392-fc87c57d5bce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5bb12390-e347-4517-afad-4517954be629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f788af84-474d-4961-9f19-ac5287e92eff",
        "cursor": {
          "ref": "b142fdc2-4fcf-471b-9f31-efa37e4d8dd6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dabdd270-0f7e-4331-96c4-4bdaaf5d0f57"
        },
        "item": {
          "id": "f788af84-474d-4961-9f19-ac5287e92eff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9d8a75f-7251-4dbb-8fe4-04795b5be908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12367c7-c0fe-4783-b71d-71e148529297",
        "cursor": {
          "ref": "93c7c909-6576-465f-92f2-b22482b36ac9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "31b7fec5-79fa-42a5-94a9-1c4c1045eebf"
        },
        "item": {
          "id": "d12367c7-c0fe-4783-b71d-71e148529297",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "15bd64de-72e5-4f48-befa-afa477779d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84192b79-81e1-4bb7-b73e-560082f9b720",
        "cursor": {
          "ref": "583d6022-7d60-4016-b58d-a69ded4f38db",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "95425752-bef7-4c07-8f3c-f7b8b0aedaf9"
        },
        "item": {
          "id": "84192b79-81e1-4bb7-b73e-560082f9b720",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8cd56bd0-6424-4bae-9ffa-5cc9d7305c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc7fe7f-fb0f-488e-922e-f359cbdf1b1d",
        "cursor": {
          "ref": "103cb0a3-d4e3-4b20-b1be-af0adcfb10a6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "18a56e69-9618-44fb-98a8-52ebe9934d44"
        },
        "item": {
          "id": "abc7fe7f-fb0f-488e-922e-f359cbdf1b1d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da3e6ff1-2ddc-4947-b924-5762132b30b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab067d0-0875-4807-ab9e-53b30ff8ff27",
        "cursor": {
          "ref": "0964106e-7ef8-49c3-b98a-aad774fcdb77",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e542b813-f867-4c6d-89e4-aac309bea1c0"
        },
        "item": {
          "id": "2ab067d0-0875-4807-ab9e-53b30ff8ff27",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3be73e3a-0cb4-4728-a244-80904e21514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bb9f48-0dea-4f5e-92d6-b264f5387c7f",
        "cursor": {
          "ref": "13181080-5f51-4d19-b143-5b57228cc7e8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2d62c40d-7f4f-46d6-b114-b1e5906327cd"
        },
        "item": {
          "id": "66bb9f48-0dea-4f5e-92d6-b264f5387c7f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "54280a18-5c64-4c97-81a9-dd96bc11f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b10effd-5750-44e5-a7ff-defd46b0893b",
        "cursor": {
          "ref": "b3ba8524-b2e2-4710-9723-0e648cc331e9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e6dc8541-ed09-4c19-b683-203cd5814693"
        },
        "item": {
          "id": "7b10effd-5750-44e5-a7ff-defd46b0893b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "90ee86fa-291d-47d6-b041-ae1d9ed45e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ed6e65-e5a2-4d7c-9758-609a2947b55b",
        "cursor": {
          "ref": "8562240d-89f4-40a4-948c-b0a91ed8815e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "737a597f-2d4a-4217-876f-984ba14c20c9"
        },
        "item": {
          "id": "e4ed6e65-e5a2-4d7c-9758-609a2947b55b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d08c4e22-7bbf-4a82-ab3c-1edd9525b65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc18d4a-bfce-422d-bbeb-8ba88d71e33d",
        "cursor": {
          "ref": "fbef8806-b1c7-4145-9f44-b930574a01a2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "edabf382-8169-4412-b8f6-566b734de976"
        },
        "item": {
          "id": "cfc18d4a-bfce-422d-bbeb-8ba88d71e33d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4136392c-9131-43a9-ac98-7c48be2a17eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08b9426-2f9d-45d2-964e-8879cd0062b9",
        "cursor": {
          "ref": "3cc8862c-b7f0-400d-bed7-aa43cbe6fa88",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b184409f-86f9-49bf-bb2e-1e95748b5dbf"
        },
        "item": {
          "id": "e08b9426-2f9d-45d2-964e-8879cd0062b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2dbefeb-c83a-4177-80fa-d8d489d85baa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef77dc-ef35-4e4d-8469-7c181279f76d",
        "cursor": {
          "ref": "ed897d73-9445-4935-90d1-5e08ad286fdf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "00157824-8090-46d8-ac30-37c0690ea365"
        },
        "item": {
          "id": "b4ef77dc-ef35-4e4d-8469-7c181279f76d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "840b4100-d010-4698-896d-8390bb80a5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6193f860-add0-487a-8cd4-51ec29817118",
        "cursor": {
          "ref": "9b725759-11f5-4dc7-8c06-5dde067441c2",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a130a4a-664b-45f7-8eef-728ec3d80f46"
        },
        "item": {
          "id": "6193f860-add0-487a-8cd4-51ec29817118",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aa53eb79-5e8d-4c7f-bf89-5a0c639d4935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e929f2-a7b1-4f76-a05d-c87aade7294b",
        "cursor": {
          "ref": "0d82d14c-2028-4c2c-afd7-074651ce7a42",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "28381dce-9da6-4d37-acc3-d7f6ec7508c9"
        },
        "item": {
          "id": "18e929f2-a7b1-4f76-a05d-c87aade7294b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1814c7d-a01c-48ba-93f6-6f61334870fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111052c6-ebf7-41e1-91c6-b3b3ee57f950",
        "cursor": {
          "ref": "ea9e994b-589c-4815-98a9-4a7c6d309cd3",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c2c918e3-8457-4980-a890-ec9f0492cc43"
        },
        "item": {
          "id": "111052c6-ebf7-41e1-91c6-b3b3ee57f950",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "096fab69-321d-4fa2-ab90-976cf23b0e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91496ae7-fa05-4aee-a1b8-5378c328e3f1",
        "cursor": {
          "ref": "c7756d73-a2ef-4c0c-95b7-81060081229c",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3728da4b-53b4-4428-be76-eeb2172cdb3c"
        },
        "item": {
          "id": "91496ae7-fa05-4aee-a1b8-5378c328e3f1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a1587fd-bd90-4a77-9816-057f921aa875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c8c8a9-c29d-4088-97bf-582edae2518d",
        "cursor": {
          "ref": "458372c3-3608-41d0-8f06-6e973e990834",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87addacd-a702-4a1f-beba-fe90cb1417c7"
        },
        "item": {
          "id": "89c8c8a9-c29d-4088-97bf-582edae2518d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3f4b500-b212-4524-a0c2-568a3b80c2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7008c8d-bc41-43e4-b86d-810b5ae8da91",
        "cursor": {
          "ref": "6d824db0-30a4-4fe9-aac1-295ae13d2447",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3eb9c42f-f323-4dc1-86bf-ee4d5d986a37"
        },
        "item": {
          "id": "e7008c8d-bc41-43e4-b86d-810b5ae8da91",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3c8c0914-ce17-405e-b757-ac17bad75d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d61b10-cb77-4fff-9960-9073e25902ee",
        "cursor": {
          "ref": "2ef538b0-0212-4b42-9b25-1470fa9db74b",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c86a8374-5f7f-48be-b6fb-e992c48e27f2"
        },
        "item": {
          "id": "b9d61b10-cb77-4fff-9960-9073e25902ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "94b90718-9c85-408c-85a3-6a4c5c3b0bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef4e991-f2d4-4790-8c1b-2d449ea3ecac",
        "cursor": {
          "ref": "fbde6702-6da1-4d4f-8907-d783109ee9b5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc24b725-0302-4647-bb6b-0a8c6b685efe"
        },
        "item": {
          "id": "3ef4e991-f2d4-4790-8c1b-2d449ea3ecac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "407a1549-5361-4571-b972-1650b8e30283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c8c65-9c48-4dfc-ae5f-32369fbfbc7d",
        "cursor": {
          "ref": "0858530a-dc9f-4c32-8e2e-a55234ba4dc2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a7d459e-421a-4feb-b49a-30abcb8d24eb"
        },
        "item": {
          "id": "b93c8c65-9c48-4dfc-ae5f-32369fbfbc7d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "96f61885-046c-4b9e-ae32-e4c26de152ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8a177e-fc58-4533-bd48-6a245ab3edc6",
        "cursor": {
          "ref": "2e21d06d-abd3-47f8-b13a-2155c502c312",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9ab61933-8e6c-4913-8fc4-6759ceeccb19"
        },
        "item": {
          "id": "2f8a177e-fc58-4533-bd48-6a245ab3edc6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "af11dc35-4255-4c1f-b515-2bbbbe47a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc627eb3-efa0-4445-8353-b8c7d337d5f6",
        "cursor": {
          "ref": "22dbc1f9-ba53-4992-8702-899a201c148a",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce2ec13a-dd78-4cd9-bbfe-7363e09d5f49"
        },
        "item": {
          "id": "bc627eb3-efa0-4445-8353-b8c7d337d5f6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e74441ee-0408-4adb-9bd2-f817a8ae701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1be462-d456-419c-94bd-0f4c43eae0d2",
        "cursor": {
          "ref": "d3068cb7-0f6c-48e3-8f87-bf27ca85ba62",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7099cab2-d503-48de-9193-7ea85267c7ef"
        },
        "item": {
          "id": "1a1be462-d456-419c-94bd-0f4c43eae0d2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6fb77ea1-0904-40dc-a2bf-8c86d69b018d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807702ef-7806-4adb-9661-b9df5c671272",
        "cursor": {
          "ref": "2466276e-72c6-4352-bf73-ae821b2c5388",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "04e5ea85-4690-4406-98a6-3f67a3671483"
        },
        "item": {
          "id": "807702ef-7806-4adb-9661-b9df5c671272",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e72cbf69-02cc-4e43-ad7a-f20d35df4ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c14953-3b6b-4c84-b366-99c78504fbb1",
        "cursor": {
          "ref": "f924bcdf-519d-4e6c-812b-cad08b5b7d64",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d716538d-0b69-4f90-befd-4c155e1b23ad"
        },
        "item": {
          "id": "a3c14953-3b6b-4c84-b366-99c78504fbb1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b75b45db-9ac8-4ccb-ae0c-5639be528d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861cb129-54d5-4eec-8de8-d393ae1ac9ac",
        "cursor": {
          "ref": "1bfda1a5-8488-4e47-b704-3074ed197433",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0226da90-2a34-46b1-8089-c49b22218ba1"
        },
        "item": {
          "id": "861cb129-54d5-4eec-8de8-d393ae1ac9ac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ea40758a-3614-47cb-9d61-be6ebe618626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c66ea7-0b0b-408e-a3d5-b8e264222a95",
        "cursor": {
          "ref": "09cbf3d2-4a3b-4da6-91ef-0e442ea616fe",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "071b3c31-f62c-472a-a813-7e09a7ef686a"
        },
        "item": {
          "id": "96c66ea7-0b0b-408e-a3d5-b8e264222a95",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0ab182cb-b4cf-4fe3-b638-f82a27a84fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8c1749-0b6e-48ab-80f1-d2b6eb0d0142",
        "cursor": {
          "ref": "fc96437b-8a84-4186-be18-c2c5115d59a6",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8e191cc6-3aae-4554-95e6-505325d477be"
        },
        "item": {
          "id": "3f8c1749-0b6e-48ab-80f1-d2b6eb0d0142",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "aa65e3ad-ff03-43e6-8d9b-b7e3f9510dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebca649-eea8-4e88-8713-48bc17cd05d4",
        "cursor": {
          "ref": "12469dcb-e18b-4928-9ba0-0e07ca97792a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "54149279-1c70-4d80-84c4-bcce03fe1e5b"
        },
        "item": {
          "id": "2ebca649-eea8-4e88-8713-48bc17cd05d4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e11e1006-d8ea-4164-bd78-ddafb63f16f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b295061b-1a1f-4907-a46a-8b9fadd99089",
        "cursor": {
          "ref": "40d8201e-fdc3-4236-bb74-41cb183c4900",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "835ab90c-09da-4a84-8dca-69f7407138a3"
        },
        "item": {
          "id": "b295061b-1a1f-4907-a46a-8b9fadd99089",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9867736f-6e40-438e-9e1c-7e372dd18afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb14b92-806f-4ce7-a756-29715993c1df",
        "cursor": {
          "ref": "c813c850-30a9-44e5-bb40-d3f362dd8a31",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65fdfeee-425c-4b94-a72d-d4b6f6edc97f"
        },
        "item": {
          "id": "5cb14b92-806f-4ce7-a756-29715993c1df",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f260f229-5468-466c-9031-4445e3dd5a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5625c343-f777-42f9-a43e-30f0801d2d64",
        "cursor": {
          "ref": "3386988d-dd58-416e-9433-ca279ad08d9f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5de3b581-ca5d-40e3-8654-48a2c04c149e"
        },
        "item": {
          "id": "5625c343-f777-42f9-a43e-30f0801d2d64",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bf336a0b-9b76-4d6c-a511-bb3092562cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa4a512-d061-421c-981a-99ee2c403db2",
        "cursor": {
          "ref": "aa95fd70-bfe9-4c09-9a0e-3823d467602c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "babbb8f7-926c-4c07-9d6b-d511138e5847"
        },
        "item": {
          "id": "cfa4a512-d061-421c-981a-99ee2c403db2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "629bae0e-b562-4316-9d44-34420aeee6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b801c14-8124-41f1-8646-28d3ac7256d8",
        "cursor": {
          "ref": "c849d5bc-f2ac-495f-a8ae-862b00324972",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8f495677-e9e5-421e-9a82-156ad2eea2b7"
        },
        "item": {
          "id": "1b801c14-8124-41f1-8646-28d3ac7256d8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "96ddcccd-3b37-47fc-9000-120c4c96aa86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ca69dc-4004-41ab-95ac-64a5ee0d70e8",
        "cursor": {
          "ref": "b10722e7-b5e0-462e-9baa-407da40d6f5d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dfd35374-fc92-478d-8a07-92706f21344e"
        },
        "item": {
          "id": "62ca69dc-4004-41ab-95ac-64a5ee0d70e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa557263-dc2a-4188-a03d-10b054fffe82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388678ce-014f-40b0-b23d-8b1f0e45d1b3",
        "cursor": {
          "ref": "8af5e5d8-f0ba-45a9-8e64-27d626affe34",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8050545e-8f25-440f-a4f5-275011b6d815"
        },
        "item": {
          "id": "388678ce-014f-40b0-b23d-8b1f0e45d1b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6b4fc174-be44-4e85-8cc9-78a29ba7fad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c7b154-4fa2-44c2-9cf2-c83e7fc29091",
        "cursor": {
          "ref": "6d6234e4-1cd0-4dc8-b56f-16e2eb6ff738",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "09486d51-b2f0-453b-ab15-5dce667991fb"
        },
        "item": {
          "id": "89c7b154-4fa2-44c2-9cf2-c83e7fc29091",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "62435fef-d437-4015-8117-1b7c684e481e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e271574-683d-475a-956e-0eb79406e56f",
        "cursor": {
          "ref": "1f272fcf-fedd-4a03-808b-e3b71a914238",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a8ef5e78-5b25-4408-bff1-e30d7d79ef34"
        },
        "item": {
          "id": "0e271574-683d-475a-956e-0eb79406e56f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "00dc40c9-a9f6-42ae-8083-a2f39bc55376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d643c6e4-f5f3-43fc-8711-38096b8d36ba",
        "cursor": {
          "ref": "33b7107b-cf7c-4205-8bb9-567e70313da6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8b7b42bb-cd6b-4446-b771-359b99f1a4f1"
        },
        "item": {
          "id": "d643c6e4-f5f3-43fc-8711-38096b8d36ba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "52d1abd1-bf5e-462a-8d0e-5b904716cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1280e639-643d-4b21-902e-a3b717cc4808",
        "cursor": {
          "ref": "c19dbc1b-3793-4200-8bd9-b5317061fed7",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29e4ae59-f4a5-4ad9-a27d-02002ab822bb"
        },
        "item": {
          "id": "1280e639-643d-4b21-902e-a3b717cc4808",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "85e77598-811d-4c3e-8cbf-4d870399dbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33aca6d-1231-4fde-bade-fa6367cdb02f",
        "cursor": {
          "ref": "2f1a7e6b-34ff-4da1-954c-d0faf376e598",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "34a9b5df-cbc4-4b8c-9310-a28244b4fbd5"
        },
        "item": {
          "id": "b33aca6d-1231-4fde-bade-fa6367cdb02f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "125b69f1-5fd6-43b8-a900-538dc2c09545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a5fe03-1dd6-4cee-ba8d-177a697f2eba",
        "cursor": {
          "ref": "e3fcf11a-9279-43a5-9276-5e40db726bc0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0f65203b-9785-4b2f-8690-4418750b7dee"
        },
        "item": {
          "id": "22a5fe03-1dd6-4cee-ba8d-177a697f2eba",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fc39d216-ae0f-45b4-9d4e-4383b4fb810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ec0187-93a3-470e-9546-67c2631f8729",
        "cursor": {
          "ref": "bd8b0b83-73e1-43e4-91c5-bac9427ce3d5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00bb5e9a-6d41-43df-9ea1-2930dfda6331"
        },
        "item": {
          "id": "30ec0187-93a3-470e-9546-67c2631f8729",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b0b7e53-9148-4dde-84b4-e94f1462e4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8808d2c0-9f17-46bf-a3e0-6df41885c84e",
        "cursor": {
          "ref": "09616ace-c268-4c1b-b683-715ea1901f3c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c2df124-933b-4cec-8d4c-b41906bbaa85"
        },
        "item": {
          "id": "8808d2c0-9f17-46bf-a3e0-6df41885c84e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "54a9be10-9939-45b9-9d58-14315f30c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09495b75-2b51-4ac4-b1e1-f674f2c269eb",
        "cursor": {
          "ref": "3dfdf249-4f63-40de-8dcd-652cd9d6206c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c0716488-e319-416c-921d-f2c46bfe0bd1"
        },
        "item": {
          "id": "09495b75-2b51-4ac4-b1e1-f674f2c269eb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8c6f906f-4742-4f55-ab61-f8922f69fa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6617b003-37d0-4e1b-9f76-4182746b2060",
        "cursor": {
          "ref": "a6f4d7ac-4576-4a1f-9eb0-e49bd2399552",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51cead80-c271-42d1-a772-d084a213d163"
        },
        "item": {
          "id": "6617b003-37d0-4e1b-9f76-4182746b2060",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8ab118a3-27f2-4138-8ea1-0d202956beb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edd37c1-5cdd-428f-ab45-30f26b29dd2f",
        "cursor": {
          "ref": "87663f68-cc32-4e0f-ad04-fbe88df2cac0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e1383c13-75e7-4d12-952a-02470b3386e8"
        },
        "item": {
          "id": "4edd37c1-5cdd-428f-ab45-30f26b29dd2f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a2c194d6-686e-43f7-9378-520622c3527f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cf8a30-7869-4ece-ad5c-f3c2e55db617",
        "cursor": {
          "ref": "33248339-7b4e-43ba-8cab-c8c3c70eddb4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dd96e4da-487b-4bc9-aece-b0038c3abd5e"
        },
        "item": {
          "id": "f9cf8a30-7869-4ece-ad5c-f3c2e55db617",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fd29a9e0-a618-435a-bb8b-f009400e496a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28dce4e-2808-4280-8364-8abce4e0bb7c",
        "cursor": {
          "ref": "2d344418-e486-4574-9912-a940201b988c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f5e5142a-3c59-44a3-bd63-7ca83ed63a18"
        },
        "item": {
          "id": "f28dce4e-2808-4280-8364-8abce4e0bb7c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "03198d97-7ef3-434f-a4b7-850600abea05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf97323-91ce-4baf-9929-06f70fdb8119",
        "cursor": {
          "ref": "016ca34a-2b7e-4e4e-875d-f2f2634cdb87",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0698bbc4-a0e3-40e9-9c29-8d03fb6e9b2c"
        },
        "item": {
          "id": "cdf97323-91ce-4baf-9929-06f70fdb8119",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a66b0a9e-8aaf-421d-8555-f62348940ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f63b43-8411-4b7e-ac44-74f00acc8391",
        "cursor": {
          "ref": "0ae1f5e5-50bf-4947-bb43-db6624ed538f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de55cf44-6cbc-400d-bd6a-e40ce30d952d"
        },
        "item": {
          "id": "50f63b43-8411-4b7e-ac44-74f00acc8391",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "59038cee-f4ef-428a-b0e4-bfb89a889182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1272665a-3c9f-4492-be9c-b477100e06f4",
        "cursor": {
          "ref": "c8b95dfe-d8cd-4cef-ad30-baad4c333224",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2b463376-6745-4e92-87b9-98b6ddbb6bc2"
        },
        "item": {
          "id": "1272665a-3c9f-4492-be9c-b477100e06f4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "38a3907f-8216-4dae-a2de-73a28e93a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eee7e80-5a1d-452c-95f3-41826e0927ff",
        "cursor": {
          "ref": "8a6bd454-02c8-40d5-96ad-9969a38fa918",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "45cdd85a-884c-448f-854c-54b304d10a0c"
        },
        "item": {
          "id": "4eee7e80-5a1d-452c-95f3-41826e0927ff",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5dff3660-75d0-44b1-87ec-a4168d1e3c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c799df8f-88c8-473c-9f7e-58aa9983b256",
        "cursor": {
          "ref": "44d6aa7c-cfd0-4d15-9314-a661058a98aa",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d6429502-9cb2-4a43-9bf6-1d0e85c8522a"
        },
        "item": {
          "id": "c799df8f-88c8-473c-9f7e-58aa9983b256",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02151318-4d86-417f-b364-a646f88397c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38b955-2b05-4d77-8fa3-7339326d7bda",
        "cursor": {
          "ref": "ad3402e8-fea1-4858-896a-65ee1ff69a92",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "255a1817-5b52-4826-b2a5-7d4c9d6a3260"
        },
        "item": {
          "id": "fd38b955-2b05-4d77-8fa3-7339326d7bda",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "126f66cd-e5df-4e47-b924-9eb68688d2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64802a54-6778-4794-9070-cf1e7048fc83",
        "cursor": {
          "ref": "e3bd5f56-cf10-4faa-907b-9c25c8919b48",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "661a5654-5103-4f0a-82f3-ceee8a5331a6"
        },
        "item": {
          "id": "64802a54-6778-4794-9070-cf1e7048fc83",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e3f41e7-bbb7-4930-9cdd-a1a7b6db495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a241757-1345-4578-a565-07080701d49f",
        "cursor": {
          "ref": "b6242452-b13f-4eee-869d-1188e1e6721b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "130a970b-e8f4-4f31-82d8-0b32244d0196"
        },
        "item": {
          "id": "0a241757-1345-4578-a565-07080701d49f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e0a0b472-8c74-41b8-9823-8433a227628a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89e16d0-6431-4e6a-80a8-5fcc869f8c70",
        "cursor": {
          "ref": "a1cb7807-ac7f-48e2-8fe6-1c47ee0a5ace",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2301b298-1ae8-406c-bca9-012adca67df1"
        },
        "item": {
          "id": "e89e16d0-6431-4e6a-80a8-5fcc869f8c70",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "288f402d-b9c5-4eec-b32d-790a9a9d5226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5975c64-8443-43fb-a02d-6053cdfa2e55",
        "cursor": {
          "ref": "728855e7-f1ce-4f43-bc32-a85dbf36d9fd",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0f0e8b94-08d0-40f0-93da-67e9a1605f90"
        },
        "item": {
          "id": "a5975c64-8443-43fb-a02d-6053cdfa2e55",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "34eabb35-d3ba-4f5f-81b4-0752ff600678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66eded2-c187-47e5-8c43-9e8dd17bd1dd",
        "cursor": {
          "ref": "12f24cee-8347-425e-8da0-7f9c36e18cad",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "07891602-39ad-4cbc-bebe-eb1992c004ec"
        },
        "item": {
          "id": "c66eded2-c187-47e5-8c43-9e8dd17bd1dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cde47257-5e6b-45ff-bb58-280dca266d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563b0d45-a3f3-4f14-94ef-9b85cf961f82",
        "cursor": {
          "ref": "6a490e58-6544-4d27-be8b-57c63171c5b2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "056dc4a2-e097-4b2a-a130-edd5b378cefb"
        },
        "item": {
          "id": "563b0d45-a3f3-4f14-94ef-9b85cf961f82",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ec8aa7c-6d37-4711-ab8f-df41bf90301c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef26f844-2660-40c6-8efc-b404d2bbb627",
        "cursor": {
          "ref": "f3c0b9d8-b607-4215-8e35-d0cfeead1814",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "97964934-60bd-4680-831b-5faa440241c9"
        },
        "item": {
          "id": "ef26f844-2660-40c6-8efc-b404d2bbb627",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "40c111ee-575a-48d9-b79a-2948e2235cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4172d02-fbc1-48c1-9222-77a362bdb5d4",
        "cursor": {
          "ref": "6b45da59-4be8-479c-ab11-531d66f02688",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "baed83cf-babf-4d66-a96c-ee6f994163a3"
        },
        "item": {
          "id": "c4172d02-fbc1-48c1-9222-77a362bdb5d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "43bdbc29-e619-43d8-915a-06cebe8143e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fe5ba6-af7f-4aa3-96fd-264fdf7d72f3",
        "cursor": {
          "ref": "08cdc13b-80c4-4d92-bfce-d8aef65f553f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d7b19a50-af6f-4fd8-8efe-7e2670ff7b6e"
        },
        "item": {
          "id": "66fe5ba6-af7f-4aa3-96fd-264fdf7d72f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1da8826c-148e-4fbf-94de-af3fe85563cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf76bc7-7d4d-4b57-ac56-2e40550d7441",
        "cursor": {
          "ref": "516bb383-c34c-48c6-be5d-f3b0b9e2d256",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ef986c60-7078-4e22-90aa-8ca0541b6b8d"
        },
        "item": {
          "id": "3bf76bc7-7d4d-4b57-ac56-2e40550d7441",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "608b4bdf-084e-4a52-a9f3-a5e429a34e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4631d80-4b47-4e92-bb91-f0f2c0272f29",
        "cursor": {
          "ref": "ad0e14fe-280f-4575-a760-b7a63ddef8d6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e9314cc5-bc5b-4f7f-b7b7-af7a408d28cb"
        },
        "item": {
          "id": "e4631d80-4b47-4e92-bb91-f0f2c0272f29",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0b5363c8-3977-451c-bd9b-41f25d9c79cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5054a90a-daeb-4dae-aa31-ba52e13e9090",
        "cursor": {
          "ref": "cbf5d38e-90d0-4e5a-a3d1-1a6f3f2cc3be",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1ef0a0b9-9818-4d92-9eab-74cc93d5c2f9"
        },
        "item": {
          "id": "5054a90a-daeb-4dae-aa31-ba52e13e9090",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ad53708e-22c5-4db8-b274-6598e101beda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a0c70-7a8d-4134-9a5b-391f1fd15a3c",
        "cursor": {
          "ref": "8c7e8ae9-e46c-4ff7-8091-e465509ca8d6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b8fa1fe-c7db-4ec4-ac8d-f47f532f22a0"
        },
        "item": {
          "id": "f28a0c70-7a8d-4134-9a5b-391f1fd15a3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "99c21feb-af49-4803-9b92-dec7f09a9beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d708106d-8785-46c0-9dcf-e5531aeb2dd2",
        "cursor": {
          "ref": "a25dde42-a86c-4651-b98a-ebc6179280c7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e8b523ba-80a4-437a-8fc3-80de594897f4"
        },
        "item": {
          "id": "d708106d-8785-46c0-9dcf-e5531aeb2dd2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f4050598-0cc1-4b88-b71a-f5d5630221b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b7b87-5f81-4546-9d5a-1b7bd33c56b5",
        "cursor": {
          "ref": "84e4a6ba-f231-4c2f-b2a3-e98013017b34",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "faf51edd-cf09-4247-bbd8-bddf75f16de1"
        },
        "item": {
          "id": "3b0b7b87-5f81-4546-9d5a-1b7bd33c56b5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6524253f-d8d0-4e31-ab4d-4a7d260679e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba64df56-0c81-43ea-91bd-264abd10f708",
        "cursor": {
          "ref": "0c0da55b-4f57-4e6c-8277-849f4470c9a1",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f486a8af-5ba4-4751-bf2e-fb002d9f18ac"
        },
        "item": {
          "id": "ba64df56-0c81-43ea-91bd-264abd10f708",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "600846ee-c61b-49ed-9f6e-be37b91dc154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0278044-63a6-42a6-9a85-313b76561b9f",
        "cursor": {
          "ref": "21bedbb6-b537-4fdc-9856-9d7643ae4644",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a8de9f0-b45c-4986-9358-c161f53abda8"
        },
        "item": {
          "id": "d0278044-63a6-42a6-9a85-313b76561b9f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3c4beeae-dfd2-4cca-b4e9-f53d49b476b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23642c-535c-43c8-9238-d26ffd578cb8",
        "cursor": {
          "ref": "204720f9-211d-4358-bf99-6f902950f8fa",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "15d533e3-355e-4a09-8aa3-c1eee6c9a180"
        },
        "item": {
          "id": "4e23642c-535c-43c8-9238-d26ffd578cb8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c9bd9287-5a53-49a4-be28-9907ea0142e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98982b0-5f12-46f2-9af8-9aa5821448f0",
        "cursor": {
          "ref": "80b93c96-56e2-4cab-b4ff-817189b7d90a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3fb6dd1-b049-4bfc-888c-9c70a392d3ad"
        },
        "item": {
          "id": "c98982b0-5f12-46f2-9af8-9aa5821448f0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d0990276-9e3b-4ff7-95db-0bc944680916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839db845-0fe6-49e1-bfa0-60b48b59d255",
        "cursor": {
          "ref": "778d52b7-78c7-42be-9380-61d73b1eebf8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b972f247-3fcb-49f1-8130-6aec7d60b3c5"
        },
        "item": {
          "id": "839db845-0fe6-49e1-bfa0-60b48b59d255",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51582a1a-3f8f-4cfc-90f2-733bd300fcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6f6f8-6a05-4836-b737-94f1f3065779",
        "cursor": {
          "ref": "0bad7c71-2e10-4456-a2e7-f452b5c2b036",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "30d5d7cb-4947-4b8b-b57e-644e729cc16d"
        },
        "item": {
          "id": "73f6f6f8-6a05-4836-b737-94f1f3065779",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "11af083b-61c7-4c43-9057-a07f8a25b055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0abbec-601f-43cc-bb9d-c75332d94755",
        "cursor": {
          "ref": "26f7985c-900e-4d3b-8ea5-c3d9901b8621",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9ceaef62-5716-4a7f-b0a8-754b9c828482"
        },
        "item": {
          "id": "7a0abbec-601f-43cc-bb9d-c75332d94755",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fbd76ac5-3ce4-4158-bbad-b120072955ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c69d31-6e03-4aac-9b74-c11591583006",
        "cursor": {
          "ref": "f23824a4-b468-4bcc-a5a4-803e31500b56",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1fd72c8a-2eb3-4aac-8a1d-ca00dad3323b"
        },
        "item": {
          "id": "67c69d31-6e03-4aac-9b74-c11591583006",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4ebfc13d-6da5-4def-8d31-39fb1eb6106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01d56fe-44c6-4475-95d2-45fdd5b3682e",
        "cursor": {
          "ref": "39589fcf-f83c-44b5-b71e-8054769e1b1a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0c99c126-0e19-49ef-9f0f-8da19f32faa5"
        },
        "item": {
          "id": "e01d56fe-44c6-4475-95d2-45fdd5b3682e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "20131ce5-dcad-45d5-8f7f-d90d43b82e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99804d9-0eb8-4ff1-b637-996a675a1814",
        "cursor": {
          "ref": "8afeba49-7bf6-4ca7-9127-3c0afbb68d9d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "06cec82e-49f8-4aa2-af93-1f18e5a2b23a"
        },
        "item": {
          "id": "b99804d9-0eb8-4ff1-b637-996a675a1814",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f1be1fbb-2183-479e-9244-f9cd90f39291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c49eceb-498a-4191-9a25-45f8b43d28c6",
        "cursor": {
          "ref": "c4436534-f895-47b6-93b6-f33592178ef6",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "43b996e2-d348-457c-ab9c-4d2f53fc57dd"
        },
        "item": {
          "id": "4c49eceb-498a-4191-9a25-45f8b43d28c6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1c5b7be2-94e2-483e-85de-3c8c9fc935ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b1d05a-0c8b-48a7-b85e-0ec8965b9b7e",
        "cursor": {
          "ref": "a6a0c1b1-f1a1-41d4-a1cb-2340df2815b0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7039412e-8f6f-41c2-af35-f86ae60e1d00"
        },
        "item": {
          "id": "d4b1d05a-0c8b-48a7-b85e-0ec8965b9b7e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c698e637-478a-442f-afa5-48b8f768e57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b804a26b-6390-4757-89f3-9fd163a36479",
        "cursor": {
          "ref": "3bd9e1e1-b11d-4e61-b4d3-57d81575a886",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "752b0644-e1f7-4aa0-8907-e6273484b35d"
        },
        "item": {
          "id": "b804a26b-6390-4757-89f3-9fd163a36479",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "830d49c5-51af-442d-8722-9feb2042c10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687af881-b4c0-4383-9356-89a24545cd67",
        "cursor": {
          "ref": "7c947cdd-dd1b-4d48-a37c-9d6e2355b01d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6f730b23-53e5-43a1-bdfa-3a6b00da3996"
        },
        "item": {
          "id": "687af881-b4c0-4383-9356-89a24545cd67",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e4295361-ff7a-4184-9818-22ceafcdfa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2eca7fa-0def-476d-b002-1a0be976460a",
        "cursor": {
          "ref": "65bf12c1-c215-4c72-8c68-2bb2ba8de10a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d313ba80-a316-41ff-88e0-0b0b6cc84c46"
        },
        "item": {
          "id": "b2eca7fa-0def-476d-b002-1a0be976460a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae49a4b9-342b-407e-9ff4-5af7bb74f2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2ba75c-ea8c-48cc-a1ed-fc9e5c0289c3",
        "cursor": {
          "ref": "6a4cef70-e8bb-4bb0-bdb4-4fa45f426c67",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e64034de-b64e-4133-8f18-062ad6f1af98"
        },
        "item": {
          "id": "7a2ba75c-ea8c-48cc-a1ed-fc9e5c0289c3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ed1c91de-a9d7-44c6-a897-44cd3f918579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1afe1fb-21a0-468f-bf86-b4781079e165",
        "cursor": {
          "ref": "20fe47ad-7e9f-425a-b97c-3b68a8a03207",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1828153b-33e6-4a7b-972c-2e51c53a7e71"
        },
        "item": {
          "id": "e1afe1fb-21a0-468f-bf86-b4781079e165",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8137ba85-94e5-4ad2-a1bb-646ad10d11f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f24053-1b46-409d-9b66-a84712b778e3",
        "cursor": {
          "ref": "7305dc5e-8436-4aa9-bb66-6ee4df9708d7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d7f3a8b1-5c57-4321-9108-130dfdaebe2c"
        },
        "item": {
          "id": "56f24053-1b46-409d-9b66-a84712b778e3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7151da5e-e455-4b79-8c6c-652ddba4b18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5109629f-341e-4d94-bca9-20977ccec84b",
        "cursor": {
          "ref": "5726371d-3b15-4a32-a3e5-ce5cad3e9777",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "472f3c12-fb7c-44c8-949d-2b3b90ed67aa"
        },
        "item": {
          "id": "5109629f-341e-4d94-bca9-20977ccec84b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00b0628d-fff0-42e2-83f3-5d80650bf7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2efcb6-d2af-48f5-bbd4-c199432c03bf",
        "cursor": {
          "ref": "f86d6c01-7084-4e33-96ed-2339c6aa9b1d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "90fb433b-499e-436e-b7d7-5379977ab5f0"
        },
        "item": {
          "id": "6f2efcb6-d2af-48f5-bbd4-c199432c03bf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "91a4179b-ebe1-45c4-a42b-e89bb7506d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ff22c9-b821-49e4-8c63-b97282116afb",
        "cursor": {
          "ref": "7c13eb88-ebc3-4c22-88cd-004d8b6ab78a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "98f25da4-71ad-426d-8698-d4d7da6f7d77"
        },
        "item": {
          "id": "73ff22c9-b821-49e4-8c63-b97282116afb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7fa186df-ff1a-4bbf-b947-9ee23c2b6640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207ce97-bfb8-4dd9-ae01-fef2881de747",
        "cursor": {
          "ref": "07eb1d5a-c283-4fdf-b11e-146b6e1d39b2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ec36e7b2-e108-4855-a6d9-2b172b124724"
        },
        "item": {
          "id": "3207ce97-bfb8-4dd9-ae01-fef2881de747",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "420b23fd-05fd-49b9-9414-1990002bbab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8415d189-eddc-47b1-9343-b85dbc8f972a",
        "cursor": {
          "ref": "cc0ec386-1666-4549-9b4e-fbe2a39356f3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0a2bdfa2-b4f2-4a9f-b7c2-8ea993e097fa"
        },
        "item": {
          "id": "8415d189-eddc-47b1-9343-b85dbc8f972a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5e1da89a-672d-45ee-9654-f062d0e59058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a52a8e-64c0-4421-aa52-6b0c64bb46f3",
        "cursor": {
          "ref": "04fd0dc3-5650-4238-a283-2d26deb2fbf7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4580a040-89be-46f5-9b35-ca66186708bf"
        },
        "item": {
          "id": "56a52a8e-64c0-4421-aa52-6b0c64bb46f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d1279833-3abf-4d33-b57d-822999496a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59a38e6-766b-4622-96b0-022096a66860",
        "cursor": {
          "ref": "75c2b371-0eec-44d5-b981-537c61a824f7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b4c0a0ee-f0ae-40f0-bc36-fbd73e32f903"
        },
        "item": {
          "id": "e59a38e6-766b-4622-96b0-022096a66860",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5dac124-5f7e-462c-8df4-f50e3e91577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab159a5d-486b-4742-a67f-e2a3985ebce7",
        "cursor": {
          "ref": "c54a5076-8d47-4c97-966e-0a6234bf38d4",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ccc8f651-920d-43f3-a408-092630d0ff96"
        },
        "item": {
          "id": "ab159a5d-486b-4742-a67f-e2a3985ebce7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f1b29101-8553-44c0-95b0-724cdbe02a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9457abd3-222c-4cd7-b2d4-ab6328f41756",
        "cursor": {
          "ref": "73d9346b-c90e-471b-94e7-86fd6ca20d4d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b5307c03-e6f8-4ccc-8919-9b4127818ec6"
        },
        "item": {
          "id": "9457abd3-222c-4cd7-b2d4-ab6328f41756",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9f413f21-deb7-41ef-ba37-990d6e5ae381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b15ca2f-9ad3-456a-b1ec-58b1357870cc",
        "cursor": {
          "ref": "1a53e393-0d48-4a4b-b343-5b7253a3c47b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bab6ab83-58fb-4b3a-8b14-381342b3f8e2"
        },
        "item": {
          "id": "6b15ca2f-9ad3-456a-b1ec-58b1357870cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e43d1cfc-db68-46ca-ad61-729c83d2ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0b0ce2-8aef-477f-be4d-87dba96c7308",
        "cursor": {
          "ref": "92093df1-45ff-45ad-9b79-6014840bdb65",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a679797f-5e76-4318-b7cd-7908eadc1341"
        },
        "item": {
          "id": "5e0b0ce2-8aef-477f-be4d-87dba96c7308",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ef11ee5a-a289-40d7-ba44-42cb6647daf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88abc070-5f22-46d2-9a1c-4c07b6c268d2",
        "cursor": {
          "ref": "f63ec84e-3216-4f65-8904-a2286c7cfb53",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a27c9c49-2e38-4d73-991e-de5e38fdc241"
        },
        "item": {
          "id": "88abc070-5f22-46d2-9a1c-4c07b6c268d2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "65012675-1802-4798-8764-e42b1e8e3010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292a32d-9170-46b7-87f5-e2580e7b078d",
        "cursor": {
          "ref": "ced77120-68bc-41a4-a77a-d8cb46a97f30",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7adfedfc-d066-4541-913c-5bc2f58d3134"
        },
        "item": {
          "id": "1292a32d-9170-46b7-87f5-e2580e7b078d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "406e3e6e-f366-4693-a60a-cc7ad233e155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e42a3-f032-483c-95ee-28ea186a39b8",
        "cursor": {
          "ref": "11436623-a303-4769-9484-ef76e1539ba5",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "972b25bc-6e0b-42fc-b69a-3a759b5d1643"
        },
        "item": {
          "id": "9d7e42a3-f032-483c-95ee-28ea186a39b8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "04f76cc8-26dd-4f64-b994-9eb082f0ed02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddff40a-85aa-404c-9f93-f2a500e4555b",
        "cursor": {
          "ref": "a8acf857-9da4-4e39-a667-6ee7129b579e",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3dc8ded6-28a6-450d-a3c6-0e54da30f1bf"
        },
        "item": {
          "id": "9ddff40a-85aa-404c-9f93-f2a500e4555b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "99e75526-5090-4bab-a903-f0bc2d4af02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f8f4d-ab85-443e-ae6c-66178e0d64d8",
        "cursor": {
          "ref": "40eab8fa-0ce7-4919-a944-672f09587bd7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b3b1995f-61c9-4c7e-952a-654c5e64b17f"
        },
        "item": {
          "id": "923f8f4d-ab85-443e-ae6c-66178e0d64d8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d229f20-223e-4720-8ba1-40c6a27140be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a876a17c-3ae4-4987-af55-6dbfd4320819",
        "cursor": {
          "ref": "b73c1173-9eaa-4f8b-812a-37b9f85f7692",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f9f00af7-5597-46e3-a9f2-129f96dbcbca"
        },
        "item": {
          "id": "a876a17c-3ae4-4987-af55-6dbfd4320819",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "54b0c081-a8b4-44af-bf79-1e09d752c4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b3e2ea-45ae-4a80-b4a7-274be27da69d",
        "cursor": {
          "ref": "496f9925-194c-497a-a1af-01cc221a940e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "048a990d-8f21-4c08-ac01-f1a30d6df939"
        },
        "item": {
          "id": "48b3e2ea-45ae-4a80-b4a7-274be27da69d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "647b4d51-d036-48f5-981e-f0a9f5b18be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdca066-dcb1-481d-92fd-2d980ff199a1",
        "cursor": {
          "ref": "8774aca1-93ea-44e7-bda9-63dc33c19092",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "da3284ba-8af6-4ae3-9eff-476846fd6c3f"
        },
        "item": {
          "id": "0bdca066-dcb1-481d-92fd-2d980ff199a1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0760eb5-a2e0-4aeb-9a75-5cf0da96814a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27620906-285d-4617-9f69-7f2cef4523cc",
        "cursor": {
          "ref": "b28a1e06-215c-43ac-89de-ed25748c0038",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b4f808d-f9ba-44dd-95fd-89d8319ae312"
        },
        "item": {
          "id": "27620906-285d-4617-9f69-7f2cef4523cc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3e0b5f7-ab0f-4fce-b40b-3547d9bb8244",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab877dc2-89cb-4485-bcd2-2094830f06bb",
        "cursor": {
          "ref": "7becd31c-9dc3-42a0-a91a-69f365f40b56",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ff3d6055-131c-4890-b3e3-7e224ce4745c"
        },
        "item": {
          "id": "ab877dc2-89cb-4485-bcd2-2094830f06bb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cfed3376-4d39-4211-81a3-5e81a2b6d985",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "07764487-27d4-4a73-8cd8-f6872e0f40a7",
        "cursor": {
          "ref": "09b54895-2dd5-42e9-8d1e-5c5935ddec8e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6071edb0-6dfd-46e2-8ada-6697a2b0cb06"
        },
        "item": {
          "id": "07764487-27d4-4a73-8cd8-f6872e0f40a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c0d9967-b1a9-4b15-b51a-b8a77d0115de",
          "status": "OK",
          "code": 200,
          "responseTime": 1844,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb27b597-52fd-4123-a02e-a813d2cdd6c9",
        "cursor": {
          "ref": "2a2d3f3a-760a-4adf-9ca2-1297b2ab442a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fedd6651-68c0-4eba-9588-3fab8228bc99"
        },
        "item": {
          "id": "fb27b597-52fd-4123-a02e-a813d2cdd6c9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0e525b9d-942b-4405-b849-4c5871164135",
          "status": "OK",
          "code": 200,
          "responseTime": 1621,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bcdf41-0907-4e3d-9941-fcdb04df2c62",
        "cursor": {
          "ref": "a987077a-5a98-48f8-8eb4-0ce66c86938d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ebe66da5-097b-4ef5-b706-6552d91b39d1"
        },
        "item": {
          "id": "12bcdf41-0907-4e3d-9941-fcdb04df2c62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b91028db-aaf1-44fd-8139-7838443dbcb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bcdf41-0907-4e3d-9941-fcdb04df2c62",
        "cursor": {
          "ref": "a987077a-5a98-48f8-8eb4-0ce66c86938d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ebe66da5-097b-4ef5-b706-6552d91b39d1"
        },
        "item": {
          "id": "12bcdf41-0907-4e3d-9941-fcdb04df2c62",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b91028db-aaf1-44fd-8139-7838443dbcb9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a2097f-4471-457b-8840-3ca4941e4618",
        "cursor": {
          "ref": "4fc72782-6c2d-4d15-a418-a091bcffd479",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "21a185f0-9ce5-475c-ae38-bc8e3ad288a9"
        },
        "item": {
          "id": "42a2097f-4471-457b-8840-3ca4941e4618",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bf33d7c3-6927-4daa-a407-69bb7ebc329f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f8ddb2-3d78-4bde-b8c9-f60a14ca64ef",
        "cursor": {
          "ref": "8504f55e-130a-4828-be56-bec0b540011d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07c8223b-55ca-49f3-bb75-b31e363cdb4c"
        },
        "item": {
          "id": "d7f8ddb2-3d78-4bde-b8c9-f60a14ca64ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b6bafe18-6712-461a-93e7-a9350b46985a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}